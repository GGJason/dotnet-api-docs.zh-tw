<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98c451313fe63576017f69cae29910f3f95b09b1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532429" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type FileSecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示檔案的存取控制和稽核安全性。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSecurity>類別指定的存取權限的系統檔案和稽核存取嘗試。  這個類別會表示為一組規則的存取和稽核 」 權限。 每個存取規則由<xref:System.Security.AccessControl.FileSystemAccessRule>物件，而每個稽核規則由<xref:System.Security.AccessControl.FileSystemAuditRule>物件。  
  
 <xref:System.Security.AccessControl.FileSecurity>類別是抽象的基礎的 Microsoft Windows 檔案安全性系統。 在此系統中，每個檔案有判別存取控制清單 (DACL)，以控制存取的檔案和系統存取控制清單 (SACL)，其指定要稽核的存取控制嘗試。  <xref:System.Security.AccessControl.FileSystemAccessRule>和<xref:System.Security.AccessControl.FileSystemAuditRule>類別是由 Dacl 與 Sacl 組成存取控制項目 (Ace) 的抽象概念。  
  
 <xref:System.Security.AccessControl.FileSecurity>類別會隱藏許多 Dacl 及 Sacl 的詳細資訊，則您不必擔心 ACE 排序或 null 的 DACL。  
  
 使用<xref:System.Security.AccessControl.FileSecurity>類別來擷取、 新增或變更代表 DACL 和檔案的 SACL 的存取規則。  
  
 保存新的或變更存取或稽核檔案的規則，請使用<xref:System.IO.FileInfo.SetAccessControl%2A>方法。 若要從現有的檔案擷取存取或稽核規則，請使用 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Security.AccessControl.FileSecurity>類別來新增，並從檔案中移除存取控制清單 (ACL) 項目。  您必須提供有效的使用者或群組帳戶，才能執行這個範例。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.AccessControl.FileSecurity" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.AccessControl.FileSecurity" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式，當您想要建立空白<xref:System.Security.AccessControl.FileSecurity>不以現有的檔案為基礎的物件。  您可以填入具有存取控制資訊的物件，並將它套用到檔案。  
  
 您可以新增存取或稽核規則<xref:System.Security.AccessControl.FileSecurity>物件使用<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>方法。 您可以移除存取權或稽核規則使用<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>方法。  
  
 保存新的或變更存取或稽核檔案的規則，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。  擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">目前的作業系統不是 Microsoft Windows 2000 (含) 以後版本。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="new System.Security.AccessControl.FileSecurity (fileName, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">從其中建立 <see cref="T:System.Security.AccessControl.FileSecurity" /> 物件之檔案的位置。</param>
        <param name="includeSections">其中一個 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 值，指定要擷取之存取控制清單 (ACL) 資訊的類型。</param>
        <summary>使用 <see cref="T:System.Security.AccessControl.FileSecurity" /> 列舉型別 (Enumeration) 之指定的值，從指定的檔案初始化 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會擷取指定檔案的存取控制資訊，然後建立<xref:System.Security.AccessControl.FileSecurity>封裝該資訊的物件。  然後，您可以檢查、 新增或刪除的指定檔案的存取控制資訊。  
  
 您可以新增存取或稽核規則<xref:System.Security.AccessControl.FileSecurity>物件使用<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>方法。 您可以移除存取權或稽核規則使用<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>方法。  
  
 保存新的或變更存取或稽核檔案的規則，請使用<xref:System.IO.File.SetAccessControl%2A>或<xref:System.IO.FileInfo.SetAccessControl%2A>方法。  擷取存取或稽核規則從現有的檔案，請使用<xref:System.IO.File.GetAccessControl%2A>或<xref:System.IO.FileInfo.GetAccessControl%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> 參數為零長度字串，只包含空格或包含一或多個由 <see cref="F:System.IO.Path.InvalidPathChars" /> 所定義的無效字元。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路徑無效 (例如，它位於未對應的磁碟機上)。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <paramref name="fileName" /> 參數中指定的檔案。</exception>
        <exception cref="T:System.IO.IOException">開啟檔案時發生 I/O 錯誤。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="path" /> 格式無效。</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">
          <paramref name="fileName" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.PlatformNotSupportedException">目前的作業系統不是 Microsoft Windows 2000 (含) 以後版本。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">目前的系統帳戶沒有系統管理權限。</exception>
        <exception cref="T:System.SystemException">找不到檔案。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="fileName" /> 參數指定了唯讀的檔案。  或這個作業在目前平台不受支援。  或 <paramref name="fileName" /> 參數指定了目錄。  或呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用於存取所指定的檔案使用權限<paramref name="name" />參數。 列舉型別相關聯： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> ，<see cref="F:System.Security.AccessControl.AccessControlActions.View" />安全性動作： 需求</permission>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />建構函式需要將目前帳戶具有系統管理權限。若要建立的新執行個體<see cref="T:System.Security.AccessControl.FileSecurity" />類別使用的帳戶沒有系統管理權限，使用為特定檔案<see cref="M:System.IO.FileStream.GetAccessControl" />方法。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>