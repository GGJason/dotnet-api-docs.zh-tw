<Type Name="MutexAuditRule" FullName="System.Security.AccessControl.MutexAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10d8101b35ab6edae3cb4cd218cb0861b343cc73" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49143727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type MutexAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示要針對使用者或群組稽核的一組存取權限。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule>類別是其中一個的一組.NET Framework 提供了管理上的具名的系統 mutex 的 Windows 存取控制安全性的類別。 如需這些類別和其基礎的 Windows 存取控制結構與關聯性的概觀，請參閱<xref:System.Security.AccessControl.MutexSecurity>。  
  
> [!NOTE]
>  Windows 存取控制安全性是有意義，只會針對具名的系統 mutex。 如果<xref:System.Threading.Mutex>物件都代表本機 mutex、 存取控制是不相關。  
  
 若要取得目前套用至具名 mutex 的稽核規則的清單，請使用<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>方法來取得<xref:System.Security.AccessControl.MutexSecurity>物件，並接著使用及其<xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>方法，以取得的集合<xref:System.Security.AccessControl.MutexAuditRule>物件。  
  
 <xref:System.Security.AccessControl.MutexAuditRule> 物件不會對應一對一與基礎的判別存取控制清單 (DACL) 中存取控制項目。 取得集合的所有稽核規則 mutex，該集合會包含規則目前表示所有存取控制項目所需的最小數目。  
  
> [!NOTE]
>  當您套用和移除規則，就會變更基礎的存取控制項目。 在規則中的資訊可能的話，合併到維護存取控制項目最小數目。 因此，當您讀取目前的規則清單時，它看起來可能不完全您新增的所有規則的清單。  
  
 使用<xref:System.Security.AccessControl.MutexAuditRule>物件，以指定要稽核的使用者或群組的存取權限。 若要將規則套用到具名的系統 mutex，使用<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>方法來取得<xref:System.Security.AccessControl.MutexSecurity>物件。 修改<xref:System.Security.AccessControl.MutexSecurity>物件使用其方法來新增規則，然後使用<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>重新附加安全性物件的方法。  
  
> [!IMPORTANT]
>  您所做的變更<xref:System.Security.AccessControl.MutexSecurity>物件不會影響具名 mutex 的存取層級直到您呼叫<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>更改的安全性物件指派給具名 mutex 的方法。  
  
 <xref:System.Security.AccessControl.MutexAuditRule> 物件是不可變的。 使用的方法來修改 mutex 安全性<xref:System.Security.AccessControl.MutexSecurity>類別來新增或移除規則; 當您這麼做時，會修改基礎的存取控制項目。  
  
> [!NOTE]
>  Windows 98 或 Windows Millennium Edition 不支援同步處理物件的安全性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.MutexAuditRule" Usage="new System.Security.AccessControl.MutexAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
        <param name="eventRights">
          <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，指定要稽核的存取類型。</param>
        <param name="flags">
          <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功、失敗或兩者皆稽核。</param>
        <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 類別的新執行個體，指定要稽核的使用者或群組、要稽核的權限，以及是要稽核成功、失敗或兩者皆稽核。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立<xref:System.Security.Principal.NTAccount>物件的字串，表示使用者或群組的名稱，請使用<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>建構函式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="flags" /> 指定了無效的值。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉譯成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得受稽核規則影響的存取權限。</summary>
        <value>
          <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，表示受稽核規則所影響的權限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule> 物件是不可變的。 您可以建立新的稽核規則，代表不同的使用者、 不同的權限或不同的組合<xref:System.Security.AccessControl.AuditFlags>旗標，但是您無法修改現有的稽核規則。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>