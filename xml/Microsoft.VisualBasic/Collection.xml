<Type Name="Collection" FullName="Microsoft.VisualBasic.Collection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="485abc998d1e4be2b1dd03663fe3eda2a30ac7b9" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52205339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Collection : System.Collections.IList, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Collection extends System.Object implements class System.Collections.ICollection, class System.Collections.IList, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Collection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Collection&#xA;Implements IDeserializationCallback, IList, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Collection sealed : System::Collections::IList, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Collection = class&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Collection/CollectionDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d3c58-101">Visual Basic <see langword="Collection" /> 是已排序的項目集合，可作為單元來參考。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3c58-101">A Visual Basic <see langword="Collection" /> is an ordered set of items that can be referred to as a unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d3c58-102">可能的話，您應該使用中的泛型集合<xref:System.Collections.Generic?displayProperty=nameWithType>命名空間或<xref:System.Collections.Concurrent>命名空間，而不是 Visual Basic `Collection`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-102">Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`.</span></span> <span data-ttu-id="d3c58-103">如需詳細資訊，請參閱 <<c0> [ 集合](https://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b)。</span><span class="sxs-lookup"><span data-stu-id="d3c58-103">For more information, see [Collections](https://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span></span>  
  
 <span data-ttu-id="d3c58-104">Visual Basic`Collection`物件提供便利的方式，來參考的項目為單一物件相關的群組。</span><span class="sxs-lookup"><span data-stu-id="d3c58-104">The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object.</span></span> <span data-ttu-id="d3c58-105">項目，或*項目*中只需要它們存在於集合中的事實相關的集合。</span><span class="sxs-lookup"><span data-stu-id="d3c58-105">The items, or *elements*, in a collection need only be related by the fact that they exist in the collection.</span></span> <span data-ttu-id="d3c58-106">集合的項目就不必共用相同的資料型別。</span><span class="sxs-lookup"><span data-stu-id="d3c58-106">Elements of a collection do not have to share the same data type.</span></span>  
  
 <span data-ttu-id="d3c58-107">如下列範例說明您可以建立指定集合相同的方式建立其他物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-107">You can create a collection the same way you create other objects, as the following example illustrates.</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="d3c58-108">當您建立集合之後時，您可以執行下列其中一項：</span><span class="sxs-lookup"><span data-stu-id="d3c58-108">Once you have created a collection, you can do any of the following:</span></span>  
  
-   <span data-ttu-id="d3c58-109">新增項目<xref:Microsoft.VisualBasic.Collection.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3c58-109">Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="d3c58-110">移除具有的項目<xref:Microsoft.VisualBasic.Collection.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3c58-110">Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.</span></span>  
  
-   <span data-ttu-id="d3c58-111">移除所有項目與<xref:Microsoft.VisualBasic.Collection.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3c58-111">Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="d3c58-112">了解集合包含具有的項目數目<xref:Microsoft.VisualBasic.Collection.Count%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-112">Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="d3c58-113">檢查特定的項目是否有與<xref:Microsoft.VisualBasic.Collection.Contains%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3c58-113">Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.</span></span>  
  
-   <span data-ttu-id="d3c58-114">從集合傳回特定的項目<xref:Microsoft.VisualBasic.Collection.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-114">Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.</span></span>  
  
-   <span data-ttu-id="d3c58-115">逐一查看整個集合與[每個...下一個陳述式](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="d3c58-115">Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d3c58-116">雖然 Visual Basic`Collection`物件具有相同的功能`Collection`物件在 Visual Basic 6.0 中，這兩個無法在 COM 環境交互操作。</span><span class="sxs-lookup"><span data-stu-id="d3c58-116">Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</span></span>  
  
    > [!CAUTION]
    >  <span data-ttu-id="d3c58-117">逐一查看 Visual Basic`Collection`不是安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d3c58-117">Iterating through a Visual Basic `Collection` is not a thread-safe procedure.</span></span> <span data-ttu-id="d3c58-118">即使集合經過同步化，其他執行緒仍然可以修改集合中，導致擲回例外狀況的列舉值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-118">Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</span></span> <span data-ttu-id="d3c58-119">若要保證列舉期間的執行緒安全，請鎖定集合，或攔截由其他執行緒變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d3c58-119">To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="d3c58-120">如需有關鎖定的程式設計元素的詳細資訊，請參閱[SyncLock 陳述式](~/docs/visual-basic/language-reference/statements/synclock-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="d3c58-120">For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-121">下列範例會建立`Collection`物件`names`和對話方塊中，使用者可以將物件加入 （名稱） 集合。</span><span class="sxs-lookup"><span data-stu-id="d3c58-121">The following example creates the `Collection` object `names` and a dialog box with which a user can add objects (names) to the collection.</span></span> <span data-ttu-id="d3c58-122">它接著會在集合中的顯示名稱，以及最後會將集合清空不需處置的`Collection`物件本身。</span><span class="sxs-lookup"><span data-stu-id="d3c58-122">It then displays the names in the collection, and finally empties the collection without disposing of the `Collection` object itself.</span></span>  
  
 <span data-ttu-id="d3c58-123">若要查看其運作方式，請選擇**加入類別**命令**專案**功能表，並宣告一個名為的公用變數`instanceName`在模組層級`nameClass`(型別`Public instanceName`) 來保存每個執行個體名稱。</span><span class="sxs-lookup"><span data-stu-id="d3c58-123">To see how this works, choose the **Add Class** command from the **Project** menu and declare a public variable called `instanceName` at the module level of `nameClass` (type `Public instanceName`) to hold the names of each instance.</span></span> <span data-ttu-id="d3c58-124">保留預設名稱為`nameClass`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-124">Leave the default name as `nameClass`.</span></span> <span data-ttu-id="d3c58-125">複製並貼上下列程式碼**一般**一節的另一個模組，然後將它啟動與陳述式`classNamer`中另一個程序。</span><span class="sxs-lookup"><span data-stu-id="d3c58-125">Copy and paste the following code into the **General** section of another module, and then start it with the statement `classNamer` in another procedure.</span></span> <span data-ttu-id="d3c58-126">（此範例僅適用於支援類別的裝載應用程式。）</span><span class="sxs-lookup"><span data-stu-id="d3c58-126">(This example works only with host applications that support classes.)</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-127">建立並傳回新的Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-127">Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-128">傳回這個建構函式的 Visual Basic 集合是空的而且沒有任何已配置的初始容量。</span><span class="sxs-lookup"><span data-stu-id="d3c58-128">The Visual Basic collection returned by this constructor is empty and does not have any initial capacity allocated.</span></span>  
  
 <span data-ttu-id="d3c58-129">Visual Basic 集合與不相容[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]集合中可用<xref:System.Collections?displayProperty=nameWithType>， <xref:System.Collections.Generic?displayProperty=nameWithType>，和<xref:System.Collections.Specialized?displayProperty=nameWithType>命名空間。</span><span class="sxs-lookup"><span data-stu-id="d3c58-129">Visual Basic collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, and <xref:System.Collections.Specialized?displayProperty=nameWithType> namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-130">下列範例會建立新的 Visual Basic 集合，並將它指派給變數`coll`:</span><span class="sxs-lookup"><span data-stu-id="d3c58-130">The following example creates a new Visual Basic collection and assigns it to the variable `coll`:</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="d3c58-131">這`Collection`物件是一個為基礎，這表示，項目範圍是從 1 到的值的索引值`Count`屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-131">This `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span> <span data-ttu-id="d3c58-132">Visual Basic 集合保留類型的項目<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="d3c58-132">Visual Basic collections hold elements of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object Item, string Key = null, object Before = null, object After = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Add(object Item, string Key, object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Item As Object, Optional Key As String = null, Optional Before As Object = null, Optional After As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Add : obj * string * obj * obj -&gt; unit" Usage="collection.Add (Item, Key, Before, After)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Item">
          <span data-ttu-id="d3c58-133">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-133">Required.</span>
          </span>
          <span data-ttu-id="d3c58-134">任何型別的物件，可指定要加入到集合中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-134">An object of any type that specifies the element to add to the collection.</span>
          </span>
        </param>
        <param name="Key">
          <span data-ttu-id="d3c58-135">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-135">Optional.</span>
          </span>
          <span data-ttu-id="d3c58-136">唯一的 <see langword="String" /> 運算式，指定用來存取集合中這個新項目的索引鍵字串，藉以取代位置索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-136">A unique <see langword="String" /> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</span>
          </span>
        </param>
        <param name="Before">
          <span data-ttu-id="d3c58-137">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-137">Optional.</span>
          </span>
          <span data-ttu-id="d3c58-138">運算式，可指定集合中的相對位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-138">An expression that specifies a relative position in the collection.</span>
          </span>
          <span data-ttu-id="d3c58-139">要加入的項目會放置在集合中由 <paramref name="Before" /> 引數識別的項目之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-139">The element to be added is placed in the collection before the element identified by the <paramref name="Before" /> argument.</span>
          </span>
          <span data-ttu-id="d3c58-140">如果 <paramref name="Before" /> 為數值運算式，它必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-140">If <paramref name="Before" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="d3c58-141">如果 <paramref name="Before" /> 為 <see langword="String" /> 運算式，當所參考的項目加入到集合中時，它必須對應到指定的索引鍵字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-141">If <paramref name="Before" /> is a <see langword="String" /> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</span>
          </span>
          <span data-ttu-id="d3c58-142">不能同時指定 <paramref name="Before" /> 和 <paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-142">You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="d3c58-143">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-143">Optional.</span>
          </span>
          <span data-ttu-id="d3c58-144">運算式，可指定集合中的相對位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-144">An expression that specifies a relative position in the collection.</span>
          </span>
          <span data-ttu-id="d3c58-145">要加入的項目會放置在集合中由 <paramref name="After" /> 引數識別的項目之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-145">The element to be added is placed in the collection after the element identified by the <paramref name="After" /> argument.</span>
          </span>
          <span data-ttu-id="d3c58-146">如果 <paramref name="After" /> 為數值運算式，它必須是從 1 到集合的 <see langword="Count" /> 屬性值的一個數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-146">If <paramref name="After" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see langword="Count" /> property.</span>
          </span>
          <span data-ttu-id="d3c58-147">如果 <paramref name="After" /> 為 <see langword="String" /> 運算式，當所參考的項目加入到集合中時，它必須對應到指定的索引鍵字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-147">If <paramref name="After" /> is a <see langword="String" /> expression, it must correspond to the key string specified when the element referred to was added to the collection.</span>
          </span>
          <span data-ttu-id="d3c58-148">不能同時指定 <paramref name="Before" /> 和 <paramref name="After" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-148">You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-149">將項目加入至 <see langword="Collection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-149">Adds an element to a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-150">`Before`或`After`引數必須參考現有集合的項目; 否則會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="d3c58-150">The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.</span></span>  
  
 <span data-ttu-id="d3c58-151">如果兩個`Before`和`After`省略引數時，新物件加入至集合結尾。</span><span class="sxs-lookup"><span data-stu-id="d3c58-151">If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="d3c58-152">如果指定，也會發生錯誤`Key`值符合現有項目集合的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d3c58-152">An error also occurs if a specified `Key` value matches the key for an existing element of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-153">下列範例會使用`Add`方法來加入`child`物件，呼叫類別的執行個體`child`包含`Public`屬性`name`— 至集合，稱為`family`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-153">The following example uses the `Add` method to add `child` objects — instances of a class called `child` containing a `Public` property `name` — to a collection called `family`.</span></span> <span data-ttu-id="d3c58-154">若要查看其運作方式，建立<xref:System.Windows.Forms.Form>具有兩個<xref:System.Windows.Forms.Button>控制項並設定其<xref:System.Windows.Forms.Control.Text%2A>屬性，以`Add`和`List`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-154">To see how this works, create a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.Button> controls and set their <xref:System.Windows.Forms.Control.Text%2A> properties to `Add` and `List`.</span></span> <span data-ttu-id="d3c58-155">新增`child`類別定義和`family`表單程式碼的宣告。</span><span class="sxs-lookup"><span data-stu-id="d3c58-155">Add the `child` class definition and the `family` declaration to the form code.</span></span> <span data-ttu-id="d3c58-156">修改`_Click`事件處理常式**新增**並**清單**按鈕所示。</span><span class="sxs-lookup"><span data-stu-id="d3c58-156">Modify the `_Click` event handlers for the **Add** and **List** buttons as shown.</span></span> <span data-ttu-id="d3c58-157">**新增**按鈕可讓您新增子系。</span><span class="sxs-lookup"><span data-stu-id="d3c58-157">The **Add** button allows you to add children.</span></span> <span data-ttu-id="d3c58-158">**清單**按鈕會顯示所有子系的名稱。</span><span class="sxs-lookup"><span data-stu-id="d3c58-158">The **List** button displays the names of all the children.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-159">刪除 Visual Basic <see langword="Collection" /> 物件的所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-159">Deletes all elements of a Visual Basic <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-160">`Clear`方法會將集合清空，並重設其<xref:Microsoft.VisualBasic.Collection.Count%2A>屬性設為 0。</span><span class="sxs-lookup"><span data-stu-id="d3c58-160">The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Contains(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (Key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="collection.Contains Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="d3c58-161">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-161">Required.</span>
          </span>
          <span data-ttu-id="d3c58-162">
            <see langword="String" /> 運算式，可指定要搜尋集合項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-162">A <see langword="String" /> expression that specifies the key for which to search the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-163">傳回 <see langword="Boolean" /> 值，指出 Visual Basic <see langword="Collection" /> 物件是否包含具有特定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-163">Returns a <see langword="Boolean" /> value indicating whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c58-164">傳回 <see langword="Boolean" /> 值，指出 Visual Basic <see langword="Collection" /> 物件是否包含具有特定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-164">Returns a <see langword="Boolean" /> value indicating whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-165">`Contains` 會傳回`True`如果集合包含具有完全相符的索引鍵的項目`Key`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-165">`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`.</span></span> <span data-ttu-id="d3c58-166">否則，`Contains` 會傳回 `False`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-166">Otherwise, `Contains` returns `False`.</span></span> <span data-ttu-id="d3c58-167">比對索引鍵的值時，會忽略大小寫。</span><span class="sxs-lookup"><span data-stu-id="d3c58-167">Case is ignored when matching key values.</span></span>  
  
 <span data-ttu-id="d3c58-168">Visual Basic`Collection`可以保留某些項目具有索引鍵和其他項目不含索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d3c58-168">A Visual Basic `Collection` can hold some elements that have keys and other elements without keys.</span></span> <span data-ttu-id="d3c58-169">這取決於是否呼叫<xref:Microsoft.VisualBasic.Collection.Add%2A>方法會提供選擇性的引數`Key`參數。</span><span class="sxs-lookup"><span data-stu-id="d3c58-169">This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#4)]  
  
 <span data-ttu-id="d3c58-170">如果您想要使用其索引鍵的項目在集合中搜尋，請記得提供`Key`每次呼叫的引數`Add`方法。</span><span class="sxs-lookup"><span data-stu-id="d3c58-170">If you intend to search the collection for elements using their keys, remember to supply the `Key` argument every time you call the `Add` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.VisualBasic.Collection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-171">傳回 <see langword="Integer" />，其中包含集合中的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-171">Returns an <see langword="Integer" /> containing the number of elements in a collection.</span>
          </span>
          <span data-ttu-id="d3c58-172">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-172">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c58-173">傳回 <see langword="Integer" />，其中包含集合中的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-173">Returns an <see langword="Integer" /> containing the number of elements in a collection.</span>
          </span>
          <span data-ttu-id="d3c58-174">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-174">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-175">使用`Count`屬性來判斷中的項目數`Collection`物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-175">Use the `Count` property to determine the number of elements in a `Collection` object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-176">此範例說明如何使用`Count`屬性來顯示中的項目數<xref:Microsoft.VisualBasic.Collection>變數中的物件`birthdays`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-176">This example illustrates the use of the `Count` property to display the number of elements in a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#6)]  
  
 <span data-ttu-id="d3c58-177">`Collection`物件是一個為基礎，這表示，項目範圍是從 1 到的值的索引值`Count`屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-177">The `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-178">傳回對列舉值物件的參考，這個物件是用來反覆查看 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-178">Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c58-179">傳回對列舉值物件的參考，這個物件是用來反覆查看 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-179">Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-180">[每個...下一個陳述式](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)呼叫`GetEnumerator`來取得集合的項目支援反覆運算的列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-180">The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements.</span></span> <span data-ttu-id="d3c58-181">通常，您使用`For Each`...`Next`迴圈來周遊集合或陣列，並不需要呼叫`GetEnumerator`明確。</span><span class="sxs-lookup"><span data-stu-id="d3c58-181">Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.</span></span>  
  
 <span data-ttu-id="d3c58-182">如果您需要進一步控制反覆項目比`For Each`...`Next`陳述式提供，您可以使用`GetEnumerator`方法，以執行自訂的周遊。</span><span class="sxs-lookup"><span data-stu-id="d3c58-182">If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal.</span></span> <span data-ttu-id="d3c58-183">以下是某些情況下，您可能需要執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="d3c58-183">The following are some cases in which you might need to do this.</span></span>  
  
-   <span data-ttu-id="d3c58-184">您可能想要傳回至集合的開頭和結束前，開始反覆項目一次。</span><span class="sxs-lookup"><span data-stu-id="d3c58-184">You might want to return to the beginning of the collection and start the iteration again before it is finished.</span></span>  
  
-   <span data-ttu-id="d3c58-185">您可能想要跳過各種原因而一或多個項目。</span><span class="sxs-lookup"><span data-stu-id="d3c58-185">You might want to skip over one or more elements for a variety of reasons.</span></span>  
  
-   <span data-ttu-id="d3c58-186">您可能需要變更中間周遊集合的元素。</span><span class="sxs-lookup"><span data-stu-id="d3c58-186">You might need to change the elements of the collection in the middle of a traversal.</span></span> <span data-ttu-id="d3c58-187">在此情況下您必須取得新的列舉值物件，因為前一個無效。</span><span class="sxs-lookup"><span data-stu-id="d3c58-187">In this case you must obtain a new enumerator object because the previous one is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-188">下列範例示範如何使用`GetEnumerator`擷取的所有項目的`Collection`物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-188">The following example shows how to use `GetEnumerator` to retrieve all the elements of a `Collection` object.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#7)]  
  
 <span data-ttu-id="d3c58-189">`GetEnumerator` 建構並傳回列舉值物件，它會實作<xref:System.Collections.IEnumerator>介面的<xref:System.Collections>命名空間。</span><span class="sxs-lookup"><span data-stu-id="d3c58-189">`GetEnumerator` constructs and returns an enumerator object, which implements the <xref:System.Collections.IEnumerator> interface of the <xref:System.Collections> namespace.</span></span> <span data-ttu-id="d3c58-190">列舉值物件會公開<xref:System.Collections.IEnumerator.Current%2A>屬性和<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3c58-190">The enumerator object exposes the <xref:System.Collections.IEnumerator.Current%2A> property and the <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span> <span data-ttu-id="d3c58-191">如需詳細資訊，請參閱[每個...下一個陳述式](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="d3c58-191">For more information, see [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-192">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-192">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-193">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-193">Read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d3c58-194">(A) 數值運算式，可指定集合中項目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-194">(A) A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="d3c58-195">
            <paramref name="Index" /> 必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-195">
              <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="d3c58-196">或是 (B) <see langword="Object" /> 運算式，可指定集合中項目的位置或索引鍵字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-196">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-197">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-197">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-198">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-198">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c58-199">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-199">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-200">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-200">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-201">如果`Index`屬於型別`Object`，則`Item`屬性會嘗試將它視為`String`， `Char`，`Char`陣列或整數值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-201">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="d3c58-202">如果`Item`無法轉換`Index`要`String`或是`Integer`，就會擲回<xref:System.ArgumentException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d3c58-202">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="d3c58-203">`Item`屬性是集合的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-203">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="d3c58-204">因此，下列程式碼行是相等的。</span><span class="sxs-lookup"><span data-stu-id="d3c58-204">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-205">下列範例會使用`Item`屬性來擷取集合中物件的參考。</span><span class="sxs-lookup"><span data-stu-id="d3c58-205">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="d3c58-206">它會建立`birthdays`作為`Collection`物件，並接著會擷取物件，表示使用索引鍵的 Bill 的生日`"Bill"`做為`Index`引數。</span><span class="sxs-lookup"><span data-stu-id="d3c58-206">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="d3c58-207">請注意，第一次呼叫明確指定`Item`屬性，但第二個則否。</span><span class="sxs-lookup"><span data-stu-id="d3c58-207">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="d3c58-208">這兩個呼叫運作，因為`Item`屬性是預設屬性，如`Collection`物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-208">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d3c58-209">(A) 數值運算式，可指定集合中項目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-209">(A) A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="d3c58-210">
            <paramref name="Index" /> 必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-210">
              <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
          <span data-ttu-id="d3c58-211">或是 (B) <see langword="Object" /> 運算式，可指定集合中項目的位置或索引鍵字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-211">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-212">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-212">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-213">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-213">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c58-214">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-214">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-215">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-215">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-216">如果`Index`屬於型別`Object`，則`Item`屬性會嘗試將它視為`String`， `Char`，`Char`陣列或整數值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-216">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="d3c58-217">如果`Item`無法轉換`Index`要`String`或是`Integer`，就會擲回<xref:System.ArgumentException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d3c58-217">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="d3c58-218">`Item`屬性是集合的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-218">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="d3c58-219">因此，下列程式碼行是相等的。</span><span class="sxs-lookup"><span data-stu-id="d3c58-219">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-220">下列範例會使用`Item`屬性來擷取集合中物件的參考。</span><span class="sxs-lookup"><span data-stu-id="d3c58-220">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="d3c58-221">它會建立`birthdays`作為`Collection`物件，並接著會擷取物件，表示使用索引鍵的 Bill 的生日`"Bill"`做為`Index`引數。</span><span class="sxs-lookup"><span data-stu-id="d3c58-221">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="d3c58-222">請注意，第一次呼叫明確指定`Item`屬性，但第二個則否。</span><span class="sxs-lookup"><span data-stu-id="d3c58-222">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="d3c58-223">這兩個呼叫運作，因為`Item`屬性是預設屬性，如`Collection`物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-223">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string Key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ Key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="d3c58-224">唯一的 <see langword="String" /> 運算式，指定用來存取集合中項目的索引鍵字串，藉以取代位置索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-224">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span>
          </span>
          <span data-ttu-id="d3c58-225">
            <paramref name="Key" /> 必須對應至當項目加入至集合時所指定的 <paramref name="Key" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-225">
              <paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-226">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-226">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-227">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-227">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c58-228">依位置或索引鍵傳回 <see langword="Collection" /> 物件的特定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-228">Returns a specific element of a <see langword="Collection" /> object either by position or by key.</span>
          </span>
          <span data-ttu-id="d3c58-229">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-229">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-230">如果`Index`屬於型別`Object`，則`Item`屬性會嘗試將它視為`String`， `Char`，`Char`陣列或整數值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-230">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="d3c58-231">如果`Item`無法轉換`Index`要`String`或是`Integer`，就會擲回<xref:System.ArgumentException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d3c58-231">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="d3c58-232">`Item`屬性是集合的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-232">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="d3c58-233">因此，下列程式碼行是相等的。</span><span class="sxs-lookup"><span data-stu-id="d3c58-233">Therefore, the following lines of code are equivalent.</span></span>  
  
```  
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-234">下列範例會使用`Item`屬性來擷取集合中物件的參考。</span><span class="sxs-lookup"><span data-stu-id="d3c58-234">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="d3c58-235">它會建立`birthdays`作為`Collection`物件，並接著會擷取物件，表示使用索引鍵的 Bill 的生日`"Bill"`做為`Index`引數。</span><span class="sxs-lookup"><span data-stu-id="d3c58-235">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="d3c58-236">請注意，第一次呼叫明確指定`Item`屬性，但第二個則否。</span><span class="sxs-lookup"><span data-stu-id="d3c58-236">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="d3c58-237">這兩個呼叫運作，因為`Item`屬性是預設屬性，如`Collection`物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-237">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-238">從 <see langword="Collection" /> 物件移除項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-238">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int Index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="collection.Remove Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="d3c58-239">數值運算式，可指定集合中項目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-239">A numeric expression that specifies the position of an element of the collection.</span>
          </span>
          <span data-ttu-id="d3c58-240">
            <paramref name="Index" /> 必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-240">
              <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-241">從 <see langword="Collection" /> 物件移除項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-241">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-242">當`Remove`刪除的項目從集合取得，它遞減集合的<xref:Microsoft.VisualBasic.Collection.Count%2A>其中一個屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-242">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="d3c58-243">它也會遞減`Index`之前遵循的已刪除的項目集合中每個元素的值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-243">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="d3c58-244">如果項目加入至集合，而不需要`Key`，您必須使用其`Index`將它移除。</span><span class="sxs-lookup"><span data-stu-id="d3c58-244">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-245">此範例說明如何使用`Remove`方法來移除的物件<xref:Microsoft.VisualBasic.Collection>變數中的物件`birthdays`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-245">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="d3c58-246">下列四個呼叫`Add`方法中，`Count`屬性包含 4，項目`"Bill"`具有索引值 1，且項目`"Pete"`索引值 4。</span><span class="sxs-lookup"><span data-stu-id="d3c58-246">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="d3c58-247">遵循第一次呼叫`Remove`，`Count`為 3，項目`"Bill"`遭到刪除，和項目`"Pete"`索引值 3。</span><span class="sxs-lookup"><span data-stu-id="d3c58-247">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="d3c58-248">遵循第二次呼叫`Remove`，`Count`為 2，項目`"Mike"`遭到刪除，和項目`"Pete"`索引值 2。</span><span class="sxs-lookup"><span data-stu-id="d3c58-248">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="collection.Remove Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="d3c58-249">唯一的 <see langword="String" /> 運算式，指定用來存取集合中項目的索引鍵字串，藉以取代位置索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-249">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span>
          </span>
          <span data-ttu-id="d3c58-250">
            <paramref name="Key" /> 必須對應至當項目加入至集合時所指定的 <paramref name="Key" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-250">
              <paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-251">從 <see langword="Collection" /> 物件移除項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-251">Removes an element from a <see langword="Collection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-252">當`Remove`刪除的項目從集合取得，它遞減集合的<xref:Microsoft.VisualBasic.Collection.Count%2A>其中一個屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-252">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="d3c58-253">它也會遞減`Index`之前遵循的已刪除的項目集合中每個元素的值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-253">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="d3c58-254">如果項目加入至集合，而不需要`Key`，您必須使用其`Index`將它移除。</span><span class="sxs-lookup"><span data-stu-id="d3c58-254">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c58-255">此範例說明如何使用`Remove`方法來移除的物件<xref:Microsoft.VisualBasic.Collection>變數中的物件`birthdays`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-255">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="d3c58-256">下列四個呼叫`Add`方法中，`Count`屬性包含 4，項目`"Bill"`具有索引值 1，且項目`"Pete"`索引值 4。</span><span class="sxs-lookup"><span data-stu-id="d3c58-256">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="d3c58-257">遵循第一次呼叫`Remove`，`Count`為 3，項目`"Bill"`遭到刪除，和項目`"Pete"`索引值 3。</span><span class="sxs-lookup"><span data-stu-id="d3c58-257">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="d3c58-258">遵循第二次呼叫`Remove`，`Count`為 2，項目`"Mike"`遭到刪除，和項目`"Pete"`索引值 2。</span><span class="sxs-lookup"><span data-stu-id="d3c58-258">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo" ExplicitInterfaceMemberName="ICollectionCopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void ICollectionCopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void ICollectionCopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d3c58-259">一維 <see cref="T:System.Array" />，是從 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件複製項目之目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-259">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="d3c58-260">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-260">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d3c58-261">
            <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-261">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-262">從特定的 <see cref="T:Microsoft.VisualBasic.Collection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製至 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-262">Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
          <span data-ttu-id="d3c58-263">實作 <see cref="T:System.Collections.ICollection" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-263">Implements the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-264">將元素複製到<xref:System.Array>所在的列舉值逐一查看的順序相同<xref:Microsoft.VisualBasic.Collection>物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-264">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 <span data-ttu-id="d3c58-265">這個方法是 O (`n`) 運算，其中`n`取自<xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>。</span><span class="sxs-lookup"><span data-stu-id="d3c58-265">This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3c58-266">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-266">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d3c58-267">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-267">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3c58-268">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-268">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="d3c58-269">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-269">-or-</span>
          </span>
          <span data-ttu-id="d3c58-270">來源 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中的元素數目，大於從 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-270">The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="d3c58-271">來源 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件的型別無法自動轉換為目的 <paramref name="array" /> 的型別</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-271">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count" ExplicitInterfaceMemberName="ICollectionCount">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ICollectionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionCount As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized" ExplicitInterfaceMemberName="ICollectionIsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ICollectionIsSynchronized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionIsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionIsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot" ExplicitInterfaceMemberName="ICollectionSyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ICollectionSyncRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionSyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionSyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="ICollectionGetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance class System.Collections.IEnumerator ICollectionGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function ICollectionGetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ ICollectionGetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-272">傳回逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-272">Returns an enumerator that iterates through the collection.</span>
          </span>
          <span data-ttu-id="d3c58-273">實作 <see cref="T:System.Collections.ICollection" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-273">Implements the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c58-274">
            <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-274">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-275">[Visual Basic 中， C#]</span><span class="sxs-lookup"><span data-stu-id="d3c58-275">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="d3c58-276">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="d3c58-276">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="d3c58-277">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-277">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d3c58-278">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="d3c58-278">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d3c58-279">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="d3c58-279">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d3c58-280"><xref:System.Collections.IEnumerator.Reset%2A>方法也會列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="d3c58-280">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="d3c58-281">在這個位置，<xref:System.Collections.IEnumerator.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="d3c58-281">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="d3c58-282">因此，您必須呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>列舉值前進到第一個項目，再讀取的值集合的方法<xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="d3c58-282">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="d3c58-283"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="d3c58-283"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d3c58-284"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="d3c58-284"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d3c58-285">如果<xref:System.Collections.IEnumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-285">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d3c58-286">列舉值位於此位置，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d3c58-286">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d3c58-287">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>會傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="d3c58-287">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="d3c58-288">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="d3c58-288">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d3c58-289">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="d3c58-289">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d3c58-290">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="d3c58-290">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d3c58-291">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d3c58-291">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d3c58-292">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="d3c58-292">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="d3c58-293">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="d3c58-293">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add" ExplicitInterfaceMemberName="IListAdd">
      <MemberSignature Language="C#" Value="int IList.Add (object Item);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object Item) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (Item As Object) As Integer Implements IList.Add" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ Item) = System::Collections::IList::Add;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="int IList.Add (object value);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (value As Object) As Integer Implements IList.Add" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ value) = System::Collections::IList::Add;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3c58-294">要加入到 <see cref="T:System.Object" /> 物件中的 <see cref="T:Microsoft.VisualBasic.Collection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-294">The <see cref="T:System.Object" /> to add to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <param name="Item">To be added.</param>
        <summary>
          <span data-ttu-id="d3c58-295">將項目新增至 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-295">Adds an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="d3c58-296">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-296">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c58-297">插入新項目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-297">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-298">您也可以使用<xref:Microsoft.VisualBasic.Collection.Item%2A>屬性來設定索引鍵的值加入新項目不存在於<xref:Microsoft.VisualBasic.Collection>物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-298">You can also use the <xref:Microsoft.VisualBasic.Collection.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d3c58-299">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-299">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="d3c58-300">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-300">-or-</span>
          </span>
          <span data-ttu-id="d3c58-301">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件具有固定的大小</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-301">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear" ExplicitInterfaceMemberName="IListClear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListClear" />
      <MemberSignature Language="VB.NET" Value="Sub IListClear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListClear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c58-302">將所有項目從 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-302">Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="d3c58-303">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-303">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-304">這個方法會移除所有項目從<xref:Microsoft.VisualBasic.Collection>物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-304">This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d3c58-305">
            <see cref="T:System.Collections.IList" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-305">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.Hashtable.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains" ExplicitInterfaceMemberName="IListContains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance bool IListContains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListContains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool IListContains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3c58-306">要在 <see cref="T:System.Object" /> 物件中尋找的 <see cref="T:Microsoft.VisualBasic.Collection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-306">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-307">判斷 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件是否包含特定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-307">Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value.</span>
          </span>
          <span data-ttu-id="d3c58-308">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-308">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c58-309">如果在 <see cref="T:System.Object" /> 物件中找到 <see cref="T:Microsoft.VisualBasic.Collection" />，則傳回 <see langword="True" />，否則傳回 <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-309">Returns <see langword="True" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-310">這個方法會判斷是否<xref:Microsoft.VisualBasic.Collection>物件包含特定值。</span><span class="sxs-lookup"><span data-stu-id="d3c58-310">This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf" ExplicitInterfaceMemberName="IListIndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListIndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListIndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3c58-311">要在 <see cref="T:System.Object" /> 物件中尋找的 <see cref="T:Microsoft.VisualBasic.Collection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-311">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-312">判斷 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中特定項目的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-312">Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="d3c58-313">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-313">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c58-314">如果可在集合中找到，即為 <paramref name="value" /> 的索引，否則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-314">The index of <paramref name="value" /> if found in the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-315">這個方法會判斷在特定項目的索引<xref:Microsoft.VisualBasic.Collection>物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-315">This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert" ExplicitInterfaceMemberName="IListInsert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListInsert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListInsert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d3c58-316">應在 <paramref name="value" /> 插入以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-316">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d3c58-317">要插入至 <see cref="T:System.Object" /> 物件的 <see cref="T:Microsoft.VisualBasic.Collection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-317">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-318">將項目插入至指定之索引的 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-318">Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index.</span>
          </span>
          <span data-ttu-id="d3c58-319">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-319">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-320">如果`index`等於中的項目數<xref:Microsoft.VisualBasic.Collection>物件，然後`value`附加至結尾。</span><span class="sxs-lookup"><span data-stu-id="d3c58-320">If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="d3c58-321">在連續項目的集合 (例如清單) 中，後面接著插入點的項目會向下移動以容納新項目。</span><span class="sxs-lookup"><span data-stu-id="d3c58-321">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="d3c58-322">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="d3c58-322">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="d3c58-323">集合的項目若在概念上群組成 Bucket (例如雜湊資料表)，則不適用這項行為。</span><span class="sxs-lookup"><span data-stu-id="d3c58-323">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d3c58-324">
            <paramref name="index" /> 不是 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-324">
              <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d3c58-325">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-325">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="d3c58-326">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-326">-or-</span>
          </span>
          <span data-ttu-id="d3c58-327">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件具有固定的大小</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-327">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="d3c58-328">
            <paramref name="value" /> 是 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中的 null 參考</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-328">
              <paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize" ExplicitInterfaceMemberName="IListIsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsFixedSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly" ExplicitInterfaceMemberName="IListIsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item" ExplicitInterfaceMemberName="IListItem">
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object IListItem(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-2.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove" ExplicitInterfaceMemberName="IListRemove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d3c58-329">要從 <see cref="T:System.Object" /> 物件中移除的 <see cref="T:Microsoft.VisualBasic.Collection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-329">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-330">從 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中移除第一次出現的特定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-330">Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="d3c58-331">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-331">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-332">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="d3c58-332">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="d3c58-333">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="d3c58-333">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="d3c58-334">集合的項目若在概念上群組成 Bucket (例如雜湊資料表)，則不適用這項行為。</span><span class="sxs-lookup"><span data-stu-id="d3c58-334">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="d3c58-335">如果`value`中找不到<xref:Microsoft.VisualBasic.Collection>物件，<xref:Microsoft.VisualBasic.Collection>物件會維持不變，並擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d3c58-335">If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d3c58-336">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-336">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="d3c58-337">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-337">-or-</span>
          </span>
          <span data-ttu-id="d3c58-338">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件具有固定的大小</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-338">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt" ExplicitInterfaceMemberName="IListRemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d3c58-339">要移除之項目的以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-339">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-340">移除指定之索引的 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-340">Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index.</span>
          </span>
          <span data-ttu-id="d3c58-341">實作 <see cref="T:System.Collections.IList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-341">Implements the <see cref="T:System.Collections.IList" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-342">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="d3c58-342">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="d3c58-343">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="d3c58-343">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="d3c58-344">集合的項目若在概念上群組成 Bucket (例如雜湊資料表)，則不適用這項行為。</span><span class="sxs-lookup"><span data-stu-id="d3c58-344">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d3c58-345">
            <paramref name="index" /> 不是 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-345">
              <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d3c58-346">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-346">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span>
          </span>
          <span data-ttu-id="d3c58-347">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-347">-or-</span>
          </span>
          <span data-ttu-id="d3c58-348">
            <see cref="T:Microsoft.VisualBasic.Collection" /> 物件具有固定的大小</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-348">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization" ExplicitInterfaceMemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="d3c58-349">初始化回呼 (Callback) 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-349">The object that initiated the callback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-350">在整個 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件圖形還原序列化之後執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-350">Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized.</span>
          </span>
          <span data-ttu-id="d3c58-351">實作 <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-351">Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-352">會呼叫這個方法之後整個<xref:Microsoft.VisualBasic.Collection>已還原序列化物件圖形。</span><span class="sxs-lookup"><span data-stu-id="d3c58-352">This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
        <altmember cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData" ExplicitInterfaceMemberName="GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="d3c58-353">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，含有要序列化 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件的必要資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-353">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d3c58-354">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，包含與 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件相關之序列化資料流的來源與目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-354">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c58-355">傳回序列化 <see cref="T:Microsoft.VisualBasic.Collection" /> 物件所需的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-355">Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span>
          </span>
          <span data-ttu-id="d3c58-356">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c58-356">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c58-357">這個方法會傳回序列化所需的資料<xref:Microsoft.VisualBasic.Collection>物件。</span><span class="sxs-lookup"><span data-stu-id="d3c58-357">This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>