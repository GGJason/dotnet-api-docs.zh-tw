<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d280d7091deccbfedb3ef79e964a4134a7f6da28" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52206106" /></Metadata><TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <TypeSignature Language="F#" Value="type Strings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d3f4-101"><see langword="Strings" /> 模組包含用來執行字串作業的程序。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-102">這個模組支援的 Visual Basic 語言關鍵字和操作字串的執行階段程式庫成員。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-103">下列範例示範如何在其空間將字串分隔。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-104">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-104">String Manipulation Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="2d3f4-105">關鍵字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="2d3f4-106">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="2d3f4-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-107">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-107">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberSignature Language="F#" Value="static member Asc : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="2d3f4-108">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-108">Required.</span></span> <span data-ttu-id="2d3f4-109">任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-109">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="2d3f4-110">如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-110">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="2d3f4-111">如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-111">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="2d3f4-112">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-112">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-113">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-113">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-114">`Asc` 會傳回*字碼指標*，或輸入字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-114">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="2d3f4-115">這可以是 0 到 255，單一位元組字元集 (sbcs) 的值介於-32768 到 32767 之間任一雙位元組字集 (DBCS) 的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-115">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="2d3f4-116">`AscW` 傳回輸入字元的 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-116">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="2d3f4-117">這可以是 0 到 65535。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-117">This can be 0 through 65535.</span></span> <span data-ttu-id="2d3f4-118">傳回的值與目前執行緒的文化特性和程式碼頁面設定無關。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-118">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-119">`AscB`舊版的 Visual Basic 的函式會傳回一個位元組，而不是字元的程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-119">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="2d3f4-120">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-120">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-121">Visual Basic 2005 的所有字串都會以 Unicode，和`AscB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-121">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-122">下列範例會使用`Asc`函數來傳回`Integer`字元對應至每個字串中的第一個字母的代碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-122">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="2d3f4-123">函式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-123">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member Asc : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="2d3f4-124">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-124">Required.</span></span> <span data-ttu-id="2d3f4-125">任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-125">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="2d3f4-126">如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-126">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="2d3f4-127">如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-127">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="2d3f4-128">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-128">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-129">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-129">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-130">`Asc` 會傳回*字碼指標*，或輸入字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-130">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="2d3f4-131">這可以是 0 到 255，單一位元組字元集 (sbcs) 的值介於-32768 到 32767 之間任一雙位元組字集 (DBCS) 的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-131">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="2d3f4-132">`AscW` 傳回輸入字元的 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-132">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="2d3f4-133">這可以是 0 到 65535。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-133">This can be 0 through 65535.</span></span> <span data-ttu-id="2d3f4-134">傳回的值與目前執行緒的文化特性和程式碼頁面設定無關。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-134">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-135">`AscB`舊版的 Visual Basic 的函式會傳回一個位元組，而不是字元的程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-135">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="2d3f4-136">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-136">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-137">Visual Basic 2005 的所有字串都會以 Unicode，和`AscB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-137">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-138">下列範例會使用`Asc`函數來傳回`Integer`字元對應至每個字串中的第一個字母的代碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-138">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="2d3f4-139">函式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-139">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-140">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-140">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberSignature Language="F#" Value="static member AscW : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="2d3f4-141">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-141">Required.</span></span> <span data-ttu-id="2d3f4-142">任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-142">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="2d3f4-143">如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-143">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="2d3f4-144">如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-144">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="2d3f4-145">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-145">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-146">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-146">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-147">`Asc` 會傳回*字碼指標*，或輸入字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-147">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="2d3f4-148">這可以是 0 到 255，單一位元組字元集 (sbcs) 的值介於-32768 到 32767 之間任一雙位元組字集 (DBCS) 的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-148">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="2d3f4-149">`AscW` 傳回輸入字元的 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-149">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="2d3f4-150">這可以是 0 到 65535。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-150">This can be 0 through 65535.</span></span> <span data-ttu-id="2d3f4-151">傳回的值與目前執行緒的文化特性和程式碼頁面設定無關。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-151">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-152">`AscB`舊版的 Visual Basic 的函式會傳回一個位元組，而不是字元的程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-152">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="2d3f4-153">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-153">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-154">Visual Basic 2005 的所有字串都會以 Unicode，和`AscB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-154">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-155">下列範例會使用`Asc`函數來傳回`Integer`字元對應至每個字串中的第一個字母的代碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-155">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="2d3f4-156">函式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-156">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member AscW : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="2d3f4-157">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-157">Required.</span></span> <span data-ttu-id="2d3f4-158">任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-158">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="2d3f4-159">如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-159">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="2d3f4-160">如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-160">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="2d3f4-161">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-161">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-162">傳回 <see langword="Integer" /> 值，表示對應至字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-162">Returns an <see langword="Integer" /> value representing the character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-163">`Asc` 會傳回*字碼指標*，或輸入字元的字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-163">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="2d3f4-164">這可以是 0 到 255，單一位元組字元集 (sbcs) 的值介於-32768 到 32767 之間任一雙位元組字集 (DBCS) 的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-164">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="2d3f4-165">`AscW` 傳回輸入字元的 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-165">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="2d3f4-166">這可以是 0 到 65535。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-166">This can be 0 through 65535.</span></span> <span data-ttu-id="2d3f4-167">傳回的值與目前執行緒的文化特性和程式碼頁面設定無關。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-167">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-168">`AscB`舊版的 Visual Basic 的函式會傳回一個位元組，而不是字元的程式碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-168">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="2d3f4-169">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-169">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-170">Visual Basic 2005 的所有字串都會以 Unicode，和`AscB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-170">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-171">下列範例會使用`Asc`函數來傳回`Integer`字元對應至每個字串中的第一個字母的代碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-171">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="2d3f4-172">函式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-172">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberSignature Language="F#" Value="static member Chr : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.Chr CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="2d3f4-173">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-173">Required.</span></span> <span data-ttu-id="2d3f4-174"><see langword="Integer" /> 運算式，表示字元的<c>字碼指標</c>或字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-174">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="2d3f4-175">傳回與指定的字元碼關聯的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-175">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-176">傳回與指定的字元碼關聯的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-176">Returns the character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-177">非對稱式的範圍所接受`CharCode`儲存體之間的差異會補償`Short`而`Integer`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-177">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="2d3f4-178">比方說，是-29183`Short`但 +36353 `Integer`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-178">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="2d3f4-179">這也能與 Visual Basic 6.0 的相容性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-179">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="2d3f4-180">`Chr` 會使用<xref:System.Text.Encoding>類別中<xref:System.Text?displayProperty=nameWithType>命名空間，以判斷目前的執行緒是否使用單一位元組字元集 (SBCS) 或雙位元組字集 (DBCS)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-180">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="2d3f4-181">然後`CharCode`為程式碼指向適當的集合。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-181">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="2d3f4-182">此範圍可以是 0 到 255 的 SBCS 字元-32768 到 65535 DBCS 字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-182">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="2d3f4-183">傳回的值取決於目前的執行緒中包含的字碼頁<xref:System.Globalization.TextInfo.ANSICodePage%2A>的屬性<xref:System.Globalization.TextInfo>類別中<xref:System.Globalization>命名空間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-183">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="2d3f4-184">您可以取得<xref:System.Globalization.TextInfo.ANSICodePage%2A>藉由指定`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-184">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="2d3f4-185">`ChrW` 採用`CharCode`做為 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-185">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="2d3f4-186">範圍是目前執行緒的文化特性和字碼頁設定獨立的。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-186">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="2d3f4-187">範圍為-32768 到-1 的值會視為相同 32768 到 + 65535 的範圍中的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-187">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="2d3f4-188">從 0 到 31 的數字是標準非可列印的 ASCII 碼相同。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-188">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="2d3f4-189">比方說，`Chr(10)`傳回換行字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-189">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-190">`ChrB`在舊版的 Visual Basic 中的函式會傳回單一位元組。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-190">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="2d3f4-191">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-191">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-192">Visual Basic 和.NET Framework 中的所有字串都會以 Unicode，和`ChrB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-192">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-193">下列範例會使用`Chr`函式，傳回與指定的字元碼相關聯的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-193">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-194">針對 <see langword="Chr" /> 為 <paramref name="CharCode" /> &lt; 0 或 &gt; 255。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-194"><paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-195">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-195">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberSignature Language="F#" Value="static member ChrW : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.ChrW CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="2d3f4-196">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-196">Required.</span></span> <span data-ttu-id="2d3f4-197"><see langword="Integer" /> 運算式，表示字元的<c>字碼指標</c>或字元碼。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-197">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="2d3f4-198">傳回與指定的字元碼關聯的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-198">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-199">傳回與指定的字元碼關聯的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-199">Returns the character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-200">非對稱式的範圍所接受`CharCode`儲存體之間的差異會補償`Short`而`Integer`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-200">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="2d3f4-201">比方說，是-29183`Short`但 +36353 `Integer`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-201">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="2d3f4-202">這也能與 Visual Basic 6.0 的相容性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-202">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="2d3f4-203">`Chr` 會使用<xref:System.Text.Encoding>類別中<xref:System.Text?displayProperty=nameWithType>命名空間，以判斷目前的執行緒是否使用單一位元組字元集 (SBCS) 或雙位元組字集 (DBCS)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-203">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="2d3f4-204">然後`CharCode`為程式碼指向適當的集合。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-204">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="2d3f4-205">此範圍可以是 0 到 255 的 SBCS 字元-32768 到 65535 DBCS 字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-205">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="2d3f4-206">傳回的值取決於目前的執行緒中包含的字碼頁<xref:System.Globalization.TextInfo.ANSICodePage%2A>的屬性<xref:System.Globalization.TextInfo>類別中<xref:System.Globalization>命名空間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-206">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="2d3f4-207">您可以取得<xref:System.Globalization.TextInfo.ANSICodePage%2A>藉由指定`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-207">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="2d3f4-208">`ChrW` 採用`CharCode`做為 Unicode 字碼指標。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-208">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="2d3f4-209">範圍是目前執行緒的文化特性和字碼頁設定獨立的。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-209">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="2d3f4-210">範圍為-32768 到-1 的值會視為相同 32768 到 + 65535 的範圍中的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-210">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="2d3f4-211">從 0 到 31 的數字是標準非可列印的 ASCII 碼相同。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-211">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="2d3f4-212">比方說，`Chr(10)`傳回換行字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-212">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-213">`ChrB`在舊版的 Visual Basic 中的函式會傳回單一位元組。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-213">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="2d3f4-214">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-214">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-215">Visual Basic 和.NET Framework 中的所有字串都會以 Unicode，和`ChrB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-215">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-216">下列範例會使用`Chr`函式，傳回與指定的字元碼相關聯的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-216">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-217">針對 <see langword="ChrW" /> 為 <paramref name="CharCode" /> &lt; -32768 或 &gt; 65535。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-217"><paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-218">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-218">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-219">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-219">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : obj[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="2d3f4-220">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-220">Required.</span></span> <span data-ttu-id="2d3f4-221">要搜尋的一維字串陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-221">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="2d3f4-222">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-222">Required.</span></span> <span data-ttu-id="2d3f4-223">要搜尋的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-223">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="2d3f4-224">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-224">Optional.</span></span> <span data-ttu-id="2d3f4-225"><see langword="Boolean" /> 值，表示是否要傳回包含或排除 <paramref name="Match" /> 的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-225"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="2d3f4-226">如果 <paramref name="Include" /> 為 <see langword="True" />，則 <see langword="Filter" /> 函式會傳回包含 <paramref name="Match" /> 做為子字串的陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-226">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="2d3f4-227">如果 <paramref name="Include" /> 為 <see langword="False" />，則 <see langword="Filter" /> 函式會傳回未包含 <paramref name="Match" /> 做為子字串的陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-227">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-228">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-228">Optional.</span></span> <span data-ttu-id="2d3f4-229">數值，表示要使用的字串比較類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-229">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="2d3f4-230">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-230">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-231">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-231">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-232">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-232">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-233">如果沒有相符的`Match`內找到`Source`，則`Filter`函式會傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-233">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="2d3f4-234">如果發生錯誤`Source`設為`Nothing`或不是一維陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-234">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="2d3f4-235">所傳回的陣列`Filter`函式僅包含足夠項目包含相符的項目數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-235">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="2d3f4-236">`Compare`引數可以是下列值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-236">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="2d3f4-237">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-237">Constant</span></span>|<span data-ttu-id="2d3f4-238">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-238">Description</span></span>|  
|-|-|  
|<span data-ttu-id="2d3f4-239">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-239">Constant</span></span>|<span data-ttu-id="2d3f4-240">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-240">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="2d3f4-241">執行二進位比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-241">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="2d3f4-242">執行文字比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-242">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-243">此範例示範如何使用`Filter`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-243">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-244"><paramref name="Source" /> 是 <see langword="Nothing" /> 或不是一維陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-244"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-245">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-245">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : string[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" />
        <Parameter Name="Match" Type="System.String" />
        <Parameter Name="Include" Type="System.Boolean" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="2d3f4-246">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-246">Required.</span></span> <span data-ttu-id="2d3f4-247">要搜尋的一維字串陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-247">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="2d3f4-248">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-248">Required.</span></span> <span data-ttu-id="2d3f4-249">要搜尋的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-249">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="2d3f4-250">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-250">Optional.</span></span> <span data-ttu-id="2d3f4-251"><see langword="Boolean" /> 值，表示是否要傳回包含或排除 <paramref name="Match" /> 的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-251"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="2d3f4-252">如果 <paramref name="Include" /> 為 <see langword="True" />，則 <see langword="Filter" /> 函式會傳回包含 <paramref name="Match" /> 做為子字串的陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-252">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="2d3f4-253">如果 <paramref name="Include" /> 為 <see langword="False" />，則 <see langword="Filter" /> 函式會傳回未包含 <paramref name="Match" /> 做為子字串的陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-253">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-254">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-254">Optional.</span></span> <span data-ttu-id="2d3f4-255">數值，表示要使用的字串比較類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-255">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="2d3f4-256">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-256">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-257">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-257">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-258">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-258">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-259">如果沒有相符的`Match`內找到`Source`，則`Filter`函式會傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-259">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="2d3f4-260">如果發生錯誤`Source`設為`Nothing`或不是一維陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-260">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="2d3f4-261">所傳回的陣列`Filter`函式僅包含足夠項目包含相符的項目數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-261">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="2d3f4-262">`Compare`引數可以是下列值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-262">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="2d3f4-263">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-263">Constant</span></span>|<span data-ttu-id="2d3f4-264">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-264">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="2d3f4-265">執行二進位比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-265">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="2d3f4-266">執行文字比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-266">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-267">此範例示範如何使用`Filter`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-267">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-268"><paramref name="Source" /> 是 <see langword="Nothing" /> 或不是一維陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-268"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-269">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-269">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Format (Expression, Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-270">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-270">Required.</span></span> <span data-ttu-id="2d3f4-271">任何有效的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-271">Any valid expression.</span></span></param>
        <param name="Style"><span data-ttu-id="2d3f4-272">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-272">Optional.</span></span> <span data-ttu-id="2d3f4-273">有效的具名或使用者定義的格式 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-273">A valid named or user-defined format <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-274">傳回字串，其格式化方式是根據格式 <see langword="String" /> 運算式內包含的指令。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-274">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-275">傳回字串，其格式化方式是根據格式 <see langword="String" /> 運算式內包含的指令。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-275">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-276"><xref:System.String.Format%2A?displayProperty=nameWithType>方法也會提供類似的功能。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-276">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="2d3f4-277">如果您要格式化的未當地語系化的數字字串，您應該使用使用者定義數值格式，以確保您取得想要的外觀。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-277">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="2d3f4-278">如果您嘗試將數字格式而不指定`Style`，則`Format`函式會提供類似的功能`Str`函式，雖然它是國際感知。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-278">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="2d3f4-279">不過，正值的數字格式化成使用的字串`Format`函式不包含前置空格保留正負號的值; 這些轉換使用`Str`函式會保留前置空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-279">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="2d3f4-280">不同的格式，為不同的數值的</span><span class="sxs-lookup"><span data-stu-id="2d3f4-280">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="2d3f4-281">數字的使用者定義的格式運算式可以有一至三個以分號分隔的區段。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-281">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="2d3f4-282">如果`Style`引數`Format`函式包含其中一個預先定義數值格式，則允許只有一個區段。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-282">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="2d3f4-283">如果您使用</span><span class="sxs-lookup"><span data-stu-id="2d3f4-283">If you use</span></span>|<span data-ttu-id="2d3f4-284">這是結果</span><span class="sxs-lookup"><span data-stu-id="2d3f4-284">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="2d3f4-285">只有一個區段</span><span class="sxs-lookup"><span data-stu-id="2d3f4-285">One section only</span></span>|<span data-ttu-id="2d3f4-286">格式運算式套用至所有值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-286">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="2d3f4-287">兩個區段</span><span class="sxs-lookup"><span data-stu-id="2d3f4-287">Two sections</span></span>|<span data-ttu-id="2d3f4-288">第一個區段套用至正值和零;第二個適用於負數值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-288">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="2d3f4-289">三個區段</span><span class="sxs-lookup"><span data-stu-id="2d3f4-289">Three sections</span></span>|<span data-ttu-id="2d3f4-290">第一個區段套用至正值、 負值，適用於第二個和第三個適用於零值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-290">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="2d3f4-291">下列範例有兩個區段： 第一個定義正值和零; 值的格式第二個區段定義負值的格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-291">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="2d3f4-292">由於`Style`引數`Format`函式會接受字串，它用引號括住。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-292">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="2d3f4-293">如果您幾個分號而它們之間沒有任何東西，遺漏的區段會列印使用正值的格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-293">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="2d3f4-294">比方說，下列格式顯示正值和負值值 使用第一個區段中的格式，並且顯示`Zero`如果值為零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-294">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="2d3f4-295">預先定義數值格式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-295">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="2d3f4-296">下表會識別預先定義數值格式名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-296">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="2d3f4-297">這些可能會使用名稱做為`Style`引數`Format`函式：</span><span class="sxs-lookup"><span data-stu-id="2d3f4-297">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="2d3f4-298">格式名稱</span><span class="sxs-lookup"><span data-stu-id="2d3f4-298">Format name</span></span>|<span data-ttu-id="2d3f4-299">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-299">Description</span></span>|  
|-|-|  
|<span data-ttu-id="2d3f4-300">`General Number`、 `G`或 `g`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-300">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="2d3f4-301">顯示數字，且沒有千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-301">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="2d3f4-302">例如，`Format(&H3FA, "g")`傳回`1018`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-302">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="2d3f4-303">`Currency`、 `C`或 `c`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-303">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="2d3f4-304">使用千分位分隔符號，會顯示數字，如果適當;在小數點分隔符號的右邊顯示兩位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-304">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="2d3f4-305">輸出根據系統地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-305">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="2d3f4-306">例如，`Format(1234567, "c")`傳回`$1,234,567.00`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-306">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="2d3f4-307">`Fixed`、 `F`或 `f`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-307">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="2d3f4-308">在小數點分隔符號的右邊，會顯示至少一個數字向左和兩位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-308">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="2d3f4-309">例如，`Format(1234567, "f")`傳回`1234567.00`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-309">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="2d3f4-310">`Standard`、 `N`或 `n`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-310">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="2d3f4-311">在小數點分隔符號的右邊顯示千位分隔符號，左邊的至少一個數字與兩位數的數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-311">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="2d3f4-312">例如，`Format(1234567, "n")`傳回`1,234,567.00`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-312">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="2d3f4-313">顯示乘以 100 百分比符號 （%），立即在右邊加上; 在小數點分隔符號的右邊永遠顯示兩位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-313">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="2d3f4-314">例如，`Format(0.4744, "Percent")`傳回`47.44%`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-314">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="2d3f4-315">`P`或 `p`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-315">`P`, or `p`</span></span>|<span data-ttu-id="2d3f4-316">會顯示含有千位分隔符號，乘以 100 百分比符號 （%），用單一空格來附加至正確的和分隔的數字; 在小數點分隔符號的右邊永遠顯示兩位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-316">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="2d3f4-317">例如，`Format(0.80345, "p")`傳回`80.35 %`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-317">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="2d3f4-318">使用標準科學記號標記法，提供兩個有效位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-318">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="2d3f4-319">例如，`Format(1234567, "Scientific")`傳回`1.23E+06`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-319">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="2d3f4-320">`E`或 `e`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-320">`E`, or `e`</span></span>|<span data-ttu-id="2d3f4-321">使用標準科學記號標記法，提供六個有效位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-321">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="2d3f4-322">例如，`Format(1234567, "e")`傳回`1.234567e+006`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-322">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="2d3f4-323">`D`或 `d`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-323">`D`, or `d`</span></span>|<span data-ttu-id="2d3f4-324">包含值的十進位 (基底 10) 格式的數字的字串顯示數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-324">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="2d3f4-325">整數類資料類型支援此選項 (`Byte`， `Short`， `Integer`， `Long`) 只。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-325">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="2d3f4-326">例如，`Format(&H7F, "d")`傳回`127`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-326">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="2d3f4-327">`X`或 `x`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-327">`X`, or `x`</span></span>|<span data-ttu-id="2d3f4-328">包含值的十六進位 (基底 16) 格式的數字的字串顯示數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-328">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="2d3f4-329">整數類資料類型支援此選項 (`Byte`， `Short`， `Integer`， `Long`) 只。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-329">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="2d3f4-330">例如，`Format(127, "x")`傳回`7f`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-330">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="2d3f4-331">會顯示`No`數字為 0，否則為，如果會顯示`Yes`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-331">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="2d3f4-332">例如，`Format(0, "Yes/No")`傳回`No`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-332">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="2d3f4-333">會顯示`False`數字為 0，否則為，如果會顯示`True`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-333">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="2d3f4-334">例如，`Format(1, "True/False")`傳回`True`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-334">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="2d3f4-335">會顯示`Off`數字為 0，否則為，如果會顯示`On`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-335">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="2d3f4-336">例如，`Format(1, "On/Off")`傳回`On`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-336">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-337">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-337">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-338">`Yes/No`， `True/False`，和`On/Off`不支援格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-338">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="2d3f4-339">使用者定義數值格式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-339">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="2d3f4-340">下表列出可用來建立使用者定義的數字格式的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-340">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="2d3f4-341">這些可能用來建置`Style`引數`Format`函式：</span><span class="sxs-lookup"><span data-stu-id="2d3f4-341">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="2d3f4-342">字元</span><span class="sxs-lookup"><span data-stu-id="2d3f4-342">Character</span></span>|<span data-ttu-id="2d3f4-343">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-343">Description</span></span>|  
|-|-|  
|<span data-ttu-id="2d3f4-344">無</span><span class="sxs-lookup"><span data-stu-id="2d3f4-344">None</span></span>|<span data-ttu-id="2d3f4-345">顯示沒有格式的數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-345">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="2d3f4-346">(`0`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-346">(`0`)</span></span>|<span data-ttu-id="2d3f4-347">數字預留位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-347">Digit placeholder.</span></span> <span data-ttu-id="2d3f4-348">顯示數字或零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-348">Displays a digit or a zero.</span></span> <span data-ttu-id="2d3f4-349">如果運算式在格式字串中零出現的位置有一個數字，則會顯示;否則，會顯示在該位置為零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-349">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="2d3f4-350">如果此數字較少的字位數比會是零 （在的小數點任何一邊） 格式的運算式，會顯示前置或尾端零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-350">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="2d3f4-351">如果此數字位數比在小數點分隔符號的右邊，有格式運算式小數點右邊的零四捨五入數量一樣多的小數位數為零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-351">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="2d3f4-352">如果此數字位數比在小數點分隔符號的左邊有格式運算式小數點左邊零顯示未經修改的額外位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-352">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="2d3f4-353">(`#`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-353">(`#`)</span></span>|<span data-ttu-id="2d3f4-354">數字預留位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-354">Digit placeholder.</span></span> <span data-ttu-id="2d3f4-355">顯示數字或零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-355">Displays a digit or nothing.</span></span> <span data-ttu-id="2d3f4-356">如果運算式的位置有數字其中`#`字元會出現在格式字串，它會顯示; 否則會執行任何動作顯示在該位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-356">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="2d3f4-357">這個符號的運作方式類似`0`數字預留位置，但前置和尾端零不會顯示如果此數字的位數，比有`#`格式運算式在小數點分隔符號的任一邊的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-357">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="2d3f4-358">(`.`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-358">(`.`)</span></span>|<span data-ttu-id="2d3f4-359">小數預留位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-359">Decimal placeholder.</span></span> <span data-ttu-id="2d3f4-360">小數預留位置可決定小數點左側和右側顯示多少位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-360">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="2d3f4-361">如果格式運算式僅包含`#`這個符號左邊的字元; 小於 1 開頭的小數點的數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-361">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="2d3f4-362">若要顯示前置零，小數的數字，使用零做為小數點分隔符號的左邊，第一個數字預留位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-362">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="2d3f4-363">在某些地區設定中，使用逗號作為小數分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-363">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="2d3f4-364">做為小數預留位置，在格式化輸出中實際的字元取決於您的系統可辨識的數字格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-364">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="2d3f4-365">因此，您應該使用句號做為小數預留位置格式中即使您是使用逗號做為小數預留位置的地區設定中。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-365">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="2d3f4-366">格式化的字串會出現在正確的地區設定格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-366">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="2d3f4-367">(`%`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-367">(`%`)</span></span>|<span data-ttu-id="2d3f4-368">百分比預留位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-368">Percent placeholder.</span></span> <span data-ttu-id="2d3f4-369">將運算式乘以 100。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-369">Multiplies the expression by 100.</span></span> <span data-ttu-id="2d3f4-370">百分比字元 (`%`) 會插入格式字串中出現的位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-370">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="2d3f4-371">(`,`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-371">(`,`)</span></span>|<span data-ttu-id="2d3f4-372">千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-372">Thousand separator.</span></span> <span data-ttu-id="2d3f4-373">千位分隔符號隔開百四個以上的地方，可以在小數點分隔符號的左邊的數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-373">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="2d3f4-374">在指定千位分隔符號的標準用法如果格式中包含的千位分隔符號括住數字預留位置 (`0`或`#`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-374">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="2d3f4-375">千位分隔符號左邊或最右邊的小數分隔符號 （指定小數） 表示字串中字元 「 延展數字除以 1000，來進位，視。 」</span><span class="sxs-lookup"><span data-stu-id="2d3f4-375">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="2d3f4-376">為顯示數字小於 1,000 但大於或等於 500 `1`，和數字小於 500 顯示為`0`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-376">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="2d3f4-377">在這個位置中的兩個相鄰千位分隔符號的 1 百萬個和另一個因素為 1,000 個每個額外的分隔符號來調整。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-377">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="2d3f4-378">以外任何位置，在小數點分隔符號的左邊或右邊的位置，在字串中的多個分隔符號都會直接視為指定要使用千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-378">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="2d3f4-379">在某些地區設定，用句點做為千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-379">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="2d3f4-380">做為千位分隔符號，在格式化輸出中實際的字元取決於您的系統可辨識的數字格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-380">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="2d3f4-381">因此，您應該使用逗號做為千位分隔符號格式中即使您是使用句點作為千位分隔符號的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-381">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="2d3f4-382">格式化的字串會出現在正確的地區設定格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-382">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="2d3f4-383">例如，請考慮下列的三個格式字串：</span><span class="sxs-lookup"><span data-stu-id="2d3f4-383">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="2d3f4-384">-   `"#,0."`將數值 100 萬個格式化為字串"100,000,000"哪些使用千位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-384">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="2d3f4-385">-   `"#0,."`是使用一千倍來格式化數字 100 萬個做為字串"100000"。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-385">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="2d3f4-386">-   `"#,0,."`哪些使用千位分隔符號和以一千做為字串"100,000"格式化數字 100 萬。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-386">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="2d3f4-387">(`:`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-387">(`:`)</span></span>|<span data-ttu-id="2d3f4-388">時間分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-388">Time separator.</span></span> <span data-ttu-id="2d3f4-389">在某些地區設定中，您可能使用其他字元來代表時間分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-389">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="2d3f4-390">時間分隔符號區隔小時、 分鐘和秒數會在格式化時間值時。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-390">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="2d3f4-391">實際使用做為時間分隔符號，在格式化輸出中的字元取決於您的系統設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-391">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="2d3f4-392">(`/`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-392">(`/`)</span></span>|<span data-ttu-id="2d3f4-393">日期分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-393">Date separator.</span></span> <span data-ttu-id="2d3f4-394">在某些地區設定中，您可能使用其他字元來代表日期分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-394">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="2d3f4-395">日期分隔符號區隔會在格式化日期值時日、 月和年。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-395">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="2d3f4-396">實際格式化輸出中的日期分隔符號使用的字元取決於您的系統設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-396">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="2d3f4-397">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-397">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="2d3f4-398">科學格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-398">Scientific format.</span></span> <span data-ttu-id="2d3f4-399">如果格式運算式包含至少一個數字預留位置 (`0`或`#`) 的左邊`E-`， `E+`， `e-`，或`e+`，號碼會顯示在科學格式和`E`或`e`數目及其指數之間插入。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-399">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="2d3f4-400">左邊的數字預留位置的數目會決定指數中的數字數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-400">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="2d3f4-401">使用`E-`或`e-`放置負指數旁邊的減號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-401">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="2d3f4-402">使用`E+`或`e+`放置負指數旁邊的減號和正指數旁邊的加號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-402">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="2d3f4-403">您也必須包含這個符號右邊，以取得正確的格式的數字預留位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-403">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="2d3f4-404">`-` `+` `$` ( )</span><span class="sxs-lookup"><span data-stu-id="2d3f4-404">`-` `+` `$` ( )</span></span>|<span data-ttu-id="2d3f4-405">常值字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-405">Literal characters.</span></span> <span data-ttu-id="2d3f4-406">這些字元會完全按照輸入格式字串中顯示。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-406">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="2d3f4-407">若要顯示未在所列其中一項，前面加上反斜線 (`\`) 或將它括在雙引號 ("")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-407">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="2d3f4-408">(`\`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-408">(`\`)</span></span>|<span data-ttu-id="2d3f4-409">顯示格式字串中的下一個字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-409">Displays the next character in the format string.</span></span> <span data-ttu-id="2d3f4-410">若要顯示的字元有特殊義意的常值字元，前面加上反斜線 (`\`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-410">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="2d3f4-411">反斜線本身不會顯示。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-411">The backslash itself isn't displayed.</span></span> <span data-ttu-id="2d3f4-412">使用反斜線就是以雙引號括住的下一個字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-412">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="2d3f4-413">若要顯示一個反斜線，請使用兩個反斜線 (`\\`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-413">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="2d3f4-414">範例的常值的字元都格式化的日期和時間格式字元無法顯示的字元 (`a`， `c`， `d`， `h`， `m`， `n`， `p`， `q`， `s`， `t`， `w`， `y`， `/`，以及`:`)，數值格式字元 (`#`， `0`， `%`， `E`， `e`，逗號和句號)，並將字串格式字元 (`@`， `&`， `<`， `>`，和`!`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-414">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="2d3f4-415">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-415">(`"``ABC``"`)</span></span>|<span data-ttu-id="2d3f4-416">顯示雙引號內的字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-416">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="2d3f4-417">若要從程式碼中的樣式引數中包含字串，您必須使用`Chr(34)`括住的文字 (`34`是引號 （"） 的字元程式碼)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-417">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="2d3f4-418">舊版程式碼範例</span><span class="sxs-lookup"><span data-stu-id="2d3f4-418">Legacy Code Example</span></span>  
 <span data-ttu-id="2d3f4-419">下表包含數字的範例格式的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-419">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="2d3f4-420">（這些範例全都會假設您的系統地區設定是英文-美國）第一個資料行包含格式字串`Style`引數`Format`函式; 如果格式化的資料具有欄標題中指定的值包含所產生的輸出的資料行。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-420">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="2d3f4-421">格式 (`Style`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-421">Format (`Style`)</span></span>|<span data-ttu-id="2d3f4-422">"5"格式化為</span><span class="sxs-lookup"><span data-stu-id="2d3f4-422">"5" formatted as</span></span>|<span data-ttu-id="2d3f4-423">"5"格式化為</span><span class="sxs-lookup"><span data-stu-id="2d3f4-423">"-5" formatted as</span></span>|<span data-ttu-id="2d3f4-424">"0.5"格式化為</span><span class="sxs-lookup"><span data-stu-id="2d3f4-424">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="2d3f4-425">預先定義的日期/時間格式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-425">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="2d3f4-426">下表會識別預先定義的日期和時間格式名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-426">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="2d3f4-427">這些可能會使用依名稱的樣式引數為`Format`函式：</span><span class="sxs-lookup"><span data-stu-id="2d3f4-427">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="2d3f4-428">格式名稱</span><span class="sxs-lookup"><span data-stu-id="2d3f4-428">Format Name</span></span>|<span data-ttu-id="2d3f4-429">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-429">Description</span></span>|  
|-|-|  
|<span data-ttu-id="2d3f4-430">`General Date`或 `G`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-430">`General Date`, or `G`</span></span>|<span data-ttu-id="2d3f4-431">顯示日期和/或時間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-431">Displays a date and/or time.</span></span> <span data-ttu-id="2d3f4-432">例如，`3/12/2008 11:07:31 AM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-432">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="2d3f4-433">日期顯示取決於您的應用程式目前的文化特性值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-433">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="2d3f4-434">`Long Date`、 `Medium Date`或 `D`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-434">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="2d3f4-435">根據目前文化特性的完整日期格式日期格式顯示。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-435">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="2d3f4-436">例如，`Wednesday, March 12, 2008`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-436">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="2d3f4-437">`Short Date`或 `d`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-437">`Short Date`, or `d`</span></span>|<span data-ttu-id="2d3f4-438">顯示使用目前文化特性的簡短日期格式的日期。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-438">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="2d3f4-439">例如，`3/12/2008`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-439">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="2d3f4-440">`d`字元會顯示在使用者定義的日期格式的日期。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-440">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="2d3f4-441">`Long Time`、 `Medium Time`或 `T`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-441">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="2d3f4-442">使用目前文化特性的完整時間格式; 來顯示時間通常包含時、 分和秒。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-442">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="2d3f4-443">例如，`11:07:31 AM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-443">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="2d3f4-444">`Short Time` 或 `t`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-444">`Short Time` or `t`</span></span>|<span data-ttu-id="2d3f4-445">顯示使用目前文化特性的簡短時間格式的時間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-445">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="2d3f4-446">例如，`11:07 AM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-446">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="2d3f4-447">`t`字元會顯示`AM`或`PM`以使用者定義的時間格式使用 12 小時制的地區設定的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-447">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="2d3f4-448">顯示完整日期和簡短時間，根據目前文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-448">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="2d3f4-449">例如，`Wednesday, March 12, 2008 11:07 AM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-449">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="2d3f4-450">顯示完整日期和長的時間，根據目前文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-450">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="2d3f4-451">例如，`Wednesday, March 12, 2008 11:07:31 AM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-451">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="2d3f4-452">顯示簡短日期和簡短時間，根據目前文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-452">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="2d3f4-453">例如，`3/12/2008 11:07 AM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-453">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="2d3f4-454">`M`、 `m`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-454">`M`, `m`</span></span>|<span data-ttu-id="2d3f4-455">顯示的月份和日期的日。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-455">Displays the month and the day of a date.</span></span> <span data-ttu-id="2d3f4-456">例如，`March 12`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-456">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="2d3f4-457">`M`字元會以使用者定義的日期格式顯示月份。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-457">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="2d3f4-458">`m`字元會以使用者定義的時間格式顯示分鐘。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-458">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="2d3f4-459">`R`、 `r`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-459">`R`, `r`</span></span>|<span data-ttu-id="2d3f4-460">根據日期格式化<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-460">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="2d3f4-461">例如，`Wed, 12 Mar 2008 11:07:31 GMT`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-461">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="2d3f4-462">格式化的日期不需要調整日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-462">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="2d3f4-463">您必須調整為 GMT 日期/時間值，然後再呼叫`Format`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-463">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="2d3f4-464">格式化的日期和時間做為可排序的索引。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-464">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="2d3f4-465">例如，`2008-03-12T11:07:31`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-465">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="2d3f4-466">`s`字元會以使用者定義的時間格式顯示秒。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-466">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="2d3f4-467">日期及時間格式化為 GMT 可排序的索引。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-467">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="2d3f4-468">例如，`2008-03-12 11:07:31Z`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-468">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="2d3f4-469">格式化日期和時間很長的日期和長的時間為 GMT。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-469">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="2d3f4-470">例如，`Wednesday, March 12, 2008 6:07:31 PM`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-470">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="2d3f4-471">`Y`、 `y`</span><span class="sxs-lookup"><span data-stu-id="2d3f4-471">`Y`, `y`</span></span>|<span data-ttu-id="2d3f4-472">將日期格式化為年份和月份。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-472">Formats the date as the year and month.</span></span> <span data-ttu-id="2d3f4-473">例如，`March, 2008`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-473">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="2d3f4-474">`Y`和`y`字元以使用者定義的日期格式顯示年份。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-474">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="2d3f4-475">如需應用程式的目前文化特性資訊的詳細資訊，請參閱[如何文化特性會影響字串在 Visual Basic 中](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-475">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="2d3f4-476">使用者定義日期/時間格式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-476">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="2d3f4-477">下表顯示的字元，您可以用來建立使用者定義日期/時間格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-477">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="2d3f4-478">不同於在舊版的 Visual Basic 中，這些格式的字元會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-478">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="2d3f4-479">字元</span><span class="sxs-lookup"><span data-stu-id="2d3f4-479">Character</span></span>|<span data-ttu-id="2d3f4-480">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-480">Description</span></span>|  
|-|-|  
|<span data-ttu-id="2d3f4-481">(`:`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-481">(`:`)</span></span>|<span data-ttu-id="2d3f4-482">時間分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-482">Time separator.</span></span> <span data-ttu-id="2d3f4-483">在某些地區設定中，您可能使用其他字元來代表時間分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-483">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="2d3f4-484">時間分隔符號區隔小時、 分鐘和秒數會在格式化時間值時。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-484">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="2d3f4-485">使用做為時間分隔符號，在格式化輸出中實際的字元取決於您的應用程式目前的文化特性值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-485">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="2d3f4-486">(`/`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-486">(`/`)</span></span>|<span data-ttu-id="2d3f4-487">日期分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-487">Date separator.</span></span> <span data-ttu-id="2d3f4-488">在某些地區設定中，您可能使用其他字元來代表日期分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-488">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="2d3f4-489">日期分隔符號區隔會在格式化日期值時日、 月和年。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-489">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="2d3f4-490">做為日期分隔符號，在格式化輸出中實際的字元取決於您的應用程式目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-490">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="2d3f4-491">(`%`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-491">(`%`)</span></span>|<span data-ttu-id="2d3f4-492">用來表示接下來的字元應該會顯示單一字母格式，而不考慮任何結尾的字母。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-492">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="2d3f4-493">也用來指示將單一字母格式讀取做為使用者定義的格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-493">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="2d3f4-494">請參閱以下的其他詳細資料。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-494">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="2d3f4-495">將日期顯示為沒有前置零的數字 (例如`1`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-495">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="2d3f4-496">使用`%d`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-496">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="2d3f4-497">將日期顯示為有前置零的數字 (例如`01`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-497">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="2d3f4-498">將日期顯示為縮寫 (例如`Sun`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-498">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="2d3f4-499">將日期顯示為完整名稱 (例如`Sunday`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-499">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="2d3f4-500">將月份顯示為沒有前置零的數字 (例如，以表示一月`1`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-500">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="2d3f4-501">使用`%M`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-501">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="2d3f4-502">將月份顯示為有前置零的數字 (例如`01/12/01`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-502">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="2d3f4-503">將月份顯示為縮寫 (例如`Jan`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-503">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="2d3f4-504">將月份顯示為完整月份名稱 (例如`January`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-504">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="2d3f4-505">顯示期間/紀元字串 (例如`A.D.`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-505">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="2d3f4-506">沒有前置零使用 12 小時制，將小時顯示為 數字 (例如`1:15:15 PM`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-506">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="2d3f4-507">使用`%h`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-507">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="2d3f4-508">將小時顯示為開頭使用 12 小時制的零的數字 (例如`01:15:15 PM`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-508">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="2d3f4-509">沒有前置零使用 24 小時制，將小時顯示為 數字 (例如`1:15:15`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-509">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="2d3f4-510">使用`%H`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-510">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="2d3f4-511">將小時顯示為開頭使用 24 小時制的零的數字 (例如`01:15:15`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-511">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="2d3f4-512">表示為數字顯示分鐘，沒有前置零 (比方說， `12:1:15`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-512">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="2d3f4-513">使用`%m`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-513">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="2d3f4-514">將分鐘顯示為有前置零的數字 (例如`12:01:15`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-514">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="2d3f4-515">沒有前置零的數字顯示第二個 (比方說， `12:15:5`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-515">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="2d3f4-516">使用`%s`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-516">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="2d3f4-517">開頭為零的數字顯示第二個 (比方說， `12:15:05`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-517">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="2d3f4-518">顯示秒的小數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-518">Displays fractions of seconds.</span></span> <span data-ttu-id="2d3f4-519">比方說`ff`會顯示百分之一秒，而則`ffff`顯示萬分之一秒。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-519">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="2d3f4-520">您可以使用最多七個`f`使用者定義格式中的符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-520">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="2d3f4-521">使用`%f`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-521">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="2d3f4-522">使用 12 小時制，並顯示大寫`A`正午之前的任何小時顯示大寫`P`介於正午與 11:59 P.M 之間的任何小時</span><span class="sxs-lookup"><span data-stu-id="2d3f4-522">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="2d3f4-523">使用`%t`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-523">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="2d3f4-524">針對使用 12 小時制的地區設定，顯示大寫`AM`正午之前顯示大寫`PM`介於正午與 11:59 P.M 之間的任何小時使用</span><span class="sxs-lookup"><span data-stu-id="2d3f4-524">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="2d3f4-525">針對使用 24 小時制的地區設定，則不顯示。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-525">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="2d3f4-526">顯示沒有前置零的年份數字 (0-9)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-526">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="2d3f4-527">使用`%y`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-527">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="2d3f4-528">如果適用的話，請以有前置零，兩位數數值格式顯示年份。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-528">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="2d3f4-529">將年份顯示四位數的數值格式中。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-529">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="2d3f4-530">將年份顯示四位數的數值格式中。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-530">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="2d3f4-531">以無前置零的時區時差顯示為 (比方說， `-8`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-531">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="2d3f4-532">使用`%z`如果這是使用者定義數值格式中唯一的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-532">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="2d3f4-533">顯示以有前置零的時區時差 (例如`-08`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-533">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="2d3f4-534">顯示完整的時區時差 (例如`-08:00`)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-534">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="2d3f4-535">舊版程式碼範例</span><span class="sxs-lookup"><span data-stu-id="2d3f4-535">Legacy Code Example</span></span>  
 <span data-ttu-id="2d3f4-536">以下是使用者定義的日期和時間格式的範例`December 7, 1958, 8:50 PM, 35 seconds`:</span><span class="sxs-lookup"><span data-stu-id="2d3f4-536">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="2d3f4-537">格式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-537">Format</span></span>|<span data-ttu-id="2d3f4-538">顯示</span><span class="sxs-lookup"><span data-stu-id="2d3f4-538">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-539">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-539">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-540">裝置的最小時間解析是由裝置製造商決定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-540">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="2d3f4-541">如果裝置的時間解析會粗略，`f`格式字元會傳回 0，當該裝置上執行。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-541">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-542">此範例將示範 `Format` 函式的各種使用方式，以透過 `String` 格式及使用者定義的格式，將值格式化。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-542">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="2d3f4-543">對於日期分隔符號 (`/`)、時間分隔符號 (`:`) 和 AM/PM 指示器 (`t` 和 `tt`) 而言，系統顯示的實際格式化輸出需視程式碼使用的地區設定而定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-543">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="2d3f4-544">當時間和日期顯示在開發環境內時，會使用程式碼地區設定的簡短時間格式和簡短日期格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-544">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-545">若為使用 24 小時制的地區設定，AM/PM 指示器 (`t` 和 `tt`) 不會顯示任何內容。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-545">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-546">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-546">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatCurrency : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatCurrency (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-547">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-547">Required.</span></span> <span data-ttu-id="2d3f4-548">要格式化的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-548">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="2d3f4-549">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-549">Optional.</span></span> <span data-ttu-id="2d3f4-550">數值，表示小數點右邊要顯示多少位。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-550">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="2d3f4-551">預設值為 –1，表示要使用電腦的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-551">Default value is –1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="2d3f4-552">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-552">Optional.</span></span> <span data-ttu-id="2d3f4-553"><see cref="T:Microsoft.VisualBasic.TriState" /> 列舉，表示是否要顯示小數值前面的零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-553"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span></span> <span data-ttu-id="2d3f4-554">如需值，請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-554">See "Remarks" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="2d3f4-555">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-555">Optional.</span></span> <span data-ttu-id="2d3f4-556"><see cref="T:Microsoft.VisualBasic.TriState" /> 列舉，表示是否要將負值放在括號內。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-556"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="2d3f4-557">如需值，請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-557">See "Remarks" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="2d3f4-558">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-558">Optional.</span></span> <span data-ttu-id="2d3f4-559"><see cref="T:Microsoft.VisualBasic.TriState" /> 列舉，表示是否使用電腦的地區設定中指定之群組分隔符號將數字分組。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-559"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span></span> <span data-ttu-id="2d3f4-560">如需值，請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-560">See "Remarks" for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-561">使用 [系統] 控制台中定義的貨幣符號，傳回格式化成貨幣值的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-561">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-562">使用 [系統] 控制台中定義的貨幣符號，傳回格式化成貨幣值的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-562">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-563">當省略選擇性的一或多個引數時，會改用的電腦相符的地區設定值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-563">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="2d3f4-564">相對於貨幣值的貨幣符號的位置取決於系統的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-564">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-565">所有的設定資訊是來自應用程式的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-565">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="2d3f4-566">根據預設，這會是在控制台中設定的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-566">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="2d3f4-567">不過，它可能會變更以程式設計方式使用.NET Framework 中，但前置零，則來自`Number` 索引標籤。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-567">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="2d3f4-568">`IncludeLeadingDigit`， `UseParensForNegativeNumbers`，和`GroupDigits`引數採用下列 Tri-state 列舉值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-568">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="2d3f4-569">值</span><span class="sxs-lookup"><span data-stu-id="2d3f4-569">Value</span></span>|<span data-ttu-id="2d3f4-570">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-570">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="2d3f4-571">True</span><span class="sxs-lookup"><span data-stu-id="2d3f4-571">True</span></span>|  
|`TriState.False`|<span data-ttu-id="2d3f4-572">False</span><span class="sxs-lookup"><span data-stu-id="2d3f4-572">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="2d3f4-573">電腦的地區設定</span><span class="sxs-lookup"><span data-stu-id="2d3f4-573">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-574">下面範例說明如何使用 `FormatCurrency` 函式：</span><span class="sxs-lookup"><span data-stu-id="2d3f4-574">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-575">小數點後的數字超過 99 個。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-575">Number of digits after decimal point is greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="2d3f4-576">型別不是數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-576">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-577">字串操作</span><span class="sxs-lookup"><span data-stu-id="2d3f4-577">String Manipulation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberSignature Language="F#" Value="static member FormatDateTime : DateTime * Microsoft.VisualBasic.DateFormat -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatDateTime (Expression, NamedFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-578">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-578">Required.</span></span> <span data-ttu-id="2d3f4-579">要格式化的 <see langword="Date" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-579"><see langword="Date" /> expression to be formatted.</span></span></param>
        <param name="NamedFormat"><span data-ttu-id="2d3f4-580">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-580">Optional.</span></span> <span data-ttu-id="2d3f4-581">數值，表示使用的日期/時間格式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-581">Numeric value that indicates the date/time format used.</span></span> <span data-ttu-id="2d3f4-582">如果省略，則會使用 <see langword="DateFormat.GeneralDate" />。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-582">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span></span></param>
        <summary><span data-ttu-id="2d3f4-583">傳回表示日期/時間值的字串運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-583">Returns a string expression representing a date/time value.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-584">傳回表示日期/時間值的字串運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-584">Returns a string expression representing a date/time value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-585">`Date`資料型別一定會包含日期和時間資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-585">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="2d3f4-586">基於型別轉換的詳細資訊，Visual Basic 會考慮 1/1/1 (1 年的 1 年) 是中性的值必須是中性的值時間的日期和 00:00:00 （午夜）。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-586">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="2d3f4-587">如果您格式化`Date`值為日期/時間字串，`FormatDateTime`不產生的字串中包含中性的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-587">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="2d3f4-588">例如，如果您將轉換 #1/1/0001 9:30:00 # 字串時，結果會是 「 上午 9:30:00";已隱藏的日期資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-588">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="2d3f4-589">不過，日期資訊是仍會出現在原始`Date`值，而且可以使用函式這類復原`DatePart`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-589">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-590">如果您傳遞`Expression`做為引數`String`常值`FormatDateTime`解譯它根據<xref:System.Globalization.CultureInfo.CurrentCulture%2A>設定您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-590">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="2d3f4-591">不過，如果您將它傳遞為`Date`常值中，使用格式 #mm/dd/yyyy # 中，因為`FormatDateTime`一律會解譯`Date`根據英文 （美國） 文化特性的常值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-591">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="2d3f4-592">這是必要的因為如果應用程式開發，並使用自動程式化`Date`常值從一個文化特性，但有不同的文化特性，平台上執行`Date`常值可能不正確剖析。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-592">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="2d3f4-593">`NamedFormat`引數具有下列設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-593">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="2d3f4-594">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-594">Constant</span></span>|<span data-ttu-id="2d3f4-595">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-595">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="2d3f4-596">顯示日期和/或時間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-596">Display a date and/or time.</span></span> <span data-ttu-id="2d3f4-597">顯示為簡短日期的日期部分。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-597">Display a date part as a short date.</span></span> <span data-ttu-id="2d3f4-598">如果沒有時間部分，則會顯示為長的時間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-598">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="2d3f4-599">如果有的話，便會顯示這兩個部分。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-599">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="2d3f4-600">顯示使用電腦的地區設定中指定的長日期格式的日期。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-600">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="2d3f4-601">顯示使用電腦的地區設定中指定的簡短日期格式的日期。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-601">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="2d3f4-602">顯示使用電腦的地區設定中指定的時間格式的時間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-602">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="2d3f4-603">顯示使用 24 小時制格式 (hh: mm) 的時間。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-603">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-604">此範例示範如何使用`FormatDateTime`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-604">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-605"><paramref name="NamedFormat" /> 設定無效。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-605"><paramref name="NamedFormat" /> setting is not valid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-606">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-606">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatNumber : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatNumber (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-607">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-607">Required.</span></span> <span data-ttu-id="2d3f4-608">要格式化的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-608">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="2d3f4-609">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-609">Optional.</span></span> <span data-ttu-id="2d3f4-610">數值，表示小數點右邊要顯示多少位。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-610">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="2d3f4-611">預設值為 –1，表示要使用電腦的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-611">The default value is –1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="2d3f4-612">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-612">Optional.</span></span> <span data-ttu-id="2d3f4-613"><see cref="T:Microsoft.VisualBasic.TriState" /> 常數，表示是否要顯示小數值的前置 0 字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-613"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span></span> <span data-ttu-id="2d3f4-614">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-614">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="2d3f4-615">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-615">Optional.</span></span> <span data-ttu-id="2d3f4-616"><see cref="T:Microsoft.VisualBasic.TriState" /> 常數，表示是否要將負值放在括號內。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-616"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span></span> <span data-ttu-id="2d3f4-617">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-617">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="2d3f4-618">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-618">Optional.</span></span> <span data-ttu-id="2d3f4-619"><see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出是否使用地區設定中指定的群組分隔符號將數字分組。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-619"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="2d3f4-620">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-620">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-621">傳回格式化成數字的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-621">Returns an expression formatted as a number.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-622">傳回格式化成數字的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-622">Returns an expression formatted as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-623">當一或多個選擇性引數會略過由地區設定提供省略的引數的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-623">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-624">所有的設定資訊是來自應用程式的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-624">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="2d3f4-625">根據預設，這會是在控制台中設定的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-625">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="2d3f4-626">但是，它可能會變更以程式設計方式使用的.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-626">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="2d3f4-627">`IncludeLeadingDigit`， `UseParensForNegativeNumbers`，和`GroupDigits`引數具有下列設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-627">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="2d3f4-628">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-628">Constant</span></span>|<span data-ttu-id="2d3f4-629">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-629">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="2d3f4-630">True</span><span class="sxs-lookup"><span data-stu-id="2d3f4-630">True</span></span>|  
|`TriState.False`|<span data-ttu-id="2d3f4-631">False</span><span class="sxs-lookup"><span data-stu-id="2d3f4-631">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="2d3f4-632">電腦的地區設定</span><span class="sxs-lookup"><span data-stu-id="2d3f4-632">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-633">此範例示範`FormatNumber`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-633">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="2d3f4-634">型別不是數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-634">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-635">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-635">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatPercent : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatPercent (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-636">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-636">Required.</span></span> <span data-ttu-id="2d3f4-637">要格式化的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-637">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="2d3f4-638">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-638">Optional.</span></span> <span data-ttu-id="2d3f4-639">會顯示數字值，指出小數點右邊顯示多少位數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-639">Numeric value indicating how many places to the right of the decimal are displayed.</span></span> <span data-ttu-id="2d3f4-640">預設值為 – 1，表示使用的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-640">Default value is –1, which indicates that the locale settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="2d3f4-641">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-641">Optional.</span></span> <span data-ttu-id="2d3f4-642"><see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出分數值是否顯示前置的零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-642"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span></span> <span data-ttu-id="2d3f4-643">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-643">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="2d3f4-644">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-644">Optional.</span></span> <span data-ttu-id="2d3f4-645"><see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出是否應將負值放在括號內。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-645"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="2d3f4-646">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-646">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="2d3f4-647">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-647">Optional.</span></span> <span data-ttu-id="2d3f4-648"><see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出是否使用地區設定中指定的群組分隔符號將數字分組。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-648"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="2d3f4-649">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-649">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-650">傳回格式化為百分比 (也就是乘以 100) 且尾端包含 % 字元的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-650">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-651">傳回格式化為百分比 (也就是乘以 100) 且尾端包含 % 字元的運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-651">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-652">當一或多個選擇性引數會略過時，省略的引數的值會提供由地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-652">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-653">所有的設定資訊是來自應用程式的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-653">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="2d3f4-654">根據預設，這會是在控制台中設定的地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-654">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="2d3f4-655">但是，它可能會變更以程式設計方式使用的.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-655">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="2d3f4-656">`IncludeLeadingDigit`， `UseParensForNegativeNumbers`，和`GroupDigits`引數具有下列設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-656">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="2d3f4-657">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-657">Constant</span></span>|<span data-ttu-id="2d3f4-658">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-658">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="2d3f4-659">True</span><span class="sxs-lookup"><span data-stu-id="2d3f4-659">True</span></span>|  
|`TriState.False`|<span data-ttu-id="2d3f4-660">False</span><span class="sxs-lookup"><span data-stu-id="2d3f4-660">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="2d3f4-661">電腦的地區設定</span><span class="sxs-lookup"><span data-stu-id="2d3f4-661">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-662">此範例說明如何使用`FormatPercent`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-662">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="2d3f4-663">型別不是數字。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-663">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-664">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-664">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberSignature Language="F#" Value="static member GetChar : string * int -&gt; char" Usage="Microsoft.VisualBasic.Strings.GetChar (str, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-665">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-665">Required.</span></span> <span data-ttu-id="2d3f4-666">任何有效的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-666">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Index"><span data-ttu-id="2d3f4-667">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-667">Required.</span></span> <span data-ttu-id="2d3f4-668"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-668"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-669">所要傳回之 <paramref name="str" /> 中的字元 (以 1 起始) 索引。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-669">The (1-based) index of the character in <paramref name="str" /> to be returned.</span></span></param>
        <summary><span data-ttu-id="2d3f4-670">傳回 <see langword="Char" /> 值，表示提供的字串內指定之索引的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-670">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-671"><see langword="Char" /> 值，表示提供的字串內指定之索引的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-671"><see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-672">如果`Index`小於 1 或大於最後一個字元的索引`str`、`ArgumentException`就會擲回。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-672">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-673">此範例示範如何使用`GetChar`函式來傳回從指定的索引中的字元`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-673">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-674"><paramref name="str" /> 是 <see langword="Nothing" />、<paramref name="Index" /> &lt; 1，或 <paramref name="Index" /> 大於 <paramref name="str" /> 之最後一個字元的索引。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-674"><paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-675">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-675">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-676">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-676">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span>  <span data-ttu-id="2d3f4-677">如果找到符合項目，則整數是以一起始的索引。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-677">The integer is a one-based index if a match is found.</span></span>  <span data-ttu-id="2d3f4-678">如果找到相符項目，則函式傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-678">If no match is found, the function returns zero.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="2d3f4-679">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-679">Required.</span></span> <span data-ttu-id="2d3f4-680">正在搜尋的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-680"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="2d3f4-681">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-681">Required.</span></span> <span data-ttu-id="2d3f4-682">找到的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-682"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-683">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-683">Optional.</span></span> <span data-ttu-id="2d3f4-684">指定字串比較的類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-684">Specifies the type of string comparison.</span></span> <span data-ttu-id="2d3f4-685">如果省略了 <paramref name="Compare" />，則 <see langword="Option Compare" /> 設定可決定比較的類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-685">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="2d3f4-686">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-686">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="2d3f4-687">如果</span><span class="sxs-lookup"><span data-stu-id="2d3f4-687">If</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-688">InStr 會傳回</span><span class="sxs-lookup"><span data-stu-id="2d3f4-688">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-689">
                <paramref name="String1" /> 的長度為零或 <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-689">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-690">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-690">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-691">
                <paramref name="String2" /> 的長度為零或 <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-691">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-692">搜尋的起始位置，預設為第一個字元位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-692">The starting position for the search, which defaults to the first character position.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-693">
                <paramref name="String2" /> 找不到。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-693">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-694">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-694">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-695">
                <paramref name="String2" /> 中找到 <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-695">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-696">符合開始的位置</span><span class="sxs-lookup"><span data-stu-id="2d3f4-696">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term></term>
              <description></description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-697">一般而言，`InStr`剖析字串時，會使用函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-697">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-698">`InStrB`在舊版的 Visual Basic 中的函式傳回的位元組，而不是字元位置數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-698">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="2d3f4-699">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-699">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-700">Visual Basic 2005 的所有字串都會以 Unicode，和`InStrB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-700">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="2d3f4-701">`Compare` 引數設定為︰</span><span class="sxs-lookup"><span data-stu-id="2d3f4-701">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="2d3f4-702">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-702">Constant</span></span>|<span data-ttu-id="2d3f4-703">值</span><span class="sxs-lookup"><span data-stu-id="2d3f4-703">Value</span></span>|<span data-ttu-id="2d3f4-704">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-704">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="2d3f4-705">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-705">0</span></span>|<span data-ttu-id="2d3f4-706">執行二進位比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-706">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="2d3f4-707">1</span><span class="sxs-lookup"><span data-stu-id="2d3f4-707">1</span></span>|<span data-ttu-id="2d3f4-708">執行文字比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-708">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-709">此範例使用 `InStr` 函式傳回某個字串在另一個字串中第一次出現的位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-709">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-710">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-710">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-711">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-711">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md"><span data-ttu-id="2d3f4-712">Option Compare 陳述式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-712">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (Start, String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="2d3f4-713">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-713">Optional.</span></span> <span data-ttu-id="2d3f4-714">數值運算式，可設定每一個搜尋的開始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-714">Numeric expression that sets the starting position for each search.</span></span> <span data-ttu-id="2d3f4-715">如果省略，則搜尋會從第一個字元位置開始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-715">If omitted, search begins at the first character position.</span></span> <span data-ttu-id="2d3f4-716">起始索引是以 1 起始的。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-716">The start index is 1-based.</span></span></param>
        <param name="String1"><span data-ttu-id="2d3f4-717">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-717">Required.</span></span> <span data-ttu-id="2d3f4-718">正在搜尋的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-718"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="2d3f4-719">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-719">Required.</span></span> <span data-ttu-id="2d3f4-720">找到的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-720"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-721">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-721">Optional.</span></span> <span data-ttu-id="2d3f4-722">指定字串比較的類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-722">Specifies the type of string comparison.</span></span> <span data-ttu-id="2d3f4-723">如果省略了 <paramref name="Compare" />，則 <see langword="Option Compare" /> 設定可決定比較的類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-723">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="2d3f4-724">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-724">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="2d3f4-725">如果</span><span class="sxs-lookup"><span data-stu-id="2d3f4-725">If</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-726">InStr 會傳回</span><span class="sxs-lookup"><span data-stu-id="2d3f4-726">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-727">
                <paramref name="String1" /> 的長度為零或 <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-727">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-728">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-728">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-729">
                <paramref name="String2" /> 的長度為零或 <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-729">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description>
                <paramref name="start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-730">
                <paramref name="String2" /> 找不到。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-730">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-731">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-731">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-732">
                <paramref name="String2" /> 中找到 <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-732">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-733">符合開始的位置</span><span class="sxs-lookup"><span data-stu-id="2d3f4-733">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-734">
                <paramref name="Start" /> &gt; <paramref name="String1" /> 的長度</span><span class="sxs-lookup"><span data-stu-id="2d3f4-734">
                <paramref name="Start" /> &gt; length of <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-735">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-735">0</span></span> 
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-736">一般而言，`InStr`剖析字串時，會使用函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-736">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-737">`InStrB`在舊版的 Visual Basic 中的函式傳回的位元組，而不是字元位置數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-737">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="2d3f4-738">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-738">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-739">Visual Basic 2005 的所有字串都會以 Unicode，和`InStrB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-739">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="2d3f4-740">`Compare` 引數設定為︰</span><span class="sxs-lookup"><span data-stu-id="2d3f4-740">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="2d3f4-741">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-741">Constant</span></span>|<span data-ttu-id="2d3f4-742">值</span><span class="sxs-lookup"><span data-stu-id="2d3f4-742">Value</span></span>|<span data-ttu-id="2d3f4-743">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-743">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="2d3f4-744">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-744">0</span></span>|<span data-ttu-id="2d3f4-745">執行二進位比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-745">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="2d3f4-746">1</span><span class="sxs-lookup"><span data-stu-id="2d3f4-746">1</span></span>|<span data-ttu-id="2d3f4-747">執行文字比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-747">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-748">此範例使用 `InStr` 函式傳回某個字串在另一個字串中第一次出現的位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-748">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-749"><paramref name="Start" /> &lt; 1。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-749"><paramref name="Start" /> &lt; 1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-750">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-750">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-751">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-751">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md"><span data-ttu-id="2d3f4-752">Option Compare 陳述式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-752">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStrRev : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStrRev (StringCheck, StringMatch, Start, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" />
        <Parameter Name="StringMatch" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck"><span data-ttu-id="2d3f4-753">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-753">Required.</span></span> <span data-ttu-id="2d3f4-754">正在搜尋的字串運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-754">String expression being searched.</span></span></param>
        <param name="StringMatch"><span data-ttu-id="2d3f4-755">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-755">Required.</span></span> <span data-ttu-id="2d3f4-756">正在搜尋的字串運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-756">String expression being searched for.</span></span></param>
        <param name="Start"><span data-ttu-id="2d3f4-757">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-757">Optional.</span></span> <span data-ttu-id="2d3f4-758">為每一個搜尋設定以 1 起始的位置之數值運算式，從字串的左邊開始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-758">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span></span> <span data-ttu-id="2d3f4-759">如果省略 <paramref name="Start" />，則會使用 –1，表示搜尋會從最後一個字元位置開始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-759">If <paramref name="Start" /> is omitted then –1 is used, meaning the search begins at the last character position.</span></span> <span data-ttu-id="2d3f4-760">從右到左進行的搜尋。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-760">Search then proceeds from right to left.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-761">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-761">Optional.</span></span> <span data-ttu-id="2d3f4-762">數值，表示在評估子字串時要使用的比較類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-762">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="2d3f4-763">如果省略，則會執行二進位比較。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-763">If omitted, a binary comparison is performed.</span></span> <span data-ttu-id="2d3f4-764">請參閱數值的設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-764">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-765">傳回某個字串在另一個字串中第一次出現的位置，從字串的右邊開始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-765">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="2d3f4-766">如果</span><span class="sxs-lookup"><span data-stu-id="2d3f4-766">If</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-767">InStrRev 會傳回</span><span class="sxs-lookup"><span data-stu-id="2d3f4-767">InStrRev returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-768">
                <paramref name="StringCheck" /> 的長度為零</span><span class="sxs-lookup"><span data-stu-id="2d3f4-768">
                <paramref name="StringCheck" /> is zero-length</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-769">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-769">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-770">
                <paramref name="StringMatch" /> 的長度為零</span><span class="sxs-lookup"><span data-stu-id="2d3f4-770">
                <paramref name="StringMatch" /> is zero-length</span></span> 
 </term>
              <description>
                <paramref name="Start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-771">
                <paramref name="StringMatch" /> 找不到。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-771">
                <paramref name="StringMatch" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="2d3f4-772">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-772">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-773">
                <paramref name="StringMatch" /> 中找到 <paramref name="StringCheck" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-773">
                <paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-774">找到第一個符合項目的位置，從字串的右邊開始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-774">Position at which the first match is found, starting with the right side of the string.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="2d3f4-775">
                <paramref name="Start" /> 大於 <paramref name="StringMatch" /> 的長度</span><span class="sxs-lookup"><span data-stu-id="2d3f4-775">
                <paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></span></span></term>
              <description> <span data-ttu-id="2d3f4-776">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-776">0</span></span> 
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-777">請注意，語法`InStrRev`函式不是相同的語法`InStr`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-777">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="2d3f4-778">`Compare`引數可以是下列值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-778">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="2d3f4-779">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-779">Constant</span></span>|<span data-ttu-id="2d3f4-780">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-780">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="2d3f4-781">執行二進位比較。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-781">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="2d3f4-782">執行文字比較。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-782">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-783">此範例示範如何使用`InStrRev`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-783">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-784"><paramref name="Start" /> = 0 或 <paramref name="Start" /> &lt; -1。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-784"><paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-785">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-785">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-786">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-786">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-787">傳回結合包含在陣列中幾個子字串所建立的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-787">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : obj[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="2d3f4-788">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-788">Required.</span></span> <span data-ttu-id="2d3f4-789">一維陣列，包含要結合的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-789">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="2d3f4-790">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-790">Optional.</span></span> <span data-ttu-id="2d3f4-791">用來分隔傳回字串內的子字串之任何字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-791">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="2d3f4-792">如果省略，則會使用空白字元 (" ")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-792">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="2d3f4-793">如果 <paramref name="Delimiter" /> 是長度為零的字串 ("") 或 <see langword="Nothing" />，則清單中的所有項目都會與非分隔符號串連。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-793">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="2d3f4-794">傳回結合包含在陣列中幾個子字串所建立的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-794">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-795">傳回結合包含在陣列中幾個子字串所建立的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-795">Returns a string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-796">沒有之間的同位`Join`和`Split`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-796">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="2d3f4-797">`Join`函式接受字串陣列，並結合使用分隔符號字串，以傳回單一字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-797">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="2d3f4-798">`Split`函式會使用字串，並分隔在分隔符號，以傳回字串陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-798">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="2d3f4-799">不過，主要差異在於`Join`可以串連字串，使用任何分隔符號的字串、`Split`只可以分開使用單一字元分隔符號的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-799">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-800">下列範例示範如何使用`Join`函式來建立數個字串的清單。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-800">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-801"><paramref name="SourceArray" /> 不是一維。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-801"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-802">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-802">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : string[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" />
        <Parameter Name="Delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="2d3f4-803">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-803">Required.</span></span> <span data-ttu-id="2d3f4-804">一維陣列，包含要結合的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-804">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="2d3f4-805">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-805">Optional.</span></span> <span data-ttu-id="2d3f4-806">用來分隔傳回字串內的子字串之任何字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-806">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="2d3f4-807">如果省略，則會使用空白字元 (" ")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-807">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="2d3f4-808">如果 <paramref name="Delimiter" /> 是長度為零的字串 ("") 或 <see langword="Nothing" />，則清單中的所有項目都會與非分隔符號串連。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-808">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="2d3f4-809">傳回結合包含在陣列中幾個子字串所建立的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-809">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-810">傳回結合包含在陣列中幾個子字串所建立的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-810">Returns a string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-811">沒有之間的同位`Join`和`Split`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-811">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="2d3f4-812">`Join`函式接受字串陣列，並結合使用分隔符號字串，以傳回單一字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-812">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="2d3f4-813">`Split`函式會使用字串，並分隔在分隔符號，以傳回字串陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-813">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="2d3f4-814">不過，主要差異在於`Join`可以串連字串，使用任何分隔符號的字串、`Split`只可以分開使用單一字元分隔符號的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-814">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-815">下列範例示範如何使用`Join`函式來建立數個字串的清單。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-815">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-816"><paramref name="SourceArray" /> 不是一維。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-816"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-817">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-817">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-818">傳回已轉換成小寫的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-818">Returns a string or character converted to lowercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberSignature Language="F#" Value="static member LCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="2d3f4-819">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-819">Required.</span></span> <span data-ttu-id="2d3f4-820">任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-820">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-821">傳回已轉換成小寫的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-821">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-822">傳回已轉換成小寫的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-822">Returns a string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-823">僅有大寫的字母會轉換為小寫;所有小寫字母和 nonletter 字元都保持不變。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-823">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="2d3f4-824">管理字串，使大小寫變更所適用的地區設定中使用應用程式時，此函數會使用應用程式的文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-824">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d3f4-825">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則作業應該使用<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，然後傳遞<xref:System.StringComparison.Ordinal>或是<xref:System.StringComparison.OrdinalIgnoreCase>如`comparisonType`引數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-825">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="2d3f4-826">如需詳細資訊，請參閱 <<c0> [ 如何文化特性會影響字串在 Visual Basic 中](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-826">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-827">這個範例會使用`LCase`函式來傳回字串的小寫版本。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-827">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-828">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-828">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-829">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-829">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member LCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="2d3f4-830">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-830">Required.</span></span> <span data-ttu-id="2d3f4-831">任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-831">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-832">傳回已轉換成小寫的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-832">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-833">傳回已轉換成小寫的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-833">Returns a string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-834">僅有大寫的字母會轉換為小寫;所有小寫字母和 nonletter 字元都保持不變。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-834">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="2d3f4-835">管理字串，使大小寫變更所適用的地區設定中使用應用程式時，此函數會使用應用程式的文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-835">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d3f4-836">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則作業應該使用<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，然後傳遞<xref:System.StringComparison.Ordinal>或是<xref:System.StringComparison.OrdinalIgnoreCase>如`comparisonType`引數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-836">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="2d3f4-837">如需詳細資訊，請參閱 <<c0> [ 如何文化特性會影響字串在 Visual Basic 中](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-837">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-838">這個範例會使用`LCase`函式來傳回字串的小寫版本。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-838">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-839">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-839">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-840">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-840">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Left : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Left (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-841">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-841">Required.</span></span> <span data-ttu-id="2d3f4-842"><see langword="String" /> 運算式，最左邊的字元會從此運算式中傳回。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-842"><see langword="String" /> expression from which the leftmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="2d3f4-843">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-843">Required.</span></span> <span data-ttu-id="2d3f4-844"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-844"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-845">數值運算式，表示要傳回的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-845">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="2d3f4-846">如果為 0，則會傳回長度為零的字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-846">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="2d3f4-847">如果大於或等於 <paramref name="str" /> 中的字元數，則會傳回整個字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-847">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="2d3f4-848">傳回字串，其中包含從字串的左邊開始的指定數目的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-848">Returns a string containing a specified number of characters from the left side of a string.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-849">傳回字串，其中包含從字串的左邊開始的指定數目的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-849">Returns a string containing a specified number of characters from the left side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-850">若要判斷中的字元數目`str`，使用`Len`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-850">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="2d3f4-851">如果使用中的 Windows Forms 應用程式中或任何其他類別具有`Left`屬性，您必須完整限定函式搭配`Microsoft.VisualBasic.Left`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-851">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-852">`LeftB`在舊版的 Visual Basic 中的函式會傳回字串位元組，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-852">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="2d3f4-853">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-853">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-854">所有目前的 Visual Basic 字串為 Unicode，和`LeftB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-854">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-855">此範例示範如何使用`Left`函數來傳回子字串的指定`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-855">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="2d3f4-856">在具有的類別`Left`屬性，它可能需要完整限定`Left`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-856">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-857"><paramref name="Length" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-857"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-858">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-858">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-859">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-859">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberSignature Language="F#" Value="static member Len : bool -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-860">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-860">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-861">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-861">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-862">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-862">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-863">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-863">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-864">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-864">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-865">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-865">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-866">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-866">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-867">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-867">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-868">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-868">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-869">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-869">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-870">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-870">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-871">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-871">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-872">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-872">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-873">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-873">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-874">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-874">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-875">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-875">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-876">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-876">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-877">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-877">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-878">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-878">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-879">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-879">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-880">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-880">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : byte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-881">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-881">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-882">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-882">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-883">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-883">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-884">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-884">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-885">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-885">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-886">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-886">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-887">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-887">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-888">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-888">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-889">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-889">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-890">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-890">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-891">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-891">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-892">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-892">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-893">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-893">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-894">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-894">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-895">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-895">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-896">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-896">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-897">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-897">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-898">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-898">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-899">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-899">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-900">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-900">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-901">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-901">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberSignature Language="F#" Value="static member Len : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-902">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-902">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-903">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-903">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-904">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-904">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-905">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-905">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-906">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-906">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-907">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-907">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-908">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-908">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-909">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-909">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-910">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-910">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-911">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-911">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-912">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-912">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-913">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-913">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-914">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-914">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-915">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-915">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-916">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-916">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-917">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-917">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-918">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-918">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-919">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-919">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-920">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-920">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-921">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-921">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-922">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-922">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberSignature Language="F#" Value="static member Len : DateTime -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-923">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-923">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-924">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-924">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-925">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-925">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-926">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-926">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-927">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-927">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-928">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-928">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-929">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-929">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-930">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-930">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-931">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-931">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-932">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-932">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-933">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-933">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-934">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-934">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-935">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-935">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-936">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-936">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-937">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-937">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-938">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-938">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-939">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-939">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-940">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-940">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-941">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-941">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-942">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-942">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-943">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-943">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberSignature Language="F#" Value="static member Len : decimal -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-944">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-944">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-945">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-945">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-946">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-946">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-947">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-947">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-948">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-948">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-949">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-949">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-950">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-950">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-951">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-951">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-952">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-952">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-953">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-953">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-954">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-954">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-955">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-955">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-956">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-956">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-957">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-957">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-958">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-958">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-959">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-959">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-960">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-960">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-961">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-961">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-962">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-962">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-963">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-963">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-964">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-964">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberSignature Language="F#" Value="static member Len : double -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-965">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-965">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-966">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-966">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-967">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-967">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-968">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-968">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-969">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-969">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-970">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-970">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-971">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-971">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-972">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-972">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-973">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-973">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-974">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-974">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-975">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-975">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-976">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-976">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-977">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-977">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-978">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-978">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-979">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-979">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-980">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-980">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-981">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-981">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-982">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-982">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-983">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-983">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-984">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-984">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-985">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-985">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-986">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-986">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-987">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-987">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-988">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-988">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-989">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-989">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-990">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-990">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-991">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-991">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-992">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-992">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-993">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-993">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-994">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-994">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-995">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-995">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-996">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-996">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-997">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-997">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-998">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-998">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-999">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-999">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1000">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1000">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1001">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1001">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1002">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1002">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1003">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1003">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1004">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1004">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1005">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1005">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1006">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1006">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1007">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1007">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1008">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1008">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1009">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1009">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1010">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1010">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1011">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1011">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1012">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1012">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1013">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1013">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1014">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1014">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1015">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1015">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1016">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1016">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1017">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1017">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1018">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1018">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1019">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1019">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1020">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1020">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1021">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1021">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1022">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1022">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1023">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1023">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1024">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1024">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1025">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1025">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1026">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1026">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1027">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1027">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1028">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1028">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1029">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1029">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1030">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1030">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1031">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1031">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1032">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1032">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1033">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1033">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1034">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1034">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1035">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1035">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1036">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1036">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1037">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1037">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1038">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1038">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1039">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1039">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1040">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1040">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1041">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1041">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1042">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1042">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1043">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1043">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1044">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1044">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1045">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1045">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1046">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1046">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1047">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1047">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1048">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1048">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : obj -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1049">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1049">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1050">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1050">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1051">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1051">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1052">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1052">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1053">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1053">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1054">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1054">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1055">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1055">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1056">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1056">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1057">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1057">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1058">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1058">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1059">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1059">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1060">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1060">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1061">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1061">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1062">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1062">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1063">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1063">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1064">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1064">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1065">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1065">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1066">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1066">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1067">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1067">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1068">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1068">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1069">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1069">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : sbyte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1070">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1070">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1071">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1071">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1072">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1072">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1073">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1073">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1074">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1074">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1075">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1075">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1076">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1076">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1077">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1077">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1078">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1078">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1079">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1079">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1080">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1080">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1081">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1081">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1082">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1082">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1083">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1083">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1084">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1084">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1085">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1085">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1086">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1086">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1087">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1087">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1088">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1088">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1089">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1089">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1090">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1090">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberSignature Language="F#" Value="static member Len : single -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1091">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1091">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1092">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1092">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1093">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1093">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1094">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1094">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1095">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1095">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1096">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1096">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1097">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1097">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1098">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1098">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1099">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1099">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1100">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1100">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1101">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1101">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1102">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1102">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1103">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1103">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1104">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1104">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1105">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1105">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1106">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1106">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1107">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1107">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1108">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1108">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1109">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1109">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1110">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1110">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1111">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1111">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1112">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1112">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1113">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1113">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1114">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1114">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1115">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1115">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1116">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1116">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1117">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1117">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1118">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1118">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1119">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1119">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1120">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1120">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1121">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1121">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1122">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1122">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1123">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1123">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1124">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1124">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1125">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1125">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1126">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1126">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1127">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1127">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1128">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1128">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1129">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1129">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1130">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1130">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1131">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1131">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1132">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1132">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1133">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1133">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1134">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1134">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1135">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1135">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1136">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1136">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1137">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1137">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1138">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1138">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1139">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1139">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1140">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1140">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1141">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1141">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1142">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1142">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1143">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1143">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1144">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1144">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1145">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1145">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1146">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1146">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1147">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1147">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1148">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1148">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1149">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1149">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1150">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1150">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1151">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1151">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1152">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1152">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1153">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1153">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint32 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1154">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1154">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1155">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1155">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1156">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1156">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1157">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1157">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1158">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1158">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1159">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1159">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1160">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1160">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1161">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1161">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1162">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1162">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1163">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1163">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1164">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1164">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1165">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1165">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1166">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1166">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1167">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1167">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1168">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1168">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1169">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1169">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1170">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1170">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1171">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1171">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1172">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1172">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1173">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1173">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1174">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1174">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1175">任何有效的 <see langword="String" /> 運算式或變數名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1175">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="2d3f4-1176">如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1176">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1177">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1177">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1178">傳回包含字串中字元數或儲存變數所需位元組數的整數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1178">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1179">使用使用者定義型別和`Object`變數`Len`函式傳回的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1179">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="2d3f4-1180">如果`Object`包含`String`，它會傳回字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1180">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="2d3f4-1181">如果`Object`包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案`FilePut`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1181">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1182">`VBFixedString`屬性可以套用至字串欄位中表示的字串，以位元組為單位的大小，寫入時的物件至磁碟。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1182">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="2d3f4-1183">`Len`函式會使用`VBFixedString`屬性，如果有的話，決定的大小時`Object`變數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1183">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1184">`Len`函式可能無法判斷實際的可變長度的字串，用於使用者定義資料類型搭配使用時所需的儲存體位元組數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1184">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1185">`LenB`在舊版的 Visual Basic 中的函式會傳回的位元組數目的字串，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1185">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="2d3f4-1186">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1186">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1187">所有目前的 Visual Basic 字串為 Unicode，和`LenB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1187">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="2d3f4-1188">智慧型裝置開發人員注意事項</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1188">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="2d3f4-1189">`Len`函式只接受`String`和`Object`變數做為參數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1189">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="2d3f4-1190">如果`Object`包含`String`，它會傳回長度`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1190">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="2d3f4-1191">如果參數為 NULL`Object`參考，此函數會傳回零。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1191">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="2d3f4-1192">如果`Object`不含任何其他類型，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1192">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1193">這個範例使用 `Len` 傳回字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1193">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1194">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1194">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1195">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1195">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member LSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.LSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="2d3f4-1196">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1196">Required.</span></span> <span data-ttu-id="2d3f4-1197"><see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1197"><see langword="String" /> expression.</span></span> <span data-ttu-id="2d3f4-1198">字串變數的名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1198">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="2d3f4-1199">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1199">Required.</span></span> <span data-ttu-id="2d3f4-1200"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1200"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1201">傳回的字串長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1201">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1202">傳回靠左對齊的字串，其中包含調整為指定之長度的指定字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1202">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1203">傳回靠左對齊的字串，其中包含調整為指定之長度的指定字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1203">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1204">如果指定的字串長度超過指定的長度，傳回的字串會縮短成指定的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1204">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="2d3f4-1205">如果指定的字串小於指定的長度，傳回的字串，以產生適當的長度最右邊加入空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1205">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1206">此範例示範如何使用`LSet`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1206">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1207">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1207">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1208">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1208">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md"><span data-ttu-id="2d3f4-1209">有效率地使用資料類型</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1209">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member LTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1210">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1210">Required.</span></span> <span data-ttu-id="2d3f4-1211">任何有效的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1211">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1212">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1212">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1213">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1213">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1214">`LTrim`， `RTrim`，和`Trim`函式會移除字串的結尾中的空白。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1214">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1215">此範例使用 `LTrim` 函式刪除字串變數中的前置空格，並使用 `RTrim` 函式刪除字串變數中的尾端空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1215">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="2d3f4-1216">它會使用 `Trim` 函式刪除這兩種類型的空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1216">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1217">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1217">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-1218">傳回包含指定之字串中的字元的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1218">Returns a string that contains characters from a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1219">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1219">Required.</span></span> <span data-ttu-id="2d3f4-1220"><see langword="String" /> 運算式，字元會從此運算式中傳回。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1220"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="2d3f4-1221">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1221">Required.</span></span> <span data-ttu-id="2d3f4-1222"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1222"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1223">要傳回字元的開始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1223">Starting position of the characters to return.</span></span> <span data-ttu-id="2d3f4-1224">如果 <paramref name="Start" /> 大於 <paramref name="str" /> 中的字元數，則 <see langword="Mid" /> 函式會傳回長度為零的字串 ("")；</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1224">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="2d3f4-1225"><paramref name="Start" /> 是以一起始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1225"><paramref name="Start" /> is one-based.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1226">傳回字串，這個字串包含某個字串中從指定之位置開始的所有字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1226">Returns a string that contains all the characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1227">字串，包含字串中從指定之位置開始的所有字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1227">A string that consists of all the characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1228">若要判斷中的字元數目`str`，使用`Len`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1228">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1229">Visual Basic 也有`Mid`函式和`Mid`陳述式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1229">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="2d3f4-1230">這些項目都會運作指定的字串中的字元數，但`Mid`函式會傳回的字元時`Mid`陳述式會取代字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1230">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="2d3f4-1231">如需詳細資訊，請參閱 < [Mid 陳述式](~/docs/visual-basic/language-reference/statements/mid-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1231">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1232">`MidB`在舊版的 Visual Basic 中的函式會傳回字串位元組，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1232">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="2d3f4-1233">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1233">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1234">所有的 Visual Basic 字串為 Unicode，和`MidB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1234">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1235">在此範例中的最後一行會使用此多載`Mid`函式傳回的第五個和後續字元字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1235">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1236"><paramref name="Start" /> &lt;= 0 或 <paramref name="Length" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1236"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1237">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1237">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-1238">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1238">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-1239">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1239">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md"><span data-ttu-id="2d3f4-1240">Mid 陳述式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1240">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1241">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1241">Required.</span></span> <span data-ttu-id="2d3f4-1242"><see langword="String" /> 運算式，字元會從此運算式中傳回。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1242"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="2d3f4-1243">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1243">Required.</span></span> <span data-ttu-id="2d3f4-1244"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1244"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1245">要傳回字元的開始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1245">Starting position of the characters to return.</span></span> <span data-ttu-id="2d3f4-1246">如果 <paramref name="Start" /> 大於 <paramref name="str" /> 中的字元數，則 <see langword="Mid" /> 函式會傳回長度為零的字串 ("")；</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1246">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="2d3f4-1247"><paramref name="Start" /> 是以一起始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1247"><paramref name="Start" /> is one based.</span></span></param>
        <param name="Length"><span data-ttu-id="2d3f4-1248">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1248">Optional.</span></span> <span data-ttu-id="2d3f4-1249"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1249"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1250">要傳回的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1250">Number of characters to return.</span></span> <span data-ttu-id="2d3f4-1251">如果省略，或者此字元數少於文字中的 <paramref name="Length" /> 字元 (包括 <paramref name="Start" /> 位置上的字元)，則會傳回從起始位置到字串結尾的所有字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1251">If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1252">傳回字串，這個字串包含某個字串中從指定之位置開始的指定數目字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1252">Returns a string that contains a specified number of characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1253">字串，包含字串中從指定之位置開始的指定數目字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1253">A string that consists of the specified number of characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1254">若要判斷中的字元數目`str`，使用`Len`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1254">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="2d3f4-1255">Visual Basic 也有`Mid`函式和`Mid`陳述式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1255">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="2d3f4-1256">這些項目都會運作指定的字串中的字元數，但`Mid`函式會傳回的字元時`Mid`陳述式會取代字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1256">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="2d3f4-1257">如需詳細資訊，請參閱 < [Mid 陳述式](~/docs/visual-basic/language-reference/statements/mid-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1257">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1258">`MidB`在舊版的 Visual Basic 中的函式會傳回字串位元組，而不是字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1258">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="2d3f4-1259">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1259">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1260">所有的 Visual Basic 字串為 Unicode，和`MidB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1260">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1261">前兩個`Mid`在此範例中的函式會傳回指定的字元數，從字串、 從給定位置開始。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1261">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="2d3f4-1262">(最後一個函式說明<xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29>多載，並只會指定字串擷取的起始點。)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1262">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1263"><paramref name="Start" /> &lt;= 0 或 <paramref name="Length" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1263"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1264">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1264">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-1265">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1265">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-1266">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1266">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md"><span data-ttu-id="2d3f4-1267">Mid 陳述式</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1267">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * int * int * Microsoft.VisualBasic.CompareMethod -&gt; string" Usage="Microsoft.VisualBasic.Strings.Replace (Expression, Find, Replacement, Start, Count, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Find" Type="System.String" />
        <Parameter Name="Replacement" Type="System.String" />
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="Count" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1268">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1268">Required.</span></span> <span data-ttu-id="2d3f4-1269">字串運算式，包含要取代的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1269">String expression containing substring to replace.</span></span></param>
        <param name="Find"><span data-ttu-id="2d3f4-1270">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1270">Required.</span></span> <span data-ttu-id="2d3f4-1271">正在搜尋的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1271">Substring being searched for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="2d3f4-1272">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1272">Required.</span></span> <span data-ttu-id="2d3f4-1273">取代子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1273">Replacement substring.</span></span></param>
        <param name="Start"><span data-ttu-id="2d3f4-1274">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1274">Optional.</span></span> <span data-ttu-id="2d3f4-1275"><paramref name="Expression" /> 內用於取代的子字串的開始位置。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1275">Position within <paramref name="Expression" /> that starts a substring used for replacement.</span></span> <span data-ttu-id="2d3f4-1276"><see langword="Replace" /> 的傳回值是以 <paramref name="Start" /> 開頭且具有適當替代的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1276">The return value of <see langword="Replace" /> is a string that begins at <paramref name="Start" />, with appropriate substitutions.</span></span> <span data-ttu-id="2d3f4-1277">如果省略，則假設為 1。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1277">If omitted, 1 is assumed.</span></span></param>
        <param name="Count"><span data-ttu-id="2d3f4-1278">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1278">Optional.</span></span> <span data-ttu-id="2d3f4-1279">要執行的子字串替代次數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1279">Number of substring substitutions to perform.</span></span> <span data-ttu-id="2d3f4-1280">如果省略，則預設值為 –1，這表示「執行所有可能的替代」。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1280">If omitted, the default value is –1, which means "make all possible substitutions."</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-1281">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1281">Optional.</span></span> <span data-ttu-id="2d3f4-1282">數值，表示在評估子字串時要使用的比較類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1282">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="2d3f4-1283">請參閱數值的設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1283">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1284">傳回字串，其中的指定之子字串已經被另一個子字串取代了指定的次數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1284">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1285"><see langword="Replace" /> 會傳回下列值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1285"><see langword="Replace" /> returns the following values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="2d3f4-1286">如果</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1286">If</span></span> 
 </term><description> <span data-ttu-id="2d3f4-1287">Replace 會傳回</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1287">Replace returns</span></span> 
 </description></item><item><term><span data-ttu-id="2d3f4-1288"><paramref name="Find" /> 的長度為零或 <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1288"><paramref name="Find" /> is zero-length or <see langword="Nothing" /></span></span></term><description> <span data-ttu-id="2d3f4-1289"><paramref name="Expression" /> 的複本</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1289">Copy of <paramref name="Expression" /></span></span></description></item><item><term><span data-ttu-id="2d3f4-1290"><paramref name="Replace" /> 的長度為零</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1290"><paramref name="Replace" /> is zero-length</span></span> 
 </term><description> <span data-ttu-id="2d3f4-1291"><paramref name="Expression" /> 的複本沒有出現 <paramref name="Find" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1291">Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></span></span></description></item><item><term><span data-ttu-id="2d3f4-1292"><paramref name="Expression" /> 的長度為零或 <see langword="Nothing" />，或 <paramref name="Start" /> 大於 <paramref name="Expression" /> 的長度</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1292"><paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></span></span></term><description><see langword="Nothing" /></description></item><item><term><span data-ttu-id="2d3f4-1293"><paramref name="Count" /> 為 0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1293"><paramref name="Count" /> is 0</span></span> 
 </term><description> <span data-ttu-id="2d3f4-1294"><paramref name="Expression" /> 的複本</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1294">Copy of <paramref name="Expression" /></span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1295">傳回值`Replace`函式是一個字串，所指定的位置開始`Start`，並於結尾的結尾`Expression`替代後的字串所指定`Find`和`Replace`值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1295">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="2d3f4-1296">`Compare`引數可以是下列值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1296">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="2d3f4-1297">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1297">Constant</span></span>|<span data-ttu-id="2d3f4-1298">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1298">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="2d3f4-1299">執行二進位比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1299">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="2d3f4-1300">執行文字比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1300">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1301">此範例示範`Replace`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1301">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1302"><paramref name="Count" /> &lt; -1 或 <paramref name="Start" /> &lt;= 0。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1302"><paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1303">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1303">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Right : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Right (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1304">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1304">Required.</span></span> <span data-ttu-id="2d3f4-1305"><see langword="String" /> 運算式，最右邊的字元會從此運算式中傳回。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1305"><see langword="String" /> expression from which the rightmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="2d3f4-1306">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1306">Required.</span></span> <span data-ttu-id="2d3f4-1307"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1307"><see langword="Integer" />.</span></span> <span data-ttu-id="2d3f4-1308">數值運算式，表示要傳回的字元數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1308">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="2d3f4-1309">如果為 0，則會傳回長度為零的字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1309">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="2d3f4-1310">如果大於或等於 <paramref name="str" /> 中的字元數，則會傳回整個字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1310">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1311">傳回字串，其中包含從字串的右邊開始的指定數目的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1311">Returns a string containing a specified number of characters from the right side of a string.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1312">傳回字串，其中包含從字串的右邊開始的指定數目的字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1312">Returns a string containing a specified number of characters from the right side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1313">若要判斷中的字元數目`str`，使用`Len`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1313">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="2d3f4-1314">如果使用 Windows 表單或有任何其他類別中`Right`屬性，您必須完整限定函式搭配`Microsoft.VisualBasic.Strings.Right`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1314">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1315">`RightB`函式在舊版的 Visual Basic 中以位元組為單位，而不是字元傳回字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1315">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="2d3f4-1316">它是主要用於將雙位元組字元集 (DBCS) 應用程式中的字串轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1316">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="2d3f4-1317">所有目前的 Visual Basic 字串為 Unicode，和`RightB`不受支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1317">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1318">此範例示範如何使用`Right`函數來傳回子字串的指定`String`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1318">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="2d3f4-1319">在具有的類別`Right`屬性，它可能需要完整限定`Right`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1319">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1320"><paramref name="Length" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1320"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1321">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1321">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member RSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.RSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="2d3f4-1322">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1322">Required.</span></span> <span data-ttu-id="2d3f4-1323"><see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1323"><see langword="String" /> expression.</span></span> <span data-ttu-id="2d3f4-1324">字串變數的名稱。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1324">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="2d3f4-1325">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1325">Required.</span></span> <span data-ttu-id="2d3f4-1326"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1326"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1327">傳回的字串長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1327">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1328">傳回靠右對齊的字串，其中包含調整為指定之長度的指定字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1328">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1329">傳回靠右對齊的字串，其中包含調整為指定之長度的指定字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1329">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1330">如果`Source`長於`Length`，`RSet`將只有最左邊字元，長度為`Source`，在傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1330">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="2d3f4-1331">如果指定的字串小於指定的長度，以產生適當的長度字串的左邊加入空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1331">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="2d3f4-1332">如果指定的字串長度超過指定的長度，會將它縮短為指定的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1332">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1333">此範例示範如何使用`RSet`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1333">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1334">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1334">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="2d3f4-1335">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1335">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md"><span data-ttu-id="2d3f4-1336">有效率地使用資料類型</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1336">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member RTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.RTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1337">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1337">Required.</span></span> <span data-ttu-id="2d3f4-1338">任何有效的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1338">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1339">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1339">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1340">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1340">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1341">`LTrim`， `RTrim`，和`Trim`函式會移除字串的結尾中的空白。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1341">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1342">此範例使用 `LTrim` 函式刪除字串變數中的前置空格，並使用 `RTrim` 函式刪除字串變數中的尾端空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1342">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="2d3f4-1343">它會使用 `Trim` 函式刪除這兩種類型的空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1343">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1344">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1344">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberSignature Language="F#" Value="static member Space : int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Space Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="2d3f4-1345">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1345">Required.</span></span> <span data-ttu-id="2d3f4-1346"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1346"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1347">您希望在字串中有多少空格數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1347">The number of spaces you want in the string.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1348">傳回字串，此字串是由指定之空格數所組成。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1348">Returns a string consisting of the specified number of spaces.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1349">傳回字串，此字串是由指定之空格數所組成。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1349">Returns a string consisting of the specified number of spaces.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1350">`Space`函式很適合用於設定輸出格式和清除固定長度字串中的資料。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1350">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1351">這個範例會使用`Space`函數來傳回字串，其中包含指定的空格數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1351">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1352"><paramref name="Number" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1352"><paramref name="Number" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1353">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1353">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Split : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Split (Expression, Delimiter, Limit, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
        <Parameter Name="Delimiter" Type="System.String" />
        <Parameter Name="Limit" Type="System.Int32" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1354">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1354">Required.</span></span> <span data-ttu-id="2d3f4-1355"><see langword="String" /> 運算式，包含子字串和分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1355"><see langword="String" /> expression containing substrings and delimiters.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="2d3f4-1356">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1356">Optional.</span></span> <span data-ttu-id="2d3f4-1357">用來識別子字串限制的單一字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1357">Any single character used to identify substring limits.</span></span> <span data-ttu-id="2d3f4-1358">如果省略 <paramref name="Delimiter" />，則會假設空白字元 (" ") 為分隔符號。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1358">If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</span></span></param>
        <param name="Limit"><span data-ttu-id="2d3f4-1359">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1359">Optional.</span></span> <span data-ttu-id="2d3f4-1360">輸入字串應該分割之子字串數目的最大值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1360">Maximum number of substrings into which the input string should be split.</span></span> <span data-ttu-id="2d3f4-1361">預設為 –1，表示應該在每次遇到 <paramref name="Delimiter" /> 字串時即分割輸入字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1361">The default, –1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-1362">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1362">Optional.</span></span> <span data-ttu-id="2d3f4-1363">數值，表示在評估子字串時要使用的比較。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1363">Numeric value indicating the comparison to use when evaluating substrings.</span></span> <span data-ttu-id="2d3f4-1364">如需有關值的資訊，請參閱＜設定＞。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1364">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1365">傳回以零起始的一維陣列，其中包含指定之子字串數目。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1365">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1366"><see langword="String" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1366"><see langword="String" /> array.</span></span> <span data-ttu-id="2d3f4-1367">如果 <paramref name="Expression" /> 是長度為零的字串 ("")，<see langword="Split" /> 會傳回包含長度為零的字串之單一元素陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1367">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span></span> <span data-ttu-id="2d3f4-1368">如果 <paramref name="Delimiter" /> 是長度為零的字串，或是未出現在 <paramref name="Expression" /> 內的任何位置，則 <see langword="Split" /> 會傳回單一元素陣列，其中包含整個 <paramref name="Expression" /> 字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1368">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1369">根據預設，或當`Limit`等於-1，`Split`函式會在每次出現的分隔符號字串中，輸入的字串分割，並傳回陣列中的子字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1369">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="2d3f4-1370">當`Limit`參數是小於或等於零，`Split`函式會分割此字串在第一個`Limit`-1 出現的分隔符號，並傳回產生的子字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1370">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="2d3f4-1371">例如，`Split("a:b:c", ":")`會傳回陣列`{"a", "b", "c"}`，雖然`Split("a:b:c", ":", 2)`會傳回陣列`{"a", "b:c"}`。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1371">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="2d3f4-1372">當`Split`函式遇到在資料列中的兩個分隔符號或分隔符號的開頭或結尾的字串，它會將它們解譯為周圍的空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1372">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="2d3f4-1373">比方說，`Split("xx", "x")`會傳回包含三個空白的字串陣列： 一個介於開頭的字串和第一個"x"，其中這兩個"x"字串，頭尾包括在內，另一個介於最後一個"x"和字串的結尾。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1373">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="2d3f4-1374">下表示範如何選擇性`Delimiter`， `Limit`，並`Compare`參數可變更的行為`Split`函式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1374">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="2d3f4-1375">分割呼叫</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1375">Split Call</span></span>|<span data-ttu-id="2d3f4-1376">傳回值</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1376">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="2d3f4-1377">{"42," , "12," , "19"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1377">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="2d3f4-1378">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1378">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="2d3f4-1379">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1379">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="2d3f4-1380">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1380">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="2d3f4-1381">{"Alice 和 Bob"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1381">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="2d3f4-1382">{"Alice"，"Bob"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1382">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="2d3f4-1383">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1383">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="2d3f4-1384">{"someone"，"example.com"}</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1384">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="2d3f4-1385">`Compare`引數可以是下列值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1385">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="2d3f4-1386">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1386">Constant</span></span>|<span data-ttu-id="2d3f4-1387">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1387">Description</span></span>|<span data-ttu-id="2d3f4-1388">值</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1388">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="2d3f4-1389">執行二進位比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1389">Performs a binary comparison</span></span>|<span data-ttu-id="2d3f4-1390">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1390">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="2d3f4-1391">執行文字比較</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1391">Performs a textual comparison</span></span>|<span data-ttu-id="2d3f4-1392">1</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1392">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1393">下列範例示範如何在其空間將字串分隔。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1393">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="2d3f4-1394">下列範例示範如何分割資料列中的多個分隔符號的字串，並篩選出空的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1394">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1395">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1395">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member StrComp : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.StrComp (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" />
        <Parameter Name="String2" Type="System.String" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="2d3f4-1396">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1396">Required.</span></span> <span data-ttu-id="2d3f4-1397">任何有效的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1397">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="String2"><span data-ttu-id="2d3f4-1398">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1398">Required.</span></span> <span data-ttu-id="2d3f4-1399">任何有效的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1399">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Compare"><span data-ttu-id="2d3f4-1400">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1400">Optional.</span></span> <span data-ttu-id="2d3f4-1401">指定字串比較的類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1401">Specifies the type of string comparison.</span></span> <span data-ttu-id="2d3f4-1402">如果省略了 <paramref name="Compare" />，則 <see langword="Option Compare" /> 設定可決定比較的類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1402">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1403">根據字串比較的結果傳回 -1、0 或 1。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1403">Returns -1, 0, or 1, based on the result of a string comparison.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1404"><see langword="StrComp" /> 函式具有下列的傳回值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1404">The <see langword="StrComp" /> function has the following return values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="2d3f4-1405">如果</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1405">If</span></span> 
 </term><description> <span data-ttu-id="2d3f4-1406">StrComp 會傳回</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1406">StrComp returns</span></span> 
 </description></item><item><term><span data-ttu-id="2d3f4-1407"><paramref name="String1" /> 排在 <paramref name="String2" /> 之前</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1407"><paramref name="String1" /> sorts ahead of <paramref name="String2" /></span></span></term><description> <span data-ttu-id="2d3f4-1408">-1</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1408">-1</span></span> 
 </description></item><item><term><span data-ttu-id="2d3f4-1409"><paramref name="String1" /> 等於 <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1409"><paramref name="String1" /> is equal to <paramref name="String2" /></span></span></term><description> <span data-ttu-id="2d3f4-1410">0</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1410">0</span></span> 
 </description></item><item><term><span data-ttu-id="2d3f4-1411"><paramref name="String1" /> 排在 <paramref name="String2" /> 之後</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1411"><paramref name="String1" /> sorts after <paramref name="String2" /></span></span></term><description> <span data-ttu-id="2d3f4-1412">1</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1412">1</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1413">所開始的第一個字元的英數字元的排序鍵值比較的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1413">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="2d3f4-1414">二進位比較、 文字的比較和排序次序的進一步資訊，請參閱[Option 比較陳述式](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1414">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 <span data-ttu-id="2d3f4-1415">`Compare` 引數設定為︰</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1415">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="2d3f4-1416">常數</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1416">Constant</span></span>|<span data-ttu-id="2d3f4-1417">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1417">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="2d3f4-1418">執行二進位比較，而根據衍生自內部的二進位表示的字元的排序次序。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1418">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="2d3f4-1419">執行文字比較，而根據取決於您的系統的不區分大小寫文字排序順序`LocaleID`值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1419">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1420">這個範例會使用`StrComp`函式傳回的字串比較的結果。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1420">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1421"><paramref name="Compare" /> 值無效。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1421"><paramref name="Compare" /> value is not valid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1422">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1422">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-1423">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1423">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-1424">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1424">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member StrConv : string * Microsoft.VisualBasic.VbStrConv * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrConv (str, Conversion, LocaleID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" />
        <Parameter Name="LocaleID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1425">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1425">Required.</span></span> <span data-ttu-id="2d3f4-1426">要轉換的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1426"><see langword="String" /> expression to be converted.</span></span></param>
        <param name="Conversion"><span data-ttu-id="2d3f4-1427">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1427">Required.</span></span> <span data-ttu-id="2d3f4-1428"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> 成員。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1428"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span></span> <span data-ttu-id="2d3f4-1429">列舉值，指定要執行的轉換類型。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1429">The enumeration value specifying the type of conversion to perform.</span></span></param>
        <param name="LocaleID"><span data-ttu-id="2d3f4-1430">選擇性。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1430">Optional.</span></span> <span data-ttu-id="2d3f4-1431">如果不同於系統 <see langword="LocaleID" /> 值，則使用此 <see langword="LocaleID" /> 值 </span><span class="sxs-lookup"><span data-stu-id="2d3f4-1431">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span></span> <span data-ttu-id="2d3f4-1432">(系統 <see langword="LocaleID" /> 值是預設值)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1432">(The system <see langword="LocaleID" /> value is the default.)</span></span></param>
        <summary><span data-ttu-id="2d3f4-1433">傳回依照指定方式轉換的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1433">Returns a string converted as specified.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1434">傳回依照指定方式轉換的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1434">Returns a string converted as specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1435">常數`VbStrConv.Wide`， `VbStrConv.Narrow`， `VbStrConv.SimplifiedChinese`， `VbStrConv.TraditionalChinese`， `VbStrConv.Katakana`，和`VbStrConv.Hiragana`可能會導致執行階段錯誤時，它們不會套用，地區設定中使用但不是一定： 常數`VbStrConv.Katakana`並`VbStrConv.Hiragana`可以搭配非日文系統中安裝了日文語言套件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1435">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="2d3f4-1436">此外，使用的常數`VbStrConv.Wide`和`VbStrConv.Narrow`任何系統上安裝的東亞洲語言支援。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1436">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="2d3f4-1437">管理字串，使大小寫變更所適用的地區設定中使用應用程式時，此函數會使用應用程式的文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1437">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d3f4-1438">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則作業應該使用<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，然後傳遞<xref:System.StringComparison.Ordinal>或是<xref:System.StringComparison.OrdinalIgnoreCase>如`comparisonType`引數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1438">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="2d3f4-1439">如需詳細資訊，請參閱 <<c0> [ 如何文化特性會影響字串在 Visual Basic 中](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1439">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
 <span data-ttu-id="2d3f4-1440">`Conversion` 引數設定為︰</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1440">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="2d3f4-1441">列舉型別成員</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1441">Enumeration member</span></span>|<span data-ttu-id="2d3f4-1442">描述</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1442">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="2d3f4-1443">會執行任何轉換</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1443">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="2d3f4-1444">大小寫，而不是檔案系統 （預設值），會使用語言的規則。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1444">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="2d3f4-1445">適用於`VbStrConv.UpperCase`和`VbStrConv.LowerCase`只。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1445">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="2d3f4-1446">將字串轉換為大寫字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1446">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="2d3f4-1447">將字串轉換為小寫字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1447">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="2d3f4-1448">將轉換成大寫的字串中的每個字的第一個字母。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1448">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="2d3f4-1449">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1449">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="2d3f4-1450">將窄 （半形） 字元 （全形） 的寬字元字串中。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1450">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="2d3f4-1451">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1451">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="2d3f4-1452">將字串中要縮小 （半形） 字元的寬 （全形） 字元轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1452">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="2d3f4-1453">`VbStrConv.Katakana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1453">`VbStrConv.Katakana` <sup>\*\*</sup></span></span>|<span data-ttu-id="2d3f4-1454">將字串中的平假名字元轉換為片假名字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1454">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="2d3f4-1455">`VbStrConv.Hiragana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1455">`VbStrConv.Hiragana` <sup>\*\*</sup></span></span>|<span data-ttu-id="2d3f4-1456">將字串中的片假名字元轉換為平假名字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1456">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="2d3f4-1457">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1457">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="2d3f4-1458">將繁體中文字元轉換成簡體中文。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1458">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="2d3f4-1459">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="2d3f4-1459">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="2d3f4-1460">將簡體中文字元轉換成繁體中文。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1460">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="2d3f4-1461"><sup>\*</sup> 適用於亞洲地區設定。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1461"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="2d3f4-1462"><sup>\*\*</sup> 僅適用於日本。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1462"><sup>\*\*</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d3f4-1463">這些常數會指定.NET Framework common language runtime 中。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1463">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="2d3f4-1464">如此一來，它們可以用於任何地方您的程式碼來取代實際的值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1464">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="2d3f4-1465">大部分可以結合 (例如`UpperCase + Wide`)，除非它們是互斥 (比方說， `VbStrConv.Wide + VbStrConv.Narrow`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1465">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="2d3f4-1466">以下是有效的文字分隔字元的適當大小寫： Null (`Chr$(0)`)，水平索引標籤 (`Chr$(9)`)，換行字元 (`Chr$(10)`)，垂直索引標籤 (`Chr$(11)`)、 換頁字元 (`Chr$(12)`)，歸位字元 (`Chr$(13)`)，空間 （單一位元組字元集） (`Chr$(32)`)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1466">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="2d3f4-1467">空間，這可以是完整或寬度的一半，實際的值會因國家/地區的東亞語言的文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1467">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1468">此範例會將文字轉換成小寫字母。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1468">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1469">不支援的 <paramref name="LocaleID" />、<paramref name="Conversion" /> &lt; 0 或 &gt; 2048，或不支援的指定地區設定轉換。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1469">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1470">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1470">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="2d3f4-1471">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1471">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-1472">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1472">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * char -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="2d3f4-1473">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1473">Required.</span></span> <span data-ttu-id="2d3f4-1474"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1474"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1475">要傳回之字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1475">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="2d3f4-1476">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1476">Required.</span></span> <span data-ttu-id="2d3f4-1477">任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1477">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="2d3f4-1478">只會使用運算式的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1478">Only the first character of the expression will be used.</span></span> <span data-ttu-id="2d3f4-1479">如果字元的型別為 <see langword="Object" />，它必須包含 <see langword="Char" /> 或 <see langword="String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1479">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1480">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1480">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1481">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1481">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1482">此函數會傳回`String`重複的字元所組成。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1482">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="2d3f4-1483">構成的字串的字元是中的第一個字元`Character`引數，並重複`Number`次數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1483">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1484">這個範例會使用`StrDup`重複字元的函式傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1484">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1485"><paramref name="Number" /> 小於 0 或 <paramref name="Character" /> 類型無效。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1485"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d3f4-1486"><paramref name="Character" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1486"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1487">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1487">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * obj -&gt; obj" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="2d3f4-1488">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1488">Required.</span></span> <span data-ttu-id="2d3f4-1489"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1489"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1490">要傳回之字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1490">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="2d3f4-1491">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1491">Required.</span></span> <span data-ttu-id="2d3f4-1492">任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1492">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="2d3f4-1493">只會使用運算式的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1493">Only the first character of the expression will be used.</span></span> <span data-ttu-id="2d3f4-1494">如果字元的型別為 <see langword="Object" />，它必須包含 <see langword="Char" /> 或 <see langword="String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1494">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1495">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1495">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1496">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1496">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1497">此函數會傳回`String`重複的字元所組成。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1497">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="2d3f4-1498">構成的字串的字元是中的第一個字元`Character`引數，並重複`Number`次數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1498">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1499">這個範例會使用`StrDup`重複字元的函式傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1499">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1500"><paramref name="Number" /> 小於 0 或 <paramref name="Character" /> 類型無效。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1500"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d3f4-1501"><paramref name="Character" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1501"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1502">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1502">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Character" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="2d3f4-1503">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1503">Required.</span></span> <span data-ttu-id="2d3f4-1504"><see langword="Integer" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1504"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="2d3f4-1505">要傳回之字串的長度。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1505">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="2d3f4-1506">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1506">Required.</span></span> <span data-ttu-id="2d3f4-1507">任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1507">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="2d3f4-1508">只會使用運算式的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1508">Only the first character of the expression will be used.</span></span> <span data-ttu-id="2d3f4-1509">如果字元的型別為 <see langword="Object" />，它必須包含 <see langword="Char" /> 或 <see langword="String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1509">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1510">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1510">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1511">傳回由重複指定次數的指定字元所組成的字串或物件。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1511">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1512">此函數會傳回`String`重複的字元所組成。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1512">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="2d3f4-1513">構成的字串的字元是中的第一個字元`Character`引數，並重複`Number`次數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1513">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1514">這個範例會使用`StrDup`重複字元的函式傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1514">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d3f4-1515"><paramref name="Number" /> 小於 0 或 <paramref name="Character" /> 類型無效。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1515"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d3f4-1516"><paramref name="Character" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1516"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1517">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1517">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member StrReverse : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrReverse Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="2d3f4-1518">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1518">Required.</span></span> <span data-ttu-id="2d3f4-1519">要反轉字元的字串運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1519">String expression whose characters are to be reversed.</span></span> <span data-ttu-id="2d3f4-1520">如果 <paramref name="Expression" /> 是長度為零的字串 ("")，則會傳回長度為零的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1520">If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1521">傳回字串，其中的指定之字串的字元順序會顛倒。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1521">Returns a string in which the character order of a specified string is reversed.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1522">傳回字串，其中的指定之字串的字元順序會顛倒。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1522">Returns a string in which the character order of a specified string is reversed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1523">`StrReverse`函式會傳回字串，包含相同的字元視為`Expression`，但順序相反。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1523">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1524">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1524">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Trim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Trim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="2d3f4-1525">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1525">Required.</span></span> <span data-ttu-id="2d3f4-1526">任何有效的 <see langword="String" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1526">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1527">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1527">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1528">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1528">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1529">`LTrim`， `RTrim`，和`Trim`函式會移除字串的結尾中的空白。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1529">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1530">此範例使用 `LTrim` 函式刪除字串變數中的前置空格，並使用 `RTrim` 函式刪除字串變數中的尾端空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1530">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="2d3f4-1531">它會使用 `Trim` 函式刪除這兩種類型的空格。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1531">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1532">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1532">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d3f4-1533">傳回包含已轉換成大寫之指定字串的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1533">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberSignature Language="F#" Value="static member UCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="2d3f4-1534">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1534">Required.</span></span> <span data-ttu-id="2d3f4-1535">任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1535">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1536">傳回包含已轉換成大寫之指定字串的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1536">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1537">傳回包含已轉換成大寫之指定字串的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1537">Returns a string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1538">只能是小寫字母轉換成大寫;所有的大寫字母和 nonletter 字元保持不變。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1538">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="2d3f4-1539">管理字串，使大小寫變更所適用的地區設定中使用應用程式時，此函數會使用應用程式的文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1539">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d3f4-1540">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則作業應該使用<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，然後傳遞<xref:System.StringComparison.Ordinal>或是<xref:System.StringComparison.OrdinalIgnoreCase>如`comparisonType`引數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1540">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="2d3f4-1541">如需詳細資訊，請參閱 <<c0> [ 如何文化特性會影響字串在 Visual Basic 中](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1541">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1542">此範例使用 `UCase` 函式，傳回大寫字母版本的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1542">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1543">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1543">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-1544">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1544">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-1545">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1545">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member UCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="2d3f4-1546">必要。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1546">Required.</span></span> <span data-ttu-id="2d3f4-1547">任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1547">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="2d3f4-1548">傳回包含已轉換成大寫之指定字串的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1548">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="2d3f4-1549">傳回包含已轉換成大寫之指定字串的字串或字元。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1549">Returns a string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d3f4-1550">只能是小寫字母轉換成大寫;所有的大寫字母和 nonletter 字元保持不變。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1550">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="2d3f4-1551">管理字串，使大小寫變更所適用的地區設定中使用應用程式時，此函數會使用應用程式的文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1551">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d3f4-1552">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則作業應該使用<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，然後傳遞<xref:System.StringComparison.Ordinal>或是<xref:System.StringComparison.OrdinalIgnoreCase>如`comparisonType`引數。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1552">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="2d3f4-1553">如需詳細資訊，請參閱 <<c0> [ 如何文化特性會影響字串在 Visual Basic 中](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1553">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d3f4-1554">此範例使用 `UCase` 函式，傳回大寫字母版本的字串。</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1554">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="2d3f4-1555">字串操作摘要</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1555">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="2d3f4-1556">Visual Basic 中的字串</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1556">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="2d3f4-1557">Visual Basic 中的字串簡介</span><span class="sxs-lookup"><span data-stu-id="2d3f4-1557">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>