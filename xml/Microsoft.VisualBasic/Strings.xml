<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Strings.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f6b720a5c53d27944cd3cd053d3b53983622209fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b720a5c53d27944cd3cd053d3b53983622209fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>The <ph id="ph1">&lt;see langword="Strings" /&gt;</ph> module contains procedures used to perform string operations.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Strings" /&gt;</ph> 模組包含用來執行字串作業的程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Strings">
          <source>This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</source>
          <target state="translated">這個模組支援的 Visual Basic 語言關鍵字和操作字串的執行階段程式庫成員。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Strings">
          <source>The following example demonstrates how to split a string at its spaces.</source>
          <target state="translated">下列範例會示範如何在其空間將字串分隔。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，則只有字串的第一個字元才會用於輸入。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> 或者不包含任何字元，則會發生 <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> 錯誤。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> 傳回<bpt id="p1">*</bpt>程式碼點<ept id="p1">*</ept>，或輸入字元的字元碼。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">這可以是 0 到 255 的單一位元組字元集 (sbcs) 的值介於-32768 至 32767 之間的雙位元組字元集 (dbcs) 的值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> 傳回輸入字元的 Unicode 字碼指標。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">這可以是 0 到 65535。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">傳回的值與目前執行緒的文化特性和字碼頁設定無關。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph>較舊版本的 Visual Basic 的函式傳回一個位元組，而不是一個字元的程式碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 2005 字串都位於 Unicode，和<ph id="ph1">`AscB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Asc`</ph>函數來傳回<ph id="ph2">`Integer`</ph>字元對應至每個字串中的第一個字母的代碼。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，則只有字串的第一個字元才會用於輸入。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> 或者不包含任何字元，則會發生 <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> 錯誤。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> 傳回<bpt id="p1">*</bpt>程式碼點<ept id="p1">*</ept>，或輸入字元的字元碼。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">這可以是 0 到 255 的單一位元組字元集 (sbcs) 的值介於-32768 至 32767 之間的雙位元組字元集 (dbcs) 的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> 傳回輸入字元的 Unicode 字碼指標。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">這可以是 0 到 65535。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">傳回的值與目前執行緒的文化特性和字碼頁設定無關。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph>較舊版本的 Visual Basic 的函式傳回一個位元組，而不是一個字元的程式碼。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 2005 字串都位於 Unicode，和<ph id="ph1">`AscB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Asc`</ph>函數來傳回<ph id="ph2">`Integer`</ph>字元對應至每個字串中的第一個字母的代碼。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，則只有字串的第一個字元才會用於輸入。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> 或者不包含任何字元，則會發生 <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> 錯誤。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> 傳回<bpt id="p1">*</bpt>程式碼點<ept id="p1">*</ept>，或輸入字元的字元碼。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">這可以是 0 到 255 的單一位元組字元集 (sbcs) 的值介於-32768 至 32767 之間的雙位元組字元集 (dbcs) 的值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> 傳回輸入字元的 Unicode 字碼指標。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">這可以是 0 到 65535。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">傳回的值與目前執行緒的文化特性和字碼頁設定無關。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph>較舊版本的 Visual Basic 的函式傳回一個位元組，而不是一個字元的程式碼。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 2005 字串都位於 Unicode，和<ph id="ph1">`AscB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Asc`</ph>函數來傳回<ph id="ph2">`Integer`</ph>字元對應至每個字串中的第一個字母的代碼。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，則只有字串的第一個字元才會用於輸入。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> 或者不包含任何字元，則會發生 <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> 錯誤。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 值，表示對應至字元的字元碼。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> 傳回<bpt id="p1">*</bpt>程式碼點<ept id="p1">*</ept>，或輸入字元的字元碼。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">這可以是 0 到 255 的單一位元組字元集 (sbcs) 的值介於-32768 至 32767 之間的雙位元組字元集 (dbcs) 的值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> 傳回輸入字元的 Unicode 字碼指標。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">這可以是 0 到 65535。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">傳回的值與目前執行緒的文化特性和字碼頁設定無關。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph>較舊版本的 Visual Basic 的函式傳回一個位元組，而不是一個字元的程式碼。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 2005 字串都位於 Unicode，和<ph id="ph1">`AscB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Asc`</ph>函數來傳回<ph id="ph2">`Integer`</ph>字元對應至每個字串中的第一個字母的代碼。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression representing the <bpt id="p1">&lt;c&gt;</bpt>code point<ept id="p1">&lt;/c&gt;</ept>, or character code, for the character.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式，表示字元的<bpt id="p1">&lt;c&gt;</bpt>字碼指標<ept id="p1">&lt;/c&gt;</ept>或字元碼。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">傳回與指定的字元碼關聯的字元。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">傳回與指定的字元碼關聯的字元。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">非對稱式範圍接受<ph id="ph1">`CharCode`</ph>補償儲存體之間的差異<ph id="ph2">`Short`</ph>和<ph id="ph3">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">比方說，是-29183<ph id="ph1">`Short`</ph>但 +36353 <ph id="ph2">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">這也有助於與 Visual Basic 6.0 的相容性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source><ph id="ph1">`Chr`</ph> uses the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph> 使用<ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph>類別<ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph>命名空間，以判斷目前的執行緒是否使用單一位元組字元集 (SBCS) 或雙位元組字集 (DBCS)。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">接著會<ph id="ph1">`CharCode`</ph>為碼指向適當的集合中。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">範圍可以是 0 到 255 的 SBCS 字元-32768 到 65535 DBCS 字元。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The returned value depends on the code page for the current thread, which is contained in the <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Globalization&gt;</ph> namespace.</source>
          <target state="translated">傳回的值取決於目前的執行緒，包含此程式碼頁<ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph>類別<ph id="ph3">&lt;xref:System.Globalization&gt;</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>You can obtain <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> by specifying <ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">您可以取得<ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph>藉由指定<ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph> 會採用<ph id="ph2">`CharCode`</ph>為 Unicode 程式碼的點。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">範圍是與目前執行緒的文化特性和字碼頁設定無關。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">從-32768 到-1 的值會視為相同 32768 到 + 65535 的範圍中的值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">從 0 到 31 的數字是與標準無法列印的 ASCII 碼相同。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">例如，<ph id="ph1">`Chr(10)`</ph>傳回換行字元。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The <ph id="ph1">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated"><ph id="ph1">`ChrB`</ph>在舊版的 Visual Basic 中的函式會傳回單一位元組。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Visual Basic 和.NET Framework 中的所有字串都都位於 Unicode，和<ph id="ph1">`ChrB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The following example uses the <ph id="ph1">`Chr`</ph> function to return the character associated with the specified character code.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Chr`</ph>函式，傳回與指定的字元碼相關聯的字元。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 255 for <ph id="ph4">&lt;see langword="Chr" /&gt;</ph>.</source>
          <target state="translated">針對 <ph id="ph4">&lt;see langword="Chr" /&gt;</ph> 為 <ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 或 <ph id="ph3">&amp;gt;</ph> 255。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression representing the <bpt id="p1">&lt;c&gt;</bpt>code point<ept id="p1">&lt;/c&gt;</ept>, or character code, for the character.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式，表示字元的<bpt id="p1">&lt;c&gt;</bpt>字碼指標<ept id="p1">&lt;/c&gt;</ept>或字元碼。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">傳回與指定的字元碼關聯的字元。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">傳回與指定的字元碼關聯的字元。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">非對稱式範圍接受<ph id="ph1">`CharCode`</ph>補償儲存體之間的差異<ph id="ph2">`Short`</ph>和<ph id="ph3">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">比方說，是-29183<ph id="ph1">`Short`</ph>但 +36353 <ph id="ph2">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">這也有助於與 Visual Basic 6.0 的相容性。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source><ph id="ph1">`Chr`</ph> uses the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph> 使用<ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph>類別<ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph>命名空間，以判斷目前的執行緒是否使用單一位元組字元集 (SBCS) 或雙位元組字集 (DBCS)。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">接著會<ph id="ph1">`CharCode`</ph>為碼指向適當的集合中。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">範圍可以是 0 到 255 的 SBCS 字元-32768 到 65535 DBCS 字元。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The returned value depends on the code page for the current thread, which is contained in the <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Globalization&gt;</ph> namespace.</source>
          <target state="translated">傳回的值取決於目前的執行緒，包含此程式碼頁<ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph>類別<ph id="ph3">&lt;xref:System.Globalization&gt;</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>You can obtain <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> by specifying <ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">您可以取得<ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph>藉由指定<ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph> 會採用<ph id="ph2">`CharCode`</ph>為 Unicode 程式碼的點。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">範圍是與目前執行緒的文化特性和字碼頁設定無關。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">從-32768 到-1 的值會視為相同 32768 到 + 65535 的範圍中的值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">從 0 到 31 的數字是與標準無法列印的 ASCII 碼相同。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">例如，<ph id="ph1">`Chr(10)`</ph>傳回換行字元。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The <ph id="ph1">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated"><ph id="ph1">`ChrB`</ph>在舊版的 Visual Basic 中的函式會傳回單一位元組。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Visual Basic 和.NET Framework 中的所有字串都都位於 Unicode，和<ph id="ph1">`ChrB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The following example uses the <ph id="ph1">`Chr`</ph> function to return the character associated with the specified character code.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Chr`</ph>函式，傳回與指定的字元碼相關聯的字元。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> -32768 or <ph id="ph3">&amp;gt;</ph> 65535 for <ph id="ph4">&lt;see langword="ChrW" /&gt;</ph>.</source>
          <target state="translated">針對 <ph id="ph4">&lt;see langword="ChrW" /&gt;</ph> 為 <ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> -32768 或 <ph id="ph3">&amp;gt;</ph> 65535。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 陣列子集。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">要搜尋的一維字串陣列。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>String to search for.</source>
          <target state="translated">要搜尋的字串。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether to return substrings that include or exclude <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，表示是否要傳回包含或排除 <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept> 的子字串。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="True" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that contains <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，則 <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> 函式會傳回包含 <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> 做為子字串的陣列子集。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="False" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that does not contain <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="False" /&gt;</ph>，則 <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> 函式會傳回未包含 <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> 做為子字串的陣列子集。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">數值，表示要使用的字串比較類型。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 陣列子集。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 陣列子集。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">如果沒有相符的<ph id="ph1">`Match`</ph>內找到<ph id="ph2">`Source`</ph>、<ph id="ph3">`Filter`</ph>函式會傳回空陣列。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">如果發生錯誤<ph id="ph1">`Source`</ph>設<ph id="ph2">`Nothing`</ph>或不是一維陣列。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">所傳回的陣列<ph id="ph1">`Filter`</ph>函式僅包含足夠項目包含相符的項目數目。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>引數可以是下列值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">執行二進位比較</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">執行文字比較</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the use of the <ph id="ph1">`Filter`</ph> function.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`Filter`</ph>函式。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> 或不是一維陣列。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">要搜尋的一維字串陣列。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>String to search for.</source>
          <target state="translated">要搜尋的字串。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether to return substrings that include or exclude <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值，表示是否要傳回包含或排除 <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept> 的子字串。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="True" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that contains <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，則 <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> 函式會傳回包含 <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> 做為子字串的陣列子集。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="False" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that does not contain <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="False" /&gt;</ph>，則 <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> 函式會傳回未包含 <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> 做為子字串的陣列子集。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">數值，表示要使用的字串比較類型。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 陣列子集。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 陣列子集。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">如果沒有相符的<ph id="ph1">`Match`</ph>內找到<ph id="ph2">`Source`</ph>、<ph id="ph3">`Filter`</ph>函式會傳回空陣列。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">如果發生錯誤<ph id="ph1">`Source`</ph>設<ph id="ph2">`Nothing`</ph>或不是一維陣列。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">所傳回的陣列<ph id="ph1">`Filter`</ph>函式僅包含足夠項目包含相符的項目數目。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>引數可以是下列值。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">執行二進位比較</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">執行文字比較</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the use of the <ph id="ph1">`Filter`</ph> function.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`Filter`</ph>函式。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> 或不是一維陣列。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Any valid expression.</source>
          <target state="translated">任何有效的運算式。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>A valid named or user-defined format <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">有效的具名或使用者定義的格式 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Returns a string formatted according to instructions contained in a format <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">傳回字串，其格式化方式是根據格式 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式內包含的指令。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Returns a string formatted according to instructions contained in a format <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">傳回字串，其格式化方式是根據格式 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式內包含的指令。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> method also provides similar functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>方法也會提供類似的功能。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</source>
          <target state="translated">如果您正在格式化的未當地語系化的數字字串，您應該使用使用者定義數值格式，以確保您取得想要的外觀。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you try to format a number without specifying <ph id="ph1">`Style`</ph>, the <ph id="ph2">`Format`</ph> function provides functionality similar to the <ph id="ph3">`Str`</ph> function, although it is internationally aware.</source>
          <target state="translated">如果您嘗試將數字格式而不指定<ph id="ph1">`Style`</ph>、<ph id="ph2">`Format`</ph>函式會提供類似的功能<ph id="ph3">`Str`</ph>函式中，雖然它是國際感知。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>However, positive numbers formatted as strings using the <ph id="ph1">`Format`</ph> function don't include a leading space reserved for the sign of the value; those converted using the <ph id="ph2">`Str`</ph> function retain the leading space.</source>
          <target state="translated">不過，正值的數字格式化為字串時，使用<ph id="ph1">`Format`</ph>函式不包含前置空格保留正負號的值，使用這些轉換<ph id="ph2">`Str`</ph>函式保留的前置空格。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Different Formats for Different Numeric Values</source>
          <target state="translated">不同的格式不同的數值</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>A user-defined format expression for numbers can have from one to three sections separated by semicolons.</source>
          <target state="translated">數字的使用者定義的格式運算式可以有一到三個以分號分隔的區段。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the <ph id="ph1">`Style`</ph> argument of the <ph id="ph2">`Format`</ph> function contains one of the predefined numeric formats, only one section is allowed.</source>
          <target state="translated">如果<ph id="ph1">`Style`</ph>引數的<ph id="ph2">`Format`</ph>函式包含其中一個預先定義數值格式，則允許只能有一個區段。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you use</source>
          <target state="translated">如果您使用</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This is the result</source>
          <target state="translated">以下是結果</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>One section only</source>
          <target state="translated">只有一個區段</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The format expression applies to all values.</source>
          <target state="translated">格式運算式套用至所有值。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Two sections</source>
          <target state="translated">兩個區段</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The first section applies to positive values and zeros; the second applies to negative values.</source>
          <target state="translated">第一個區段套用至正值和零。第二個適用於負數值。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Three sections</source>
          <target state="translated">三個區段</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</source>
          <target state="translated">第一個區段套用至正值、 負值，適用於第二個和第三個適用於零值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</source>
          <target state="translated">下列範例有兩個區段： 第一個定義正值和零; 的格式第二個區段定義負值的格式。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Since the <ph id="ph1">`Style`</ph> argument of the <ph id="ph2">`Format`</ph> function takes a string, it is enclosed by quotation marks.</source>
          <target state="translated">因為<ph id="ph1">`Style`</ph>引數的<ph id="ph2">`Format`</ph>函式接受字串，它以引號括住。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</source>
          <target state="translated">如果您包含沒有兩者之間的分號，遺漏的區段會列印使用正數值的格式。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, the following format displays positive and negative values using the format in the first section and displays <ph id="ph1">`Zero`</ph> if the value is zero.</source>
          <target state="translated">例如，下列格式顯示正值和負值值第一個區段中使用的格式，並且顯示<ph id="ph1">`Zero`</ph>如果值為零。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Predefined Numeric Formats</source>
          <target state="translated">預先定義數值格式</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table identifies the predefined numeric format names.</source>
          <target state="translated">下表會識別預先定義數值格式名稱。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These may be used by name as the <ph id="ph1">`Style`</ph> argument for the <ph id="ph2">`Format`</ph> function:</source>
          <target state="translated">這些可能會使用名稱做為使用<ph id="ph1">`Style`</ph>引數<ph id="ph2">`Format`</ph>函式：</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format name</source>
          <target state="translated">格式名稱</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`General Number`</ph>, <ph id="ph2">`G`</ph>, or <ph id="ph3">`g`</ph></source>
          <target state="translated"><ph id="ph1">`General Number`</ph>、 <ph id="ph2">`G`</ph>或 <ph id="ph3">`g`</ph></target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with no thousand separator.</source>
          <target state="translated">顯示含數字沒有千位分隔符號。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(&amp;H3FA, "g")`</ph> returns <ph id="ph2">`1018`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(&amp;H3FA, "g")`</ph>傳回<ph id="ph2">`1018`</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Currency`</ph>, <ph id="ph2">`C`</ph>, or <ph id="ph3">`c`</ph></source>
          <target state="translated"><ph id="ph1">`Currency`</ph>、 <ph id="ph2">`C`</ph>或 <ph id="ph3">`c`</ph></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</source>
          <target state="translated">顯示含千位分隔符號的數字在小數點分隔符號的右邊顯示兩位數。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Output is based on system locale settings.</source>
          <target state="translated">輸出根據系統地區設定。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "c")`</ph> returns <ph id="ph2">`$1,234,567.00`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1234567, "c")`</ph>傳回<ph id="ph2">`$1,234,567.00`</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Fixed`</ph>, <ph id="ph2">`F`</ph>, or <ph id="ph3">`f`</ph></source>
          <target state="translated"><ph id="ph1">`Fixed`</ph>、 <ph id="ph2">`F`</ph>或 <ph id="ph3">`f`</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays at least one digit to the left and two digits to the right of the decimal separator.</source>
          <target state="translated">在小數點分隔符號的右邊顯示至少一個數字向左和兩位數。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "f")`</ph> returns <ph id="ph2">`1234567.00`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1234567, "f")`</ph>傳回<ph id="ph2">`1234567.00`</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Standard`</ph>, <ph id="ph2">`N`</ph>, or <ph id="ph3">`n`</ph></source>
          <target state="translated"><ph id="ph1">`Standard`</ph>、 <ph id="ph2">`N`</ph>或 <ph id="ph3">`n`</ph></target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</source>
          <target state="translated">在小數點分隔符號的右邊顯示千位分隔符號、 至少一個數字向左與兩位數的數字。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "n")`</ph> returns <ph id="ph2">`1,234,567.00`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1234567, "n")`</ph>傳回<ph id="ph2">`1,234,567.00`</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</source>
          <target state="translated">顯示數字乘以立即在右邊附加百分比符號 （%） 100; 在小數點分隔符號的右邊永遠顯示兩位數。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(0.4744, "Percent")`</ph> returns <ph id="ph2">`47.44%`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(0.4744, "Percent")`</ph>傳回<ph id="ph2">`47.44%`</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`P`</ph>, or <ph id="ph2">`p`</ph></source>
          <target state="translated"><ph id="ph1">`P`</ph>或 <ph id="ph2">`p`</ph></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</source>
          <target state="translated">會顯示含有千位分隔符號乘以 100 百分比符號 （%），用單一空格來附加至右邊和分隔的數字; 在小數點分隔符號的右邊永遠顯示兩位數。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(0.80345, "p")`</ph> returns <ph id="ph2">`80.35 %`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(0.80345, "p")`</ph>傳回<ph id="ph2">`80.35 %`</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Uses standard scientific notation, providing two significant digits.</source>
          <target state="translated">使用標準科學記號標記法，提供兩個有效位數。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "Scientific")`</ph> returns <ph id="ph2">`1.23E+06`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1234567, "Scientific")`</ph>傳回<ph id="ph2">`1.23E+06`</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`E`</ph>, or <ph id="ph2">`e`</ph></source>
          <target state="translated"><ph id="ph1">`E`</ph>或 <ph id="ph2">`e`</ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Uses standard scientific notation, providing six significant digits.</source>
          <target state="translated">使用標準科學記號標記法，提供六個有效位數。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "e")`</ph> returns <ph id="ph2">`1.234567e+006`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1234567, "e")`</ph>傳回<ph id="ph2">`1.234567e+006`</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`D`</ph>, or <ph id="ph2">`d`</ph></source>
          <target state="translated"><ph id="ph1">`D`</ph>或 <ph id="ph2">`d`</ph></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number as a string that contains the value of the number in Decimal (base 10) format.</source>
          <target state="translated">包含值的十進位 (基底 10) 格式的數字的字串顯示數。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This option is supported for integral types (<ph id="ph1">`Byte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>) only.</source>
          <target state="translated">整數類資料類型支援此選項 (<ph id="ph1">`Byte`</ph>， <ph id="ph2">`Short`</ph>， <ph id="ph3">`Integer`</ph>， <ph id="ph4">`Long`</ph>) 只。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(&amp;H7F, "d")`</ph> returns <ph id="ph2">`127`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(&amp;H7F, "d")`</ph>傳回<ph id="ph2">`127`</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`X`</ph>, or <ph id="ph2">`x`</ph></source>
          <target state="translated"><ph id="ph1">`X`</ph>或 <ph id="ph2">`x`</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</source>
          <target state="translated">包含值的十六進位 (基底 16) 格式的數字的字串顯示數。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This option is supported for integral types (<ph id="ph1">`Byte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>) only.</source>
          <target state="translated">整數類資料類型支援此選項 (<ph id="ph1">`Byte`</ph>， <ph id="ph2">`Short`</ph>， <ph id="ph3">`Integer`</ph>， <ph id="ph4">`Long`</ph>) 只。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(127, "x")`</ph> returns <ph id="ph2">`7f`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(127, "x")`</ph>傳回<ph id="ph2">`7f`</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays <ph id="ph1">`No`</ph> if number is 0; otherwise, displays <ph id="ph2">`Yes`</ph>.</source>
          <target state="translated">顯示<ph id="ph1">`No`</ph>如果數字是 0; 否則會顯示<ph id="ph2">`Yes`</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(0, "Yes/No")`</ph> returns <ph id="ph2">`No`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(0, "Yes/No")`</ph>傳回<ph id="ph2">`No`</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays <ph id="ph1">`False`</ph> if number is 0; otherwise, displays <ph id="ph2">`True`</ph>.</source>
          <target state="translated">顯示<ph id="ph1">`False`</ph>如果數字是 0; 否則會顯示<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1, "True/False")`</ph> returns <ph id="ph2">`True`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1, "True/False")`</ph>傳回<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays <ph id="ph1">`Off`</ph> if number is 0; otherwise, displays <ph id="ph2">`On`</ph>.</source>
          <target state="translated">顯示<ph id="ph1">`Off`</ph>如果數字是 0; 否則會顯示<ph id="ph2">`On`</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1, "On/Off")`</ph> returns <ph id="ph2">`On`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Format(1, "On/Off")`</ph>傳回<ph id="ph2">`On`</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`Yes/No`</ph>, <ph id="ph2">`True/False`</ph>, and <ph id="ph3">`On/Off`</ph> formats are not supported.</source>
          <target state="translated"><ph id="ph1">`Yes/No`</ph>， <ph id="ph2">`True/False`</ph>，和<ph id="ph3">`On/Off`</ph>格式不受支援。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>User-Defined Numeric Formats</source>
          <target state="translated">使用者定義數值格式</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table identifies characters you can use to create user-defined number formats.</source>
          <target state="translated">下表列出可用來建立使用者定義的數字格式的字元。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These may be used to build the <ph id="ph1">`Style`</ph> argument for the <ph id="ph2">`Format`</ph> function:</source>
          <target state="translated">這些都可用來建置<ph id="ph1">`Style`</ph>引數<ph id="ph2">`Format`</ph>函式：</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Character</source>
          <target state="translated">字元</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>None</source>
          <target state="translated">無</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the number with no formatting.</source>
          <target state="translated">顯示沒有格式的數字。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`0`</ph>)</source>
          <target state="translated">(<ph id="ph1">`0`</ph>)</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Digit placeholder.</source>
          <target state="translated">數字預留位置。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a digit or a zero.</source>
          <target state="translated">顯示數字或零。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</source>
          <target state="translated">如果運算式在格式字串中出現零的位置有數字，則會顯示。否則，會顯示在該位置的零。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</source>
          <target state="translated">如果數值有較少的字位數比會是零 （在的小數點任何一邊） 格式運算式，顯示開頭或尾端零。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</source>
          <target state="translated">如果數值有比小數點右邊位數，有格式運算式在小數點右邊零四捨五入數量一樣多的小數位數為零。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</source>
          <target state="translated">如果數值有比小數點左邊數字有格式運算式在小數點左邊零顯示未經修改的額外位數。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`#`</ph>)</source>
          <target state="translated">(<ph id="ph1">`#`</ph>)</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Digit placeholder.</source>
          <target state="translated">數字預留位置。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a digit or nothing.</source>
          <target state="translated">顯示數字或零。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the expression has a digit in the position where the <ph id="ph1">`#`</ph> character appears in the format string, displays it; otherwise, displays nothing in that position.</source>
          <target state="translated">如果運算式的位置有數字其中<ph id="ph1">`#`</ph>字元出現在格式字串，它會顯示; 否則會顯示任何資訊的位置。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This symbol works like the <ph id="ph1">`0`</ph> digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are <ph id="ph2">`#`</ph> characters on either side of the decimal separator in the format expression.</source>
          <target state="translated">這個符號的運作方式類似<ph id="ph1">`0`</ph>數字預留位置，除了開頭和尾端零，如果不會顯示數值有比有較少的位數<ph id="ph2">`#`</ph>格式運算式在小數點分隔符號的任一邊的字元。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`.`</ph>)</source>
          <target state="translated">(<ph id="ph1">`.`</ph>)</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Decimal placeholder.</source>
          <target state="translated">小數預留位置。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</source>
          <target state="translated">小數預留位置可決定小數點左側和右側顯示幾位數字。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the format expression contains only <ph id="ph1">`#`</ph> characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</source>
          <target state="translated">如果格式運算式僅包含<ph id="ph1">`#`</ph>這個符號左邊的字元; 小於 1 開頭小數分隔符號的數字。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</source>
          <target state="translated">若要顯示前置零的小數數字，使用零做為第一個數值中小數分隔符號左邊數字預留位置。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, a comma is used as the decimal separator.</source>
          <target state="translated">在某些地區設定中，逗號會做為小數點。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</source>
          <target state="translated">做為小數預留位置在格式化輸出中實際的字元取決於您的系統能辨識的數字格式。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</source>
          <target state="translated">因此，您應該使用句號做為小數預留位置格式中即使您是使用逗號做為小數預留位置的地區設定。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The formatted string will appear in the format correct for the locale.</source>
          <target state="translated">格式化的字串會出現在格式正確的地區設定。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`%`</ph>)</source>
          <target state="translated">(<ph id="ph1">`%`</ph>)</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Percent placeholder.</source>
          <target state="translated">百分比預留位置。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Multiplies the expression by 100.</source>
          <target state="translated">將運算式乘以 100。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The percent character (<ph id="ph1">`%`</ph>) is inserted in the position where it appears in the format string.</source>
          <target state="translated">百分比字元 (<ph id="ph1">`%`</ph>) 會插入格式字串中出現的位置。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`,`</ph>)</source>
          <target state="translated">(<ph id="ph1">`,`</ph>)</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Thousand separator.</source>
          <target state="translated">千位分隔符號。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</source>
          <target state="translated">千位分隔符號分隔百有四個以上的小數點左邊數字。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (<ph id="ph1">`0`</ph> or <ph id="ph2">`#`</ph>).</source>
          <target state="translated">指定千位分隔符號的標準用法如果格式中包含的千位分隔符號括住數字預留位置 (<ph id="ph1">`0`</ph>或<ph id="ph2">`#`</ph>)。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</source>
          <target state="translated">千位分隔符號左邊或最右邊的小數分隔符號 （不論是否指定小數） 表示字串中字元"縮放的數字除以 1000，捨入所需。 」</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Numbers smaller than 1,000 but greater or equal to 500 are displayed as <ph id="ph1">`1`</ph>, and numbers smaller than 500 are displayed as <ph id="ph2">`0`</ph>.</source>
          <target state="translated">小於 1,000 但大於或等於 500 的數字顯示為<ph id="ph1">`1`</ph>，和數字小於 500 顯示為<ph id="ph2">`0`</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</source>
          <target state="translated">在這個位置中的兩個相鄰千位分隔符號縮放 1 百萬的係數和其他因數 1,000 每個額外的分隔符號。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</source>
          <target state="translated">以外任何位置，在小數點分隔符號的左邊或右邊的位置，在字串中的多個分隔符號都會直接視為指定要使用千位分隔符號。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, a period is used as a thousand separator.</source>
          <target state="translated">在某些地區設定，用句點做為千位分隔符號。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</source>
          <target state="translated">實際使用做為千位分隔符號在格式化輸出中的字元取決於您的系統能辨識的數字格式。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</source>
          <target state="translated">因此，您應該使用逗號做為千位分隔符號格式中即使您是使用句號做為千位分隔符號的地區設定。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The formatted string will appear in the format correct for the locale.</source>
          <target state="translated">格式化的字串會出現在格式正確的地區設定。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, consider the three following format strings:</source>
          <target state="translated">例如，請考慮下列的三個格式字串：</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">-   </ph><ph id="ph2">`"#,0."`</ph>, which uses the thousands separator to format the number 100 million as the string "100,000,000".</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`"#,0."`</ph>100 萬個將數值格式化為字串"100000000"哪些使用千位分隔符號。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">-   </ph><ph id="ph2">`"#0,."`</ph>, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`"#0,."`</ph>是使用一千因數 100 萬個將數值格式化為字串"100000"。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">-   </ph><ph id="ph2">`"#,0,."`</ph>, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`"#,0,."`</ph>哪些使用千位分隔符號和以一千 100 萬個將數值格式化為字串"100000"。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`:`</ph>)</source>
          <target state="translated">(<ph id="ph1">`:`</ph>)</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Time separator.</source>
          <target state="translated">時間分隔符號。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the time separator.</source>
          <target state="translated">在某些地區設定，使用其他字元來代表時間分隔符號。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The time separator separates hours, minutes, and seconds when time values are formatted.</source>
          <target state="translated">時間分隔符號，區隔小時、 分鐘和秒數會在格式化時間值時。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as the time separator in formatted output is determined by your system settings.</source>
          <target state="translated">實際使用做為時間分隔符號，在格式化輸出中的字元取決於您的系統設定。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`/`</ph>)</source>
          <target state="translated">(<ph id="ph1">`/`</ph>)</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Date separator.</source>
          <target state="translated">日期分隔符號。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the date separator.</source>
          <target state="translated">在某些地區設定，可能會使用其他字元來代表日期分隔符號。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The date separator separates the day, month, and year when date values are formatted.</source>
          <target state="translated">日期分隔符號分隔格式化日期值時日、 月和年。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as the date separator in formatted output is determined by your system settings.</source>
          <target state="translated">在格式化輸出中的日期分隔符號使用的實際字元取決於您的系統設定。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`E-``E+``e-``e+`</ph>)</source>
          <target state="translated">(<ph id="ph1">`E-``E+``e-``e+`</ph>)</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Scientific format.</source>
          <target state="translated">科學格式。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the format expression contains at least one digit placeholder (<ph id="ph1">`0`</ph> or <ph id="ph2">`#`</ph>) to the left of <ph id="ph3">`E-`</ph>, <ph id="ph4">`E+`</ph>, <ph id="ph5">`e-`</ph>, or <ph id="ph6">`e+`</ph>, the number is displayed in scientific format and <ph id="ph7">`E`</ph> or <ph id="ph8">`e`</ph> is inserted between the number and its exponent.</source>
          <target state="translated">如果格式運算式包含至少一個數字預留位置 (<ph id="ph1">`0`</ph>或<ph id="ph2">`#`</ph>) 左邊<ph id="ph3">`E-`</ph>， <ph id="ph4">`E+`</ph>， <ph id="ph5">`e-`</ph>，或<ph id="ph6">`e+`</ph>，會以科學記號格式顯示的編號和<ph id="ph7">`E`</ph>或<ph id="ph8">`e`</ph>數目及其指數之間插入。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The number of digit placeholders to the left determines the number of digits in the exponent.</source>
          <target state="translated">左邊的數字預留位置數目會決定指數中的位數。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`E-`</ph> or <ph id="ph2">`e-`</ph> to place a minus sign next to negative exponents.</source>
          <target state="translated">使用<ph id="ph1">`E-`</ph>或<ph id="ph2">`e-`</ph>放置負指數旁邊的減號。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`E+`</ph> or <ph id="ph2">`e+`</ph> to place a minus sign next to negative exponents and a plus sign next to positive exponents.</source>
          <target state="translated">使用<ph id="ph1">`E+`</ph>或<ph id="ph2">`e+`</ph>放置負指數旁邊的減號和正指數旁邊的加號。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>You must also include digit placeholders to the right of this symbol to get correct formatting.</source>
          <target state="translated">您也必須包含這個符號右邊，以取得正確的格式的數字預留位置。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`-`</ph> <ph id="ph2">`+`</ph> <ph id="ph3">`$`</ph> ( )</source>
          <target state="translated"><ph id="ph1">`-`</ph> <ph id="ph2">`+`</ph> <ph id="ph3">`$`</ph> ( )</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Literal characters.</source>
          <target state="translated">常值字元。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These characters are displayed exactly as typed in the format string.</source>
          <target state="translated">這些字元會完全按照輸入格式字串中顯示。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a character other than one of those listed, precede it with a backslash (<ph id="ph1">`\`</ph>) or enclose it in double quotation marks (" ").</source>
          <target state="translated">若要顯示以上所列以外的字元，前面加上反斜線 (<ph id="ph1">`\`</ph>) 或將它括在雙引號 ("")。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`\`</ph>)</source>
          <target state="translated">(<ph id="ph1">`\`</ph>)</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the next character in the format string.</source>
          <target state="translated">顯示格式字串中的下一個字元。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a character that has special meaning as a literal character, precede it with a backslash (<ph id="ph1">`\`</ph>).</source>
          <target state="translated">若要顯示的字元具有特殊意義，做為常值字元，前面加上反斜線 (<ph id="ph1">`\`</ph>)。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The backslash itself isn't displayed.</source>
          <target state="translated">反斜線本身不會顯示。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Using a backslash is the same as enclosing the next character in double quotation marks.</source>
          <target state="translated">使用反斜線，是以雙引號括住的下一個字元相同。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a backslash, use two backslashes (<ph id="ph1">`\\`</ph>).</source>
          <target state="translated">若要顯示一個反斜線，請使用兩個反斜線 (<ph id="ph1">`\\`</ph>)。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (<ph id="ph1">`a`</ph>, <ph id="ph2">`c`</ph>, <ph id="ph3">`d`</ph>, <ph id="ph4">`h`</ph>, <ph id="ph5">`m`</ph>, <ph id="ph6">`n`</ph>, <ph id="ph7">`p`</ph>, <ph id="ph8">`q`</ph>, <ph id="ph9">`s`</ph>, <ph id="ph10">`t`</ph>, <ph id="ph11">`w`</ph>, <ph id="ph12">`y`</ph>, <ph id="ph13">`/`</ph>, and <ph id="ph14">`:`</ph>), the numeric-formatting characters (<ph id="ph15">`#`</ph>, <ph id="ph16">`0`</ph>, <ph id="ph17">`%`</ph>, <ph id="ph18">`E`</ph>, <ph id="ph19">`e`</ph>, comma, and period), and the string-formatting characters (<ph id="ph20">`@`</ph>, <ph id="ph21">`&amp;`</ph>, <ph id="ph22">`&lt;`</ph>, <ph id="ph23">`&gt;`</ph>, and <ph id="ph24">`!`</ph>).</source>
          <target state="translated">無法將顯示為常值的字元都是格式化的日期和時間格式字元的字元的範例 (<ph id="ph1">`a`</ph>， <ph id="ph2">`c`</ph>， <ph id="ph3">`d`</ph>， <ph id="ph4">`h`</ph>， <ph id="ph5">`m`</ph>， <ph id="ph6">`n`</ph>， <ph id="ph7">`p`</ph>， <ph id="ph8">`q`</ph>， <ph id="ph9">`s`</ph>， <ph id="ph10">`t`</ph>， <ph id="ph11">`w`</ph>， <ph id="ph12">`y`</ph>， <ph id="ph13">`/`</ph>，和<ph id="ph14">`:`</ph>)，數值格式字元 (<ph id="ph15">`#`</ph>， <ph id="ph16">`0`</ph>， <ph id="ph17">`%`</ph>， <ph id="ph18">`E`</ph>， <ph id="ph19">`e`</ph>、 逗號和句號)，並將字串格式字元 (<ph id="ph20">`@`</ph>， <ph id="ph21">`&amp;`</ph>， <ph id="ph22">`&lt;`</ph>， <ph id="ph23">`&gt;`</ph>，和<ph id="ph24">`!`</ph>)。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`"``ABC``"`</ph>)</source>
          <target state="translated">(<ph id="ph1">`"``ABC``"`</ph>)</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the string inside the double quotation marks (" ").</source>
          <target state="translated">顯示雙引號內的字串 ("")。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To include a string in the style argument from within code, you must use <ph id="ph1">`Chr(34)`</ph> to enclose the text (<ph id="ph2">`34`</ph> is the character code for a quotation mark (")).</source>
          <target state="translated">若要從程式碼中的樣式引數中包含字串，您必須使用<ph id="ph1">`Chr(34)`</ph>括住該文字 (<ph id="ph2">`34`</ph>是引號 （"） 的字元碼)。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Legacy Code Example</source>
          <target state="translated">舊版程式碼範例</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table contains some sample format expressions for numbers.</source>
          <target state="translated">下表包含數字的範例格式運算式。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the <ph id="ph1">`Style`</ph> argument of the <ph id="ph2">`Format`</ph> function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</source>
          <target state="translated">（這些範例全都會假設您的系統地區設定為美式英文）第一個資料行包含格式字串會包含<ph id="ph1">`Style`</ph>引數的<ph id="ph2">`Format`</ph>函式; 如果格式化的資料具有欄標題中指定的值，包含所產生的輸出的其他資料行。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format (<ph id="ph1">`Style`</ph>)</source>
          <target state="translated">格式 (<ph id="ph1">`Style`</ph>)</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>"5" formatted as</source>
          <target state="translated">"5"格式化為</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>"-5" formatted as</source>
          <target state="translated">"5"格式化為</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>"0.5" formatted as</source>
          <target state="translated">"0.5"格式化為</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Predefined Date/Time Formats</source>
          <target state="translated">預先定義的日期/時間格式</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table identifies the predefined date and time format names.</source>
          <target state="translated">下表會識別預先定義的日期和時間格式名稱。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These may be used by name as the style argument for the <ph id="ph1">`Format`</ph> function:</source>
          <target state="translated">這些可能會使用依名稱的樣式引數為<ph id="ph1">`Format`</ph>函式：</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format Name</source>
          <target state="translated">格式名稱</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`General Date`</ph>, or <ph id="ph2">`G`</ph></source>
          <target state="translated"><ph id="ph1">`General Date`</ph>或 <ph id="ph2">`G`</ph></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a date and/or time.</source>
          <target state="translated">顯示日期和/或時間。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`3/12/2008 11:07:31 AM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`3/12/2008 11:07:31 AM`</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Date display is determined by your application's current culture value.</source>
          <target state="translated">日期顯示是由您的應用程式目前的文化特性值決定。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Long Date`</ph>, <ph id="ph2">`Medium Date`</ph>, or <ph id="ph3">`D`</ph></source>
          <target state="translated"><ph id="ph1">`Long Date`</ph>、 <ph id="ph2">`Medium Date`</ph>或 <ph id="ph3">`D`</ph></target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a date according to your current culture's long date format.</source>
          <target state="translated">根據目前文化特性的完整日期格式日期格式顯示。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Wednesday, March 12, 2008`</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Short Date`</ph>, or <ph id="ph2">`d`</ph></source>
          <target state="translated"><ph id="ph1">`Short Date`</ph>或 <ph id="ph2">`d`</ph></target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a date using your current culture's short date format.</source>
          <target state="translated">顯示使用目前文化特性的簡短日期格式的日期。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`3/12/2008`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`3/12/2008`</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`d`</ph> character displays the day in a user-defined date format.</source>
          <target state="translated"><ph id="ph1">`d`</ph>字元會顯示使用者定義的日期格式。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Long Time`</ph>, <ph id="ph2">`Medium Time`</ph>, or <ph id="ph3">`T`</ph></source>
          <target state="translated"><ph id="ph1">`Long Time`</ph>、 <ph id="ph2">`Medium Time`</ph>或 <ph id="ph3">`T`</ph></target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</source>
          <target state="translated">使用目前文化特性的完整時間格式; 顯示時間通常包括時、 分和秒。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`11:07:31 AM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`11:07:31 AM`</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Short Time`</ph> or <ph id="ph2">`t`</ph></source>
          <target state="translated"><ph id="ph1">`Short Time`</ph> 或 <ph id="ph2">`t`</ph></target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a time using your current culture's short time format.</source>
          <target state="translated">顯示使用目前文化特性的簡短時間格式的時間。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`11:07 AM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`11:07 AM`</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`t`</ph> character displays <ph id="ph2">`AM`</ph> or <ph id="ph3">`PM`</ph> values for locales that use a 12-hour clock in a user-defined time format.</source>
          <target state="translated"><ph id="ph1">`t`</ph>字元顯示<ph id="ph2">`AM`</ph>或<ph id="ph3">`PM`</ph>以使用者定義的時間格式使用 12 小時制的地區設定的值。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the long date and short time according to your current culture's format.</source>
          <target state="translated">顯示完整日期和簡短時間，根據目前文化特性的格式。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008 11:07 AM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Wednesday, March 12, 2008 11:07 AM`</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the long date and long time according to your current culture's format.</source>
          <target state="translated">顯示完整日期和長的時間，根據目前文化特性的格式。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008 11:07:31 AM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Wednesday, March 12, 2008 11:07:31 AM`</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the short date and short time according to your current culture's format.</source>
          <target state="translated">顯示簡短日期和簡短時間，根據目前文化特性的格式。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`3/12/2008 11:07 AM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`3/12/2008 11:07 AM`</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`M`</ph>, <ph id="ph2">`m`</ph></source>
          <target state="translated"><ph id="ph1">`M`</ph>, <ph id="ph2">`m`</ph></target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month and the day of a date.</source>
          <target state="translated">顯示的月份和日期的日期。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`March 12`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`March 12`</ph>。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`M`</ph> character displays the month in a user-defined date format.</source>
          <target state="translated"><ph id="ph1">`M`</ph>字元會以使用者定義的日期格式顯示月份。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`m`</ph> character displays the minutes in a user-defined time format.</source>
          <target state="translated"><ph id="ph1">`m`</ph>字元會以使用者定義的時間格式顯示分鐘。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`R`</ph>, <ph id="ph2">`r`</ph></source>
          <target state="translated"><ph id="ph1">`R`</ph>, <ph id="ph2">`r`</ph></target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date according to the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A&gt;</ph> property.</source>
          <target state="translated">根據日期格式<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wed, 12 Mar 2008 11:07:31 GMT`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Wed, 12 Mar 2008 11:07:31 GMT`</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The formatted date does not adjust the value of the date and time.</source>
          <target state="translated">格式化的日期不需要調整日期和時間值。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>You must adjust the Date/Time value to GMT before calling the <ph id="ph1">`Format`</ph> function.</source>
          <target state="translated">您必須調整為 GMT 的日期/時間值，然後再呼叫<ph id="ph1">`Format`</ph>函式。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date and time as a sortable index.</source>
          <target state="translated">格式化的日期和時間做為可排序的索引。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`2008-03-12T11:07:31`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`2008-03-12T11:07:31`</ph>。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`s`</ph> character displays the seconds in a user-defined time format.</source>
          <target state="translated"><ph id="ph1">`s`</ph>字元會以使用者定義的時間格式顯示秒數。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date and time as a GMT sortable index.</source>
          <target state="translated">日期及時間格式化為 GMT 可排序的索引。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`2008-03-12 11:07:31Z`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`2008-03-12 11:07:31Z`</ph>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date and time with the long date and long time as GMT.</source>
          <target state="translated">格式化日期和時間使用完整日期和長的時間為 GMT。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008 6:07:31 PM`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Wednesday, March 12, 2008 6:07:31 PM`</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Y`</ph>, <ph id="ph2">`y`</ph></source>
          <target state="translated"><ph id="ph1">`Y`</ph>, <ph id="ph2">`y`</ph></target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date as the year and month.</source>
          <target state="translated">將日期格式化為年份和月份。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`March, 2008`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`March, 2008`</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`Y`</ph> and <ph id="ph2">`y`</ph> characters display the year in a user-defined date format.</source>
          <target state="translated"><ph id="ph1">`Y`</ph>和<ph id="ph2">`y`</ph>字元以使用者定義的日期格式顯示年份。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For more information about the application's current culture information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">如需應用程式的目前文化特性資訊的詳細資訊，請參閱<bpt id="p1">[</bpt>如何文化特性會影響字串在 Visual Basic 中<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>User-Defined Date/Time Formats</source>
          <target state="translated">使用者定義日期/時間格式</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table shows characters you can use to create user-defined date/time formats.</source>
          <target state="translated">下表顯示的字元，您可以用來建立使用者定義日期/時間格式。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</source>
          <target state="translated">不同於在舊版的 Visual Basic 中，這些格式字元會區分大小寫。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Character</source>
          <target state="translated">字元</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`:`</ph>)</source>
          <target state="translated">(<ph id="ph1">`:`</ph>)</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Time separator.</source>
          <target state="translated">時間分隔符號。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the time separator.</source>
          <target state="translated">在某些地區設定，使用其他字元來代表時間分隔符號。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The time separator separates hours, minutes, and seconds when time values are formatted.</source>
          <target state="translated">時間分隔符號，區隔小時、 分鐘和秒數會在格式化時間值時。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</source>
          <target state="translated">使用做為時間分隔符號，在格式化輸出中的實際字元取決於您的應用程式目前的文化特性值。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`/`</ph>)</source>
          <target state="translated">(<ph id="ph1">`/`</ph>)</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Date separator.</source>
          <target state="translated">日期分隔符號。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the date separator.</source>
          <target state="translated">在某些地區設定，可能會使用其他字元來代表日期分隔符號。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The date separator separates the day, month, and year when date values are formatted.</source>
          <target state="translated">日期分隔符號分隔格式化日期值時日、 月和年。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character that is used as the date separator in formatted output is determined by your application's current culture.</source>
          <target state="translated">在格式化輸出中的日期分隔符號使用的實際字元取決於您的應用程式目前的文化特性。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`%`</ph>)</source>
          <target state="translated">(<ph id="ph1">`%`</ph>)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</source>
          <target state="translated">用來指示下列字元應一併閱讀當做單一字母格式而不考慮任何尾端的字母。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Also used to indicate that a single-letter format is read as a user-defined format.</source>
          <target state="translated">也用來指示將單一字母格式讀取做為使用者定義的格式。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>See what follows for additional details.</source>
          <target state="translated">請參閱以下的其他詳細資料。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as a number without a leading zero (for example, <ph id="ph1">`1`</ph>).</source>
          <target state="translated">將日期顯示為沒有前置零的數字 (例如， <ph id="ph1">`1`</ph>)。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%d`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%d`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as a number with a leading zero (for example, <ph id="ph1">`01`</ph>).</source>
          <target state="translated">將日期顯示為有前置零的數字 (例如， <ph id="ph1">`01`</ph>)。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as an abbreviation (for example, <ph id="ph1">`Sun`</ph>).</source>
          <target state="translated">將日期顯示為縮寫 (例如， <ph id="ph1">`Sun`</ph>)。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as a full name (for example, <ph id="ph1">`Sunday`</ph>).</source>
          <target state="translated">將日期顯示為完整名稱 (例如， <ph id="ph1">`Sunday`</ph>)。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as a number without a leading zero (for example, January is represented as <ph id="ph1">`1`</ph>).</source>
          <target state="translated">將月份顯示為沒有前置零的數字 (例如，以表示一月<ph id="ph1">`1`</ph>)。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%M`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%M`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as a number with a leading zero (for example, <ph id="ph1">`01/12/01`</ph>).</source>
          <target state="translated">將月份顯示為有前置零的數字 (例如， <ph id="ph1">`01/12/01`</ph>)。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as an abbreviation (for example, <ph id="ph1">`Jan`</ph>).</source>
          <target state="translated">將月份顯示為縮寫 (例如， <ph id="ph1">`Jan`</ph>)。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as a full month name (for example, <ph id="ph1">`January`</ph>).</source>
          <target state="translated">將月份顯示為完整月份名稱 (例如， <ph id="ph1">`January`</ph>)。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the period/era string (for example, <ph id="ph1">`A.D.`</ph>).</source>
          <target state="translated">顯示期間/紀元字串 (例如， <ph id="ph1">`A.D.`</ph>)。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number without leading zeros using the 12-hour clock (for example, <ph id="ph1">`1:15:15 PM`</ph>).</source>
          <target state="translated">沒有前置零使用 12 小時制，將小時顯示為一個數字 (例如， <ph id="ph1">`1:15:15 PM`</ph>)。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%h`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%h`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number with leading zeros using the 12-hour clock (for example, <ph id="ph1">`01:15:15 PM`</ph>).</source>
          <target state="translated">將小時顯示為有前置零使用 12 小時制的數字 (例如， <ph id="ph1">`01:15:15 PM`</ph>)。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number without leading zeros using the 24-hour clock (for example, <ph id="ph1">`1:15:15`</ph>).</source>
          <target state="translated">沒有前置零使用 24 小時制，將小時顯示為一個數字 (例如， <ph id="ph1">`1:15:15`</ph>)。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%H`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%H`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number with leading zeros using the 24-hour clock (for example, <ph id="ph1">`01:15:15`</ph>).</source>
          <target state="translated">將小時顯示為有前置零使用 24 小時制的數字 (例如， <ph id="ph1">`01:15:15`</ph>)。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the minute as a number without leading zeros (for example, <ph id="ph1">`12:1:15`</ph>).</source>
          <target state="translated">沒有前置零，將分鐘顯示為一個數字 (例如， <ph id="ph1">`12:1:15`</ph>)。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%m`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%m`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the minute as a number with leading zeros (for example, <ph id="ph1">`12:01:15`</ph>).</source>
          <target state="translated">將分鐘顯示為有前置零的數字 (例如， <ph id="ph1">`12:01:15`</ph>)。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the second as a number without leading zeros (for example, <ph id="ph1">`12:15:5`</ph>).</source>
          <target state="translated">第二個顯示沒有前置零的數字 (例如， <ph id="ph1">`12:15:5`</ph>)。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%s`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%s`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the second as a number with leading zeros (for example, <ph id="ph1">`12:15:05`</ph>).</source>
          <target state="translated">將秒鐘顯示為有前置零的數字 (例如， <ph id="ph1">`12:15:05`</ph>)。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays fractions of seconds.</source>
          <target state="translated">顯示秒的小數。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example <ph id="ph1">`ff`</ph> displays hundredths of seconds, whereas <ph id="ph2">`ffff`</ph> displays ten-thousandths of seconds.</source>
          <target state="translated">例如<ph id="ph1">`ff`</ph>會顯示百分之一秒，但<ph id="ph2">`ffff`</ph>顯示秒為單位的萬分之一。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>You may use up to seven <ph id="ph1">`f`</ph> symbols in your user-defined format.</source>
          <target state="translated">您可以使用最多七個<ph id="ph1">`f`</ph>使用者定義格式中的符號。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%f`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%f`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Uses the 12-hour clock and displays an uppercase <ph id="ph1">`A`</ph> for any hour before noon; displays an uppercase <ph id="ph2">`P`</ph> for any hour between noon and 11:59 P.M.</source>
          <target state="translated">使用 12 小時制，並顯示以大寫<ph id="ph1">`A`</ph>正午之前的任何小時會顯示以大寫<ph id="ph2">`P`</ph>的年下午 11:59 之間的任何小時。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%t`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%t`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For locales that use a 12-hour clock, displays an uppercase <ph id="ph1">`AM`</ph> with any hour before noon; displays an uppercase <ph id="ph2">`PM`</ph> with any hour between noon and 11:59 P.M.</source>
          <target state="translated">針對使用 12 小時制的地區設定，顯示以大寫<ph id="ph1">`AM`</ph>正午之前的任何小時會顯示以大寫<ph id="ph2">`PM`</ph>年下午 11:59 之間的任何時間</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For locales that use a 24-hour clock, displays nothing.</source>
          <target state="translated">針對使用 24 小時制的地區設定，則不顯示。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year number (0-9) without leading zeros.</source>
          <target state="translated">顯示沒有前置零的年數字 (0-9)。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%y`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%y`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year in two-digit numeric format with a leading zero, if applicable.</source>
          <target state="translated">將年份顯示兩位數數值格式，加上前置零，如果適用的話。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year in four-digit numeric format.</source>
          <target state="translated">將年份顯示四位數的數值格式中。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year in four-digit numeric format.</source>
          <target state="translated">將年份顯示四位數的數值格式中。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the timezone offset without a leading zero (for example, <ph id="ph1">`-8`</ph>).</source>
          <target state="translated">顯示沒有前置零的時區時差 (例如， <ph id="ph1">`-8`</ph>)。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%z`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">使用<ph id="ph1">`%z`</ph>如果這是使用者定義數值格式中唯一的字元。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the timezone offset with a leading zero (for example, <ph id="ph1">`-08`</ph>)</source>
          <target state="translated">顯示具有前置零的時區時差 (例如， <ph id="ph1">`-08`</ph>)</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the full timezone offset (for example, <ph id="ph1">`-08:00`</ph>)</source>
          <target state="translated">顯示完整的時區時差 (例如， <ph id="ph1">`-08:00`</ph>)</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Legacy Code Example</source>
          <target state="translated">舊版程式碼範例</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following are examples of user-defined date and time formats for <ph id="ph1">`December 7, 1958, 8:50 PM, 35 seconds`</ph>:</source>
          <target state="translated">以下是範例的使用者定義的日期和時間格式來<ph id="ph1">`December 7, 1958, 8:50 PM, 35 seconds`</ph>:</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format</source>
          <target state="translated">格式</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays</source>
          <target state="translated">顯示</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The minimum time resolution for a device is determined by the manufacturer of the device.</source>
          <target state="translated">裝置的最小時間解析是由裝置製造商所決定。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the time resolution for the device is coarse enough, the <ph id="ph1">`f`</ph> format character returns 0 when run on that device.</source>
          <target state="translated">如果裝置的時間解析是粗略，<ph id="ph1">`f`</ph>格式字元會傳回 0，該裝置上執行時。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This example shows various uses of the <ph id="ph1">`Format`</ph> function to format values using both <ph id="ph2">`String`</ph> formats and user-defined formats.</source>
          <target state="translated">此範例將示範 <ph id="ph1">`Format`</ph> 函式的各種使用方式，以透過 <ph id="ph2">`String`</ph> 格式及使用者定義的格式，將值格式化。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For the date separator (<ph id="ph1">`/`</ph>), time separator (<ph id="ph2">`:`</ph>), and the AM/PM indicators (<ph id="ph3">`t`</ph> and <ph id="ph4">`tt`</ph>), the actual formatted output displayed by your system depends on the locale settings the code is using.</source>
          <target state="translated">對於日期分隔符號 (<ph id="ph1">`/`</ph>)、時間分隔符號 (<ph id="ph2">`:`</ph>) 和 AM/PM 指示器 (<ph id="ph3">`t`</ph> 和 <ph id="ph4">`tt`</ph>) 而言，系統顯示的實際格式化輸出需視程式碼使用的地區設定而定。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</source>
          <target state="translated">當時間和日期顯示在開發環境內時，會使用程式碼地區設定的簡短時間格式和簡短日期格式。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For locales that use a 24-hour clock, the AM/PM indicators (<ph id="ph1">`t`</ph> and <ph id="ph2">`tt`</ph>) display nothing.</source>
          <target state="translated">若為使用 24 小時制的地區設定，AM/PM 指示器 (<ph id="ph1">`t`</ph> 和 <ph id="ph2">`tt`</ph>) 不會顯示任何內容。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Expression to be formatted.</source>
          <target state="translated">要格式化的運算式。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">數值，表示小數點右邊要顯示多少位。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">預設值為 –1，表示要使用電腦的地區設定。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> enumeration that indicates whether or not a leading zero is displayed for fractional values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 列舉，表示是否要顯示小數值前面的零。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Remarks" for values.</source>
          <target state="translated">如需值，請參閱＜備註＞。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> enumeration that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 列舉，表示是否要將負值放在括號內。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Remarks" for values.</source>
          <target state="translated">如需值，請參閱＜備註＞。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 列舉，表示是否使用電腦的地區設定中指定之群組分隔符號將數字分組。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Remarks" for values.</source>
          <target state="translated">如需值，請參閱＜備註＞。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">使用 [系統] 控制台中定義的貨幣符號，傳回格式化成貨幣值的運算式。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">使用 [系統] 控制台中定義的貨幣符號，傳回格式化成貨幣值的運算式。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</source>
          <target state="translated">當省略選擇性的一個或多個引數時，會改用電腦相符的地區設定值。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The position of the currency symbol relative to the currency value is determined by the system's regional settings.</source>
          <target state="translated">相對於貨幣值的貨幣符號的位置取決於系統的地區設定。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>All settings information comes from the locale of the application.</source>
          <target state="translated">所有設定資訊是都來自應用程式的地區設定。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">根據預設，這會是在控制台中設定的地區設定。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the <ph id="ph1">`Number`</ph> tab.</source>
          <target state="translated">不過，它可能會變更以程式設計方式使用.NET Framework 中，但前置零，來自<ph id="ph1">`Number`</ph> 索引標籤。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments take the following TriState enumeration values.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>， <ph id="ph2">`UseParensForNegativeNumbers`</ph>，和<ph id="ph3">`GroupDigits`</ph>引數接受下列 Tri-state 列舉值。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>True</source>
          <target state="translated">True</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The computer's regional settings</source>
          <target state="translated">電腦的地區設定</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The following example illustrates the use of the <ph id="ph1">`FormatCurrency`</ph> function.</source>
          <target state="translated">下面範例說明如何使用 <ph id="ph1">`FormatCurrency`</ph> 函式：</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Number of digits after decimal point is greater than 99.</source>
          <target state="translated">小數點後的數字超過 99 個。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Type is not numeric.</source>
          <target state="translated">型別不是數字。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source><ph id="ph1">&lt;see langword="Date" /&gt;</ph> expression to be formatted.</source>
          <target state="translated">要格式化的 <ph id="ph1">&lt;see langword="Date" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Numeric value that indicates the date/time format used.</source>
          <target state="translated">數值，表示使用的日期/時間格式。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If omitted, <ph id="ph1">&lt;see langword="DateFormat.GeneralDate" /&gt;</ph> is used.</source>
          <target state="translated">如果省略，則會使用 <ph id="ph1">&lt;see langword="DateFormat.GeneralDate" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">傳回表示日期/時間值的字串運算式。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">傳回表示日期/時間值的字串運算式。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>The <ph id="ph1">`Date`</ph> data type always contains both date and time information.</source>
          <target state="translated"><ph id="ph1">`Date`</ph>資料類型一定會包含日期和時間資訊。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</source>
          <target state="translated">Visual Basic 型別轉換的目的，請考慮 1/1/1 (1 年的 1 年) 是中性值的日期和 00:00:00 （午夜） 是中性值的時間。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If you format a <ph id="ph1">`Date`</ph> value as a date/time string, <ph id="ph2">`FormatDateTime`</ph> does not include neutral values in the resulting string.</source>
          <target state="translated">如果您格式化<ph id="ph1">`Date`</ph>值為日期/時間字串，<ph id="ph2">`FormatDateTime`</ph>中產生的字串不包含中性的值。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</source>
          <target state="translated">例如，如果您要轉換 #1/1/0001 9:30:00 # 字串時，結果為"9:30:00";隱藏的日期資訊。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>However, the date information is still present in the original <ph id="ph1">`Date`</ph> value and can be recovered with functions such as <ph id="ph2">`DatePart`</ph>.</source>
          <target state="translated">不過，將日期資訊是仍會出現在原始<ph id="ph1">`Date`</ph>值，並可以復原與函式例如<ph id="ph2">`DatePart`</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If you pass the <ph id="ph1">`Expression`</ph> argument as a <ph id="ph2">`String`</ph> literal, <ph id="ph3">`FormatDateTime`</ph> interprets it according to the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> setting of your application.</source>
          <target state="translated">如果您要傳入<ph id="ph1">`Expression`</ph>引數做<ph id="ph2">`String`</ph>常值，<ph id="ph3">`FormatDateTime`</ph>會解譯根據<ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>應用程式的設定。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>However, if you pass it as a <ph id="ph1">`Date`</ph> literal, use the format #mm/dd/yyyy#, because <ph id="ph2">`FormatDateTime`</ph> always interprets a <ph id="ph3">`Date`</ph> literal according to the English (US) culture.</source>
          <target state="translated">不過，如果您將它傳遞為<ph id="ph1">`Date`</ph>常值中，使用格式 #mm/dd/yyyy # 因為<ph id="ph2">`FormatDateTime`</ph>一律解譯<ph id="ph3">`Date`</ph>根據英文 （美國） 文化特性的常值。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>This is necessary because, if an application is developed and coded using <ph id="ph1">`Date`</ph> literals from one culture, but is then executed on a platform with a different culture, the <ph id="ph2">`Date`</ph> literals could be parsed incorrectly.</source>
          <target state="translated">這是必要的因為如果應用程式開發時，並使用自動程式化<ph id="ph1">`Date`</ph>常值，從某個文化特性，但有不同的文化特性的平台上執行<ph id="ph2">`Date`</ph>常值可能不正確剖析。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>The <ph id="ph1">`NamedFormat`</ph> argument has the following settings.</source>
          <target state="translated"><ph id="ph1">`NamedFormat`</ph>引數必須具有下列設定。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date and/or time.</source>
          <target state="translated">顯示日期和/或時間。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date part as a short date.</source>
          <target state="translated">顯示簡短日期的日期部分。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If there is a time part, display it as a long time.</source>
          <target state="translated">如果沒有時間部分，請將它顯示成很長的時間。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If present, both parts display.</source>
          <target state="translated">如果有的話，便會顯示這兩個部分。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date using the long date format specified in your computer's regional settings.</source>
          <target state="translated">顯示日期，使用您電腦的地區設定中指定的完整日期格式。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date using the short date format specified in your computer's regional settings.</source>
          <target state="translated">顯示使用電腦的地區設定中指定的簡短日期格式的日期。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a time using the time format specified in your computer's regional settings.</source>
          <target state="translated">顯示時間使用電腦的地區設定中指定的時間格式。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a time using the 24-hour format (hh:mm).</source>
          <target state="translated">顯示時間使用 24 小時制格式 (hh: mm)。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>This example demonstrates the use of the <ph id="ph1">`FormatDateTime`</ph> function.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`FormatDateTime`</ph>函式。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source><ph id="ph1">&lt;paramref name="NamedFormat" /&gt;</ph> setting is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="NamedFormat" /&gt;</ph> 設定無效。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Expression to be formatted.</source>
          <target state="translated">要格式化的運算式。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">數值，表示小數點右邊要顯示多少位。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">預設值為 –1，表示要使用電腦的地區設定。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether a leading 0 is displayed for fractional values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 常數，表示是否要顯示小數值的前置 0 字元。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether to place negative values within parentheses.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 常數，表示是否要將負值放在括號內。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 常數，指出是否使用地區設定中指定的群組分隔符號將數字分組。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">傳回格式化成數字的運算式。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">傳回格式化成數字的運算式。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">會省略選擇性的一個或多個引數時，省略引數的值可以由地區設定。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>All settings information comes from the locale of the application.</source>
          <target state="translated">所有設定資訊是都來自應用程式的地區設定。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">根據預設，這會是在控制台中設定的地區設定。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">但是，它可能會變更以程式設計方式使用.NET Framework。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>， <ph id="ph2">`UseParensForNegativeNumbers`</ph>，和<ph id="ph3">`GroupDigits`</ph>引數有下列設定。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>True</source>
          <target state="translated">True</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The computer's regional settings</source>
          <target state="translated">電腦的地區設定</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>This example demonstrates the <ph id="ph1">`FormatNumber`</ph> function.</source>
          <target state="translated">這個範例會示範<ph id="ph1">`FormatNumber`</ph>函式。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Type is not numeric.</source>
          <target state="translated">型別不是數字。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Expression to be formatted.</source>
          <target state="translated">要格式化的運算式。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Numeric value indicating how many places to the right of the decimal are displayed.</source>
          <target state="translated">會顯示數字值，指出小數點右邊顯示多少位數。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Default value is –1, which indicates that the locale settings are used.</source>
          <target state="translated">預設值為 – 1，表示使用的地區設定。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not a leading zero displays for fractional values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 常數，指出分數值是否顯示前置的零。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 常數，指出是否應將負值放在括號內。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> 常數，指出是否使用地區設定中指定的群組分隔符號將數字分組。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">傳回格式化為百分比 (也就是乘以 100) 且尾端包含 % 字元的運算式。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">傳回格式化為百分比 (也就是乘以 100) 且尾端包含 % 字元的運算式。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">當省略選擇性的一個或多個引數時，由地區設定提供省略的引數的值。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>All settings information comes from the locale of the application.</source>
          <target state="translated">所有設定資訊是都來自應用程式的地區設定。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">根據預設，這會是在控制台中設定的地區設定。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">但是，它可能會變更以程式設計方式使用.NET Framework。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>， <ph id="ph2">`UseParensForNegativeNumbers`</ph>，和<ph id="ph3">`GroupDigits`</ph>引數有下列設定。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>True</source>
          <target state="translated">True</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The computer's regional settings</source>
          <target state="translated">電腦的地區設定</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>This example illustrates the use of the <ph id="ph1">`FormatPercent`</ph> function.</source>
          <target state="translated">此範例說明如何使用<ph id="ph1">`FormatPercent`</ph>函式。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Type is not numeric.</source>
          <target state="translated">型別不是數字。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>The (1-based) index of the character in <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept> to be returned.</source>
          <target state="translated">所要傳回之 <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept> 中的字元 (以 1 起始) 索引。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see langword="Char" /&gt;</ph> value representing the character from the specified index in the supplied string.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see langword="Char" /&gt;</ph> 值，表示提供的字串內指定之索引的字元。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Char" /&gt;</ph> value representing the character from the specified index in the supplied string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Char" /&gt;</ph> 值，表示提供的字串內指定之索引的字元。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>If <ph id="ph1">`Index`</ph> is less than 1 or greater than the index of the last character in <ph id="ph2">`str`</ph>, an <ph id="ph3">`ArgumentException`</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>小於 1 或大於最後一個字元的索引<ph id="ph2">`str`</ph>、<ph id="ph3">`ArgumentException`</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>This example shows how to use the <ph id="ph1">`GetChar`</ph> function to return a character from a specified index in a <ph id="ph2">`String`</ph>.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`GetChar`</ph>函式，傳回從指定的索引中的字元<ph id="ph2">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>, <ph id="ph3">&lt;paramref name="Index" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 1, or <ph id="ph5">&lt;paramref name="Index" /&gt;</ph> is greater than index of last character of <ph id="ph6">&lt;paramref name="str" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>、<ph id="ph3">&lt;paramref name="Index" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 1，或 <ph id="ph5">&lt;paramref name="Index" /&gt;</ph> 大於 <ph id="ph6">&lt;paramref name="str" /&gt;</ph> 之最後一個字元的索引。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>The integer is a one-based index if a match is found.</source>
          <target state="translated">如果找到符合項目，則整數是以一起始的索引。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>If no match is found, the function returns zero.</source>
          <target state="translated">如果找到相符項目，則函式傳回零。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression being searched.</source>
          <target state="translated">正在搜尋的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression sought.</source>
          <target state="translated">找到的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">指定字串比較的類型。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> is omitted, the <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> setting determines the type of comparison.</source>
          <target state="translated">如果省略了 <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept>，則 <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> 設定會決定比較的類型。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>InStr returns</source>
          <target state="translated">InStr 會傳回</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String1" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String1" /&gt;</ph> 的長度為零或 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> 的長度為零或 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The starting position for the search, which defaults to the first character position.</source>
          <target state="translated">搜尋的起始位置，預設為第一個字元位置。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> 找不到。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is found within <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> 中找到 <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Position where match begins</source>
          <target state="translated">符合開始的位置</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">一般而言，<ph id="ph1">`InStr`</ph>時剖析字串，會使用函式。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated"><ph id="ph1">`InStrB`</ph>在舊版的 Visual Basic 中的函式傳回的位元組，而不是字元位置數目。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 2005 字串都位於 Unicode，和<ph id="ph1">`InStrB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> 引數設定為︰</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">執行二進位比較</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a text comparison</source>
          <target state="translated">執行文字比較</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This example uses the <ph id="ph1">`InStr`</ph> function to return the position of the first occurrence of one string within another.</source>
          <target state="translated">此範例使用 <ph id="ph1">`InStr`</ph> 函式傳回某個字串在另一個字串中第一次出現的位置。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric expression that sets the starting position for each search.</source>
          <target state="translated">數值運算式，可設定每一個搜尋的開始位置。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, search begins at the first character position.</source>
          <target state="translated">如果省略，則搜尋會從第一個字元位置開始。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The start index is 1-based.</source>
          <target state="translated">起始索引是以 1 起始的。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression being searched.</source>
          <target state="translated">正在搜尋的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression sought.</source>
          <target state="translated">找到的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">指定字串比較的類型。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> is omitted, the <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> setting determines the type of comparison.</source>
          <target state="translated">如果省略了 <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept>，則 <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> 設定會決定比較的類型。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>InStr returns</source>
          <target state="translated">InStr 會傳回</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String1" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String1" /&gt;</ph> 的長度為零或 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> 的長度為零或 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> 找不到。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is found within <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> 中找到 <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Position where match begins</source>
          <target state="translated">符合開始的位置</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> length of <ph id="ph3">&lt;paramref name="String1" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 長度 <ph id="ph3">&lt;paramref name="String1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">一般而言，<ph id="ph1">`InStr`</ph>時剖析字串，會使用函式。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated"><ph id="ph1">`InStrB`</ph>在舊版的 Visual Basic 中的函式傳回的位元組，而不是字元位置數目。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 2005 字串都位於 Unicode，和<ph id="ph1">`InStrB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> 引數設定為︰</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">執行二進位比較</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a text comparison</source>
          <target state="translated">執行文字比較</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This example uses the <ph id="ph1">`InStr`</ph> function to return the position of the first occurrence of one string within another.</source>
          <target state="translated">此範例使用 <ph id="ph1">`InStr`</ph> 函式傳回某個字串在另一個字串中第一次出現的位置。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>String expression being searched.</source>
          <target state="translated">正在搜尋的字串運算式。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>String expression being searched for.</source>
          <target state="translated">正在搜尋的字串運算式。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</source>
          <target state="translated">為每一個搜尋設定以 1 起始的位置之數值運算式，從字串的左邊開始。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is omitted then –1 is used, meaning the search begins at the last character position.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept>，則會使用 –1，表示搜尋會從最後一個字元位置開始。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Search then proceeds from right to left.</source>
          <target state="translated">從右到左進行的搜尋。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">數值，表示在評估子字串時要使用的比較類型。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, a binary comparison is performed.</source>
          <target state="translated">如果省略，則會執行二進位比較。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>See Settings for values.</source>
          <target state="translated">請參閱數值的設定。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns the position of the first occurrence of one string within another, starting from the right side of the string.</source>
          <target state="translated">傳回某個字串在另一個字串中第一次出現的位置，從字串的右邊開始。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>InStrRev returns</source>
          <target state="translated">InStrRev 會傳回</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringCheck" /&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="StringCheck" /&gt;</ph> 的長度為零</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> 的長度為零</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> 找不到。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> is found within <ph id="ph2">&lt;paramref name="StringCheck" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> 中找到 <ph id="ph2">&lt;paramref name="StringCheck" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Position at which the first match is found, starting with the right side of the string.</source>
          <target state="translated">找到第一個符合項目的位置，從字串的右邊開始。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> is greater than length of <ph id="ph2">&lt;paramref name="StringMatch" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="StringMatch" /&gt;</ph> 的長度</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Note that the syntax for the <ph id="ph1">`InStrRev`</ph> function is not the same as the syntax for the <ph id="ph2">`InStr`</ph> function.</source>
          <target state="translated">請注意，如語法<ph id="ph1">`InStrRev`</ph>函式不是相同的語法<ph id="ph2">`InStr`</ph>函式。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>引數可以是下列值。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison.</source>
          <target state="translated">執行二進位比較。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison.</source>
          <target state="translated">執行文字比較。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the use of the <ph id="ph1">`InStrRev`</ph> function.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`InStrRev`</ph>函式。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> = 0 or <ph id="ph2">&lt;paramref name="Start" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> = 0 或 <ph id="ph2">&lt;paramref name="Start" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">傳回結合包含在陣列中幾個子字串所建立的字串。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">一維陣列，包含要結合的子字串。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">用來分隔傳回字串內的子字串之任何字串。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">如果省略，則會使用空白字元 (" ")。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> is a zero-length string ("") or <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> 是長度為零的字串 ("") 或 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>，則清單中的所有項目都會在沒有分隔符號的情況下串連。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">傳回結合包含在陣列中幾個子字串所建立的字串。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">傳回結合包含在陣列中幾個子字串所建立的字串。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">是對等之間<ph id="ph1">`Join`</ph>和<ph id="ph2">`Split`</ph>函式。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated"><ph id="ph1">`Join`</ph>函式接受字串陣列，並結合使用分隔符號字串，以傳回單一字串。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated"><ph id="ph1">`Split`</ph>函式接受字串，並分隔在分隔符號，以傳回字串陣列。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">不過，主要差異在於<ph id="ph1">`Join`</ph>可以串連字串使用任何分隔符號字串，<ph id="ph2">`Split`</ph>只可以分開使用單一字元分隔符號的字串。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">`Join`</ph> function to create a list from several strings.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">`Join`</ph>函式來建立數個字串的清單。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> 不是一維。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">一維陣列，包含要結合的子字串。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">用來分隔傳回字串內的子字串之任何字串。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">如果省略，則會使用空白字元 (" ")。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> is a zero-length string ("") or <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> 是長度為零的字串 ("") 或 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>，則清單中的所有項目都會在沒有分隔符號的情況下串連。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">傳回結合包含在陣列中幾個子字串所建立的字串。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">傳回結合包含在陣列中幾個子字串所建立的字串。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">是對等之間<ph id="ph1">`Join`</ph>和<ph id="ph2">`Split`</ph>函式。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated"><ph id="ph1">`Join`</ph>函式接受字串陣列，並結合使用分隔符號字串，以傳回單一字串。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated"><ph id="ph1">`Split`</ph>函式接受字串，並分隔在分隔符號，以傳回字串陣列。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">不過，主要差異在於<ph id="ph1">`Join`</ph>可以串連字串使用任何分隔符號字串，<ph id="ph2">`Split`</ph>只可以分開使用單一字元分隔符號的字串。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">`Join`</ph> function to create a list from several strings.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">`Join`</ph>函式來建立數個字串的清單。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> 不是一維。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">傳回已轉換成小寫的字串或字元。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">傳回已轉換成小寫的字串或字元。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">傳回已轉換成小寫的字串或字元。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">只有大寫的字母會轉換成小寫。所有小寫字母和 nonletter 字元都保持不變。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">管理字串，以便適當地區設定中使用應用程式的大小寫的變更時，此函數會使用應用程式的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則此作業，應該使用<ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，然後傳遞<ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph>或<ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph>如<ph id="ph4">`comparisonType`</ph>引數。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何文化特性會影響字串在 Visual Basic 中<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>This example uses the <ph id="ph1">`LCase`</ph> function to return a lowercase version of a string.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`LCase`</ph>函數來傳回字串的小寫版本。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">傳回已轉換成小寫的字串或字元。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">傳回已轉換成小寫的字串或字元。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">只有大寫的字母會轉換成小寫。所有小寫字母和 nonletter 字元都保持不變。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">管理字串，以便適當地區設定中使用應用程式的大小寫的變更時，此函數會使用應用程式的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則此作業，應該使用<ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，然後傳遞<ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph>或<ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph>如<ph id="ph4">`comparisonType`</ph>引數。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何文化特性會影響字串在 Visual Basic 中<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>This example uses the <ph id="ph1">`LCase`</ph> function to return a lowercase version of a string.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`LCase`</ph>函數來傳回字串的小寫版本。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which the leftmost characters are returned.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，最左邊的字元會從此運算式中傳回。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">數值運算式，表示要傳回的字元數。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">如果為 0，則會傳回長度為零的字串 ("")。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>If greater than or equal to the number of characters in <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>, the entire string is returned.</source>
          <target state="translated">如果大於或等於 <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept> 中的字元數，則會傳回整個字串。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">傳回字串，其中包含從字串的左邊開始的指定數目的字元。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">傳回字串，其中包含從字串的左邊開始的指定數目的字元。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要判斷中的字元數<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函式。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>If used in a Windows Forms application, or any other class that has a <ph id="ph1">`Left`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Left`</ph>.</source>
          <target state="translated">如果在 Windows Forms 應用程式或有任何其他類別中使用<ph id="ph1">`Left`</ph>屬性，您必須完整限定的函式與<ph id="ph2">`Microsoft.VisualBasic.Left`</ph>。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>The <ph id="ph1">`LeftB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated"><ph id="ph1">`LeftB`</ph>函式在舊版的 Visual Basic 中的位元組，而不是字元傳回的字串。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LeftB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LeftB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`Left`</ph> function to return a substring of a given <ph id="ph2">`String`</ph>.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`Left`</ph>函數傳回的子字串指定<ph id="ph2">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>In a class that has a <ph id="ph1">`Left`</ph> property, it may be necessary to fully qualify the <ph id="ph2">`Left`</ph> function.</source>
          <target state="translated">類別具有中<ph id="ph1">`Left`</ph>屬性，可能需要完整限定<ph id="ph2">`Left`</ph>函式。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式或變數名稱。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，<ph id="ph2">&lt;see langword="Len" /&gt;</ph> 函式就會傳回會由 <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> 函式寫入檔案的大小。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">傳回包含字串中字元數或儲存變數所需位元組數的整數。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">與使用者定義型別和<ph id="ph1">`Object`</ph>變數<ph id="ph2">`Len`</ph>函式傳回的大小，因為它會寫入至檔案<ph id="ph3">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回字串的長度。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他類型，它會傳回物件的大小，因為它會寫入至檔案<ph id="ph2">`FilePut`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>屬性可以套用至物件，表示字串，以位元組為單位的大小，寫入時的 string 欄位至磁碟。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式使用<ph id="ph2">`VBFixedString`</ph>屬性，如果有的話，當決定的大小<ph id="ph3">`Object`</ph>變數。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式可能無法判斷實際儲存可變長度的字串中的使用者定義資料型別搭配使用時所需的位元組數目。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph>函式在舊版的 Visual Basic 中為字串，而不是字元傳回的位元組數目。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`LenB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">智慧型裝置開發人員注意事項</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函式只接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>做為參數的變數。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它會傳回長度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果參數是 NULL<ph id="ph1">`Object`</ph>參考，此函數會傳回零。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他型別，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">這個範例使用 <ph id="ph1">`Len`</ph> 傳回字串中的字元數。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Name of string variable.</source>
          <target state="translated">字串變數的名稱。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Length of returned string.</source>
          <target state="translated">傳回的字串長度。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">傳回靠左對齊的字串，其中包含調整為指定之長度的指定字串。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">傳回靠左對齊的字串，其中包含調整為指定之長度的指定字串。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>If the specified string is longer than the specified length, the returned string is shortened to the specified length.</source>
          <target state="translated">如果指定的字串長度超過指定的長度，傳回的字串會縮短成指定的長度。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</source>
          <target state="translated">如果指定的字串長度小於指定的長度，以產生適當的長度傳回之字串的右邊加入空格。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`LSet`</ph> function.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`LSet`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">傳回包含指定字串複本的字串，但其中不包含前置空格 (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>)、不包含後置空格 (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>)，或是不包含前置或後置空格 (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">傳回包含指定字串複本的字串，但其中不包含前置空格 (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>)、不包含後置空格 (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>)，或是不包含前置或後置空格 (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>， <ph id="ph2">`RTrim`</ph>，和<ph id="ph3">`Trim`</ph>函數從字串的結尾移除空格。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>This example uses the <ph id="ph1">`LTrim`</ph> function to strip leading spaces and the <ph id="ph2">`RTrim`</ph> function to strip trailing spaces from a string variable.</source>
          <target state="translated">此範例使用 <ph id="ph1">`LTrim`</ph> 函式刪除字串變數中的前置空格，並使用 <ph id="ph2">`RTrim`</ph> 函式刪除字串變數中的尾端空格。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>It uses the <ph id="ph1">`Trim`</ph> function to strip both types of spaces.</source>
          <target state="translated">它會使用 <ph id="ph1">`Trim`</ph> 函式刪除這兩種類型的空格。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string that contains characters from a specified string.</source>
          <target state="translated">傳回包含指定之字串中的字元的字串。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which characters are returned.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，字元會從此運算式中傳回。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Starting position of the characters to return.</source>
          <target state="translated">要傳回字元的開始位置。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is greater than the number of characters in <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept>, the <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> function returns a zero-length string ("").</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 大於 <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept> 中的字元數，則 <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> 函式會傳回長度為零的字串 ("")。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is one-based.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 是從 1 開始算起。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Returns a string that contains all the characters starting from a specified position in a string.</source>
          <target state="translated">傳回字串，這個字串包含某個字串中從指定之位置開始的所有字元。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>A string that consists of all the characters starting from the specified position in the string.</source>
          <target state="translated">字串，包含字串中從指定之位置開始的所有字元。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要判斷中的字元數<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic 擁有<ph id="ph1">`Mid`</ph>函式和<ph id="ph2">`Mid`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">兩者的指定數目的字元在字串中, 操作這些項目但<ph id="ph1">`Mid`</ph>函式會傳回的字元時<ph id="ph2">`Mid`</ph>陳述式會取代字元。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Mid 陳述式<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>The <ph id="ph1">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated"><ph id="ph1">`MidB`</ph>函式在舊版的 Visual Basic 中的位元組，而不是字元傳回的字串。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`MidB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>The last line in this example uses this overload of the <ph id="ph1">`Mid`</ph> function to return the fifth and subsequent characters from a string.</source>
          <target state="translated">在此範例中的最後一行會使用這個多載的<ph id="ph1">`Mid`</ph>函數從字串傳回的第五個和後續字元。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 或 <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which characters are returned.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，字元會從此運算式中傳回。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Starting position of the characters to return.</source>
          <target state="translated">要傳回字元的開始位置。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is greater than the number of characters in <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept>, the <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> function returns a zero-length string ("").</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 大於 <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept> 中的字元數，則 <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> 函式會傳回長度為零的字串 ("")。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is one based.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 是從 1 開始算起。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Number of characters to return.</source>
          <target state="translated">要傳回的字元數。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>If omitted or if there are fewer than <bpt id="p1">&lt;c&gt;</bpt>Length<ept id="p1">&lt;/c&gt;</ept> characters in the text (including the character at position <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept>), all characters from the start position to the end of the string are returned.</source>
          <target state="translated">如果省略，或者此字元數少於文字中的 <bpt id="p1">&lt;c&gt;</bpt>Length<ept id="p1">&lt;/c&gt;</ept> 字元 (包括 <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept> 位置上的字元)，則會傳回從起始位置到字串結尾的所有字元。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Returns a string that contains a specified number of characters starting from a specified position in a string.</source>
          <target state="translated">傳回字串，這個字串包含某個字串中從指定之位置開始的指定數目字元。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>A string that consists of the specified number of characters starting from the specified position in the string.</source>
          <target state="translated">字串，包含字串中從指定之位置開始的指定數目字元。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要判斷中的字元數<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic 擁有<ph id="ph1">`Mid`</ph>函式和<ph id="ph2">`Mid`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">兩者的指定數目的字元在字串中, 操作這些項目但<ph id="ph1">`Mid`</ph>函式會傳回的字元時<ph id="ph2">`Mid`</ph>陳述式會取代字元。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Mid 陳述式<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated"><ph id="ph1">`MidB`</ph>函式在舊版的 Visual Basic 中的位元組，而不是字元傳回的字串。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">所有的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`MidB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>The first two <ph id="ph1">`Mid`</ph> functions in this example return the specified number of characters from a string, starting from the given positions.</source>
          <target state="translated">前兩個<ph id="ph1">`Mid`</ph>在此範例中的函式會傳回指定的字元數，從字串，從給定位置開始。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>(The last function illustrates the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29&gt;</ph> overload and only specifies the starting point for the string extraction.)</source>
          <target state="translated">(最後一個函式將說明<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29&gt;</ph>多載，並且只會指定字串擷取的起始點。)</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 或 <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>String expression containing substring to replace.</source>
          <target state="translated">字串運算式，包含要取代的子字串。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Substring being searched for.</source>
          <target state="translated">正在搜尋的子字串。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Replacement substring.</source>
          <target state="translated">取代子字串。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Position within <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> that starts a substring used for replacement.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 內用於取代之子字串的開始位置。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The return value of <ph id="ph1">&lt;see langword="Replace" /&gt;</ph> is a string that begins at <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept>, with appropriate substitutions.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Replace" /&gt;</ph> 的傳回值是以 <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 開頭且具有適當替代的字串。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, 1 is assumed.</source>
          <target state="translated">如果省略，則假設為 1。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Number of substring substitutions to perform.</source>
          <target state="translated">要執行的子字串替代次數。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, the default value is –1, which means "make all possible substitutions."</source>
          <target state="translated">如果省略，則預設值為 –1，這表示「執行所有可能的替代」。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">數值，表示在評估子字串時要使用的比較類型。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>See Settings for values.</source>
          <target state="translated">請參閱數值的設定。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a string in which a specified substring has been replaced with another substring a specified number of times.</source>
          <target state="translated">傳回字串，其中的指定之子字串已經被另一個子字串取代了指定的次數。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="Replace" /&gt;</ph> returns the following values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Replace" /&gt;</ph> 會傳回下列值。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> If</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 如果</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Replace returns</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Replace 會傳回</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><bpt id="p1">&lt;item&gt;</bpt><bpt id="p2">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="Find" /&gt;</ph> is zero-length or <ph id="ph4">&lt;see langword="Nothing" /&gt;</ph><ept id="p2">&lt;/term&gt;</ept><bpt id="p3">&lt;description&gt;</bpt> Copy of <ph id="ph5">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/description&gt;</ept><ept id="p1">&lt;/item&gt;</ept><ph id="ph6">&lt;item&gt;</ph><ph id="ph7">&lt;term&gt;</ph><ph id="ph8">&lt;paramref name="Replace" /&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><bpt id="p1">&lt;item&gt;</bpt><bpt id="p2">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="Find" /&gt;</ph> 長度為零或 <ph id="ph4">&lt;see langword="Nothing" /&gt;</ph><ept id="p2">&lt;/term&gt;</ept><bpt id="p3">&lt;description&gt;</bpt> <ph id="ph5">&lt;paramref name="Expression" /&gt;</ph> 的複本<ept id="p3">&lt;/description&gt;</ept><ept id="p1">&lt;/item&gt;</ept><ph id="ph6">&lt;item&gt;</ph><ph id="ph7">&lt;term&gt;</ph><ph id="ph8">&lt;paramref name="Replace" /&gt;</ph> 長度為零</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> Copy of <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph> with no occurrences of <ph id="ph3">&lt;paramref name="Find" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph4">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt><ph id="ph5">&lt;paramref name="Expression" /&gt;</ph> is zero-length or <ph id="ph6">&lt;see langword="Nothing" /&gt;</ph>, or <ph id="ph7">&lt;paramref name="Start" /&gt;</ph> is greater than length of <ph id="ph8">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph9">&lt;see langword="Nothing" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><ph id="ph10">&lt;item&gt;</ph><ph id="ph11">&lt;term&gt;</ph><ph id="ph12">&lt;paramref name="Count" /&gt;</ph> is 0</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph> 的複本且未出現 <ph id="ph3">&lt;paramref name="Find" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph4">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt><ph id="ph5">&lt;paramref name="Expression" /&gt;</ph> 長度為零或 <ph id="ph6">&lt;see langword="Nothing" /&gt;</ph>，或 <ph id="ph7">&lt;paramref name="Start" /&gt;</ph> 的長度大於 <ph id="ph8">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph9">&lt;see langword="Nothing" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><ph id="ph10">&lt;item&gt;</ph><ph id="ph11">&lt;term&gt;</ph><ph id="ph12">&lt;paramref name="Count" /&gt;</ph> 為 0</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> Copy of <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;/list&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph> 的複本<ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;/list&gt;</ph></target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The return value of the <ph id="ph1">`Replace`</ph> function is a string that begins at the position specified by <ph id="ph2">`Start`</ph> and concludes at the end of the <ph id="ph3">`Expression`</ph> string, with the substitutions made as specified by the <ph id="ph4">`Find`</ph> and <ph id="ph5">`Replace`</ph> values.</source>
          <target state="translated">傳回值<ph id="ph1">`Replace`</ph>函式是一個字串，所指定的位置開始<ph id="ph2">`Start`</ph>，並於結尾的結尾<ph id="ph3">`Expression`</ph>所做的替代字串所指定<ph id="ph4">`Find`</ph>和<ph id="ph5">`Replace`</ph>值。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>引數可以是下列值。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">執行二進位比較</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">執行文字比較</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the <ph id="ph1">`Replace`</ph> function.</source>
          <target state="translated">這個範例會示範<ph id="ph1">`Replace`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Count" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> -1 or <ph id="ph3">&lt;paramref name="Start" /&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Count" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> -1 或 <ph id="ph3">&lt;paramref name="Start" /&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which the rightmost characters are returned.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，最右邊的字元會從此運算式中傳回。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">數值運算式，表示要傳回的字元數。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">如果為 0，則會傳回長度為零的字串 ("")。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>If greater than or equal to the number of characters in <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>, the entire string is returned.</source>
          <target state="translated">如果大於或等於 <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept> 中的字元數，則會傳回整個字串。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">傳回字串，其中包含從字串的右邊開始的指定數目的字元。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">傳回字串，其中包含從字串的右邊開始的指定數目的字元。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要判斷中的字元數<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>If used in a Windows Form, or any other class that has a <ph id="ph1">`Right`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>.</source>
          <target state="translated">如果在 Windows Form 或有任何其他類別中使用<ph id="ph1">`Right`</ph>屬性，您必須完整限定的函式與<ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>The <ph id="ph1">`RightB`</ph> function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</source>
          <target state="translated"><ph id="ph1">`RightB`</ph>函式在舊版的 Visual Basic 中的位元組，而不是字元傳回的字串。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它是主要用來轉換雙位元組字元集 (DBCS) 應用程式中的字串。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`RightB`</ph> is no longer supported.</source>
          <target state="translated">所有目前的 Visual Basic 字串都位於 Unicode，和<ph id="ph1">`RightB`</ph>不再支援。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`Right`</ph> function to return a substring of a given <ph id="ph2">`String`</ph>.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`Right`</ph>函數傳回的子字串指定<ph id="ph2">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>In a class that has a <ph id="ph1">`Right`</ph> property, it may be necessary to fully qualify the <ph id="ph2">`Right`</ph> function.</source>
          <target state="translated">類別具有中<ph id="ph1">`Right`</ph>屬性，可能需要完整限定<ph id="ph2">`Right`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Name of string variable.</source>
          <target state="translated">字串變數的名稱。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Length of returned string.</source>
          <target state="translated">傳回的字串長度。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">傳回靠右對齊的字串，其中包含調整為指定之長度的指定字串。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">傳回靠右對齊的字串，其中包含調整為指定之長度的指定字串。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>If <ph id="ph1">`Source`</ph> is longer than <ph id="ph2">`Length`</ph>, <ph id="ph3">`RSet`</ph> places only the leftmost characters, up to the length of <ph id="ph4">`Source`</ph>, in the returned string.</source>
          <target state="translated">如果<ph id="ph1">`Source`</ph>超過<ph id="ph2">`Length`</ph>，<ph id="ph3">`RSet`</ph>將只有最左邊字元，最多的長度<ph id="ph4">`Source`</ph>，傳回的字串中。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</source>
          <target state="translated">如果指定的字串長度小於指定的長度，以產生適當的長度字串的左邊加入空格。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>If the specified string is longer than the specified length, it is shortened to the specified length.</source>
          <target state="translated">如果指定的字串長度超過指定的長度，它會縮短成指定的長度。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`RSet`</ph> function.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">`RSet`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">傳回包含指定字串複本的字串，但其中不包含前置空格 (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>)、不包含後置空格 (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>)，或是不包含前置或後置空格 (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">傳回包含指定字串複本的字串，但其中不包含前置空格 (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>)、不包含後置空格 (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>)，或是不包含前置或後置空格 (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>， <ph id="ph2">`RTrim`</ph>，和<ph id="ph3">`Trim`</ph>函數從字串的結尾移除空格。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>This example uses the <ph id="ph1">`LTrim`</ph> function to strip leading spaces and the <ph id="ph2">`RTrim`</ph> function to strip trailing spaces from a string variable.</source>
          <target state="translated">此範例使用 <ph id="ph1">`LTrim`</ph> 函式刪除字串變數中的前置空格，並使用 <ph id="ph2">`RTrim`</ph> 函式刪除字串變數中的尾端空格。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>It uses the <ph id="ph1">`Trim`</ph> function to strip both types of spaces.</source>
          <target state="translated">它會使用 <ph id="ph1">`Trim`</ph> 函式刪除這兩種類型的空格。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>The number of spaces you want in the string.</source>
          <target state="translated">您希望在字串中有多少空格數。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">傳回字串，此字串是由指定之空格數所組成。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">傳回字串，此字串是由指定之空格數所組成。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>The <ph id="ph1">`Space`</ph> function is useful for formatting output and clearing data in fixed-length strings.</source>
          <target state="translated"><ph id="ph1">`Space`</ph>函式可用於格式化輸出及清除固定長度字串中的資料。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>This example uses the <ph id="ph1">`Space`</ph> function to return a string consisting of a specified number of spaces.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`Space`</ph>函數來傳回字串，其中包含指定的空格數目。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing substrings and delimiters.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含子字串和分隔符號。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Any single character used to identify substring limits.</source>
          <target state="translated">用來識別子字串限制的單一字元。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> is omitted, the space character (" ") is assumed to be the delimiter.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept>，則會假設空白字元 (" ") 為分隔符號。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Maximum number of substrings into which the input string should be split.</source>
          <target state="translated">輸入字串應該分割之子字串數目的最大值。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The default, –1, indicates that the input string should be split at every occurrence of the <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> string.</source>
          <target state="translated">預設為 –1，表示應該在每次出現 <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> 字串時即分割輸入字串。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the comparison to use when evaluating substrings.</source>
          <target state="translated">數值，表示在評估子字串時要使用的比較。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>See "Settings" for values.</source>
          <target state="translated">如需有關值的資訊，請參閱＜設定＞。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based, one-dimensional array containing a specified number of substrings.</source>
          <target state="translated">傳回以零起始的一維陣列，其中包含指定之子字串數目。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 陣列。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> is a zero-length string (""), <ph id="ph2">&lt;see langword="Split" /&gt;</ph> returns a single-element array containing a zero-length string.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> 是長度為零的字串 ("")，<ph id="ph2">&lt;see langword="Split" /&gt;</ph> 會傳回包含長度為零的字串之單一元素陣列。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <ph id="ph1">&lt;paramref name="Delimiter" /&gt;</ph> is a zero-length string, or if it does not appear anywhere in <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph>, <ph id="ph3">&lt;see langword="Split" /&gt;</ph> returns a single-element array containing the entire <ph id="ph4">&lt;paramref name="Expression" /&gt;</ph> string.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="Delimiter" /&gt;</ph> 是長度為零的字串，或是未出現在 <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph> 內的任何位置，則 <ph id="ph3">&lt;see langword="Split" /&gt;</ph> 會傳回單一元素陣列，其中包含整個 <ph id="ph4">&lt;paramref name="Expression" /&gt;</ph> 字串。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>By default, or when <ph id="ph1">`Limit`</ph> equals -1, the <ph id="ph2">`Split`</ph> function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</source>
          <target state="translated">根據預設，或當<ph id="ph1">`Limit`</ph>等於-1，<ph id="ph2">`Split`</ph>函式上分割輸入的字串，在每次出現的分隔符號字串，並傳回陣列中的子字串。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>When the <ph id="ph1">`Limit`</ph> parameter is greater than zero, the <ph id="ph2">`Split`</ph> function splits the string at the first <ph id="ph3">`Limit`</ph>-1 occurrences of the delimiter, and returns an array with the resulting substrings.</source>
          <target state="translated">當<ph id="ph1">`Limit`</ph>參數大於零，<ph id="ph2">`Split`</ph>函式會在第一個字串<ph id="ph3">`Limit`</ph>-1 出現的分隔符號，並傳回產生的子字串陣列。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>For example, <ph id="ph1">`Split("a:b:c", ":")`</ph> returns the array <ph id="ph2">`{"a", "b", "c"}`</ph>, while <ph id="ph3">`Split("a:b:c", ":", 2)`</ph> returns the array <ph id="ph4">`{"a", "b:c"}`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Split("a:b:c", ":")`</ph>傳回陣列<ph id="ph2">`{"a", "b", "c"}`</ph>，雖然<ph id="ph3">`Split("a:b:c", ":", 2)`</ph>傳回陣列<ph id="ph4">`{"a", "b:c"}`</ph>。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>When the <ph id="ph1">`Split`</ph> function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</source>
          <target state="translated">當<ph id="ph1">`Split`</ph>函式發生兩個分隔符號中的資料列或分隔符號的開頭或結尾的字串，它會將它們解譯為周圍的空字串 ("")。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>For example, <ph id="ph1">`Split("xx", "x")`</ph> returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</source>
          <target state="translated">例如，<ph id="ph1">`Split("xx", "x")`</ph>傳回陣列，包含三個空白的字串： 一個介於開頭的字串和第一個"x"，其中兩個"x"字串，頭尾包括在內，另一個頭尾包括在內的最後一個"x"和字串的結尾。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>This table demonstrates how the optional <ph id="ph1">`Delimiter`</ph>, <ph id="ph2">`Limit`</ph>, and <ph id="ph3">`Compare`</ph> parameters can change the behavior of the <ph id="ph4">`Split`</ph> function.</source>
          <target state="translated">此資料表會示範如何選擇性<ph id="ph1">`Delimiter`</ph>， <ph id="ph2">`Limit`</ph>，和<ph id="ph3">`Compare`</ph>參數可以變更的行為<ph id="ph4">`Split`</ph>函式。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Split Call</source>
          <target state="translated">分割呼叫</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Return Value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"42," , "12," , "19"}</source>
          <target state="translated">{"42," , "12," , "19"}</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"42", "12", "19"}</source>
          <target state="translated">{"42", "12", "19"}</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"42", "12, 19"}</source>
          <target state="translated">{"42", "12, 19"}</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"192", "168", "0", "1"}</source>
          <target state="translated">{"192", "168", "0", "1"}</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"Alice and Bob"}</source>
          <target state="translated">{"Alice 和 Bob"}</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"Alice", "Bob"}</source>
          <target state="translated">{"Alice"，"Bob"}</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"<ph id="ph1">someone@example.com</ph>"}</source>
          <target state="translated">{"<ph id="ph1">someone@example.com</ph>"}</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"someone", "example.com"}</source>
          <target state="translated">{"someone"，"example.com"}</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>引數可以是下列值。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">執行二進位比較</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">執行文字比較</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The following example demonstrates how to split a string at its spaces.</source>
          <target state="translated">下列範例會示範如何在其空間將字串分隔。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</source>
          <target state="translated">下列範例會示範如何分割具有多個資料列中的分隔符號字串，並篩選出的空字串。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">指定字串比較的類型。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> is omitted, the <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> setting determines the type of comparison.</source>
          <target state="translated">如果省略了 <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept>，則 <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> 設定會決定比較的類型。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns -1, 0, or 1, based on the result of a string comparison.</source>
          <target state="translated">根據字串比較的結果傳回 -1、0 或 1。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">&lt;see langword="StrComp" /&gt;</ph> function has the following return values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="StrComp" /&gt;</ph> 函式具有下列的傳回值。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> If</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 如果</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> StrComp returns</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> StrComp 會傳回</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> sorts ahead of <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> 排在 <ph id="ph5">&lt;paramref name="String2" /&gt;</ph> 之前<ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> is equal to <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> 等於 <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> sorts after <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> 排在 <ph id="ph5">&lt;paramref name="String2" /&gt;</ph> 之後<ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The strings are compared by alphanumeric sort values beginning with the first character.</source>
          <target state="translated">比較字串的開頭為第一個字元的英數字元的排序值。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>For further information on binary comparisons, textual comparisons, and sort order, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)</ept>.</source>
          <target state="translated">如進一步二進位比較、 文字的比較和排序順序的詳細資訊，請參閱<bpt id="p1">[</bpt>選項比較陳述式<ept id="p1">](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> 引數設定為︰</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</source>
          <target state="translated">執行二進位比較，根據衍生自內部的二進位表示法的字元的排序次序。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a text comparison, based on a case-insensitive text sort order determined by your system's <ph id="ph1">`LocaleID`</ph> value.</source>
          <target state="translated">文字根據執行比較，取決於您的系統的不區分大小寫文字排序順序<ph id="ph1">`LocaleID`</ph>值。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This example uses the <ph id="ph1">`StrComp`</ph> function to return the results of a string comparison.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`StrComp`</ph>函式傳回的字串比較的結果。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Compare" /&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Compare" /&gt;</ph> 值無效。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression to be converted.</source>
          <target state="translated">要轉換的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.VbStrConv" /&gt;</ph> member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.VbStrConv" /&gt;</ph> 成員。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The enumeration value specifying the type of conversion to perform.</source>
          <target state="translated">列舉值，指定要執行的轉換類型。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> value, if different from the system <ph id="ph2">&lt;see langword="LocaleID" /&gt;</ph> value.</source>
          <target state="translated">如果不同於系統 <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> 值，則使用此 <ph id="ph2">&lt;see langword="LocaleID" /&gt;</ph> 值 </target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>(The system <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> value is the default.)</source>
          <target state="translated">(系統 <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> 值是預設值)。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Returns a string converted as specified.</source>
          <target state="translated">傳回依照指定方式轉換的字串。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Returns a string converted as specified.</source>
          <target state="translated">傳回依照指定方式轉換的字串。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The constants <ph id="ph1">`VbStrConv.Wide`</ph>, <ph id="ph2">`VbStrConv.Narrow`</ph>, <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>, <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>, <ph id="ph5">`VbStrConv.Katakana`</ph>, and <ph id="ph6">`VbStrConv.Hiragana`</ph> can cause run-time errors when used in locales where they do not apply, but not always: the constants <ph id="ph7">`VbStrConv.Katakana`</ph> and <ph id="ph8">`VbStrConv.Hiragana`</ph> can be used in a non-Japanese system with the Japanese Language Pack installed.</source>
          <target state="translated">常數<ph id="ph1">`VbStrConv.Wide`</ph>， <ph id="ph2">`VbStrConv.Narrow`</ph>， <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>， <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>， <ph id="ph5">`VbStrConv.Katakana`</ph>，和<ph id="ph6">`VbStrConv.Hiragana`</ph>可能會導致執行階段錯誤時，它們不會套用，地區設定中使用，但不是一定： 常數<ph id="ph7">`VbStrConv.Katakana`</ph>和<ph id="ph8">`VbStrConv.Hiragana`</ph>可以用於非日文系統與日文語言套件安裝。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>In addition, use of the constants <ph id="ph1">`VbStrConv.Wide`</ph> and <ph id="ph2">`VbStrConv.Narrow`</ph> is supported on any system with an East Asian language installed.</source>
          <target state="translated">此外，使用常數的<ph id="ph1">`VbStrConv.Wide`</ph>和<ph id="ph2">`VbStrConv.Narrow`</ph>任何系統上安裝為東亞語言支援。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">管理字串，以便適當地區設定中使用應用程式的大小寫的變更時，此函數會使用應用程式的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則此作業，應該使用<ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，然後傳遞<ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph>或<ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph>如<ph id="ph4">`comparisonType`</ph>引數。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何文化特性會影響字串在 Visual Basic 中<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The <ph id="ph1">`Conversion`</ph> argument settings are:</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 引數設定為︰</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Enumeration member</source>
          <target state="translated">列舉成員</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Performs no conversion</source>
          <target state="translated">不執行轉換</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Uses linguistic rules for casing, rather than File System (default).</source>
          <target state="translated">使用語言規則來轉換，而非檔案系統 （預設值）。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Valid with <ph id="ph1">`VbStrConv.UpperCase`</ph> and <ph id="ph2">`VbStrConv.LowerCase`</ph> only.</source>
          <target state="translated">適用於<ph id="ph1">`VbStrConv.UpperCase`</ph>和<ph id="ph2">`VbStrConv.LowerCase`</ph>只。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts the string to uppercase characters.</source>
          <target state="translated">將字串轉換為大寫字元。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts the string to lowercase characters.</source>
          <target state="translated">將字串轉換為小寫字元。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts the first letter of every word in string to uppercase.</source>
          <target state="translated">將轉換成大寫的字串中的每個字的第一個字母。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts narrow (half-width) characters in the string to wide (full-width) characters.</source>
          <target state="translated">將窄 （半形） 字元 （全形） 的寬字元字串中。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Narrow`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Narrow`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts wide (full-width) characters in the string to narrow (half-width) characters.</source>
          <target state="translated">將寬 （全形） 字元 （半形） 字元在字串中的轉換。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Katakana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Katakana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Hiragana characters in the string to Katakana characters.</source>
          <target state="translated">將字串中的平假名字元轉換為片假名字元。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Hiragana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Hiragana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Katakana characters in the string to Hiragana characters.</source>
          <target state="translated">將字串中的片假名字元轉換為平假名字元。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Traditional Chinese characters to Simplified Chinese.</source>
          <target state="translated">將繁體中文字元轉換為簡體中文。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.TraditionalChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.TraditionalChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Simplified Chinese characters to Traditional Chinese.</source>
          <target state="translated">將簡體中文字元轉換為繁體中文。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">*</ph><ept id="p1">&lt;/sup&gt;</ept> Applies to Asian locales.</source>
          <target state="translated"><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">*</ph><ept id="p1">&lt;/sup&gt;</ept> 適用於亞洲地區設定。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">**</ph><ept id="p1">&lt;/sup&gt;</ept> Applies to Japan only.</source>
          <target state="translated"><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">**</ph><ept id="p1">&lt;/sup&gt;</ept> 僅適用於 （日文）。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>These constants are specified in the .NET Framework common language runtime.</source>
          <target state="translated">.NET Framework common language runtime 中指定這些常數。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>As a result, they can be used anywhere in your code in place of the actual values.</source>
          <target state="translated">如此一來，它們可以用於任何位置的實際值取代程式碼中。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Most can be combined (for example, <ph id="ph1">`UpperCase + Wide`</ph>), except when they are mutually exclusive (for example, <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>).</source>
          <target state="translated">大部分可以結合 (比方說， <ph id="ph1">`UpperCase + Wide`</ph>)，除非它們是互為獨佔模式 (例如， <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>)。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The following are valid word separators for proper casing: Null (<ph id="ph1">`Chr$(0)`</ph>), horizontal tab (<ph id="ph2">`Chr$(9)`</ph>), line feed (<ph id="ph3">`Chr$(10)`</ph>), vertical tab (<ph id="ph4">`Chr$(11)`</ph>), form feed (<ph id="ph5">`Chr$(12)`</ph>), carriage return (<ph id="ph6">`Chr$(13)`</ph>), space (single-byte character set) (<ph id="ph7">`Chr$(32)`</ph>).</source>
          <target state="translated">以下是有效的文字分隔字元的適當的大小寫： Null (<ph id="ph1">`Chr$(0)`</ph>)，水平索引標籤 (<ph id="ph2">`Chr$(9)`</ph>)，換行字元 (<ph id="ph3">`Chr$(10)`</ph>)，垂直索引標籤 (<ph id="ph4">`Chr$(11)`</ph>)、 換頁字元 (<ph id="ph5">`Chr$(12)`</ph>)，歸位字元 (<ph id="ph6">`Chr$(13)`</ph>)，空間 （單一位元組字元集） (<ph id="ph7">`Chr$(32)`</ph>)。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</source>
          <target state="translated">可以是全形或半形，空間的實際值會依國家/地區為東亞語言的文化特性而異。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>This example converts text into all lowercase letters.</source>
          <target state="translated">這個範例會將文字轉換成小寫字母。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Unsupported <ph id="ph1">&lt;paramref name="LocaleID" /&gt;</ph>, <ph id="ph2">&lt;paramref name="Conversion" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> 0 or <ph id="ph4">&amp;gt;</ph> 2048, or unsupported conversion for specified locale.</source>
          <target state="translated">不支援的 <ph id="ph1">&lt;paramref name="LocaleID" /&gt;</ph>、<ph id="ph2">&lt;paramref name="Conversion" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> 0 或 <ph id="ph4">&amp;gt;</ph> 2048，或不支援的指定地區設定轉換。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>The length to the string to be returned.</source>
          <target state="translated">要傳回之字串的長度。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph>、<ph id="ph2">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Object" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">只會使用運算式的第一個字元。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>If Character is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, it must contain either a <ph id="ph2">&lt;see langword="Char" /&gt;</ph> or a <ph id="ph3">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">如果字元的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，它必須包含 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="String" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">此函數會傳回<ph id="ph1">`String`</ph>重複的字元所組成。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">構成的字串的字元是中的第一個字元<ph id="ph1">`Character`</ph>引數，以及它重複<ph id="ph2">`Number`</ph>的次數。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>This example uses the <ph id="ph1">`StrDup`</ph> function to return a string of duplicated characters.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`StrDup`</ph>函數傳回的字串重複的字元。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is less than 0 or <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> 小於 0 或 <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> 類型無效。</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>The length to the string to be returned.</source>
          <target state="translated">要傳回之字串的長度。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph>、<ph id="ph2">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Object" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">只會使用運算式的第一個字元。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>If Character is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, it must contain either a <ph id="ph2">&lt;see langword="Char" /&gt;</ph> or a <ph id="ph3">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">如果字元的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，它必須包含 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="String" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">此函數會傳回<ph id="ph1">`String`</ph>重複的字元所組成。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">構成的字串的字元是中的第一個字元<ph id="ph1">`Character`</ph>引數，以及它重複<ph id="ph2">`Number`</ph>的次數。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>This example uses the <ph id="ph1">`StrDup`</ph> function to return a string of duplicated characters.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`StrDup`</ph>函數傳回的字串重複的字元。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is less than 0 or <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> 小於 0 或 <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> 類型無效。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>The length to the string to be returned.</source>
          <target state="translated">要傳回之字串的長度。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="Char" /&gt;</ph>、<ph id="ph2">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Object" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">只會使用運算式的第一個字元。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>If Character is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, it must contain either a <ph id="ph2">&lt;see langword="Char" /&gt;</ph> or a <ph id="ph3">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">如果字元的型別為 <ph id="ph1">&lt;see langword="Object" /&gt;</ph>，它必須包含 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="String" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">傳回由重複指定次數的指定字元所組成的字串或物件。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">此函數會傳回<ph id="ph1">`String`</ph>重複的字元所組成。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">構成的字串的字元是中的第一個字元<ph id="ph1">`Character`</ph>引數，以及它重複<ph id="ph2">`Number`</ph>的次數。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>This example uses the <ph id="ph1">`StrDup`</ph> function to return a string of duplicated characters.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`StrDup`</ph>函數傳回的字串重複的字元。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is less than 0 or <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> 小於 0 或 <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> 類型無效。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>String expression whose characters are to be reversed.</source>
          <target state="translated">要反轉字元的字串運算式。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is a zero-length string (""), a zero-length string is returned.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 是長度為零的字串 ("")，則會傳回長度為零的字串。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">傳回字串，其中的指定之字串的字元順序會顛倒。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">傳回字串，其中的指定之字串的字元順序會顛倒。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>The <ph id="ph1">`StrReverse`</ph> function returns a string that contains the same characters as <ph id="ph2">`Expression`</ph>, but in the opposite order.</source>
          <target state="translated"><ph id="ph1">`StrReverse`</ph>函式會傳回字串，包含相同的字元視為<ph id="ph2">`Expression`</ph>，但相反的順序。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">傳回包含指定字串複本的字串，但其中不包含前置空格 (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>)、不包含後置空格 (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>)，或是不包含前置或後置空格 (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">傳回包含指定字串複本的字串，但其中不包含前置空格 (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>)、不包含後置空格 (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>)，或是不包含前置或後置空格 (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>， <ph id="ph2">`RTrim`</ph>，和<ph id="ph3">`Trim`</ph>函數從字串的結尾移除空格。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>This example uses the <ph id="ph1">`LTrim`</ph> function to strip leading spaces and the <ph id="ph2">`RTrim`</ph> function to strip trailing spaces from a string variable.</source>
          <target state="translated">此範例使用 <ph id="ph1">`LTrim`</ph> 函式刪除字串變數中的前置空格，並使用 <ph id="ph2">`RTrim`</ph> 函式刪除字串變數中的尾端空格。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>It uses the <ph id="ph1">`Trim`</ph> function to strip both types of spaces.</source>
          <target state="translated">它會使用 <ph id="ph1">`Trim`</ph> 函式刪除這兩種類型的空格。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">傳回包含已轉換成大寫之指定字串的字串或字元。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">傳回包含已轉換成大寫之指定字串的字串或字元。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">傳回包含已轉換成大寫之指定字串的字串或字元。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">小寫字母會轉換成大寫。所有的大寫字母和 nonletter 字元保持不變。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">管理字串，以便適當地區設定中使用應用程式的大小寫的變更時，此函數會使用應用程式的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則此作業，應該使用<ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，然後傳遞<ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph>或<ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph>如<ph id="ph4">`comparisonType`</ph>引數。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何文化特性會影響字串在 Visual Basic 中<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>This example uses the <ph id="ph1">`UCase`</ph> function to return an uppercase version of a string.</source>
          <target state="translated">此範例使用 <ph id="ph1">`UCase`</ph> 函式，傳回大寫字母版本的字串。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">任何有效的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="Char" /&gt;</ph> 運算式。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">傳回包含已轉換成大寫之指定字串的字串或字元。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">傳回包含已轉換成大寫之指定字串的字串或字元。</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">小寫字母會轉換成大寫。所有的大寫字母和 nonletter 字元保持不變。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">管理字串，以便適當地區設定中使用應用程式的大小寫的變更時，此函數會使用應用程式的文化特性資訊。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">如果您的應用程式進行比較或大小寫變更作業的結果為基礎的安全性決策，則此作業，應該使用<ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，然後傳遞<ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph>或<ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph>如<ph id="ph4">`comparisonType`</ph>引數。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何文化特性會影響字串在 Visual Basic 中<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>This example uses the <ph id="ph1">`UCase`</ph> function to return an uppercase version of a string.</source>
          <target state="translated">此範例使用 <ph id="ph1">`UCase`</ph> 函式，傳回大寫字母版本的字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>