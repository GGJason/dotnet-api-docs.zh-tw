<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Interaction.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d929f3d03329fe8e498b0a0ff897fca7ef311ce9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d929f3d03329fe8e498b0a0ff897fca7ef311ce9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Interaction">
          <source>The <ph id="ph1">&lt;see langword="Interaction" /&gt;</ph> module contains procedures used to interact with objects, applications, and systems.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Interaction" /&gt;</ph> 模組會包含用於與物件、應用程式和系統互動的程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Interaction">
          <source>This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</source>
          <target state="translated">這個模組支援的 Visual Basic 語言關鍵字和執行階段程式庫成員，執行其他程式、 呼叫方法或屬性，從電腦嗶、 提供命令列字串、 管理 COM 物件，並控制對話方塊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Interaction">
          <source>The following example uses the <ph id="ph1">`Shell`</ph> function to run an application specified by the user.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Shell`</ph>函式來執行指定使用者的應用程式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Interaction">
          <source>Specifying <ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph> as the second argument opens the application in normal size and gives it the focus.</source>
          <target state="translated">指定<ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph>做為第二個引數的標準大小開啟應用程式並為其提供焦點。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Interaction">
          <source>Activates an application that is already running.</source>
          <target state="translated">啟動已經在執行的應用程式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> specifying the Win32 process ID number assigned to this process.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>，指定指派給這個處理序 (Process) 的 Win32 處理序 ID 編號。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You can use the ID returned by the <ph id="ph1">&lt;see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" /&gt;</ph>, provided it is not zero.</source>
          <target state="translated">如果由 <ph id="ph1">&lt;see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" /&gt;</ph> 傳回的 ID 不為零，您就可以使用此編號。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Activates an application that is already running.</source>
          <target state="translated">啟動已經在執行的應用程式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You use <ph id="ph1">`AppActivate`</ph> to bring an application's active window into focus.</source>
          <target state="translated">您使用<ph id="ph1">`AppActivate`</ph>讓應用程式的使用中視窗成為焦點。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</source>
          <target state="translated">您不可能的控制代碼或使用中視窗的參考，或甚至知道哪一個視窗是作用中，在給定的時刻。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>In such a case, you cannot use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method.</source>
          <target state="translated">在此情況下，您無法使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>The <ph id="ph1">`AppActivate`</ph> function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</source>
          <target state="translated"><ph id="ph1">`AppActivate`</ph>函式的焦點變更至具名的應用程式或視窗，但不會影響是否為最大化或最小化。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</source>
          <target state="translated">當使用者採取某些動作來變更焦點或關閉視窗時，焦點會移開啟動的應用程式視窗。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You can use the <ph id="ph1">`Shell`</ph> function to start an application and set the window style.</source>
          <target state="translated">您可以使用<ph id="ph1">`Shell`</ph>函式來啟動應用程式，並設定視窗樣式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If you use the <ph id="ph1">`Title`</ph> parameter, <ph id="ph2">`AppActivate`</ph> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</source>
          <target state="translated">如果您使用<ph id="ph1">`Title`</ph>參數，<ph id="ph2">`AppActivate`</ph>使用不區分大小寫的比較，而否則要求標題列的內容完全相符。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>It first looks through the top-level windows and then through the child windows.</source>
          <target state="translated">它會先尋找最上層視窗，然後再透過子視窗。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If it cannot find a match, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果找不到相符項目，它會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>You can use <ph id="ph1">`AppActivate`</ph> only with processes that own windows.</source>
          <target state="translated">您可以使用<ph id="ph1">`AppActivate`</ph>只能使用屬於 windows 處理程序。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Most console applications do not own windows, which means that they do not appear in the list of processes that <ph id="ph1">`AppActivate`</ph> searches.</source>
          <target state="translated">大部分的主控台應用程式不是擁有的 windows，也就是說，它們不會出現在清單中的處理序<ph id="ph1">`AppActivate`</ph>搜尋。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</source>
          <target state="translated">從主控台應用程式執行時，系統會建立個別的處理序執行應用程式，並將輸出傳回到主控台處理序。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</source>
          <target state="translated">因此，當您要求的目前處理序識別碼，您會取得這個個別的處理序的處理序識別碼，而不是主控台應用程式的處理序識別碼。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>At run time, the <ph id="ph1">`AppActivate`</ph> function activates any running application with a title that matches <ph id="ph2">`Title`</ph> or with a process ID that matches <ph id="ph3">`ProcessId`</ph>.</source>
          <target state="translated">在執行階段，<ph id="ph1">`AppActivate`</ph>函式會啟用任何執行中應用程式標題的符合<ph id="ph2">`Title`</ph>或比對處理序識別碼<ph id="ph3">`ProcessId`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If there is no exact match, it activates any application whose title string ends with <ph id="ph1">`Title`</ph>.</source>
          <target state="translated">如果沒有完全相符，它會啟動任何應用程式標題字串的結尾<ph id="ph1">`Title`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If there is more than one application named <ph id="ph1">`Title`</ph>, the <ph id="ph2">`AppActivate`</ph> function arbitrarily chooses one to activate.</source>
          <target state="translated">是否有一個以上的應用程式名為<ph id="ph1">`Title`</ph>、<ph id="ph2">`AppActivate`</ph>函式任意選擇一個啟動。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>The <ph id="ph1">`AppActivate`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`AppActivate`</ph>函式需要<ph id="ph2">`UIPermission`</ph>在<ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph>層級，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>This example illustrates various uses of the <ph id="ph1">`AppActivate`</ph> function to activate an application window.</source>
          <target state="translated">此範例說明的各種用法<ph id="ph1">`AppActivate`</ph>函式可啟動應用程式視窗。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>If a Notepad process is not running, the example throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果未執行 「 記事本 」 處理程序，此範例會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
          <source>The <ph id="ph1">`Shell`</ph> procedure assumes the applications are in the paths specified.</source>
          <target state="translated"><ph id="ph1">`Shell`</ph>程序會假設應用程式是在指定的路徑。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the title in the title bar of the application you want to activate.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，可指定您想啟動的應用程式之標題列中的標題。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You can use the title assigned to the application when it was launched.</source>
          <target state="translated">當應用程式啟動後，您可以使用指派給應用程式的標題。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Activates an application that is already running.</source>
          <target state="translated">啟動已經在執行的應用程式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You use <ph id="ph1">`AppActivate`</ph> to bring an application's active window into focus.</source>
          <target state="translated">您使用<ph id="ph1">`AppActivate`</ph>讓應用程式的使用中視窗成為焦點。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</source>
          <target state="translated">您不可能的控制代碼或使用中視窗的參考，或甚至知道哪一個視窗是作用中，在給定的時刻。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>In such a case, you cannot use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method.</source>
          <target state="translated">在此情況下，您無法使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>The <ph id="ph1">`AppActivate`</ph> function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</source>
          <target state="translated"><ph id="ph1">`AppActivate`</ph>函式的焦點變更至具名的應用程式或視窗，但不會影響是否為最大化或最小化。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</source>
          <target state="translated">當使用者採取某些動作來變更焦點或關閉視窗時，焦點會移開啟動的應用程式視窗。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You can use the <ph id="ph1">`Shell`</ph> function to start an application and set the window style.</source>
          <target state="translated">您可以使用<ph id="ph1">`Shell`</ph>函式來啟動應用程式，並設定視窗樣式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If you use the <ph id="ph1">`Title`</ph> parameter, <ph id="ph2">`AppActivate`</ph> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</source>
          <target state="translated">如果您使用<ph id="ph1">`Title`</ph>參數，<ph id="ph2">`AppActivate`</ph>使用不區分大小寫的比較，而否則要求標題列的內容完全相符。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>It first looks through the top-level windows and then through the child windows.</source>
          <target state="translated">它會先尋找最上層視窗，然後再透過子視窗。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If it cannot find a match, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果找不到相符項目，它會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>You can use <ph id="ph1">`AppActivate`</ph> only with processes that own windows.</source>
          <target state="translated">您可以使用<ph id="ph1">`AppActivate`</ph>只能使用屬於 windows 處理程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Most console applications do not own windows, which means that they do not appear in the list of processes that <ph id="ph1">`AppActivate`</ph> searches.</source>
          <target state="translated">大部分的主控台應用程式不是擁有的 windows，也就是說，它們不會出現在清單中的處理序<ph id="ph1">`AppActivate`</ph>搜尋。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</source>
          <target state="translated">從主控台應用程式執行時，系統會建立個別的處理序執行應用程式，並將輸出傳回到主控台處理序。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</source>
          <target state="translated">因此，當您要求的目前處理序識別碼，您會取得這個個別的處理序的處理序識別碼，而不是主控台應用程式的處理序識別碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>At run time, the <ph id="ph1">`AppActivate`</ph> function activates any running application with a title that matches <ph id="ph2">`Title`</ph> or with a process ID that matches <ph id="ph3">`ProcessId`</ph>.</source>
          <target state="translated">在執行階段，<ph id="ph1">`AppActivate`</ph>函式會啟用任何執行中應用程式標題的符合<ph id="ph2">`Title`</ph>或比對處理序識別碼<ph id="ph3">`ProcessId`</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If there is no exact match, it activates any application whose title string ends with <ph id="ph1">`Title`</ph>.</source>
          <target state="translated">如果沒有完全相符，它會啟動任何應用程式標題字串的結尾<ph id="ph1">`Title`</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If there is more than one application named <ph id="ph1">`Title`</ph>, the <ph id="ph2">`AppActivate`</ph> function arbitrarily chooses one to activate.</source>
          <target state="translated">是否有一個以上的應用程式名為<ph id="ph1">`Title`</ph>、<ph id="ph2">`AppActivate`</ph>函式任意選擇一個啟動。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>The <ph id="ph1">`AppActivate`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`AppActivate`</ph>函式需要<ph id="ph2">`UIPermission`</ph>在<ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph>層級，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>This example illustrates various uses of the <ph id="ph1">`AppActivate`</ph> function to activate an application window.</source>
          <target state="translated">此範例說明的各種用法<ph id="ph1">`AppActivate`</ph>函式可啟動應用程式視窗。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>If a Notepad process is not running, the example throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果未執行 「 記事本 」 處理程序，此範例會擲回<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
          <source>The <ph id="ph1">`Shell`</ph> procedure assumes the applications are in the paths specified.</source>
          <target state="translated"><ph id="ph1">`Shell`</ph>程序會假設應用程式是在指定的路徑。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>Sounds a tone through the computer's speaker.</source>
          <target state="translated">透過電腦的喇叭發出聲音。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.</source>
          <target state="translated">字距和嗶聲的持續時間取決於您的硬體和系統軟體，因此電腦而異。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>The <ph id="ph1">`Beep`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`Beep`</ph>函式需要<ph id="ph2">`UIPermission`</ph>在<ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph>層級，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Beep">
          <source>This example uses the <ph id="ph1">`Beep`</ph> function to sound a tone through the computer's speaker.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`Beep`</ph>透過電腦的喇叭音函式。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>A pointer to the object exposing the property or method.</source>
          <target state="translated">公開屬性或方法之物件的指標。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>A string expression containing the name of the property or method on the object.</source>
          <target state="translated">包含物件之屬性或方法名稱的字串運算式。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>An enumeration member of type <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CallType" /&gt;</ph> representing the type of procedure being called.</source>
          <target state="translated">型別 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CallType" /&gt;</ph> 的列舉型別成員，其表示正在呼叫的程序型別。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>The value of <ph id="ph1">&lt;see langword="CallType" /&gt;</ph> can be <ph id="ph2">&lt;see langword="Method" /&gt;</ph>, <ph id="ph3">&lt;see langword="Get" /&gt;</ph>, or <ph id="ph4">&lt;see langword="Set" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CallType" /&gt;</ph> 的值可以是 <ph id="ph2">&lt;see langword="Method" /&gt;</ph>、<ph id="ph3">&lt;see langword="Get" /&gt;</ph> 或 <ph id="ph4">&lt;see langword="Set" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source><ph id="ph1">&lt;see langword="ParamArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ParamArray" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>A parameter array containing the arguments to be passed to the property or method being called.</source>
          <target state="translated">參數陣列，其中包含要傳遞給屬性或正在呼叫的方法之引數。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Executes a method on an object, or sets or returns a property on an object.</source>
          <target state="translated">在物件上執行方法，或是設定或傳回物件上的屬性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Executes a method on an object, or sets or returns a property on an object.</source>
          <target state="translated">在物件上執行方法，或是設定或傳回物件上的屬性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>The <ph id="ph1">`CallByName`</ph> function is used at runtime to get a property, set a property, or invoke a method.</source>
          <target state="translated"><ph id="ph1">`CallByName`</ph>函式在執行階段用來取得的屬性、 設定屬性，或叫用方法。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>In the following example, the first line uses <ph id="ph1">`CallByName`</ph> to set the <ph id="ph2">`Text`</ph> property of a text box, the second line retrieves the value of the <ph id="ph3">`Text`</ph> property, and the third line invokes the <ph id="ph4">`Move`</ph> method to move the text box.</source>
          <target state="translated">下列範例中，在第一行會使用<ph id="ph1">`CallByName`</ph>設定<ph id="ph2">`Text`</ph>屬性文字方塊中的，第二行中擷取的值<ph id="ph3">`Text`</ph>屬性，而第三行叫用<ph id="ph4">`Move`</ph>方法來移動文字方塊。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>The next example uses the <ph id="ph1">`CallByName`</ph> function to invoke the <ph id="ph2">`Add`</ph> and <ph id="ph3">`Item`</ph> methods of a collection object.</source>
          <target state="translated">下一個範例會使用<ph id="ph1">`CallByName`</ph>函式來叫用<ph id="ph2">`Add`</ph>和<ph id="ph3">`Item`</ph>集合物件的方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
          <source>Invalid <ph id="ph1">&lt;paramref name="UseCallType" /&gt;</ph> value; must be <ph id="ph2">&lt;see langword="Method" /&gt;</ph>, <ph id="ph3">&lt;see langword="Get" /&gt;</ph>, or <ph id="ph4">&lt;see langword="Set" /&gt;</ph>.</source>
          <target state="translated">無效的 <ph id="ph1">&lt;paramref name="UseCallType" /&gt;</ph> 值，必須是 <ph id="ph2">&lt;see langword="Method" /&gt;</ph>、<ph id="ph3">&lt;see langword="Get" /&gt;</ph> 或 <ph id="ph4">&lt;see langword="Set" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source><ph id="ph1">&lt;see langword="Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Numeric expression that results in a value between 1 and the number of elements passed in the <bpt id="p1">&lt;c&gt;</bpt>Choice<ept id="p1">&lt;/c&gt;</ept> argument.</source>
          <target state="translated">可以產生一個值的數值運算式，所產生的值範圍介於 1 到傳入 <bpt id="p1">&lt;c&gt;</bpt>Choice<ept id="p1">&lt;/c&gt;</ept> 引數的項目數之間。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> parameter array.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 參數陣列。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>You can supply either a single variable or an expression that evaluates to the <ph id="ph1">&lt;see langword="Object" /&gt;</ph> data type, to a list of <ph id="ph2">&lt;see langword="Object" /&gt;</ph> variables or expressions separated by commas, or to a single-dimensional array of <ph id="ph3">&lt;see langword="Object" /&gt;</ph> elements.</source>
          <target state="translated">您可以針對以逗號分隔的 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 變數或運算式的清單，或是 <ph id="ph2">&lt;see langword="Object" /&gt;</ph> 元素的一維陣列，提供單一變數或是評估為 <ph id="ph3">&lt;see langword="Object" /&gt;</ph> 資料類型的運算式。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Selects and returns a value from a list of arguments.</source>
          <target state="translated">從引數清單中選取及傳回值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>Selects and returns a value from a list of arguments.</source>
          <target state="translated">從引數清單中選取及傳回值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The <ph id="ph1">`Choose`</ph> function returns a member of the list passed in <ph id="ph2">`Choice()`</ph>, based on the value of <ph id="ph3">`Index`</ph>.</source>
          <target state="translated"><ph id="ph1">`Choose`</ph>函式會傳回傳入的清單中的成員<ph id="ph2">`Choice()`</ph>根據的值， <ph id="ph3">`Index`</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The first member of the list is selected when <ph id="ph1">`Index`</ph> is 1.</source>
          <target state="translated">選取清單的第一個成員時<ph id="ph1">`Index`</ph>為 1。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The last member of the list is selected when <ph id="ph1">`Index`</ph> is <ph id="ph2">`UBound`</ph>(<ph id="ph3">`Choice()`</ph>).</source>
          <target state="translated">選取清單的最後一個成員時<ph id="ph1">`Index`</ph>是<ph id="ph2">`UBound`</ph>(<ph id="ph3">`Choice()`</ph>)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>If <ph id="ph1">`Index`</ph> is outside these limits, <ph id="ph2">`Choose`</ph> returns <ph id="ph3">`Nothing`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>超出這些限制，<ph id="ph2">`Choose`</ph>傳回<ph id="ph3">`Nothing`</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>If <ph id="ph1">`Index`</ph> is not a whole number, it is rounded to the nearest whole number before being evaluated.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>不是整數，它會計算前捨入到最接近的整數。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>You can use <ph id="ph1">`Choose`</ph> to look up a value in a list of possibilities.</source>
          <target state="translated">您可以使用<ph id="ph1">`Choose`</ph>查閱的可能值清單中的值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>The expressions in the argument list can include function calls.</source>
          <target state="translated">引數清單中的運算式可以包含函式呼叫。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>As part of preparing the argument list for the call to <ph id="ph1">`Choose`</ph>, the Visual Basic compiler calls every function in every expression.</source>
          <target state="translated">準備呼叫的引數清單的過程<ph id="ph1">`Choose`</ph>，Visual Basic 編譯器會呼叫每個函式中每個運算式。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>This means that you cannot rely on a particular function not being called if a different expression is selected by <ph id="ph1">`Index`</ph>.</source>
          <target state="translated">這表示您不能依賴特定的函式，如果選取不同的運算式，未呼叫<ph id="ph1">`Index`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
          <source>This example uses the <ph id="ph1">`Choose`</ph> function to display a name in response to an index passed into the procedure in the <ph id="ph2">`Ind`</ph> parameter.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`Choose`</ph>函式来顯示的名稱，以回應傳入的程序中的索引<ph id="ph2">`Ind`</ph>參數。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</source>
          <target state="translated">傳回用來啟動 Visual Basic 之命令列的引數部分，或是使用 Visual Basic 所開發的可執行程式。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature provides greater productivity and performance than the <ph id="ph2">&lt;see langword="Command" /&gt;</ph> function.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能提供了比 <ph id="ph2">&lt;see langword="Command" /&gt;</ph> 函式更強大的產能和效能。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" /&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</source>
          <target state="translated">傳回用來啟動 Visual Basic 之命令列的引數部分，或是使用 Visual Basic 所開發的可執行程式。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature provides greater productivity and performance than the <ph id="ph2">&lt;see langword="Command" /&gt;</ph> function.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能提供了比 <ph id="ph2">&lt;see langword="Command" /&gt;</ph> 函式更強大的產能和效能。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" /&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.</source>
          <target state="translated">傳回引數之後，您可以搜尋常用的分隔符號，例如空格、 斜線向前或向後、 連字號或引號，來分割或搜尋字串中的個別參數。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>For applications developed with Visual Basic and compiled to an .exe file, the <ph id="ph1">`Command`</ph> function returns any arguments that appear after the name of the application on the command line, in this form: <ph id="ph2">`MyApp(cmdlineargs)`</ph>.</source>
          <target state="translated">應用程式與 Visual Basic 開發及編譯成.exe 檔，<ph id="ph1">`Command`</ph>函式會傳回出現在命令列，在這種形式的應用程式的名稱之後的任何引數： <ph id="ph2">`MyApp(cmdlineargs)`</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Command">
          <source>This example uses the <ph id="ph1">`Command`</ph> function to return the command-line arguments in an object that contains an array.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`Command`</ph>函數來傳回物件，其中包含陣列中的命令列引數。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The program ID of the object to create.</source>
          <target state="translated">要建立之物件的程式 ID。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The name of the network server where the object will be created.</source>
          <target state="translated">將建立物件的網路伺服器名稱。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>ServerName<ept id="p1">&lt;/c&gt;</ept> is an empty string (""), the local computer is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>ServerName<ept id="p1">&lt;/c&gt;</ept> 為空字串 ("")，則會使用本機電腦。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creates and returns a reference to a COM object.</source>
          <target state="translated">建立並傳回 COM 物件的參考；</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="CreateObject" /&gt;</ph> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</source>
          <target state="translated">除非類別已明確公開為 COM 元件，否則 <ph id="ph1">&lt;see langword="CreateObject" /&gt;</ph> 無法用來在 Visual Basic 中建立類別的執行個體。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creates and returns a reference to a COM object.</source>
          <target state="translated">建立並傳回 COM 物件的參考；</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="CreateObject" /&gt;</ph> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</source>
          <target state="translated">除非類別已明確公開為 COM 元件，否則 <ph id="ph1">&lt;see langword="CreateObject" /&gt;</ph> 無法用來在 Visual Basic 中建立類別的執行個體。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To create an instance of a COM component, assign the object returned by <ph id="ph1">`CreateObject`</ph> to an object variable:</source>
          <target state="translated">若要建立 COM 元件的執行個體，指定所傳回的物件<ph id="ph1">`CreateObject`</ph>物件變數：</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The type of object variable you use to store the returned object can affect your application's performance.</source>
          <target state="translated">您用來儲存傳回的物件的物件變數的型別可能會影響您的應用程式效能。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Declaring an object variable with the <ph id="ph1">`As Object`</ph> clause creates a variable that can contain a reference to any type of object.</source>
          <target state="translated">宣告物件變數與<ph id="ph1">`As Object`</ph>子句會建立可包含任何類型的物件參考的變數。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>However, access to the object through that variable is <bpt id="p1">*</bpt>late-bound<ept id="p1">*</ept>, that is, the binding occurs when your program runs.</source>
          <target state="translated">不過，透過該變數物件的存取權是<bpt id="p1">*</bpt>晚期繫結<ept id="p1">*</ept>，也就是繫結，就會發生在程式執行時。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>There are many reasons you should avoid late binding, including slower application performance.</source>
          <target state="translated">有許多原因，您應該避免晚期繫結，包括應用程式效能變慢。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You can create an object variable that results in early binding—that is, binding when the program is compiled.</source>
          <target state="translated">您可以建立會產生早期繫結物件變數，也就繫結在編譯程式時。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To do so, add a reference to the type library for your object from the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">若要這樣做，請加入您物件的類型程式庫參考<bpt id="p1">**</bpt>COM<ept id="p1">**</ept>  索引標籤<bpt id="p2">**</bpt>加入參考<ept id="p2">**</ept> 對話方塊上的<bpt id="p3">**</bpt>專案<ept id="p3">**</ept>功能表。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Then declare the object variable of the specific type of your object.</source>
          <target state="translated">然後宣告物件變數的物件的特定型別。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>In most cases, it is more efficient to use the <ph id="ph1">`Dim`</ph> statement and a primary interop assembly to create objects than it is to use the <ph id="ph2">`CreateObject`</ph> function.</source>
          <target state="translated">在大部分情況下，會更有效率使用<ph id="ph1">`Dim`</ph>陳述式，來建立物件，比使用主要 interop 組件<ph id="ph2">`CreateObject`</ph>函式。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Interacting with Unmanaged Code</source>
          <target state="translated">與 Unmanaged 程式碼互動</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Another issue is that COM objects use unmanaged code — code without the benefit of the common language runtime.</source>
          <target state="translated">另一個問題是 COM 物件使用 unmanaged 程式碼，common language runtime 的優點沒有程式碼。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM.</source>
          <target state="translated">沒有了相當程度的複雜性涉及了混合的 Visual Basic 與 unmanaged 程式碼的 managed 程式碼從 com 存取。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it.</source>
          <target state="translated">當您新增 COM 物件的參考時，Visual Basic 中搜尋該程式庫; 主要 interop 組件 (PIA)如果找到，則會使用它。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library.</source>
          <target state="translated">如果找不到的 PIA，它會建立包含本機互通性類別的 COM 程式庫中的每個類別的互通性組件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>COM Interoperability in .NET Framework Applications<ept id="p1">](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>.NET Framework 應用程式中的 COM 互通性<ept id="p1">](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You should generally use strongly bound objects and primary interop assemblies whenever possible.</source>
          <target state="translated">您通常應該使用強式繫結的物件和主要 interop 組件盡可能。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The examples below use the <ph id="ph1">`CreateObject`</ph> function with Microsoft Office objects for demonstration purposes only.</source>
          <target state="translated">使用下方範例<ph id="ph1">`CreateObject`</ph>函式與 Microsoft Office 物件，如需示範之用。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.</source>
          <target state="translated">不過，這些物件是容易使用且較可靠，當搭配適當的主要 interop 組件。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creating an Object on a Remote Computer</source>
          <target state="translated">在遠端電腦上建立的物件</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You can create an object on a remote networked computer by passing the name of the computer to the <ph id="ph1">`ServerName`</ph> argument of the <ph id="ph2">`CreateObject`</ph> function.</source>
          <target state="translated">您也可以將電腦的名稱傳遞遠端網路的電腦上建立物件<ph id="ph1">`ServerName`</ph>引數的<ph id="ph2">`CreateObject`</ph>函式。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>That name is the same as the Machine Name portion of a share name: for a share named "<ph id="ph1">\\</ph>\MyServer\Public," <ph id="ph2">`ServerName`</ph> is "MyServer."</source>
          <target state="translated">該名稱是電腦名稱部分的共用名稱相同： 共用名為"<ph id="ph1">\\</ph>\MyServer\Public，"<ph id="ph2">`ServerName`</ph>是"MyServer"。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer.</source>
          <target state="translated">請參閱 COM 文件 （請參閱 Microsoft Developer Network） 如需有關讓應用程式能夠存取遠端網路的電腦上。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You may need to add a registry key for your application.</source>
          <target state="translated">您可能需要加入您的應用程式的登錄機碼。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The following code returns the version number of an instance of Excel running on a remote computer named <ph id="ph1">`MyServer`</ph>:</source>
          <target state="translated">下列程式碼傳回的版本號碼的 Excel 執行個體名為遠端電腦上執行<ph id="ph1">`MyServer`</ph>:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.</source>
          <target state="translated">如果遠端伺服器名稱不正確，或如果無法使用，就會發生執行階段錯誤。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Use <ph id="ph1">`CreateObject`</ph> when there is no current instance of the object.</source>
          <target state="translated">使用<ph id="ph1">`CreateObject`</ph>時沒有目前物件的執行個體。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If an instance of the object is already running, a new instance is started, and an object of the specified type is created.</source>
          <target state="translated">如果物件的執行個體已在執行中，已啟動的新執行個體，並建立指定型別的物件。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To use the current instance, or to start the application and have it load a file, use the <ph id="ph1">`GetObject`</ph> function.</source>
          <target state="translated">若要使用目前的執行個體，或啟動應用程式，讓它載入檔案，請使用<ph id="ph1">`GetObject`</ph>函式。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times <ph id="ph1">`CreateObject`</ph> is executed.</source>
          <target state="translated">如果物件已本身註冊為單一執行個體物件，只有一個執行個體物件的建立，不論如何多次<ph id="ph1">`CreateObject`</ph>執行。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Creating Framework Objects</source>
          <target state="translated">建立架構物件</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>You can use the <ph id="ph1">`CreateObject`</ph> function only to create a COM object.</source>
          <target state="translated">您可以使用<ph id="ph1">`CreateObject`</ph>只為建立 COM 物件的函式。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>While there is no exact equivalent mechanism for creating a .NET Framework object, the <ph id="ph1">&lt;xref:System.Activator&gt;</ph> in the <ph id="ph2">&lt;xref:System&gt;</ph> namespace contains methods to create local or remote objects.</source>
          <target state="translated">沒有對等的確切機制，建立.NET Framework 物件，而<ph id="ph1">&lt;xref:System.Activator&gt;</ph>中<ph id="ph2">&lt;xref:System&gt;</ph>命名空間包含建立本機或遠端物件的方法。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>In particular, the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph> method might be useful.</source>
          <target state="translated">特別是，<ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Activator.CreateInstanceFrom%2A&gt;</ph>方法可能會很有用。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The <ph id="ph1">`CreateObject`</ph> function requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`CreateObject`</ph>函式需要 unmanaged 程式碼權限，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>和<bpt id="p1">[</bpt>程式碼存取權限<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">`CreateObject`</ph> function to create a Microsoft Excel worksheet and saves the worksheet to a file.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`CreateObject`</ph>函數，來建立 Microsoft Excel 工作表，並將工作表儲存到檔案。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>To use this example, Excel must be installed on the computer where this program runs.</source>
          <target state="translated">若要使用此範例中，必須執行此程式的電腦上安裝 Excel。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Also, you must add a reference to the type library from the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box on the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu.</source>
          <target state="translated">此外，您必須在其中加入從類型程式庫的參考<bpt id="p1">**</bpt>COM<ept id="p1">**</ept>  索引標籤<bpt id="p2">**</bpt>加入參考<ept id="p2">**</ept> 對話方塊上的<bpt id="p3">**</bpt>專案<ept id="p3">**</ept>功能表。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>The name of the type library varies depending on the version of Excel installed on your computer.</source>
          <target state="translated">類型程式庫的名稱會根據您的電腦上安裝的 Excel 版本而有所不同。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>For example, the type library for Microsoft Excel 2002 is named <bpt id="p1">**</bpt>Microsoft Excel 10.0 Object Library<ept id="p1">**</ept>.</source>
          <target state="translated">例如，名為類型程式庫的 Microsoft Excel 2002 <bpt id="p1">**</bpt>Microsoft Excel 10.0 物件程式庫<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>Server is unavailable</source>
          <target state="translated">伺服器無法使用。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
          <source>No object of the specified type exists</source>
          <target state="translated">指定類型的物件不存在</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project to which the section or key setting applies.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含區段或機碼設定所套用的應用程式或專案的名稱。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section from which the key setting is being deleted.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含所要刪除之機碼設定的來源區段名稱。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>If only <bpt id="p1">&lt;c&gt;</bpt>AppName<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Section<ept id="p2">&lt;/c&gt;</ept> are provided, the specified section is deleted along with all related key settings.</source>
          <target state="translated">如果只有提供 <bpt id="p1">&lt;c&gt;</bpt>AppName<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>Section<ept id="p2">&lt;/c&gt;</ept>，則指定之區段會連同所有相關的機碼設定一併刪除。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the key setting being deleted.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含所要刪除之機碼設定的名稱。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Deletes a section or key setting from an application's entry in the Windows registry.</source>
          <target state="translated">從 Windows 登錄的應用程式項目中刪除區段或機碼設定。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than the <ph id="ph2">&lt;see langword="DeleteSetting" /&gt;</ph> function.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能提供了比 <ph id="ph2">&lt;see langword="DeleteSetting" /&gt;</ph> 函式更強大的登錄作業產能和效能。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph> .</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>If all arguments are provided, the specified setting is deleted.</source>
          <target state="translated">如果所有引數所提供，會刪除指定的設定。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>A run-time error occurs if you attempt to use <ph id="ph1">`DeleteSetting`</ph> on a nonexistent section or key setting.</source>
          <target state="translated">如果您嘗試使用，就會發生執行階段錯誤<ph id="ph1">`DeleteSetting`</ph>上不存在的區段或機碼設定。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source><ph id="ph1">`DeleteSetting`</ph> requires that a user be logged on since it operates under the <ph id="ph2">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively.</source>
          <target state="translated"><ph id="ph1">`DeleteSetting`</ph> 需要使用者登入，因為其下的運作方式<ph id="ph2">`HKEY_LOCAL_USER`</ph>登錄機碼，在使用者以互動方式登入才會啟用。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下<ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph>或<ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph>登錄機碼。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>The following example first uses the <ph id="ph1">`SaveSetting`</ph> procedure to make entries in the Windows registry for the <ph id="ph2">`MyApp`</ph> application, and then uses the <ph id="ph3">`DeleteSetting`</ph> function to remove them.</source>
          <target state="translated">下列範例會先使用<ph id="ph1">`SaveSetting`</ph>程序來建立 Windows 登錄中的項目<ph id="ph2">`MyApp`</ph>應用程式，然後再使用<ph id="ph3">`DeleteSetting`</ph>函式，將它們移除。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>Because no <ph id="ph1">`Key`</ph> argument is specified, the whole <ph id="ph2">`Startup`</ph> section is deleted, including the section name and all of its keys.</source>
          <target state="translated">因為沒有<ph id="ph1">`Key`</ph>指定引數，則整個<ph id="ph2">`Startup`</ph>刪除區段，包含區段名稱和所有其索引鍵。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
          <source>User is not logged in.</source>
          <target state="translated">使用者未登入。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Interaction">
          <source>Returns the string associated with an operating-system environment variable.</source>
          <target state="translated">傳回與作業系統環境變數關聯的字串。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</source>
          <target state="translated">運算式，可評估包含環境變數名稱的字串，或評估與環境字串表中的環境字串數字順序相對應的整數。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          <target state="translated">傳回與作業系統環境變數關聯的字串。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          <target state="translated">傳回與作業系統環境變數關聯的字串。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If <ph id="ph1">`Expression`</ph> contains a string, the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>包含字串，<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>函式會傳回指派給指定的環境字串的文字，也就是將環境字串資料表中的該環境變數等號 （=） 後面的文字。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If the string in <ph id="ph1">`Expression`</ph> cannot be found in the environment-string table, a zero-length string ("") is returned.</source>
          <target state="translated">如果中的字串<ph id="ph1">`Expression`</ph>找不到在環境字串資料表中，零長度字串 ("") 會傳回。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If <ph id="ph1">`Expression`</ph> contains an integer, the string occupying that numeric position in the environment-string table is returned.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>包含整數佔據環境字串資料表中的數字的位置，會傳回的字串。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns all of the text, including the name of the environment variable.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>傳回所有的文字，包括環境變數的名稱。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>If there is no environment string in the specified position, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns a zero-length string.</source>
          <target state="translated">如果沒有環境字串中指定的位置，<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>傳回零長度字串。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function requires environment permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>函式需要環境權限，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>和<bpt id="p1">[</bpt>程式碼存取權限<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source>This example uses the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function to supply the entry number and length of the <ph id="ph2">`PATH`</ph> statement from the environment-string table.</source>
          <target state="translated">這個範例會使用<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>函式提供的項目數目和長度<ph id="ph2">`PATH`</ph>環境字串資料表中的陳述式。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> is missing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> 遺失。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</source>
          <target state="translated">運算式，可評估包含環境變數名稱的字串，或評估與環境字串表中的環境字串數字順序相對應的整數。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          <target state="translated">傳回與作業系統環境變數關聯的字串。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>Returns the string associated with an operating-system environment variable.</source>
          <target state="translated">傳回與作業系統環境變數關聯的字串。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If <ph id="ph1">`Expression`</ph> contains a string, the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>包含字串，<ph id="ph2">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>函式會傳回指派給指定的環境字串的文字，也就是將環境字串資料表中的該環境變數等號 （=） 後面的文字。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If the string in <ph id="ph1">`Expression`</ph> cannot be found in the environment-string table, a zero-length string ("") is returned.</source>
          <target state="translated">如果中的字串<ph id="ph1">`Expression`</ph>找不到在環境字串資料表中，零長度字串 ("") 會傳回。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If <ph id="ph1">`Expression`</ph> contains an integer, the string occupying that numeric position in the environment-string table is returned.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>包含整數佔據環境字串資料表中的數字的位置，會傳回的字串。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>In this case, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns all of the text, including the name of the environment variable.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>傳回所有的文字，包括環境變數的名稱。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>If there is no environment string in the specified position, <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> returns a zero-length string.</source>
          <target state="translated">如果沒有環境字串中指定的位置，<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>傳回零長度字串。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function requires environment permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>函式需要環境權限，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>和<bpt id="p1">[</bpt>程式碼存取權限<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph> function to supply the entry number and length of the <ph id="ph2">`PATH`</ph> statement from the environment-string table.</source>
          <target state="translated">這個範例會使用<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt;</ph>函式提供的項目數目和長度<ph id="ph2">`PATH`</ph>環境字串資料表中的陳述式。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
          <source><ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> is missing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> 遺失。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project whose key settings are requested.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含要求機碼設定的應用程式或專案的名稱。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section whose key settings are requested.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含要求機碼設定之區段的名稱。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="GetAllSettings" /&gt;</ph> returns an object that contains a two-dimensional array of strings.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="GetAllSettings" /&gt;</ph> 會傳回包含二維字串陣列的物件。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>The strings contain all the key settings in the specified section, plus their corresponding values.</source>
          <target state="translated">這些字串會包含指定之區段中的所有機碼設定，加上其對應的值。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Returns a list of key settings and their respective values (originally created with <ph id="ph1">&lt;see langword="SaveSetting" /&gt;</ph>) from an application's entry in the Windows registry.</source>
          <target state="translated">從 Windows 登錄的應用程式項目中傳回機碼設定及其對應值的清單 (原本是以 <ph id="ph1">&lt;see langword="SaveSetting" /&gt;</ph> 所建立)。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Using the <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能可以提供比 <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph> 更強大的登錄作業產能和效能。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Returns a list of key settings and their respective values (originally created with <ph id="ph1">&lt;see langword="SaveSetting" /&gt;</ph>) from an application's entry in the Windows registry.</source>
          <target state="translated">從 Windows 登錄的應用程式項目中傳回機碼設定及其對應值的清單 (原本是以 <ph id="ph1">&lt;see langword="SaveSetting" /&gt;</ph> 所建立)。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Using the <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能可以提供比 <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph> 更強大的登錄作業產能和效能。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source><ph id="ph1">`GetAllSettings`</ph> returns an uninitialized <ph id="ph2">`Object`</ph> if either <ph id="ph3">`AppName`</ph> or <ph id="ph4">`Section`</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">`GetAllSettings`</ph> 傳回未初始化<ph id="ph2">`Object`</ph>如果<ph id="ph3">`AppName`</ph>或<ph id="ph4">`Section`</ph>不存在。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Because it operates under the <ph id="ph1">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively, <ph id="ph2">`GetAllSettings`</ph> requires that a user be logged on.</source>
          <target state="translated">因為其下的運作方式<ph id="ph1">`HKEY_LOCAL_USER`</ph>登錄機碼，其不在作用中使用者以互動方式登入前，<ph id="ph2">`GetAllSettings`</ph>需要使用者登入。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下<ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph>或<ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph>登錄機碼。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>This example first uses the <ph id="ph1">`SaveSetting`</ph> function to make entries in the Windows registry for the application specified as <ph id="ph2">`AppName`</ph>, then uses the <ph id="ph3">`GetAllSettings`</ph> function to display the settings.</source>
          <target state="translated">這個範例會先使用<ph id="ph1">`SaveSetting`</ph>函式要在 Windows 登錄是否為指定的應用程式中的項目<ph id="ph2">`AppName`</ph>，然後使用<ph id="ph3">`GetAllSettings`</ph>函式來顯示的設定。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Note that application names and <ph id="ph1">`Section`</ph> names cannot be retrieved with <ph id="ph2">`GetAllSettings`</ph>.</source>
          <target state="translated">請注意該應用程式名稱和<ph id="ph1">`Section`</ph>名稱無法使用擷取<ph id="ph2">`GetAllSettings`</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>Finally, the <ph id="ph1">`DeleteSetting`</ph> function removes the application's entries.</source>
          <target state="translated">最後，<ph id="ph1">`DeleteSetting`</ph>函式會移除應用程式的項目。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
          <source>User is not logged in.</source>
          <target state="translated">使用者未登入。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The full path and name of the file containing the object to retrieve.</source>
          <target state="translated">檔案的完整路徑和名稱，此檔案包含要擷取的物件。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> is omitted, <bpt id="p2">&lt;c&gt;</bpt>Class<ept id="p2">&lt;/c&gt;</ept> is required.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept>，則將需要 <bpt id="p2">&lt;c&gt;</bpt>Class<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Required if <bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> is not supplied.</source>
          <target state="translated">如果未提供 <bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept>，則將需要它。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>A string representing the class of the object.</source>
          <target state="translated">表示物件類別的字串。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>Class<ept id="p1">&lt;/c&gt;</ept> argument has the following syntax and parts:</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Class<ept id="p1">&lt;/c&gt;</ept> 引數具有下列語法和組成部分：</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>appname<ept id="p1">&lt;/c&gt;</ept><bpt id="p2">&lt;c&gt;</bpt>.<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">&lt;c&gt;</bpt>objecttype<ept id="p3">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>appname<ept id="p1">&lt;/c&gt;</ept><bpt id="p2">&lt;c&gt;</bpt>.<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">&lt;c&gt;</bpt>objecttype<ept id="p3">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[1|1] Parameter</source>
          <target state="translated">[1|1] 參數</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[1|2] Description</source>
          <target state="translated">[1|2] 說明</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[2|1] <bpt id="p1">&lt;c&gt;</bpt>appname<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated">[2|1] <bpt id="p1">&lt;c&gt;</bpt>appname<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[2|2] Required.</source>
          <target state="translated">需要 [2|2]。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The name of the application providing the object.</source>
          <target state="translated">提供物件的應用程式名稱。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[3|1] <bpt id="p1">&lt;c&gt;</bpt>objecttype<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated">[3|1] <bpt id="p1">&lt;c&gt;</bpt>objecttype<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>[3|2] Required.</source>
          <target state="translated">需要 [3|2]。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The type or class of object to create.</source>
          <target state="translated">要建立之物件的類型或類別。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Returns a reference to an object provided by a COM component.</source>
          <target state="translated">傳回 COM 元件提供之物件的參考。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Returns a reference to an object provided by a COM component.</source>
          <target state="translated">傳回 COM 元件提供之物件的參考。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Use the <ph id="ph1">`GetObject`</ph> function to load an instance of a COM component from a file.</source>
          <target state="translated">使用<ph id="ph1">`GetObject`</ph>函式以從檔案載入 COM 元件的執行個體。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example illustrates this.</source>
          <target state="translated">下列範例將說明這點。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>When this code runs, the application associated with the specified <ph id="ph1">`PathName`</ph> is started and the object in the specified file is activated.</source>
          <target state="translated">當此程式碼執行時，指定相關聯的應用程式<ph id="ph1">`PathName`</ph>已啟動，且會啟動指定的檔案中的物件。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Default Cases</source>
          <target state="translated">在預設情況下</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If <ph id="ph1">`PathName`</ph> is a zero-length string (<ph id="ph2">`""`</ph>), <ph id="ph3">`GetObject`</ph> returns a new object instance of the specified class type.</source>
          <target state="translated">如果<ph id="ph1">`PathName`</ph>為零長度字串 (<ph id="ph2">`""`</ph>)，<ph id="ph3">`GetObject`</ph>傳回指定的類別類型的新物件執行個體。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If the <ph id="ph1">`PathName`</ph> argument is omitted, <ph id="ph2">`GetObject`</ph> returns a currently active object of the class type specified in <ph id="ph3">`Class`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`PathName`</ph>省略引數，則<ph id="ph2">`GetObject`</ph>傳回指定型別的類別中的目前作用中物件<ph id="ph3">`Class`</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If no object of the specified type exists, an error occurs.</source>
          <target state="translated">如果指定之類型的物件不存在，就會發生錯誤。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Accessing a Subobject</source>
          <target state="translated">存取子物件</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Some applications allow you to activate a subobject associated with a file.</source>
          <target state="translated">某些應用程式可讓您啟動與檔案相關聯的子物件。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>To do this, add an exclamation point (<ph id="ph1">`!`</ph>) to the end of the file name and follow it with a string that identifies the part of the file you want to activate.</source>
          <target state="translated">若要這樣做，加上驚嘆號 (<ph id="ph1">`!`</ph>) 結尾的檔案名稱和後續它與字串識別檔案的一部分，您要啟動。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For information on how to create this string, see the documentation for the application that created the object.</source>
          <target state="translated">如需如何建立這個字串的資訊，請參閱 &lt; 建立物件的應用程式的文件。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For example, in a drawing application you might have multiple layers to a drawing stored in a file.</source>
          <target state="translated">例如，在 繪圖應用程式中您可能至繪圖，儲存在檔案中的多個圖層。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>You could use the following code to activate a layer within a drawing called <ph id="ph1">`schema.cad`</ph>.</source>
          <target state="translated">您可以使用下列程式碼來啟動圖層內呼叫繪圖<ph id="ph1">`schema.cad`</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Specifying a Class</source>
          <target state="translated">指定類別</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If you do not specify the object's <ph id="ph1">`Class`</ph>, Automation determines the application to start and the object to activate, based on the file name you provide.</source>
          <target state="translated">如果您未指定物件的<ph id="ph1">`Class`</ph>，Automation 會決定應用程式開始並以物件來啟用，根據您所提供的檔名。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Some files, however, can support more than one class of object.</source>
          <target state="translated">不過，某些檔案，可以支援多個物件類別。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For example, a drawing might support three different types of objects: an <ph id="ph1">`Application`</ph> object, a <ph id="ph2">`Drawing`</ph> object, and a <ph id="ph3">`Toolbar`</ph> object, all of which are part of the same file.</source>
          <target state="translated">例如，繪圖可能支援三種不同類型的物件：<ph id="ph1">`Application`</ph>物件，<ph id="ph2">`Drawing`</ph>物件，和<ph id="ph3">`Toolbar`</ph>物件，都是相同的檔案部分。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>To specify which object in a file you want to activate, use the optional <ph id="ph1">`Class`</ph> argument.</source>
          <target state="translated">若要指定您要啟動的檔案中的物件，使用選擇性<ph id="ph1">`Class`</ph>引數。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example illustrates this.</source>
          <target state="translated">下列範例將說明這點。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>In the preceding example, <ph id="ph1">`Figment`</ph> is the name of a drawing application and <ph id="ph2">`Drawing`</ph> is one of the object types it supports.</source>
          <target state="translated">在上述範例中，<ph id="ph1">`Figment`</ph>繪圖應用程式的名稱和<ph id="ph2">`Drawing`</ph>是其中一個支援的物件類型。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Using the Object</source>
          <target state="translated">使用物件</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Once an object is activated, you refer to it in code using the object variable you declared.</source>
          <target state="translated">啟動物件後，您在中參考它的程式碼使用您所宣告物件變數。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>In the preceding example, you access properties and methods of the new object using the object variable <ph id="ph1">`drawObj`</ph>.</source>
          <target state="translated">在上述範例中，存取新的物件使用的物件變數的屬性和方法<ph id="ph1">`drawObj`</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example illustrates this.</source>
          <target state="translated">下列範例將說明這點。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Use the <ph id="ph1">`GetObject`</ph> function when there is a current instance of the object or if you want to create the object with a file loaded.</source>
          <target state="translated">使用<ph id="ph1">`GetObject`</ph>函式物件的目前執行個體時，或如果您想要載入的檔案建立物件。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If there is no current instance, and you do not want the object started with a file loaded, use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.CreateObject%2A&gt;</ph> function.</source>
          <target state="translated">如果沒有目前的執行個體，而且您不想開始使用的物件載入的檔案，請使用<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Interaction.CreateObject%2A&gt;</ph>函式。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times <ph id="ph1">`CreateObject`</ph> is called.</source>
          <target state="translated">如果物件已本身註冊為 ActiveX 單一執行個體物件，只有一個執行個體物件的建立，不論如何多次<ph id="ph1">`CreateObject`</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>With a single-instance object, <ph id="ph1">`GetObject`</ph> always returns the same instance when called with the zero-length string (<ph id="ph2">`""`</ph>) syntax, and it causes an error if the <ph id="ph3">`PathName`</ph> argument is omitted.</source>
          <target state="translated">使用單一執行個體物件，<ph id="ph1">`GetObject`</ph>一律會傳回相同的執行個體時呼叫零長度字串 (<ph id="ph2">`""`</ph>) 語法中，而且如果會造成錯誤<ph id="ph3">`PathName`</ph>省略引數。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>You cannot use <ph id="ph1">`GetObject`</ph> to obtain a reference to a class created with Visual Basic.</source>
          <target state="translated">您無法使用<ph id="ph1">`GetObject`</ph>來取得要使用 Visual Basic 中建立的類別的參考。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The <ph id="ph1">`GetObject`</ph> function requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`GetObject`</ph>函式需要 unmanaged 程式碼權限，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>和<bpt id="p1">[</bpt>程式碼存取權限<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">`GetObject`</ph> function to obtain a reference to a specific Microsoft Excel worksheet (<ph id="ph2">`excelObj`</ph>).</source>
          <target state="translated">下列範例會使用<ph id="ph1">`GetObject`</ph>函數來取得特定的 Microsoft Excel 工作表的參考 (<ph id="ph2">`excelObj`</ph>)。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>It uses the worksheet's <ph id="ph1">`Application`</ph> property to make Excel visible, to close it, and to perform other actions.</source>
          <target state="translated">它會使用工作表的<ph id="ph1">`Application`</ph>屬性，以顯示 Excel，請將其關閉，並執行其他動作。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Using two API calls, the <ph id="ph1">`detectExcel`</ph> procedure looks for Excel, and if it is running, enters it in the Running Object table.</source>
          <target state="translated">使用兩個 API 呼叫，<ph id="ph1">`detectExcel`</ph>程序會尋找 Excel，與正在執行，如果在執行物件表格中輸入它。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The first call to <ph id="ph1">`GetObject`</ph> causes an error if Excel is not already running, which in this example causes the <ph id="ph2">`excelWasNotRunning`</ph> flag to be set to <ph id="ph3">`True`</ph>.</source>
          <target state="translated">第一次呼叫<ph id="ph1">`GetObject`</ph>若 Excel 尚未執行，在此範例會產生錯誤會導致<ph id="ph2">`excelWasNotRunning`</ph>旗標設為<ph id="ph3">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The second call to <ph id="ph1">`GetObject`</ph> specifies a file to open.</source>
          <target state="translated">第二個呼叫<ph id="ph1">`GetObject`</ph>指定要開啟的檔案。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If Excel is not already running, the second call starts it and returns a reference to the worksheet represented by the specified file, <ph id="ph1">`test.xls`</ph>.</source>
          <target state="translated">如果尚未執行 Excel，第二次呼叫啟動時，它，並將參考傳回給所指定的檔案，表示工作表<ph id="ph1">`test.xls`</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>The file must exist in the specified location; otherwise, Visual Basic throws a <ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>.</source>
          <target state="translated">該檔案必須存在於指定的位置否則，Visual Basic 會擲回<ph id="ph1">&lt;xref:System.IO.FileNotFoundException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>Next, the example code makes both Excel and the window containing the specified worksheet visible.</source>
          <target state="translated">接下來，範例程式碼會讓 Excel 並包含指定的工作表可見的視窗。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>This example requires <ph id="ph1">`Option Strict Off`</ph> because it uses late binding, where objects are assigned to variables of type <ph id="ph2">`Object`</ph>.</source>
          <target state="translated">這個範例需要<ph id="ph1">`Option Strict Off`</ph>因為它使用晚期繫結，其中物件指派給變數的型別<ph id="ph2">`Object`</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>You can specify <ph id="ph1">`Option Strict On`</ph> and declare objects of specific object types if you add a reference to the Excel type library from the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> dialog box of the <bpt id="p3">**</bpt>Project<ept id="p3">**</ept> menu in Visual Studio.</source>
          <target state="translated">您可以指定<ph id="ph1">`Option Strict On`</ph>和宣告的特定物件類型的物件，如果您將參考加入至 Excel 類型程式庫，從<bpt id="p1">**</bpt>COM<ept id="p1">**</ept> ] 索引標籤<bpt id="p2">**</bpt>加入參考<ept id="p2">**</ept>對話方塊中的 [ <bpt id="p3">**</bpt>專案<ept id="p3">**</ept>Visual Studio 中的功能表。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>When you call the <ph id="ph1">`getExcel`</ph> function, a check is made to see if Excel is already running.</source>
          <target state="translated">當您呼叫<ph id="ph1">`getExcel`</ph>函式，會進行檢查以查看是否已正在執行 Excel。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If it is not, then an instance is created.</source>
          <target state="translated">如果不存在，則會建立執行個體。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>For simplicity, the preceding example assumes that any window called <ph id="ph1">`XLMAIN`</ph> belongs to an instance of Microsoft Excel.</source>
          <target state="translated">為了簡單起見，上述範例會假設任何視窗呼叫<ph id="ph1">`XLMAIN`</ph>屬於 Microsoft Excel 的執行個體。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>If another object, possibly launched by illicit tampering, created a window with that name, it would receive all the messages you intended for Excel.</source>
          <target state="translated">如果另一個物件，可能是啟動了其他人違法遭到竄改，具有該名稱建立一個視窗，它會接收您適用於 Excel 的所有訊息。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>In an application to be used for production, you should include some more rigorous testing to verify that <ph id="ph1">`XLMAIN`</ph> really belongs to Excel.</source>
          <target state="translated">要用於實際執行應用程式中，您應該包含某些使用較嚴格的測試可讓您確認<ph id="ph1">`XLMAIN`</ph>確實屬於 Excel。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>No object of the specified class type exists.</source>
          <target state="translated">指定類別類型的物件不存在。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
          <source>No object with the specified path and file name exists.</source>
          <target state="translated">具有指定路徑和檔名的物件不存在。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project whose key setting is requested.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含要求機碼設定的應用程式或專案的名稱。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section in which the key setting is found.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含找到機碼設定所在的區段名稱。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the key setting to return.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含要傳回之機碼設定的名稱。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Expression containing the value to return if no value is set in the <bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> setting.</source>
          <target state="translated">如果未在 <bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> 設定中設定任何值，則為包含傳回值的運算式。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>If omitted, <bpt id="p1">&lt;c&gt;</bpt>Default<ept id="p1">&lt;/c&gt;</ept> is assumed to be a zero-length string ("").</source>
          <target state="translated">如果省略，則會假設 <bpt id="p1">&lt;c&gt;</bpt>Default<ept id="p1">&lt;/c&gt;</ept> 是長度為零的字串 ("")。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Returns a key setting value from an application's entry in the Windows registry.</source>
          <target state="translated">從 Windows 登錄的應用程式項目中傳回機碼設定值。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能可以提供比 <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph> 更強大的登錄作業產能和效能。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Returns a key setting value from an application's entry in the Windows registry.</source>
          <target state="translated">從 Windows 登錄的應用程式項目中傳回機碼設定值。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能可以提供比 <ph id="ph2">&lt;see langword="GetAllSettings" /&gt;</ph> 更強大的登錄作業產能和效能。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>If any of the items named in the <ph id="ph1">`GetSetting`</ph> arguments do not exist, <ph id="ph2">`GetSetting`</ph> returns a value of <ph id="ph3">`Default`</ph>.</source>
          <target state="translated">如果任一項目中名為<ph id="ph1">`GetSetting`</ph>引數不存在，<ph id="ph2">`GetSetting`</ph>傳回值的<ph id="ph3">`Default`</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Because it operates under the <ph id="ph1">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively, <ph id="ph2">`GetSetting`</ph> requires that a user be logged on.</source>
          <target state="translated">因為其下的運作方式<ph id="ph1">`HKEY_LOCAL_USER`</ph>登錄機碼，其不在作用中使用者以互動方式登入前，<ph id="ph2">`GetSetting`</ph>需要使用者登入。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下<ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph>或<ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph>登錄機碼。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`GetSetting`</ph> requires <ph id="ph2">`Read`</ph><ph id="ph3">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">`GetSetting`</ph> 需要<ph id="ph2">`Read`</ph> <ph id="ph3">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>This example first uses the <ph id="ph1">`SaveSetting`</ph> function to make entries in the Windows registry for the application specified as <ph id="ph2">`AppName`</ph>, and then uses the <ph id="ph3">`GetSetting`</ph> function to display one of the settings.</source>
          <target state="translated">這個範例會先使用<ph id="ph1">`SaveSetting`</ph>函式要在 Windows 登錄是否為指定的應用程式中的項目<ph id="ph2">`AppName`</ph>，然後使用<ph id="ph3">`GetSetting`</ph>函式，以顯示其中一個設定。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Because the <ph id="ph1">`Default`</ph> argument is specified, some value is guaranteed to be returned.</source>
          <target state="translated">因為<ph id="ph1">`Default`</ph>引數指定時，某些保證值傳回。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Notice that <ph id="ph1">`Section`</ph> names cannot be retrieved with <ph id="ph2">`GetSetting`</ph>.</source>
          <target state="translated">請注意，<ph id="ph1">`Section`</ph>名稱無法使用擷取<ph id="ph2">`GetSetting`</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>Finally, the <ph id="ph1">`DeleteSetting`</ph> function removes all the application's entries.</source>
          <target state="translated">最後，<ph id="ph1">`DeleteSetting`</ph>函式會移除應用程式的所有項目。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
          <source>One or more arguments are not <ph id="ph1">&lt;see langword="String" /&gt;</ph> expressions, or user is not logged in.</source>
          <target state="translated">一個或多個引數不是 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，或使用者未登入。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>The expression you want to evaluate.</source>
          <target state="translated">要評估的運算式。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returned if <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 評估為 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，則傳回。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returned if <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> 評估為 <ph id="ph1">&lt;see langword="False" /&gt;</ph>，則傳回。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returns one of two objects, depending on the evaluation of an expression.</source>
          <target state="translated">根據運算式的評估結果，傳回兩個物件當中的其中一個。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Returns one of two objects, depending on the evaluation of an expression.</source>
          <target state="translated">根據運算式的評估結果，傳回兩個物件當中的其中一個。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>The <ph id="ph1">`IIf`</ph> function provides a counterpart for the ternary <bpt id="p1">[</bpt>Conditional Operator: ? :<ept id="p1">](http://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271)</ept> in Visual C++.</source>
          <target state="translated"><ph id="ph1">`IIf`</ph>函式會提供對應項目三元<bpt id="p1">[</bpt>條件運算子:？:<ept id="p1">](http://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271)</ept> Visual c + + 中。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>This example uses the <ph id="ph1">`IIf`</ph> function to evaluate the <ph id="ph2">`testMe`</ph> parameter of the <ph id="ph3">`checkIt`</ph> procedure and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small".</source>
          <target state="translated">這個範例會使用<ph id="ph1">`IIf`</ph>函數來評估<ph id="ph2">`testMe`</ph>參數<ph id="ph3">`checkIt`</ph>程序並傳回 word 「 大 」 if 數量大於 1000年; 否則它會傳回這個字 「 小 」。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
          <source>Note that if <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`On`</ph>, you must use the <ph id="ph3">`CStr`</ph> keyword to explicitly convert the return from <ph id="ph4">`Object`</ph> to <ph id="ph5">`String`</ph>.</source>
          <target state="translated">請注意，如果<ph id="ph1">`Option Strict`</ph>是<ph id="ph2">`On`</ph>，您必須使用<ph id="ph3">`CStr`</ph>關鍵字，明確轉換從傳回<ph id="ph4">`Object`</ph>至<ph id="ph5">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Required <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed as the message in the dialog box.</source>
          <target state="translated">必要項。<ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，顯示為對話方塊中的訊息。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>The maximum length of <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> is approximately 1024 characters, depending on the width of the characters used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> 的最大長度約為 1024 個字元，需視使用的字元寬度而定。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> consists of more than one line, you can separate the lines using a carriage return character (<ph id="ph1">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph2">&lt;see langword=")" /&gt;</ph>), a line feed character (<ph id="ph3">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph4">&lt;see langword=")" /&gt;</ph>), or a carriage return/line feed combination (<ph id="ph5">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph6">&lt;see langword=")" /&gt;</ph> <ph id="ph7">&amp;amp;</ph> <ph id="ph8">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph9">&lt;see langword=")" /&gt;</ph>) between each line.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> 包含多行，您可以在各行間使用歸位字元 (<ph id="ph1">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph2">&lt;see langword=")" /&gt;</ph>)、換行字元 (<ph id="ph3">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph4">&lt;see langword=")" /&gt;</ph>) 或歸位字元/換行字元組合 (<ph id="ph5">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph6">&lt;see langword=")" /&gt;</ph> <ph id="ph7">&amp;amp;</ph> <ph id="ph8">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph9">&lt;see langword=")" /&gt;</ph>) 來分隔行。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed in the title bar of the dialog box.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，會顯示在對話方塊的標題列中。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>Title<ept id="p1">&lt;/c&gt;</ept>, the application name is placed in the title bar.</source>
          <target state="translated">如果您省略 <bpt id="p1">&lt;c&gt;</bpt>Title<ept id="p1">&lt;/c&gt;</ept>，則會將應用程式名稱置於標題列中。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed in the text box as the default response if no other input is provided.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，會在未提供其他輸入時，顯示在文字方塊中當做預設回應。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>DefaultResponse<ept id="p1">&lt;/c&gt;</ept>, the displayed text box is empty.</source>
          <target state="translated">如果您省略 <bpt id="p1">&lt;c&gt;</bpt>DefaultResponse<ept id="p1">&lt;/c&gt;</ept>，則顯示的文字方塊會是空的。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen.</source>
          <target state="translated">數值運算式，可指定從螢幕左邊緣算起的對話方塊左邊緣的距離 (以 Twip 為單位)。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>XPos<ept id="p1">&lt;/c&gt;</ept>, the dialog box is centered horizontally.</source>
          <target state="translated">如果您省略 <bpt id="p1">&lt;c&gt;</bpt>XPos<ept id="p1">&lt;/c&gt;</ept>，則會以水平置中方式顯示對話方塊。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen.</source>
          <target state="translated">數值運算式，可指定從螢幕上邊緣算起的對話方塊上邊緣的距離 (以 Twip 為單位)。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>YPos<ept id="p1">&lt;/c&gt;</ept>, the dialog box is positioned vertically approximately one-third of the way down the screen.</source>
          <target state="translated">如果您省略 <bpt id="p1">&lt;c&gt;</bpt>YPos<ept id="p1">&lt;/c&gt;</ept>，則會以垂直顯示方式將對話方塊置於往螢幕下方距離約三分之一的地方。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</source>
          <target state="translated">在對話方塊中顯示提示、等候使用者輸入文字或按一下按鈕，然後傳回包含文字方塊內容的字串。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</source>
          <target state="translated">在對話方塊中顯示提示、等候使用者輸入文字或按一下按鈕，然後傳回包含文字方塊內容的字串。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If the user clicks <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept>, a zero-length string is returned.</source>
          <target state="translated">如果使用者按一下<bpt id="p1">**</bpt>取消<ept id="p1">**</ept>，就會傳回零長度字串。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>To specify more than the first argument, you must use the <ph id="ph1">`InputBox`</ph> function in an expression.</source>
          <target state="translated">若要指定超過第一個引數，您必須使用<ph id="ph1">`InputBox`</ph>函式在運算式中的。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If you omit any positional arguments, you must retain the corresponding comma delimiter.</source>
          <target state="translated">如果您省略任何位置的引數時，您必須保留對應的逗號分隔符號。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`InputBox`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`InputBox`</ph>函式需要<ph id="ph2">`UIPermission`</ph>在<ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph>層級，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>For more information, see  and <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph> .</source>
          <target state="translated">如需詳細資訊，請參閱和<ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>This example shows various ways to use the <ph id="ph1">`InputBox`</ph> function to prompt the user to enter a value.</source>
          <target state="translated">此範例示範使用各種方式<ph id="ph1">`InputBox`</ph>函式來提示使用者輸入的值。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>If the x and y positions are omitted, the dialog box is automatically centered for the respective axes.</source>
          <target state="translated">如果 x 和 y 位置會省略，對話方塊會自動置中的個別座標軸。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
          <source>The variable <ph id="ph1">`MyValue`</ph> contains the value entered by the user if the user clicks OK or presses the ENTER key.</source>
          <target state="translated">變數<ph id="ph1">`MyValue`</ph>包含如果使用者按一下 [確定]，或按下 ENTER 鍵，使用者所輸入的值。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed as the message in the dialog box.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，顯示為對話方塊中的訊息。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The maximum length of <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> is approximately 1024 characters, depending on the width of the characters used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> 的最大長度約為 1024 個字元，需視使用的字元寬度而定。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> consists of more than one line, you can separate the lines using a carriage return character (<ph id="ph1">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph2">&lt;see langword=")" /&gt;</ph>), a line feed character (<ph id="ph3">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph4">&lt;see langword=")" /&gt;</ph>), or a carriage return/linefeed character combination (<ph id="ph5">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph6">&lt;see langword=")" /&gt;</ph> <ph id="ph7">&amp;amp;</ph> <ph id="ph8">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph9">&lt;see langword=")" /&gt;</ph>) between each line.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Prompt<ept id="p1">&lt;/c&gt;</ept> 包含多行，您可以在各行間使用歸位字元 (<ph id="ph1">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph2">&lt;see langword=")" /&gt;</ph>)、換行字元 (<ph id="ph3">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph4">&lt;see langword=")" /&gt;</ph>) 或歸位字元/換行字元組合 (<ph id="ph5">&lt;see langword="Chr(" /&gt;</ph>13<ph id="ph6">&lt;see langword=")" /&gt;</ph> <ph id="ph7">&amp;amp;</ph> <ph id="ph8">&lt;see langword="Chr(" /&gt;</ph>10<ph id="ph9">&lt;see langword=")" /&gt;</ph>) 來分隔行。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box.</source>
          <target state="translated">數值運算式，其為指定要顯示的按鈕數目和類型、要使用的圖示樣式、預設按鈕的識別以及訊息方塊是否為強制回應等值的總和。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>Buttons<ept id="p1">&lt;/c&gt;</ept>, the default value is zero.</source>
          <target state="translated">如果您省略 <bpt id="p1">&lt;c&gt;</bpt>Buttons<ept id="p1">&lt;/c&gt;</ept>，預設值會是零。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression displayed in the title bar of the dialog box.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，會顯示在對話方塊的標題列中。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If you omit <bpt id="p1">&lt;c&gt;</bpt>Title<ept id="p1">&lt;/c&gt;</ept>, the application name is placed in the title bar.</source>
          <target state="translated">如果您省略 <bpt id="p1">&lt;c&gt;</bpt>Title<ept id="p1">&lt;/c&gt;</ept>，則會將應用程式名稱置於標題列中。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</source>
          <target state="translated">在對話方塊中顯示訊息、等候使用者按一下按鈕，然後傳回表示使用者按下的按鈕之整數。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Constant</source>
          <target state="translated">常數</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If you omit any positional arguments, you must retain the corresponding comma delimiter.</source>
          <target state="translated">如果您省略任何位置的引數時，您必須保留對應的逗號分隔符號。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If the dialog box displays a <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button, pressing the ESC key has the same effect as clicking <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept></source>
          <target state="translated">如果對話方塊顯示<bpt id="p1">**</bpt>取消<ept id="p1">**</ept>按鈕時，按 ESC 鍵具有相同的效果與按一下<bpt id="p2">**</bpt>取消<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>If the dialog box contains a <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button, context-sensitive Help is provided for the dialog box.</source>
          <target state="translated">如果對話方塊包含<bpt id="p1">**</bpt>協助<ept id="p1">**</ept>按鈕時，對話方塊中提供即時線上說明。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>However, no value is returned until one of the other buttons is chosen.</source>
          <target state="translated">不過，直到選擇其中一個其他按鈕，則會不傳回任何值。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>In Windows Form applications, choosing the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button executes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event for the form.</source>
          <target state="translated">Windows Form 應用程式中，選擇<bpt id="p1">**</bpt>協助<ept id="p1">**</ept>按鈕會執行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph>事件表單。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The <ph id="ph1">`MsgBox`</ph> function requires <ph id="ph2">`UIPermission`</ph> at the <ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph> level, which may affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph>函式需要<ph id="ph2">`UIPermission`</ph>在<ph id="ph3">&lt;xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows&gt;</ph>層級，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.UIPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The <ph id="ph1">`MsgBoxStyle`</ph> enumeration values are listed in the following table.</source>
          <target state="translated"><ph id="ph1">`MsgBoxStyle`</ph>列舉值會列在下表。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Member</source>
          <target state="translated">成員</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Member</source>
          <target state="translated">成員</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays OK button only.</source>
          <target state="translated">只顯示 [確定] 按鈕。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays OK and Cancel buttons.</source>
          <target state="translated">顯示 [確定] 和 [取消] 按鈕。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Abort, Retry, and Ignore buttons.</source>
          <target state="translated">顯示 中止、 重試 」 和 忽略 按鈕。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Yes, No, and Cancel buttons.</source>
          <target state="translated">會顯示 Yes、 No 和取消按鈕。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Yes and No buttons.</source>
          <target state="translated">顯示 [是] 和 [否] 按鈕。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Retry and Cancel buttons.</source>
          <target state="translated">顯示 [重試] 和 [取消] 5d; 按鈕。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Critical Message icon.</source>
          <target state="translated">顯示重大訊息圖示。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>32</source>
          <target state="translated">32</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Warning Query icon.</source>
          <target state="translated">顯示警告查詢 圖示。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>48</source>
          <target state="translated">48</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Warning Message icon.</source>
          <target state="translated">顯示警告訊息圖示。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>64</source>
          <target state="translated">64</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Displays Information Message icon.</source>
          <target state="translated">顯示資訊的訊息圖示。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>First button is default.</source>
          <target state="translated">第一個按鈕是預設值。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>256</source>
          <target state="translated">256</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Second button is default.</source>
          <target state="translated">第二個按鈕是預設值。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>512</source>
          <target state="translated">512</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Third button is default.</source>
          <target state="translated">第三個按鈕是預設值。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Application is modal.</source>
          <target state="translated">應用程式是強制回應。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The user must respond to the message box before continuing work in the current application.</source>
          <target state="translated">使用者必須再繼續目前的應用程式中的工作回應訊息方塊。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>4096</source>
          <target state="translated">4096</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>System is modal.</source>
          <target state="translated">系統為強制回應。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>All applications are suspended until the user responds to the message box.</source>
          <target state="translated">所有應用程式會暫停，直到使用者回應訊息方塊。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>65536</source>
          <target state="translated">65536</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Specifies the message box window as the foreground window.</source>
          <target state="translated">指定訊息方塊視窗為前景視窗。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>524288</source>
          <target state="translated">524288</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Text is right-aligned.</source>
          <target state="translated">文字是靠右對齊。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>1048576</source>
          <target state="translated">1048576</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.</source>
          <target state="translated">指定文字應該顯示為右至左讀取希伯來文和阿拉伯文系統上。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The first group of values (0–5) describes the number and type of buttons displayed in the dialog box.</source>
          <target state="translated">第一個值 (0-5) 群組描述 對話方塊中顯示的按鈕類型與數量。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The second group (16, 32, 48, 64) describes the icon style.</source>
          <target state="translated">第二個群組 （16、 32、 48、 64） 描述的圖示樣式。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The third group (0, 256, 512) determines which button is the default.</source>
          <target state="translated">第三個群組 0、 256 （512） 會判斷哪一個按鈕是預設值。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text.</source>
          <target state="translated">第四個群組的值 （0，4096） 會決定訊息方塊中的強制回應和第五個群組可讓您指定訊息方塊視窗是前景視窗，以及對齊和文字的方向。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>When adding numbers to create a final value for the <ph id="ph1">`Buttons`</ph> argument, use only one number from each group.</source>
          <target state="translated">加入數字來建立的最後一個值時<ph id="ph1">`Buttons`</ph>引數，從每個群組的使用只有一個數字。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>This example uses the <ph id="ph1">`MsgBox`</ph> function to display a critical-error message in a dialog box with Yes and No buttons.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`MsgBox`</ph>顯示嚴重錯誤訊息包含 [是] 和 [否] 按鈕的對話方塊中的函式。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The No button is specified as the default response.</source>
          <target state="translated">[否] 按鈕已指定為預設回應。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>This is done by combining the <ph id="ph1">`MsgBox`</ph> constant values into one numeric expression.</source>
          <target state="translated">這是結合<ph id="ph1">`MsgBox`</ph>成一個數值運算式的常數值。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>In this case, adding 4 (the Yes/No button combination) and 16 (the <bpt id="p1">**</bpt>Critical Message<ept id="p1">**</ept> window) and 256 (the second button as default button) gives a total of 276.</source>
          <target state="translated">在此情況下，將 4 (是/否 按鈕組合) 到 16 (<bpt id="p1">**</bpt>重大訊息<ept id="p1">**</ept>視窗) 和 256 （第二個按鈕為預設按鈕） 提供 276 總數。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>The value returned by the <ph id="ph1">`MsgBox`</ph> function depends on the button chosen by the user: Yes returns a value of 6; No returns a value of 7.</source>
          <target state="translated">所傳回的值<ph id="ph1">`MsgBox`</ph>函式取決於使用者選擇按鈕: [是] 會傳回 6; 的值沒有傳回值為 7。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source><ph id="ph1">&lt;paramref name="Prompt" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression, or <ph id="ph3">&lt;paramref name="Title" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Prompt" /&gt;</ph> 不是 <ph id="ph2">&lt;see langword="String" /&gt;</ph> 運算式，或 <ph id="ph3">&lt;paramref name="Title" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>Process is not running in User Interactive mode.</source>
          <target state="translated">處理序不是在使用者互動模式中執行。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
          <source>One or more parameters not a member of <ph id="ph1">&lt;see langword="MsgBoxResult" /&gt;</ph> or <ph id="ph2">&lt;see langword="MsgBoxStyle" /&gt;</ph> enumeration.</source>
          <target state="translated">一或多個參數不是 <ph id="ph1">&lt;see langword="MsgBoxResult" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="MsgBoxStyle" /&gt;</ph> 列舉類型的成員。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that you want to locate within one of the calculated ranges.</source>
          <target state="translated">在其中一個計算範圍中所要尋找的整數值。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that indicates the start of the set of calculated ranges.</source>
          <target state="translated">整數值，表示這組計算範圍的開頭。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> cannot be less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 不得小於 0。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that indicates the end of the set of calculated ranges.</source>
          <target state="translated">整數值，表示這組計算範圍的結尾。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Stop<ept id="p1">&lt;/c&gt;</ept> cannot be less than or equal to <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Stop<ept id="p1">&lt;/c&gt;</ept> 不得小於或等於 <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Whole number that indicates the size of each range calculated between <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Stop<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">整數值，表示 <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> 到 <bpt id="p2">&lt;c&gt;</bpt>Stop<ept id="p2">&lt;/c&gt;</ept> 之間所計算之每一個範圍的大小。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Interval<ept id="p1">&lt;/c&gt;</ept> cannot be less than 1.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Interval<ept id="p1">&lt;/c&gt;</ept> 不得小於 1。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Returns a string representing the calculated range that contains a number.</source>
          <target state="translated">傳回字串，表示包含數字的計算範圍。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Returns a string representing the calculated range that contains a number.</source>
          <target state="translated">傳回字串，表示包含數字的計算範圍。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`Partition`</ph> function calculates a set of numeric ranges, each containing the number of values specified by <ph id="ph2">`Interval`</ph>.</source>
          <target state="translated"><ph id="ph1">`Partition`</ph>函式會計算一組的數值範圍，每一個都會包含所指定的值數目<ph id="ph2">`Interval`</ph>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The first range begins at <ph id="ph1">`Start`</ph>, and the last range ends at <ph id="ph2">`Stop`</ph>.</source>
          <target state="translated">第一個範圍的開頭位於<ph id="ph1">`Start`</ph>，且最後一個範圍結束於<ph id="ph2">`Stop`</ph>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`Partition`</ph> function then identifies which range contains <ph id="ph2">`Number`</ph> and returns a string describing that range.</source>
          <target state="translated"><ph id="ph1">`Partition`</ph>函式，然後識別哪些範圍包含<ph id="ph2">`Number`</ph>並傳回描述該範圍內的字串。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The range is represented in the string as "<bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept>:<bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept>", where the low end of the range (<bpt id="p3">*</bpt>lowervalue<ept id="p3">*</ept>) is separated from the high end (<bpt id="p4">*</bpt>uppervalue<ept id="p4">*</ept>) by a colon (:).</source>
          <target state="translated">範圍以字串中"<bpt id="p1">*</bpt>值較低值<ept id="p1">*</ept>:<bpt id="p2">*</bpt>較高值<ept id="p2">*</ept>"，其中範圍下限 (<bpt id="p3">*</bpt>值較低值<ept id="p3">*</ept>) 分開高階 (<bpt id="p4">*</bpt>較高值<ept id="p4">*</ept>) 以冒號 （:）。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>If necessary, the <ph id="ph1">`Partition`</ph> function inserts leading spaces before <bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept> and <bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept> so that they both have the same number of characters as the string representation of the value (<ph id="ph2">`Stop`</ph> + 1).</source>
          <target state="translated">如有必要，<ph id="ph1">`Partition`</ph>函式會插入開頭空白之前<bpt id="p1">*</bpt>值較低值<ept id="p1">*</ept>和<bpt id="p2">*</bpt>較高值<ept id="p2">*</ept>，讓它們都具有相同的字元數為字串表示的值 （<ph id="ph2">`Stop`</ph> + 1)。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>This ensures that if you use the output of the <ph id="ph1">`Partition`</ph> function with several values of <ph id="ph2">`Number`</ph>, the resulting text will be handled properly during any subsequent sort operation.</source>
          <target state="translated">這可確保，如果您使用的輸出<ph id="ph1">`Partition`</ph>具有數個值的函式<ph id="ph2">`Number`</ph>，產生的文字會正確地處理在任何後續的排序作業期間。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The following table shows some sample strings for ranges calculated using three sets of <ph id="ph1">`Start`</ph>, <ph id="ph2">`Stop`</ph>, and <ph id="ph3">`Interval`</ph>.</source>
          <target state="translated">下表顯示使用三組計算範圍的某些範例字串<ph id="ph1">`Start`</ph>， <ph id="ph2">`Stop`</ph>，和<ph id="ph3">`Interval`</ph>。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The "First range" and "Last range" columns show the lowest and highest ranges possible given the values of <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph>.</source>
          <target state="translated">「 第一次的範圍 」 和 「 上次範圍 」 資料行顯示最低和最大可能範圍已知值的<ph id="ph1">`Start`</ph>和<ph id="ph2">`Stop`</ph>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The "Before first range" and "After last range" columns show the strings returned for values of <ph id="ph1">`Number`</ph> less than <ph id="ph2">`Start`</ph> and greater than <ph id="ph3">`Stop`</ph>, respectively.</source>
          <target state="translated">"之前第一個範圍 」 和 「 呼叫後最後一個範圍 」 資料行顯示的值傳回的字串<ph id="ph1">`Number`</ph>小於<ph id="ph2">`Start`</ph>且大於<ph id="ph3">`Stop`</ph>分別。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Before first range</source>
          <target state="translated">第一個範圍之前</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>First range</source>
          <target state="translated">第一個範圍</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>Last range</source>
          <target state="translated">最後一個範圍</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>After last range</source>
          <target state="translated">最後一個範圍後</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>99</source>
          <target state="translated">99</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"   : -1"</source>
          <target state="translated">"   : -1"</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"  0:  4"</source>
          <target state="translated">"  0:  4"</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>" 95: 99"</source>
          <target state="translated">" 95: 99"</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"100:   "</source>
          <target state="translated">"100:   "</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>199</source>
          <target state="translated">199</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"   : 19"</source>
          <target state="translated">"   : 19"</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>" 20: 29"</source>
          <target state="translated">" 20: 29"</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"190:199"</source>
          <target state="translated">"190:199"</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"200:   "</source>
          <target state="translated">"200:   "</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>100</source>
          <target state="translated">100</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>1010</source>
          <target state="translated">1010</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"    : 99"</source>
          <target state="translated">"    : 99"</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>" 100: 119"</source>
          <target state="translated">" 100: 119"</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"1000:1010"</source>
          <target state="translated">"1000:1010"</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>"1011:    "</source>
          <target state="translated">"1011:    "</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>In the preceding table, the third line shows the result when <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph> define a set of numbers that cannot be evenly divided by <ph id="ph3">`Interval`</ph>.</source>
          <target state="translated">在上表中，第三行顯示結果時<ph id="ph1">`Start`</ph>和<ph id="ph2">`Stop`</ph>定義一組數字，無法由平均分配<ph id="ph3">`Interval`</ph>。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The last range ends at <ph id="ph1">`Stop`</ph>, making it only 11 numbers long, even though <ph id="ph2">`Interval`</ph> is 20.</source>
          <target state="translated">在最後一個範圍結束於<ph id="ph1">`Stop`</ph>，使得只有 11 個數，即使<ph id="ph2">`Interval`</ph>為 20。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>If <ph id="ph1">`Interval`</ph> is 1, the range is "<ph id="ph2">`Number`</ph>:<ph id="ph3">`Number`</ph>", regardless of the <ph id="ph4">`Start`</ph> and <ph id="ph5">`Stop`</ph> arguments.</source>
          <target state="translated">如果<ph id="ph1">`Interval`</ph>為 1，範圍是 「<ph id="ph2">`Number`</ph>:<ph id="ph3">`Number`</ph>"，而不論<ph id="ph4">`Start`</ph>和<ph id="ph5">`Stop`</ph>引數。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>For example, if <ph id="ph1">`Number`</ph> is 267, <ph id="ph2">`Stop`</ph> is 1000, and <ph id="ph3">`Interval`</ph> is 1, <ph id="ph4">`Partition`</ph> returns " 267: 267".</source>
          <target state="translated">例如，如果<ph id="ph1">`Number`</ph>是 267，<ph id="ph2">`Stop`</ph>為 1000，和<ph id="ph3">`Interval`</ph>為 1，<ph id="ph4">`Partition`</ph>傳回"267: 267"。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">`Partition`</ph> can be useful when constructing database queries.</source>
          <target state="translated"><ph id="ph1">`Partition`</ph> 建構資料庫查詢時，可能很有用。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</source>
          <target state="translated">您可以建立的 SELECT 查詢，顯示發生在不同的數值範圍，例如與發票值從 1 到 1000、 1001年到 2000年多少訂單等等。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>The following example sets up a series of ranges for decades from 1950 through 2049.</source>
          <target state="translated">下列範例會設定範圍的一系列數十 2049 1950。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>It locates the value of <ph id="ph1">`year`</ph> within the appropriate range and returns a <ph id="ph2">`String`</ph> value showing the range.</source>
          <target state="translated">找到的值<ph id="ph1">`year`</ph>內適當的範圍並傳回<ph id="ph2">`String`</ph>顯示範圍的值。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source>If <ph id="ph1">`year`</ph> has a value of 1984, for example, <ph id="ph2">`Partition`</ph> returns "1980:1989".</source>
          <target state="translated">如果<ph id="ph1">`year`</ph>比方說，其值為 1984，<ph id="ph2">`Partition`</ph>傳回"1980:1989"。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0, <ph id="ph3">&lt;paramref name="Stop" /&gt;</ph> <ph id="ph4">&amp;lt;</ph><ph id="ph5">= </ph><ph id="ph6">&lt;paramref name="Start" /&gt;</ph>, or <ph id="ph7">&lt;paramref name="Interval" /&gt;</ph> <ph id="ph8">&amp;lt;</ph> 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0, <ph id="ph3">&lt;paramref name="Stop" /&gt;</ph> <ph id="ph4">&amp;lt;</ph><ph id="ph5">= </ph><ph id="ph6">&lt;paramref name="Start" /&gt;</ph> 或 <ph id="ph7">&lt;paramref name="Interval" /&gt;</ph> <ph id="ph8">&amp;lt;</ph> 1。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the application or project to which the setting applies.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含此設定所套用的應用程式或專案的名稱。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the section in which the key setting is being saved.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含機碼設定儲存所在的區段名稱。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the name of the key setting being saved.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> 運算式，包含所要儲存之機碼設定的名稱。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Expression containing the value to which <bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> is being set.</source>
          <target state="translated">運算式，包含 <bpt id="p1">&lt;c&gt;</bpt>Key<ept id="p1">&lt;/c&gt;</ept> 所設定成的值。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Saves or creates an application entry in the Windows registry.</source>
          <target state="translated">在 Windows 登錄中儲存或建立應用程式項目。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="My" /&gt;</ph> feature gives you greater productivity and performance in registry operations than <ph id="ph2">&lt;see langword="SaveSetting" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="My" /&gt;</ph> 功能可以提供比 <ph id="ph2">&lt;see langword="SaveSetting" /&gt;</ph> 更強大的登錄作業產能和效能。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>For more information, see <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">`SaveSetting`</ph> function adds the key to <ph id="ph2">`HKEY_CURRENT_USER\Software\VB and VBA Program Settings`</ph>.</source>
          <target state="translated"><ph id="ph1">`SaveSetting`</ph>函式會將關鍵<ph id="ph2">`HKEY_CURRENT_USER\Software\VB and VBA Program Settings`</ph>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>If the key setting cannot be saved for any reason, an error occurs.</source>
          <target state="translated">如果因為任何原因無法儲存索引鍵的設定，就會發生錯誤。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`SaveSetting`</ph> requires that a user be logged on since it operates under the <ph id="ph2">`HKEY_LOCAL_USER`</ph> registry key, which is not active until a user logs on interactively.</source>
          <target state="translated"><ph id="ph1">`SaveSetting`</ph> 需要使用者登入，因為其下的運作方式<ph id="ph2">`HKEY_LOCAL_USER`</ph>登錄機碼，在使用者以互動方式登入才會啟用。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph> or the <ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph> registry keys.</source>
          <target state="translated">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下<ph id="ph1">`HKEY_LOCAL_MACHINE\Software\`</ph>或<ph id="ph2">`HKEY_USER\DEFAULT\Software`</ph>登錄機碼。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`SaveSetting`</ph> requires <ph id="ph2">`Write`</ph> and <ph id="ph3">`Create`</ph><ph id="ph4">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">`SaveSetting`</ph> 需要<ph id="ph2">`Write`</ph>和<ph id="ph3">`Create`</ph> <ph id="ph4">&lt;xref:System.Security.Permissions.RegistryPermission&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>The following example first uses the <ph id="ph1">`SaveSetting`</ph> function to make entries in the Windows registry for the <ph id="ph2">`MyApp`</ph> application, and then uses the <ph id="ph3">`DeleteSetting`</ph> function to remove them.</source>
          <target state="translated">下列範例會先使用<ph id="ph1">`SaveSetting`</ph>函式來建立 Windows 登錄中的項目<ph id="ph2">`MyApp`</ph>應用程式，然後再使用<ph id="ph3">`DeleteSetting`</ph>函式，將它們移除。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
          <source>Key registry could not be created, or user is not logged in.</source>
          <target state="translated">無法建立登錄機碼或使用者未登入。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Name of the program to execute, together with any required arguments and command-line switches.</source>
          <target state="translated">要執行的程式名稱，以及任何必要的引數和命令列參數。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> can also include the drive and the directory path or folder.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>PathName<ept id="p1">&lt;/c&gt;</ept> 也可包含磁碟機和目錄路徑或資料夾。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you do not know the path to the program, you can use the <ph id="ph1">&lt;see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /&gt;</ph> to locate it.</source>
          <target state="translated">如果您不知道此程式的路徑，可以使用 <ph id="ph1">&lt;see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /&gt;</ph> 來尋找。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>For example, you can call <bpt id="p1">&lt;c&gt;</bpt>My.Computer.FileSystem.GetFiles("C:<ph id="ph1">\"</ph>, True, "testFile.txt")<ept id="p1">&lt;/c&gt;</ept>, which returns the full path of every file named <bpt id="p2">&lt;c&gt;</bpt>testFile.txt<ept id="p2">&lt;/c&gt;</ept> anywhere on drive C:<ph id="ph2">\\</ph>.</source>
          <target state="translated">例如，您可以呼叫 <bpt id="p1">&lt;c&gt;</bpt>My.Computer.FileSystem.GetFiles("C:<ph id="ph1">\"</ph>, True, "testFile.txt")<ept id="p1">&lt;/c&gt;</ept>，以傳回磁碟機 C:<ph id="ph2">\\</ph> 上任何位置名為 <bpt id="p2">&lt;c&gt;</bpt>testFile.txt<ept id="p2">&lt;/c&gt;</ept> 之每個檔案的完整路徑。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="AppWinStyle" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="AppWinStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>A value chosen from the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.AppWinStyle" /&gt;</ph> specifying the style of the window in which the program is to run.</source>
          <target state="translated">選自 <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.AppWinStyle" /&gt;</ph> 的值，可指定此程式執行所在之視窗的樣式。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Style<ept id="p1">&lt;/c&gt;</ept> is omitted, <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> uses <ph id="ph2">&lt;see langword="AppWinStyle.MinimizedFocus" /&gt;</ph>, which starts the program minimized and with focus.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Style<ept id="p1">&lt;/c&gt;</ept>，則 <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> 會使用 <ph id="ph2">&lt;see langword="AppWinStyle.MinimizedFocus" /&gt;</ph> (其會以最小化狀態啟動程式，並具有焦點)。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>A value indicating whether the <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> function should wait for completion of the program.</source>
          <target state="translated">值，表示 <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> 函式是否應該等候程式完成。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Wait<ept id="p1">&lt;/c&gt;</ept> is omitted, <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> uses <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Wait<ept id="p1">&lt;/c&gt;</ept>，則 <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> 會使用 <ph id="ph2">&lt;see langword="False" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The number of milliseconds to wait for completion if <bpt id="p1">&lt;c&gt;</bpt>Wait<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>Wait<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，則為等候完成的毫秒數。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Timeout<ept id="p1">&lt;/c&gt;</ept> is omitted, <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> uses -1, which means there is no timeout and <ph id="ph2">&lt;see langword="Shell" /&gt;</ph> does not return until the program finishes.</source>
          <target state="translated">如果省略 <bpt id="p1">&lt;c&gt;</bpt>Timeout<ept id="p1">&lt;/c&gt;</ept>，則 <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> 會使用 -1，這表示沒有逾時，且 <ph id="ph2">&lt;see langword="Shell" /&gt;</ph> 要等到程式完成後才會傳回。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Therefore, if you omit <bpt id="p1">&lt;c&gt;</bpt>Timeout<ept id="p1">&lt;/c&gt;</ept> or set it to -1, it is possible that <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> might never return control to your program.</source>
          <target state="translated">因此，如果您省略 <bpt id="p1">&lt;c&gt;</bpt>Timeout<ept id="p1">&lt;/c&gt;</ept> 或是將它設定為 -1，則 <ph id="ph1">&lt;see langword="Shell" /&gt;</ph> 有可能永遠不會將控制權交回給您的程式。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Runs an executable program and returns an integer containing the program's process ID if it is still running.</source>
          <target state="translated">執行可執行程式，並在它仍在執行中時傳回一個整數 (整數中包含此程式的處理序 ID)。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Runs an executable program and returns an integer containing the program's process ID if it is still running.</source>
          <target state="translated">執行可執行程式，並在它仍在執行中時傳回一個整數 (整數中包含此程式的處理序 ID)。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The return value of the <ph id="ph1">`Shell`</ph> function depends on whether the program named in <ph id="ph2">`PathName`</ph> is still executing when <ph id="ph3">`Shell`</ph> returns.</source>
          <target state="translated">傳回值<ph id="ph1">`Shell`</ph>函式，取決於程式是否在名為<ph id="ph2">`PathName`</ph>仍在執行時<ph id="ph3">`Shell`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you set <ph id="ph1">`Wait`</ph> to <ph id="ph2">`True`</ph> and the program finishes before the timeout expires, <ph id="ph3">`Shell`</ph> returns zero.</source>
          <target state="translated">如果您設定<ph id="ph1">`Wait`</ph>至<ph id="ph2">`True`</ph>和在程式完成之前逾時過期，<ph id="ph3">`Shell`</ph>傳回零。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If the timeout expires, or if you omit <ph id="ph1">`Wait`</ph> or set it to <ph id="ph2">`False`</ph>, <ph id="ph3">`Shell`</ph> returns the process ID of the program.</source>
          <target state="translated">如果在逾時到期，或如果您省略<ph id="ph1">`Wait`</ph>或將它設定為<ph id="ph2">`False`</ph>，<ph id="ph3">`Shell`</ph>傳回程式的處理序識別碼。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The process ID is a unique number that identifies the running program.</source>
          <target state="translated">處理序識別碼是唯一的數字，識別執行的程式。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Failure to Start</source>
          <target state="translated">無法啟動</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If the <ph id="ph1">`Shell`</ph> function cannot start the named program, a <ph id="ph2">&lt;xref:System.IO.FileNotFoundException&gt;</ph> error occurs.</source>
          <target state="translated">如果<ph id="ph1">`Shell`</ph>函式的具名的程式中，無法啟動<ph id="ph2">&lt;xref:System.IO.FileNotFoundException&gt;</ph>就會發生錯誤。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>This can happen, for example, when you attempt to run a 16-bit program, such as <ph id="ph1">`command.com`</ph>, from an application using <ph id="ph2">&lt;xref:System.Windows.Forms?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這種情形，例如，當您嘗試執行的 16 位元程式，例如<ph id="ph1">`command.com`</ph>，從應用程式使用<ph id="ph2">&lt;xref:System.Windows.Forms?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>For a workaround, you can run a 32-bit program that calls the desired 16-bit program.</source>
          <target state="translated">因應措施，您可以執行呼叫所需的 16 位元程式的 32 位元程式。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>In the case of <ph id="ph1">`command.com`</ph>, you can run <ph id="ph2">`cmd.exe`</ph> as an alternative.</source>
          <target state="translated">如果是<ph id="ph1">`command.com`</ph>，您可以執行<ph id="ph2">`cmd.exe`</ph>替代。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Waiting for Completion</source>
          <target state="translated">等待完成</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>By default, the <ph id="ph1">`Shell`</ph> function runs the program asynchronously.</source>
          <target state="translated">根據預設，<ph id="ph1">`Shell`</ph>函式會以非同步方式執行程式。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>This means that a program started with the <ph id="ph1">`Shell`</ph> function might not finish executing before the statements following the <ph id="ph2">`Shell`</ph> function are executed.</source>
          <target state="translated">這表示程式入門<ph id="ph1">`Shell`</ph>函式可能會無法完成下列陳述式之前執行<ph id="ph2">`Shell`</ph>函式會執行。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you want to wait for the program to finish before you continue, set <ph id="ph1">`Wait`</ph> to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">如果您想要等待程式完成，您才能繼續，請設定<ph id="ph1">`Wait`</ph>至<ph id="ph2">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Determining the Exit Code</source>
          <target state="translated">判斷結束程式碼</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>A process can return an <bpt id="p1">*</bpt>exit code<ept id="p1">*</ept> when it terminates.</source>
          <target state="translated">處理程序可以傳回<bpt id="p1">*</bpt>結束代碼<ept id="p1">*</ept>當它所終止。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>However, you cannot use <ph id="ph1">`Shell`</ph> to retrieve this exit code, because <ph id="ph2">`Shell`</ph> returns zero if it waits for termination, and also because the process runs in a different object from <ph id="ph3">`Shell`</ph>.</source>
          <target state="translated">不過，您無法使用<ph id="ph1">`Shell`</ph>擷取這個結束程式碼，因為<ph id="ph2">`Shell`</ph>等候終止時，如果傳回零，也因為處理序會從不同物件中執行<ph id="ph3">`Shell`</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination.</source>
          <target state="translated">若要擷取的結束代碼的處理程序，您必須撰寫自己的程式碼來初始化程序，並等候終止。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.</source>
          <target state="translated">下列範例會示範如何起始處理程序，請靜待其終止，並擷取它的結束代碼。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Protecting the File Specification</source>
          <target state="translated">保護的檔案規格</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>You should always enclose the entire path and file specification in quotation marks, as the following example shows.</source>
          <target state="translated">您應該一律括住整個路徑和檔案規格引號，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Each pair of adjacent double quotation marks (<ph id="ph1">`" "`</ph>) within the string literal is interpreted as one double quotation character in the string.</source>
          <target state="translated">每一對相鄰雙引號 (<ph id="ph1">`" "`</ph>) 內的字串常值會解譯為字串中的一個雙引號字元。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Therefore, the preceding example presents the following string to the <ph id="ph1">`Shell`</ph> function:</source>
          <target state="translated">因此，上述範例中會顯示下列字串<ph id="ph1">`Shell`</ph>函式：</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you did not have the path enclosed in quotation marks, Windows would look for a file called <ph id="ph1">`Program.exe`</ph> in the C:\ directory, instead of <ph id="ph2">`display.exe`</ph> in the C:\Program Files directory.</source>
          <target state="translated">如果您不需要以引號括住的路徑，Windows 會尋找名為的檔案<ph id="ph1">`Program.exe`</ph>在 C:\ 目錄中，而不是<ph id="ph2">`display.exe`</ph>C:\Program Files 目錄中。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces.</source>
          <target state="translated">您無法執行將路徑和檔案規格括在引號中，有安全性風險如果檔案名稱或路徑節點包含空格。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>In the preceding example, the path node <ph id="ph1">`\Program Files`</ph> includes a space.</source>
          <target state="translated">在上述範例中，路徑節點<ph id="ph1">`\Program Files`</ph>包含空格。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>If the specification were not inside quotation marks and a program named <ph id="ph1">`Program.exe`</ph> had been installed in C:<ph id="ph2">\\</ph>, for example by illicit tampering, Windows would execute it instead of <ph id="ph3">`display.exe`</ph>.</source>
          <target state="translated">如果規格沒有引號中，名為程式<ph id="ph1">`Program.exe`</ph>已安裝在 c:<ph id="ph2">\\</ph>，例如依了其他人違法遭到竄改，Windows 會執行，而不是<ph id="ph3">`display.exe`</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The <ph id="ph1">`Shell`</ph> function requires unmanaged code permission, which might affect its execution in partial-trust situations.</source>
          <target state="translated"><ph id="ph1">`Shell`</ph>函式需要 unmanaged 程式碼權限，這可能會影響在部分信任情況下執行。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>和<bpt id="p1">[</bpt>程式碼存取權限<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>The following example uses the <ph id="ph1">`Shell`</ph> function to run an application specified by the user.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Shell`</ph>函式來執行指定使用者的應用程式。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source>Specifying <ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph> as the second argument opens the application in normal size and gives it the focus.</source>
          <target state="translated">指定<ph id="ph1">&lt;xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType&gt;</ph>做為第二個引數的標準大小開啟應用程式並為其提供焦點。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Style" /&gt;</ph> is not within range 0 through 9, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Style" /&gt;</ph> 不在 0 到 9 的範圍內 (含 0 和 9)。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Shell" /&gt;</ph> cannot find the <ph id="ph2">&lt;paramref name="PathName" /&gt;</ph> file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Shell" /&gt;</ph> 找不到 <ph id="ph2">&lt;paramref name="PathName" /&gt;</ph> 檔案。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="PathName" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="PathName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Required.</source>
          <target state="translated">必要。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> parameter array.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 參數陣列。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Must have an even number of elements.</source>
          <target state="translated">必須有偶數數目的元素。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>You can supply a list of <ph id="ph1">&lt;see langword="Object" /&gt;</ph> variables or expressions separated by commas, or a single-dimensional array of <ph id="ph2">&lt;see langword="Object" /&gt;</ph> elements.</source>
          <target state="translated">您可以提供以逗號分隔的 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 變數或運算式的清單，或是一維的 <ph id="ph2">&lt;see langword="Object" /&gt;</ph> 元素陣列。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Evaluates a list of expressions and returns an <ph id="ph1">&lt;see langword="Object" /&gt;</ph> value corresponding to the first expression in the list that is <ph id="ph2">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">評估運算式的清單，並傳回對應到此清單中第一個 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的運算式之 <ph id="ph2">&lt;see langword="True" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Evaluates a list of expressions and returns an <ph id="ph1">&lt;see langword="Object" /&gt;</ph> value corresponding to the first expression in the list that is <ph id="ph2">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">評估運算式的清單，並傳回對應到此清單中第一個 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的運算式之 <ph id="ph2">&lt;see langword="True" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The argument supplied to <ph id="ph1">`VarExpr`</ph> consists of paired expressions and values.</source>
          <target state="translated">引數提供給<ph id="ph1">`VarExpr`</ph>配對的運算式和值所組成。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The <ph id="ph1">`Switch`</ph> function evaluates the odd-numbered expressions from lowest to highest index in <ph id="ph2">`VarExpr`</ph>, and returns the even-numbered value associated with the first expression that evaluates to <ph id="ph3">`True`</ph>.</source>
          <target state="translated"><ph id="ph1">`Switch`</ph>函式評估奇數運算式從最低到最高的索引中<ph id="ph2">`VarExpr`</ph>，並傳回第一個運算式評估為相關聯的偶數值<ph id="ph3">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>For example, if <ph id="ph1">`VarExpr(0)`</ph> is <ph id="ph2">`True`</ph>, <ph id="ph3">`Switch`</ph> returns <ph id="ph4">`VarExpr(1)`</ph>, and if <ph id="ph5">`VarExpr(0)`</ph> is <ph id="ph6">`False`</ph> but <ph id="ph7">`VarExpr(2)`</ph> is <ph id="ph8">`True`</ph>, <ph id="ph9">`Switch`</ph> returns <ph id="ph10">`VarExpr(3)`</ph>, and so on.</source>
          <target state="translated">例如，如果<ph id="ph1">`VarExpr(0)`</ph>是<ph id="ph2">`True`</ph>，<ph id="ph3">`Switch`</ph>傳回<ph id="ph4">`VarExpr(1)`</ph>，如果<ph id="ph5">`VarExpr(0)`</ph>是<ph id="ph6">`False`</ph>但<ph id="ph7">`VarExpr(2)`</ph>是<ph id="ph8">`True`</ph>，<ph id="ph9">`Switch`</ph>傳回<ph id="ph10">`VarExpr(3)`</ph>，依此類推。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>If you do not supply the <ph id="ph1">`VarExpr`</ph> argument, <ph id="ph2">`Switch`</ph> returns <ph id="ph3">`Nothing`</ph>.</source>
          <target state="translated">如果您未提供<ph id="ph1">`VarExpr`</ph>引數，<ph id="ph2">`Switch`</ph>傳回<ph id="ph3">`Nothing`</ph>。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The expressions in the argument list can include function calls.</source>
          <target state="translated">引數清單中的運算式可以包含函式呼叫。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>As part of preparing the argument list for the call to <ph id="ph1">`Switch`</ph>, the Visual Basic compiler calls every function in every expression.</source>
          <target state="translated">準備呼叫的引數清單的過程<ph id="ph1">`Switch`</ph>，Visual Basic 編譯器會呼叫每個函式中每個運算式。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is <ph id="ph1">`True`</ph>.</source>
          <target state="translated">這表示您不能依賴特定函式引數清單中之前的運算式時，未呼叫<ph id="ph1">`True`</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>The following example uses the <ph id="ph1">`Switch`</ph> function to return the name of a language that matches the name of a city.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Switch`</ph>函數來傳回相符的城市名稱的語言名稱。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>It requires that <ph id="ph1">`Option Strict`</ph> be <ph id="ph2">`Off`</ph>.</source>
          <target state="translated">它要求<ph id="ph1">`Option Strict`</ph>是<ph id="ph2">`Off`</ph>。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Because the <ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph> namespace also contains a class called <ph id="ph2">&lt;xref:System.Diagnostics.Switch&gt;</ph>, a call to the <ph id="ph3">`Switch`</ph> function must be qualified with the <ph id="ph4">&lt;xref:Microsoft.VisualBasic&gt;</ph> namespace.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Diagnostics&gt;</ph>命名空間也包含一種類別稱為<ph id="ph2">&lt;xref:System.Diagnostics.Switch&gt;</ph>，呼叫<ph id="ph3">`Switch`</ph>函式必須以限定<ph id="ph4">&lt;xref:Microsoft.VisualBasic&gt;</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
          <source>Number of arguments is odd.</source>
          <target state="translated">引數的數目為奇數。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>