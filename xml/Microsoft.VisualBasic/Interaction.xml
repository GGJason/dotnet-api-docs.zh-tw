<Type Name="Interaction" FullName="Microsoft.VisualBasic.Interaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="840287af60b0e7f2b012259e3913dc4478e6041f" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66007600" /></Metadata><TypeSignature Language="C#" Value="public sealed class Interaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Interaction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Interaction" />
  <TypeSignature Language="VB.NET" Value="Public Module Interaction" />
  <TypeSignature Language="C++ CLI" Value="public ref class Interaction sealed" />
  <TypeSignature Language="F#" Value="type Interaction = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="06e4a-101"><see langword="Interaction" /> 模組會包含用於與物件、應用程式和系統互動的程序。</span><span class="sxs-lookup"><span data-stu-id="06e4a-101">The <see langword="Interaction" /> module contains procedures used to interact with objects, applications, and systems.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-102">這個模組支援的 Visual Basic 語言關鍵字和執行階段程式庫成員，以執行其他程式、 呼叫方法或屬性，從電腦發出嗶、 提供命令列字串、 操作 COM 物件，並控制對話方塊。</span><span class="sxs-lookup"><span data-stu-id="06e4a-102">This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</span></span>  
  
## Examples  
 <span data-ttu-id="06e4a-103">下列範例會使用`Shell`執行應用程式使用者所指定的函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-103">The following example uses the `Shell` function to run an application specified by the user.</span></span> <span data-ttu-id="06e4a-104">指定<xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType>作為第二個引數的正常大小開啟應用程式並為其提供焦點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-104">Specifying <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> as the second argument opens the application in normal size and gives it the focus.</span></span>  
  
```vb  
Dim procID As Integer  
' Run calculator.  
procID = Shell("C:\Windows\system32\calc.exe", AppWinStyle.NormalFocus)  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md"><span data-ttu-id="06e4a-105">資訊和互動摘要</span><span class="sxs-lookup"><span data-stu-id="06e4a-105">Information and Interaction Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="06e4a-106">關鍵字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-106">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="06e4a-107">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-107">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AppActivate">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06e4a-108">啟動已經在執行的應用程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-108">Activates an application that is already running.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppActivate">
      <MemberSignature Language="C#" Value="public static void AppActivate (int ProcessId);" />
      <MemberSignature Language="ILAsm" Value=".method public static void AppActivate(int32 ProcessId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppActivate (ProcessId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AppActivate(int ProcessId);" />
      <MemberSignature Language="F#" Value="static member AppActivate : int -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.AppActivate ProcessId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProcessId" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="ProcessId"><span data-ttu-id="06e4a-109"><see langword="Integer" />，指定指派給這個處理序 (Process) 的 Win32 處理序 ID 編號。</span><span class="sxs-lookup"><span data-stu-id="06e4a-109"><see langword="Integer" /> specifying the Win32 process ID number assigned to this process.</span></span> <span data-ttu-id="06e4a-110">如果由 <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" /> 傳回的 ID 不為零，您就可以使用此編號。</span><span class="sxs-lookup"><span data-stu-id="06e4a-110">You can use the ID returned by the <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, provided it is not zero.</span></span></param>
        <summary><span data-ttu-id="06e4a-111">啟動已經在執行的應用程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-111">Activates an application that is already running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-112">您使用`AppActivate`讓應用程式的使用中視窗成為焦點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-112">You use `AppActivate` to bring an application's active window into focus.</span></span> <span data-ttu-id="06e4a-113">您不可能的控制代碼或使用中視窗的參考，或甚至知道哪一個視窗是作用中，在給定的時刻。</span><span class="sxs-lookup"><span data-stu-id="06e4a-113">You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</span></span> <span data-ttu-id="06e4a-114">在此情況下，您無法使用<xref:System.Windows.Forms.Control.Focus%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="06e4a-114">In such a case, you cannot use the <xref:System.Windows.Forms.Control.Focus%2A> method.</span></span>  
  
 <span data-ttu-id="06e4a-115">`AppActivate`函式的焦點變更至具名的應用程式或視窗，但不會影響是否為最大化或最小化。</span><span class="sxs-lookup"><span data-stu-id="06e4a-115">The `AppActivate` function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</span></span> <span data-ttu-id="06e4a-116">當使用者採取某些動作來變更焦點或關閉視窗，焦點會移開啟動的應用程式視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-116">Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</span></span> <span data-ttu-id="06e4a-117">您可以使用`Shell`函式來啟動應用程式，並設定視窗樣式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-117">You can use the `Shell` function to start an application and set the window style.</span></span>  
  
 <span data-ttu-id="06e4a-118">如果您使用`Title`參數，`AppActivate`使用不區分大小寫的比較，而否則要求完全相符的標題列內容。</span><span class="sxs-lookup"><span data-stu-id="06e4a-118">If you use the `Title` parameter, `AppActivate` uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</span></span> <span data-ttu-id="06e4a-119">它會先尋找最上層視窗，然後再透過子視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-119">It first looks through the top-level windows and then through the child windows.</span></span> <span data-ttu-id="06e4a-120">如果找不到相符項目，它會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-120">If it cannot find a match, it throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="06e4a-121">您可以使用`AppActivate`只能使用屬於 windows 處理程序。</span><span class="sxs-lookup"><span data-stu-id="06e4a-121">You can use `AppActivate` only with processes that own windows.</span></span> <span data-ttu-id="06e4a-122">大部分的主控台應用程式不是擁有的 windows，也就是說，它們不會出現在清單中的程序，`AppActivate`搜尋。</span><span class="sxs-lookup"><span data-stu-id="06e4a-122">Most console applications do not own windows, which means that they do not appear in the list of processes that `AppActivate` searches.</span></span> <span data-ttu-id="06e4a-123">從主控台應用程式執行時，系統就會建立個別的處理序，來執行應用程式，並將輸出傳回到主控台程序。</span><span class="sxs-lookup"><span data-stu-id="06e4a-123">When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</span></span> <span data-ttu-id="06e4a-124">因此，當您要求的目前的處理序識別碼，您會取得這個不同的處理序的處理序識別碼，而不是主控台應用程式的處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-124">Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</span></span>  
  
 <span data-ttu-id="06e4a-125">在執行階段`AppActivate`函式會啟用任何執行中的應用程式與標題符合`Title`或使用與相符的處理序識別碼`ProcessId`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-125">At run time, the `AppActivate` function activates any running application with a title that matches `Title` or with a process ID that matches `ProcessId`.</span></span> <span data-ttu-id="06e4a-126">如果找不到相符，便會啟用任何應用程式，其標題字串的結尾`Title`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-126">If there is no exact match, it activates any application whose title string ends with `Title`.</span></span> <span data-ttu-id="06e4a-127">是否有多個名為的應用程式`Title`，則`AppActivate`函式任意選擇一個用來啟動。</span><span class="sxs-lookup"><span data-stu-id="06e4a-127">If there is more than one application named `Title`, the `AppActivate` function arbitrarily chooses one to activate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-128">`AppActivate`函式需要`UIPermission`在<xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>層級，可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-128">The `AppActivate` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-129">如需詳細資訊，請參閱<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-129">For more information, see <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-130">此範例說明的各種用法`AppActivate`函式來啟動應用程式視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-130">This example illustrates various uses of the `AppActivate` function to activate an application window.</span></span> <span data-ttu-id="06e4a-131">如果未執行 「 記事本 」 處理程序，此範例會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-131">If a Notepad process is not running, the example throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="06e4a-132">`Shell`程序會假設應用程式都在指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="06e4a-132">The `Shell` procedure assumes the applications are in the paths specified.</span></span>  
  
 [!code-vb[VbVbalrCatRef#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AppActivate">
      <MemberSignature Language="C#" Value="public static void AppActivate (string Title);" />
      <MemberSignature Language="ILAsm" Value=".method public static void AppActivate(string Title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppActivate (Title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AppActivate(System::String ^ Title);" />
      <MemberSignature Language="F#" Value="static member AppActivate : string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.AppActivate Title" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Title" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Title"><span data-ttu-id="06e4a-133"><see langword="String" /> 運算式，可指定您想啟動的應用程式之標題列中的標題。</span><span class="sxs-lookup"><span data-stu-id="06e4a-133"><see langword="String" /> expression specifying the title in the title bar of the application you want to activate.</span></span> <span data-ttu-id="06e4a-134">當應用程式啟動後，您可以使用指派給應用程式的標題。</span><span class="sxs-lookup"><span data-stu-id="06e4a-134">You can use the title assigned to the application when it was launched.</span></span></param>
        <summary><span data-ttu-id="06e4a-135">啟動已經在執行的應用程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-135">Activates an application that is already running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-136">您使用`AppActivate`讓應用程式的使用中視窗成為焦點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-136">You use `AppActivate` to bring an application's active window into focus.</span></span> <span data-ttu-id="06e4a-137">您不可能的控制代碼或使用中視窗的參考，或甚至知道哪一個視窗是作用中，在給定的時刻。</span><span class="sxs-lookup"><span data-stu-id="06e4a-137">You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</span></span> <span data-ttu-id="06e4a-138">在此情況下，您無法使用<xref:System.Windows.Forms.Control.Focus%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="06e4a-138">In such a case, you cannot use the <xref:System.Windows.Forms.Control.Focus%2A> method.</span></span>  
  
 <span data-ttu-id="06e4a-139">`AppActivate`函式的焦點變更至具名的應用程式或視窗，但不會影響是否為最大化或最小化。</span><span class="sxs-lookup"><span data-stu-id="06e4a-139">The `AppActivate` function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</span></span> <span data-ttu-id="06e4a-140">當使用者採取某些動作來變更焦點或關閉視窗，焦點會移開啟動的應用程式視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-140">Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</span></span> <span data-ttu-id="06e4a-141">您可以使用`Shell`函式來啟動應用程式，並設定視窗樣式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-141">You can use the `Shell` function to start an application and set the window style.</span></span>  
  
 <span data-ttu-id="06e4a-142">如果您使用`Title`參數，`AppActivate`使用不區分大小寫的比較，而否則要求完全相符的標題列內容。</span><span class="sxs-lookup"><span data-stu-id="06e4a-142">If you use the `Title` parameter, `AppActivate` uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</span></span> <span data-ttu-id="06e4a-143">它會先尋找最上層視窗，然後再透過子視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-143">It first looks through the top-level windows and then through the child windows.</span></span> <span data-ttu-id="06e4a-144">如果找不到相符項目，它會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-144">If it cannot find a match, it throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="06e4a-145">您可以使用`AppActivate`只能使用屬於 windows 處理程序。</span><span class="sxs-lookup"><span data-stu-id="06e4a-145">You can use `AppActivate` only with processes that own windows.</span></span> <span data-ttu-id="06e4a-146">大部分的主控台應用程式不是擁有的 windows，也就是說，它們不會出現在清單中的程序，`AppActivate`搜尋。</span><span class="sxs-lookup"><span data-stu-id="06e4a-146">Most console applications do not own windows, which means that they do not appear in the list of processes that `AppActivate` searches.</span></span> <span data-ttu-id="06e4a-147">從主控台應用程式執行時，系統就會建立個別的處理序，來執行應用程式，並將輸出傳回到主控台程序。</span><span class="sxs-lookup"><span data-stu-id="06e4a-147">When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</span></span> <span data-ttu-id="06e4a-148">因此，當您要求的目前的處理序識別碼，您會取得這個不同的處理序的處理序識別碼，而不是主控台應用程式的處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-148">Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</span></span>  
  
 <span data-ttu-id="06e4a-149">在執行階段`AppActivate`函式會啟用任何執行中的應用程式與標題符合`Title`或使用與相符的處理序識別碼`ProcessId`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-149">At run time, the `AppActivate` function activates any running application with a title that matches `Title` or with a process ID that matches `ProcessId`.</span></span> <span data-ttu-id="06e4a-150">如果找不到相符，便會啟用任何應用程式，其標題字串的結尾`Title`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-150">If there is no exact match, it activates any application whose title string ends with `Title`.</span></span> <span data-ttu-id="06e4a-151">是否有多個名為的應用程式`Title`，則`AppActivate`函式任意選擇一個用來啟動。</span><span class="sxs-lookup"><span data-stu-id="06e4a-151">If there is more than one application named `Title`, the `AppActivate` function arbitrarily chooses one to activate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-152">`AppActivate`函式需要`UIPermission`在<xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>層級，可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-152">The `AppActivate` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-153">如需詳細資訊，請參閱<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-153">For more information, see <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-154">此範例說明的各種用法`AppActivate`函式來啟動應用程式視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-154">This example illustrates various uses of the `AppActivate` function to activate an application window.</span></span> <span data-ttu-id="06e4a-155">如果未執行 「 記事本 」 處理程序，此範例會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-155">If a Notepad process is not running, the example throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="06e4a-156">`Shell`程序會假設應用程式都在指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="06e4a-156">The `Shell` procedure assumes the applications are in the paths specified.</span></span>  
  
 [!code-vb[VbVbalrCatRef#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4a-157">透過電腦的喇叭發出聲音。</span><span class="sxs-lookup"><span data-stu-id="06e4a-157">Sounds a tone through the computer's speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-158">字幅和嗶聲的持續時間取決於您的硬體和系統軟體，因此電腦而異。</span><span class="sxs-lookup"><span data-stu-id="06e4a-158">The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-159">`Beep`函式需要`UIPermission`在<xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>層級，可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-159">The `Beep` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-160">如需詳細資訊，請參閱<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-160">For more information, see <xref:System.Security.Permissions.UIPermission>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-161">這個範例會使用`Beep`音透過電腦喇叭的函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-161">This example uses the `Beep` function to sound a tone through the computer's speaker.</span></span>  
  
 [!code-vb[VbVbalrCatRef#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="06e4a-162">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-162">Visual Basic Run-Time Library Members</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md"><span data-ttu-id="06e4a-163">播放音效</span><span class="sxs-lookup"><span data-stu-id="06e4a-163">Playing Sounds</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CallByName">
      <MemberSignature Language="C#" Value="public static object CallByName (object ObjectRef, string ProcName, Microsoft.VisualBasic.CallType UseCallType, params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CallByName(object ObjectRef, string ProcName, valuetype Microsoft.VisualBasic.CallType UseCallType, object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CallByName (ObjectRef As Object, ProcName As String, UseCallType As CallType, ParamArray Args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CallByName(System::Object ^ ObjectRef, System::String ^ ProcName, Microsoft::VisualBasic::CallType UseCallType, ... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberSignature Language="F#" Value="static member CallByName : obj * string * Microsoft.VisualBasic.CallType * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.CallByName (ObjectRef, ProcName, UseCallType, Args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ObjectRef" Type="System.Object" />
        <Parameter Name="ProcName" Type="System.String" />
        <Parameter Name="UseCallType" Type="Microsoft.VisualBasic.CallType" />
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ObjectRef"><span data-ttu-id="06e4a-164">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-164">Required.</span></span> <span data-ttu-id="06e4a-165"><see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-165"><see langword="Object" />.</span></span> <span data-ttu-id="06e4a-166">公開屬性或方法之物件的指標。</span><span class="sxs-lookup"><span data-stu-id="06e4a-166">A pointer to the object exposing the property or method.</span></span></param>
        <param name="ProcName"><span data-ttu-id="06e4a-167">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-167">Required.</span></span> <span data-ttu-id="06e4a-168"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-168"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-169">包含物件之屬性或方法名稱的字串運算式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-169">A string expression containing the name of the property or method on the object.</span></span></param>
        <param name="UseCallType"><span data-ttu-id="06e4a-170">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-170">Required.</span></span> <span data-ttu-id="06e4a-171">型別 <see cref="T:Microsoft.VisualBasic.CallType" /> 的列舉型別成員，其表示正在呼叫的程序型別。</span><span class="sxs-lookup"><span data-stu-id="06e4a-171">An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called.</span></span> <span data-ttu-id="06e4a-172"><see langword="CallType" /> 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-172">The value of <see langword="CallType" /> can be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.</span></span></param>
        <param name="Args"><span data-ttu-id="06e4a-173">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-173">Optional.</span></span> <span data-ttu-id="06e4a-174"><see langword="ParamArray" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-174"><see langword="ParamArray" />.</span></span> <span data-ttu-id="06e4a-175">參數陣列，其中包含要傳遞給屬性或正在呼叫的方法之引數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-175">A parameter array containing the arguments to be passed to the property or method being called.</span></span></param>
        <summary><span data-ttu-id="06e4a-176">在物件上執行方法，或是設定或傳回物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-176">Executes a method on an object, or sets or returns a property on an object.</span></span></summary>
        <returns><span data-ttu-id="06e4a-177">在物件上執行方法，或是設定或傳回物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-177">Executes a method on an object, or sets or returns a property on an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-178">`CallByName`函式在執行階段用來取得的屬性、 設定屬性，或叫用方法。</span><span class="sxs-lookup"><span data-stu-id="06e4a-178">The `CallByName` function is used at runtime to get a property, set a property, or invoke a method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-179">在下列範例中，第一行會使用`CallByName`來設定`Text`屬性文字方塊中的，第二行中擷取的值`Text`屬性，而第三行叫用`Move`方法來移動文字方塊。</span><span class="sxs-lookup"><span data-stu-id="06e4a-179">In the following example, the first line uses `CallByName` to set the `Text` property of a text box, the second line retrieves the value of the `Text` property, and the third line invokes the `Move` method to move the text box.</span></span>  
  
 [!code-vb[VbVbalrFunctions#99](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#99)]  
  
 [!code-vb[VbVbalrFunctions#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#20)]  
  
 <span data-ttu-id="06e4a-180">下一個範例會使用`CallByName`函式來叫用`Add`和`Item`集合物件的方法。</span><span class="sxs-lookup"><span data-stu-id="06e4a-180">The next example uses the `CallByName` function to invoke the `Add` and `Item` methods of a collection object.</span></span>  
  
 [!code-vb[VbVbalrFunctions#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-181">無效的 <paramref name="UseCallType" /> 值，必須是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-181">Invalid <paramref name="UseCallType" /> value; must be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/parameter-arrays.md"><span data-ttu-id="06e4a-182">參數陣列</span><span class="sxs-lookup"><span data-stu-id="06e4a-182">Parameter Arrays</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/early-late-binding/calling-a-property-or-method-using-a-string-name.md"><span data-ttu-id="06e4a-183">使用字串名稱呼叫屬性或方法</span><span class="sxs-lookup"><span data-stu-id="06e4a-183">Calling a Property or Method Using a String Name</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Choose">
      <MemberSignature Language="C#" Value="public static object Choose (double Index, params object[] Choice);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Choose(float64 Index, object[] Choice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose (Index As Double, ParamArray Choice As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Choose(double Index, ... cli::array &lt;System::Object ^&gt; ^ Choice);" />
      <MemberSignature Language="F#" Value="static member Choose : double * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.Choose (Index, Choice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Double" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Choice" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="06e4a-184">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-184">Required.</span></span> <span data-ttu-id="06e4a-185"><see langword="Double" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-185"><see langword="Double" />.</span></span> <span data-ttu-id="06e4a-186">可以產生一個值的數值運算式，所產生的值範圍介於 1 到傳入 <paramref name="Choice" /> 引數中的項目數量之間。</span><span class="sxs-lookup"><span data-stu-id="06e4a-186">Numeric expression that results in a value between 1 and the number of elements passed in the <paramref name="Choice" /> argument.</span></span></param>
        <param name="Choice"><span data-ttu-id="06e4a-187">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-187">Required.</span></span> <span data-ttu-id="06e4a-188"><see langword="Object" /> 參數陣列。</span><span class="sxs-lookup"><span data-stu-id="06e4a-188"><see langword="Object" /> parameter array.</span></span> <span data-ttu-id="06e4a-189">您可以針對以逗號分隔的 <see langword="Object" /> 變數或運算式的清單，或是 <see langword="Object" /> 元素的一維陣列，提供單一變數或是評估為 <see langword="Object" /> 資料類型的運算式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-189">You can supply either a single variable or an expression that evaluates to the <see langword="Object" /> data type, to a list of <see langword="Object" /> variables or expressions separated by commas, or to a single-dimensional array of <see langword="Object" /> elements.</span></span></param>
        <summary><span data-ttu-id="06e4a-190">從引數清單中選取及傳回值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-190">Selects and returns a value from a list of arguments.</span></span></summary>
        <returns><span data-ttu-id="06e4a-191">從引數清單中選取及傳回值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-191">Selects and returns a value from a list of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-192">`Choose`函式會傳回傳入之清單的成員`Choice()`為基礎的值`Index`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-192">The `Choose` function returns a member of the list passed in `Choice()`, based on the value of `Index`.</span></span> <span data-ttu-id="06e4a-193">在選取清單的第一個成員時`Index`為 1。</span><span class="sxs-lookup"><span data-stu-id="06e4a-193">The first member of the list is selected when `Index` is 1.</span></span> <span data-ttu-id="06e4a-194">在選取清單的最後一個成員時`Index`已`UBound`(`Choice()`)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-194">The last member of the list is selected when `Index` is `UBound`(`Choice()`).</span></span> <span data-ttu-id="06e4a-195">如果`Index`超出這些限制，`Choose`傳回`Nothing`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-195">If `Index` is outside these limits, `Choose` returns `Nothing`.</span></span>  
  
 <span data-ttu-id="06e4a-196">如果`Index`不是整數，它會計算前捨入為最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-196">If `Index` is not a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
 <span data-ttu-id="06e4a-197">您可以使用`Choose`查閱的可能值清單中的值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-197">You can use `Choose` to look up a value in a list of possibilities.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-198">引數清單中的運算式可以包含函式呼叫。</span><span class="sxs-lookup"><span data-stu-id="06e4a-198">The expressions in the argument list can include function calls.</span></span> <span data-ttu-id="06e4a-199">為準備呼叫的引數清單的一部分`Choose`，Visual Basic 編譯器會呼叫每個運算式中的每個函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-199">As part of preparing the argument list for the call to `Choose`, the Visual Basic compiler calls every function in every expression.</span></span> <span data-ttu-id="06e4a-200">這表示您不能依賴特定的函式，如果選取不同的運算式，無法呼叫`Index`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-200">This means that you cannot rely on a particular function not being called if a different expression is selected by `Index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-201">這個範例會使用`Choose`函式，要顯示的名稱，以回應傳入的程序中的索引`Ind`參數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-201">This example uses the `Choose` function to display a name in response to an index passed into the procedure in the `Ind` parameter.</span></span>  
  
 [!code-vb[VbVbalrFunctions#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/select-case-statement.md"><span data-ttu-id="06e4a-202">Select...Case 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-202">Select...Case Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public static string Command ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Command() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Command" />
      <MemberSignature Language="VB.NET" Value="Public Function Command () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Command();" />
      <MemberSignature Language="F#" Value="static member Command : unit -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Command " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4a-203">傳回用來啟動 Visual Basic 之命令列的引數部分，或是使用 Visual Basic 所開發的可執行程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-203">Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</span></span> <span data-ttu-id="06e4a-204"><see langword="My" /> 功能提供了比 <see langword="Command" /> 函式更強大的產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-204">The <see langword="My" /> feature provides greater productivity and performance than the <see langword="Command" /> function.</span></span> <span data-ttu-id="06e4a-205">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-205">For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</span></span></summary>
        <returns><span data-ttu-id="06e4a-206">用來啟動 Visual Basic 之命令列的引數部分，或是使用 Visual Basic 所開發的可執行程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-206">The argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</span></span>  
  
<span data-ttu-id="06e4a-207"><see langword="My" /> 功能提供了比 <see langword="Command" /> 函式更強大的產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-207">The <see langword="My" /> feature provides greater productivity and performance than the <see langword="Command" /> function.</span></span> <span data-ttu-id="06e4a-208">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-208">For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-209">傳回引數之後，您可以搜尋常用的分隔符號，例如空格、 向前或向後斜線、 連字號或引號，分割或搜尋字串中的個別的參數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-209">After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.</span></span>  
  
 <span data-ttu-id="06e4a-210">應用程式開發與 Visual Basic 和至.exe 檔案，編譯`Command`函式會傳回出現在命令列中，在此表單上的應用程式的名稱之後的任何引數： `MyApp(cmdlineargs)`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-210">For applications developed with Visual Basic and compiled to an .exe file, the `Command` function returns any arguments that appear after the name of the application on the command line, in this form: `MyApp(cmdlineargs)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-211">這個範例會使用`Command`函數來傳回物件，包含陣列中的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-211">This example uses the `Command` function to return the command-line arguments in an object that contains an array.</span></span>  
  
 [!code-vb[VbVbalrCatRef#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Environment.GetCommandLineArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="06e4a-212">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-212">Visual Basic Run-Time Library Members</span></span></related>
        <related type="Article" href="~/docs/visual-basic/reference/command-line-compiler/index.md"><span data-ttu-id="06e4a-213">Visual Basic 命令列編譯器</span><span class="sxs-lookup"><span data-stu-id="06e4a-213">Visual Basic command-line compiler</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/program-structure/structure-of-a-visual-basic-program.md"><span data-ttu-id="06e4a-214">Visual Basic 程式的結構</span><span class="sxs-lookup"><span data-stu-id="06e4a-214">Structure of a Visual Basic Program</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public static object CreateObject (string ProgId, string ServerName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CreateObject(string ProgId, string ServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (ProgId As String, Optional ServerName As String = &quot;&quot;) As Object" />
      <MemberSignature Language="F#" Value="static member CreateObject : string * string -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.CreateObject (ProgId, ServerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="ServerName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="06e4a-215">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-215">Required.</span></span> <span data-ttu-id="06e4a-216"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-216"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-217">要建立之物件的程式 ID。</span><span class="sxs-lookup"><span data-stu-id="06e4a-217">The program ID of the object to create.</span></span></param>
        <param name="ServerName"><span data-ttu-id="06e4a-218">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-218">Optional.</span></span> <span data-ttu-id="06e4a-219"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-219"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-220">將建立物件的網路伺服器名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-220">The name of the network server where the object will be created.</span></span> <span data-ttu-id="06e4a-221">如果 <paramref name="ServerName" /> 為空字串 ("")，則會使用本機電腦。</span><span class="sxs-lookup"><span data-stu-id="06e4a-221">If <paramref name="ServerName" /> is an empty string (""), the local computer is used.</span></span></param>
        <summary><span data-ttu-id="06e4a-222">建立並傳回 COM 物件的參考；</span><span class="sxs-lookup"><span data-stu-id="06e4a-222">Creates and returns a reference to a COM object.</span></span> <span data-ttu-id="06e4a-223">除非類別已明確公開為 COM 元件，否則 <see langword="CreateObject" /> 無法用來在 Visual Basic 中建立類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-223"><see langword="CreateObject" /> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</span></span></summary>
        <returns><span data-ttu-id="06e4a-224">建立並傳回 COM 物件的參考；</span><span class="sxs-lookup"><span data-stu-id="06e4a-224">Creates and returns a reference to a COM object.</span></span> <span data-ttu-id="06e4a-225">除非類別已明確公開為 COM 元件，否則 <see langword="CreateObject" /> 無法用來在 Visual Basic 中建立類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-225"><see langword="CreateObject" /> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-226">若要建立 COM 元件的執行個體，將傳回的物件指派`CreateObject`給物件變數：</span><span class="sxs-lookup"><span data-stu-id="06e4a-226">To create an instance of a COM component, assign the object returned by `CreateObject` to an object variable:</span></span>  
  
```vb  
Sub CreateADODB()  
   Dim adoApp As Object  
   adoApp = CreateObject("ADODB.Connection")  
End Sub  
```  
  
 <span data-ttu-id="06e4a-227">您用來儲存傳回的物件的物件變數的型別可能會影響您的應用程式效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-227">The type of object variable you use to store the returned object can affect your application's performance.</span></span> <span data-ttu-id="06e4a-228">宣告物件變數與`As Object`子句建立的變數，可以包含任何類型的物件的參考。</span><span class="sxs-lookup"><span data-stu-id="06e4a-228">Declaring an object variable with the `As Object` clause creates a variable that can contain a reference to any type of object.</span></span> <span data-ttu-id="06e4a-229">不過，是透過這個變數物件的存取權*晚期繫結*，也就是繫結，就會發生當程式執行時。</span><span class="sxs-lookup"><span data-stu-id="06e4a-229">However, access to the object through that variable is *late-bound*, that is, the binding occurs when your program runs.</span></span> <span data-ttu-id="06e4a-230">有許多原因，您應該避免晚期繫結，包括應用程式效能變慢。</span><span class="sxs-lookup"><span data-stu-id="06e4a-230">There are many reasons you should avoid late binding, including slower application performance.</span></span>  
  
 <span data-ttu-id="06e4a-231">您可以建立物件變數，也就是產生早期繫結-繫結在編譯程式時。</span><span class="sxs-lookup"><span data-stu-id="06e4a-231">You can create an object variable that results in early binding - that is, binding when the program is compiled.</span></span> <span data-ttu-id="06e4a-232">若要這樣做，請將參考加入至該物件的類型程式庫**COM**索引標籤**加入參考**上的對話方塊**專案**功能表。</span><span class="sxs-lookup"><span data-stu-id="06e4a-232">To do so, add a reference to the type library for your object from the **COM** tab of the **Add Reference** dialog box on the **Project** menu.</span></span> <span data-ttu-id="06e4a-233">然後，宣告您物件的特定類型的物件變數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-233">Then declare the object variable of the specific type of your object.</span></span> <span data-ttu-id="06e4a-234">在大部分情況下，會使用更有效率`Dim`陳述式，來建立物件，比使用主要 interop 組件`CreateObject`函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-234">In most cases, it is more efficient to use the `Dim` statement and a primary interop assembly to create objects than it is to use the `CreateObject` function.</span></span>  
  
## <a name="interacting-with-unmanaged-code"></a><span data-ttu-id="06e4a-235">與 Unmanaged 程式碼互動</span><span class="sxs-lookup"><span data-stu-id="06e4a-235">Interacting with Unmanaged Code</span></span>  
 <span data-ttu-id="06e4a-236">另一個問題是 COM 物件使用 unmanaged 程式碼-程式碼，而不需要通用語言執行平台的優點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-236">Another issue is that COM objects use unmanaged code - code without the benefit of the common language runtime.</span></span> <span data-ttu-id="06e4a-237">沒有了相當程度的複雜度涉及了混合與 unmanaged 程式碼的 Visual Basic 的 managed 程式碼從 com 存取。</span><span class="sxs-lookup"><span data-stu-id="06e4a-237">There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM.</span></span> <span data-ttu-id="06e4a-238">當您將 COM 物件的參考時，Visual Basic 會搜尋主要 interop 組件 (PIA) 該程式庫;如果找到，則它會使用它。</span><span class="sxs-lookup"><span data-stu-id="06e4a-238">When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it.</span></span> <span data-ttu-id="06e4a-239">如果找不到的 PIA，則它會建立互通性組件，其中包含本機的互通性的 COM 程式庫中每個類別的類別。</span><span class="sxs-lookup"><span data-stu-id="06e4a-239">If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library.</span></span> <span data-ttu-id="06e4a-240">如需詳細資訊，請參閱 < [.NET Framework 應用程式中的 COM 互通性](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-240">For more information, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).</span></span>  
  
 <span data-ttu-id="06e4a-241">您通常應該使用強式繫結的物件和主要 interop 組件可能的話。</span><span class="sxs-lookup"><span data-stu-id="06e4a-241">You should generally use strongly bound objects and primary interop assemblies whenever possible.</span></span> <span data-ttu-id="06e4a-242">下列範例使用`CreateObject`函式與 Microsoft Office 物件，如示範之用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-242">The examples below use the `CreateObject` function with Microsoft Office objects for demonstration purposes only.</span></span> <span data-ttu-id="06e4a-243">不過，這些物件是使用的工作變得更容易且更可靠，搭配適當的主要 interop 組件時。</span><span class="sxs-lookup"><span data-stu-id="06e4a-243">However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.</span></span>  
  
## <a name="creating-an-object-on-a-remote-computer"></a><span data-ttu-id="06e4a-244">在遠端電腦上建立物件</span><span class="sxs-lookup"><span data-stu-id="06e4a-244">Creating an Object on a Remote Computer</span></span>  
 <span data-ttu-id="06e4a-245">您也可以傳遞至電腦的名稱在遠端網路的電腦上建立物件`ServerName`引數`CreateObject`函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-245">You can create an object on a remote networked computer by passing the name of the computer to the `ServerName` argument of the `CreateObject` function.</span></span> <span data-ttu-id="06e4a-246">該名稱等同於共用名稱的電腦名稱部分： 共用名為"\\\MyServer\Public，「`ServerName`是"MyServer"。</span><span class="sxs-lookup"><span data-stu-id="06e4a-246">That name is the same as the Machine Name portion of a share name: for a share named "\\\MyServer\Public," `ServerName` is "MyServer."</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-247">請參閱 COM 文件 （請參閱 Microsoft Developer Network） 如需詳細資訊，讓應用程式的可存取遠端網路的電腦上。</span><span class="sxs-lookup"><span data-stu-id="06e4a-247">Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer.</span></span> <span data-ttu-id="06e4a-248">您可能需要新增您的應用程式的登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-248">You may need to add a registry key for your application.</span></span>  
  
 <span data-ttu-id="06e4a-249">下列程式碼傳回的 Excel 執行個體的版本號碼在名為遠端電腦上執行`MyServer`:</span><span class="sxs-lookup"><span data-stu-id="06e4a-249">The following code returns the version number of an instance of Excel running on a remote computer named `MyServer`:</span></span>  
  
```vb  
Sub CreateRemoteExcelObj()  
    Dim xlApp As Object  
    ' Replace string "\\MyServer" with name of the remote computer.  
    xlApp = CreateObject("Excel.Application", "\\MyServer")  
    MsgBox(xlApp.Version)  
End Sub  
```  
  
 <span data-ttu-id="06e4a-250">如果遠端伺服器名稱不正確，或無法使用時，就會發生執行階段錯誤。</span><span class="sxs-lookup"><span data-stu-id="06e4a-250">If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-251">使用`CreateObject`時沒有物件的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-251">Use `CreateObject` when there is no current instance of the object.</span></span> <span data-ttu-id="06e4a-252">如果物件的執行個體已在執行中，已啟動的新執行個體，並建立指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-252">If an instance of the object is already running, a new instance is started, and an object of the specified type is created.</span></span> <span data-ttu-id="06e4a-253">若要使用目前的執行個體，或是啟動應用程式，並將它載入檔案，使用`GetObject`函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-253">To use the current instance, or to start the application and have it load a file, use the `GetObject` function.</span></span> <span data-ttu-id="06e4a-254">如果物件已本身註冊為單一執行個體物件，該物件只有一個執行個體建立，不論多次`CreateObject`執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-254">If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is executed.</span></span>  
  
## <a name="creating-framework-objects"></a><span data-ttu-id="06e4a-255">建立架構物件</span><span class="sxs-lookup"><span data-stu-id="06e4a-255">Creating Framework Objects</span></span>  
 <span data-ttu-id="06e4a-256">您可以使用`CreateObject`只為建立 COM 物件的函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-256">You can use the `CreateObject` function only to create a COM object.</span></span> <span data-ttu-id="06e4a-257">沒有同等的確切機制，來建立.NET Framework 物件，雖然<xref:System.Activator>在<xref:System>命名空間包含建立本機或遠端物件的方法。</span><span class="sxs-lookup"><span data-stu-id="06e4a-257">While there is no exact equivalent mechanism for creating a .NET Framework object, the <xref:System.Activator> in the <xref:System> namespace contains methods to create local or remote objects.</span></span> <span data-ttu-id="06e4a-258">特別是，<xref:System.Activator.CreateInstance%2A>方法或<xref:System.Activator.CreateInstanceFrom%2A>方法可能會很有用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-258">In particular, the <xref:System.Activator.CreateInstance%2A> method or the <xref:System.Activator.CreateInstanceFrom%2A> method might be useful.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-259">`CreateObject`函式需要 unmanaged 程式碼的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-259">The `CreateObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-260">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-260">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-261">下列範例會使用`CreateObject`函數，來建立 Microsoft Excel 工作表，並將工作表儲存到檔案。</span><span class="sxs-lookup"><span data-stu-id="06e4a-261">The following example uses the `CreateObject` function to create a Microsoft Excel worksheet and saves the worksheet to a file.</span></span> <span data-ttu-id="06e4a-262">若要使用此範例中，Excel 必須安裝在執行此程式的電腦上。</span><span class="sxs-lookup"><span data-stu-id="06e4a-262">To use this example, Excel must be installed on the computer where this program runs.</span></span> <span data-ttu-id="06e4a-263">此外，您必須在其中加入從類型程式庫的參考**COM**索引標籤**加入參考**上的對話方塊**專案**功能表。</span><span class="sxs-lookup"><span data-stu-id="06e4a-263">Also, you must add a reference to the type library from the **COM** tab of the **Add Reference** dialog box on the **Project** menu.</span></span> <span data-ttu-id="06e4a-264">型別程式庫的名稱需視安裝在您的電腦上的 Excel 版本而有所不同。</span><span class="sxs-lookup"><span data-stu-id="06e4a-264">The name of the type library varies depending on the version of Excel installed on your computer.</span></span> <span data-ttu-id="06e4a-265">例如，名為的型別程式庫的 Microsoft Excel 2002 **Microsoft Excel 10.0 物件程式庫**。</span><span class="sxs-lookup"><span data-stu-id="06e4a-265">For example, the type library for Microsoft Excel 2002 is named **Microsoft Excel 10.0 Object Library**.</span></span>  
  
 [!code-vb[VbVbalrExcelObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="06e4a-266">伺服器無法使用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-266">Server is unavailable</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="06e4a-267">指定類型的物件不存在</span><span class="sxs-lookup"><span data-stu-id="06e4a-267">No object of the specified type exists</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)" />
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.Activator" />
        <altmember cref="Overload:System.Activator.CreateInstance" />
        <altmember cref="Overload:System.Activator.CreateInstanceFrom" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="06e4a-268">Dim 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-268">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/declare-statement.md"><span data-ttu-id="06e4a-269">Declare Statement</span><span class="sxs-lookup"><span data-stu-id="06e4a-269">Declare Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md"><span data-ttu-id="06e4a-270">.NET Framework 應用程式中的 COM 互通性</span><span class="sxs-lookup"><span data-stu-id="06e4a-270">COM Interoperability in .NET Framework Applications</span></span></related>
        <related type="Article" href="~/docs/framework/interop/index.md"><span data-ttu-id="06e4a-271">與 Unmanaged 程式碼互通</span><span class="sxs-lookup"><span data-stu-id="06e4a-271">Interoperating with Unmanaged Code</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteSetting">
      <MemberSignature Language="C#" Value="public static void DeleteSetting (string AppName, string Section = null, string Key = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteSetting(string AppName, string Section, string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSetting (AppName As String, Optional Section As String = null, Optional Key As String = null)" />
      <MemberSignature Language="F#" Value="static member DeleteSetting : string * string * string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.DeleteSetting (AppName, Section, Key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Key" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="06e4a-272">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-272">Required.</span></span> <span data-ttu-id="06e4a-273"><see langword="String" /> 運算式，包含區段或機碼設定所套用的應用程式或專案的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-273"><see langword="String" /> expression containing the name of the application or project to which the section or key setting applies.</span></span></param>
        <param name="Section"><span data-ttu-id="06e4a-274">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-274">Required.</span></span> <span data-ttu-id="06e4a-275"><see langword="String" /> 運算式，包含所要刪除之機碼設定的來源區段名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-275"><see langword="String" /> expression containing the name of the section from which the key setting is being deleted.</span></span> <span data-ttu-id="06e4a-276">如果只有提供 <paramref name="AppName" /> 和 <paramref name="Section" />，則指定之區段會連同所有相關的機碼設定一併刪除。</span><span class="sxs-lookup"><span data-stu-id="06e4a-276">If only <paramref name="AppName" /> and <paramref name="Section" /> are provided, the specified section is deleted along with all related key settings.</span></span></param>
        <param name="Key"><span data-ttu-id="06e4a-277">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-277">Optional.</span></span> <span data-ttu-id="06e4a-278"><see langword="String" /> 運算式，包含所要刪除之機碼設定的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-278"><see langword="String" /> expression containing the name of the key setting being deleted.</span></span></param>
        <summary><span data-ttu-id="06e4a-279">從 Windows 登錄的應用程式項目中刪除區段或機碼設定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-279">Deletes a section or key setting from an application's entry in the Windows registry.</span></span> <span data-ttu-id="06e4a-280"><see langword="My" /> 功能提供了比 <see langword="DeleteSetting" /> 函式更強大的登錄作業產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-280">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than the <see langword="DeleteSetting" /> function.</span></span> <span data-ttu-id="06e4a-281">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-281">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-282">如果提供的所有引數時，會刪除指定的設定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-282">If all arguments are provided, the specified setting is deleted.</span></span> <span data-ttu-id="06e4a-283">如果您嘗試使用，就會發生執行階段錯誤`DeleteSetting`上不存在的區段或機碼設定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-283">A run-time error occurs if you attempt to use `DeleteSetting` on a nonexistent section or key setting.</span></span>  
  
 <span data-ttu-id="06e4a-284">`DeleteSetting` 需要使用者要登入，因為它運作`HKEY_LOCAL_USER`登錄機碼，在使用者以互動方式登入時才會啟用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-284">`DeleteSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.</span></span>  
  
 <span data-ttu-id="06e4a-285">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下`HKEY_LOCAL_MACHINE\Software\`或`HKEY_USER\DEFAULT\Software`登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-285">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-286">下列範例會先使用`SaveSetting`程序來建立 Windows 登錄中的項目`MyApp`應用程式，然後再使用`DeleteSetting`函式以移除它們。</span><span class="sxs-lookup"><span data-stu-id="06e4a-286">The following example first uses the `SaveSetting` procedure to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.</span></span> <span data-ttu-id="06e4a-287">因為沒有`Key`指定引數，則整個`Startup`區段會遭到刪除，包括的區段名稱和所有其金鑰。</span><span class="sxs-lookup"><span data-stu-id="06e4a-287">Because no `Key` argument is specified, the whole `Startup` section is deleted, including the section name and all of its keys.</span></span>  
  
 [!code-vb[VbVbalrCatRef#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-288">使用者未登入。</span><span class="sxs-lookup"><span data-stu-id="06e4a-288">User is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Environ">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06e4a-289">傳回與作業系統環境變數關聯的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-289">Returns the string associated with an operating-system environment variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Environ">
      <MemberSignature Language="C#" Value="public static string Environ (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Environ(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Environ (Expression As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Environ(int Expression);" />
      <MemberSignature Language="F#" Value="static member Environ : int -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Environ Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="06e4a-290">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-290">Required.</span></span> <span data-ttu-id="06e4a-291">運算式，可評估包含環境變數名稱的字串，或評估與環境字串表中的環境字串數字順序相對應的整數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-291">Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</span></span></param>
        <summary><span data-ttu-id="06e4a-292">傳回與作業系統環境變數關聯的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-292">Returns the string associated with an operating-system environment variable.</span></span></summary>
        <returns><span data-ttu-id="06e4a-293">與作業系統環境變數關聯的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-293">The string associated with an operating-system environment variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-294">如果`Expression`包含字串、<xref:Microsoft.VisualBasic.Interaction.Environ%2A>函式會傳回指派給指定的環境字串-也就是等號 （=） 後面的文字的文字，該環境變數的環境字串資料表中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-294">If `Expression` contains a string, the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function returns the text assigned to the specified environment string - that is, the text following the equal sign (=) in the environment-string table for that environment variable.</span></span> <span data-ttu-id="06e4a-295">如果中的字串`Expression`找不到在環境字串資料表中，長度為零的字串 ("") 會傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-295">If the string in `Expression` cannot be found in the environment-string table, a zero-length string ("") is returned.</span></span>  
  
 <span data-ttu-id="06e4a-296">如果`Expression`包含整數，佔用環境字串資料表中的數字的位置，會傳回字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-296">If `Expression` contains an integer, the string occupying that numeric position in the environment-string table is returned.</span></span> <span data-ttu-id="06e4a-297">在此情況下，<xref:Microsoft.VisualBasic.Interaction.Environ%2A>傳回的所有文字，包括環境變數的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-297">In this case, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns all of the text, including the name of the environment variable.</span></span> <span data-ttu-id="06e4a-298">如果沒有環境字串中指定的位置，<xref:Microsoft.VisualBasic.Interaction.Environ%2A>傳回零長度字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-298">If there is no environment string in the specified position, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns a zero-length string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-299"><xref:Microsoft.VisualBasic.Interaction.Environ%2A>函式需要環境的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-299">The <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function requires environment permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-300">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-300">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-301">這個範例會使用<xref:Microsoft.VisualBasic.Interaction.Environ%2A>函式提供的項目數目和長度`PATH`環境字串資料表中的陳述式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-301">This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.</span></span>  
  
 [!code-vb[VbVbalrCatRef#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-302"><paramref name="Expression" /> 遺失。</span><span class="sxs-lookup"><span data-stu-id="06e4a-302"><paramref name="Expression" /> is missing.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="06e4a-303">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-303">Visual Basic Run-Time Library Members</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Environ">
      <MemberSignature Language="C#" Value="public static string Environ (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Environ(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Environ(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Environ (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Environ(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Environ : string -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Environ Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="06e4a-304">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-304">Required.</span></span> <span data-ttu-id="06e4a-305">運算式，可評估包含環境變數名稱的字串，或評估與環境字串表中的環境字串數字順序相對應的整數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-305">Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</span></span></param>
        <summary><span data-ttu-id="06e4a-306">傳回與作業系統環境變數關聯的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-306">Returns the string associated with an operating-system environment variable.</span></span></summary>
        <returns><span data-ttu-id="06e4a-307">與作業系統環境變數關聯的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-307">The string associated with an operating-system environment variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-308">如果`Expression`包含字串、<xref:Microsoft.VisualBasic.Interaction.Environ%2A>函式會傳回指派給指定的環境字串-也就是等號 （=） 後面的文字的文字，該環境變數的環境字串資料表中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-308">If `Expression` contains a string, the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function returns the text assigned to the specified environment string - that is, the text following the equal sign (=) in the environment-string table for that environment variable.</span></span> <span data-ttu-id="06e4a-309">如果中的字串`Expression`找不到在環境字串資料表中，長度為零的字串 ("") 會傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-309">If the string in `Expression` cannot be found in the environment-string table, a zero-length string ("") is returned.</span></span>  
  
 <span data-ttu-id="06e4a-310">如果`Expression`包含整數，佔用環境字串資料表中的數字的位置，會傳回字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-310">If `Expression` contains an integer, the string occupying that numeric position in the environment-string table is returned.</span></span> <span data-ttu-id="06e4a-311">在此情況下，<xref:Microsoft.VisualBasic.Interaction.Environ%2A>傳回的所有文字，包括環境變數的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-311">In this case, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns all of the text, including the name of the environment variable.</span></span> <span data-ttu-id="06e4a-312">如果沒有環境字串中指定的位置，<xref:Microsoft.VisualBasic.Interaction.Environ%2A>傳回零長度字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-312">If there is no environment string in the specified position, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns a zero-length string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-313"><xref:Microsoft.VisualBasic.Interaction.Environ%2A>函式需要環境的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-313">The <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function requires environment permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-314">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-314">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-315">這個範例會使用<xref:Microsoft.VisualBasic.Interaction.Environ%2A>函式提供的項目數目和長度`PATH`環境字串資料表中的陳述式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-315">This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.</span></span>  
  
 [!code-vb[VbVbalrCatRef#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-316"><paramref name="Expression" /> 遺失。</span><span class="sxs-lookup"><span data-stu-id="06e4a-316"><paramref name="Expression" /> is missing.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="06e4a-317">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-317">Visual Basic Run-Time Library Members</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAllSettings">
      <MemberSignature Language="C#" Value="public static string[,] GetAllSettings (string AppName, string Section);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[,] GetAllSettings(string AppName, string Section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllSettings (AppName As String, Section As String) As String(,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^, 2&gt; ^ GetAllSettings(System::String ^ AppName, System::String ^ Section);" />
      <MemberSignature Language="F#" Value="static member GetAllSettings : string * string -&gt; string[,]" Usage="Microsoft.VisualBasic.Interaction.GetAllSettings (AppName, Section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[,]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="06e4a-318">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-318">Required.</span></span> <span data-ttu-id="06e4a-319"><see langword="String" /> 運算式，包含要求機碼設定的應用程式或專案的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-319"><see langword="String" /> expression containing the name of the application or project whose key settings are requested.</span></span></param>
        <param name="Section"><span data-ttu-id="06e4a-320">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-320">Required.</span></span> <span data-ttu-id="06e4a-321"><see langword="String" /> 運算式，包含要求機碼設定之區段的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-321"><see langword="String" /> expression containing the name of the section whose key settings are requested.</span></span> <span data-ttu-id="06e4a-322"><see langword="GetAllSettings" /> 會傳回包含二維字串陣列的物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-322"><see langword="GetAllSettings" /> returns an object that contains a two-dimensional array of strings.</span></span> <span data-ttu-id="06e4a-323">這些字串會包含指定之區段中的所有機碼設定，加上其對應的值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-323">The strings contain all the key settings in the specified section, plus their corresponding values.</span></span></param>
        <summary><span data-ttu-id="06e4a-324">從 Windows 登錄的應用程式項目中傳回機碼設定及其對應值的清單 (原本是以 <see langword="SaveSetting" /> 所建立)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-324">Returns a list of key settings and their respective values (originally created with <see langword="SaveSetting" />) from an application's entry in the Windows registry.</span></span> <span data-ttu-id="06e4a-325">使用 <see langword="My" /> 功能可以提供比 <see langword="GetAllSettings" /> 更強大的登錄作業產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-325">Using the <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span> <span data-ttu-id="06e4a-326">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-326">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></summary>
        <returns><span data-ttu-id="06e4a-327">來自 Windows 登錄之應用程式項目中的機碼設定與其對應值的清單 (原本是以 <see langword="SaveSetting" /> 所建立)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-327">A list of key settings and their respective values (originally created with <see langword="SaveSetting" />) from an application's entry in the Windows registry.</span></span>  
  
<span data-ttu-id="06e4a-328">使用 <see langword="My" /> 功能可以提供比 <see langword="GetAllSettings" /> 更強大的登錄作業產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-328">Using the <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span> <span data-ttu-id="06e4a-329">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-329">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-330">`GetAllSettings` 傳回未初始化`Object`如果有任一`AppName`或`Section`不存在。</span><span class="sxs-lookup"><span data-stu-id="06e4a-330">`GetAllSettings` returns an uninitialized `Object` if either `AppName` or `Section` does not exist.</span></span>  
  
 <span data-ttu-id="06e4a-331">因為在其運作方式`HKEY_LOCAL_USER`登錄機碼，它才會啟用使用者以互動方式登入時，`GetAllSettings`需要使用者登入。</span><span class="sxs-lookup"><span data-stu-id="06e4a-331">Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetAllSettings` requires that a user be logged on.</span></span>  
  
 <span data-ttu-id="06e4a-332">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下`HKEY_LOCAL_MACHINE\Software\`或`HKEY_USER\DEFAULT\Software`登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-332">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-333">此範例會先使用`SaveSetting`函式來為指定的應用程式的 Windows 登錄中建立項目`AppName`，然後使用`GetAllSettings`函式來顯示的設定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-333">This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, then uses the `GetAllSettings` function to display the settings.</span></span> <span data-ttu-id="06e4a-334">請注意該應用程式名稱和`Section`名稱無法使用擷取`GetAllSettings`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-334">Note that application names and `Section` names cannot be retrieved with `GetAllSettings`.</span></span> <span data-ttu-id="06e4a-335">最後，`DeleteSetting`函式會移除應用程式的項目。</span><span class="sxs-lookup"><span data-stu-id="06e4a-335">Finally, the `DeleteSetting` function removes the application's entries.</span></span>  
  
 [!code-vb[VbVbalrCatRef#68](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-336">使用者未登入。</span><span class="sxs-lookup"><span data-stu-id="06e4a-336">User is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md"><span data-ttu-id="06e4a-337">讀取和寫入登錄 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-337">Reading from and Writing to the Registry (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (string PathName = null, string Class = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObject(string PathName, string Class) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (Optional PathName As String = null, Optional Class As String = null) As Object" />
      <MemberSignature Language="F#" Value="static member GetObject : string * string -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.GetObject (PathName, Class)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Class" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="06e4a-338">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-338">Optional.</span></span> <span data-ttu-id="06e4a-339"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-339"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-340">檔案的完整路徑和名稱，此檔案包含要擷取的物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-340">The full path and name of the file containing the object to retrieve.</span></span> <span data-ttu-id="06e4a-341">如果省略 <paramref name="PathName" />，則將需要 <paramref name="Class" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-341">If <paramref name="PathName" /> is omitted, <paramref name="Class" /> is required.</span></span></param>
        <param name="Class"><span data-ttu-id="06e4a-342">如果未提供 <paramref name="PathName" />，則將需要它。</span><span class="sxs-lookup"><span data-stu-id="06e4a-342">Required if <paramref name="PathName" /> is not supplied.</span></span> <span data-ttu-id="06e4a-343"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-343"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-344">表示物件類別的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-344">A string representing the class of the object.</span></span> <span data-ttu-id="06e4a-345"><paramref name="Class" /> 引數具有下列語法和組成部分：</span><span class="sxs-lookup"><span data-stu-id="06e4a-345">The <paramref name="Class" /> argument has the following syntax and parts:</span></span> 
 <span data-ttu-id="06e4a-346"><c>appname</c><c>.</c><c>objecttype</c></span><span class="sxs-lookup"><span data-stu-id="06e4a-346"><c>appname</c><c>.</c><c>objecttype</c></span></span>  
  
<span data-ttu-id="06e4a-347">[1|1] 參數</span><span class="sxs-lookup"><span data-stu-id="06e4a-347">[1|1] Parameter</span></span> 
<span data-ttu-id="06e4a-348">[1|2] 說明</span><span class="sxs-lookup"><span data-stu-id="06e4a-348">[1|2] Description</span></span> 
<span data-ttu-id="06e4a-349">[2|1] <c>appname</c></span><span class="sxs-lookup"><span data-stu-id="06e4a-349">[2|1] <c>appname</c></span></span>  
  
<span data-ttu-id="06e4a-350">需要 [2|2]。</span><span class="sxs-lookup"><span data-stu-id="06e4a-350">[2|2] Required.</span></span> <span data-ttu-id="06e4a-351"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-351"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-352">提供物件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-352">The name of the application providing the object.</span></span>  
  
<span data-ttu-id="06e4a-353">[3|1] <c>objecttype</c></span><span class="sxs-lookup"><span data-stu-id="06e4a-353">[3|1] <c>objecttype</c></span></span>  
  
<span data-ttu-id="06e4a-354">需要 [3|2]。</span><span class="sxs-lookup"><span data-stu-id="06e4a-354">[3|2] Required.</span></span> <span data-ttu-id="06e4a-355"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-355"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-356">要建立之物件的類型或類別。</span><span class="sxs-lookup"><span data-stu-id="06e4a-356">The type or class of object to create.</span></span></param>
        <summary><span data-ttu-id="06e4a-357">傳回 COM 元件提供之物件的參考。</span><span class="sxs-lookup"><span data-stu-id="06e4a-357">Returns a reference to an object provided by a COM component.</span></span></summary>
        <returns><span data-ttu-id="06e4a-358">COM 元件提供之物件的參考。</span><span class="sxs-lookup"><span data-stu-id="06e4a-358">A reference to an object provided by a COM component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-359">使用`GetObject`函式以從檔案載入 COM 元件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-359">Use the `GetObject` function to load an instance of a COM component from a file.</span></span> <span data-ttu-id="06e4a-360">下列範例將說明這點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-360">The following example illustrates this.</span></span>  
  
```vb  
Dim CADObject As Object  
CADObject = GetObject("C:\CAD\schema.cad")  
```  
  
 <span data-ttu-id="06e4a-361">此程式碼執行時，指定相關聯的應用程式`PathName`已啟動，且會啟動指定的檔案中的物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-361">When this code runs, the application associated with the specified `PathName` is started and the object in the specified file is activated.</span></span>  
  
## <a name="default-cases"></a><span data-ttu-id="06e4a-362">在預設情況下</span><span class="sxs-lookup"><span data-stu-id="06e4a-362">Default Cases</span></span>  
 <span data-ttu-id="06e4a-363">如果`PathName`為零長度字串 (`""`)，`GetObject`傳回指定的類別類型的新物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-363">If `PathName` is a zero-length string (`""`), `GetObject` returns a new object instance of the specified class type.</span></span> <span data-ttu-id="06e4a-364">如果`PathName`省略引數，則`GetObject`會傳回目前使用中的物件中指定的類別類型的`Class`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-364">If the `PathName` argument is omitted, `GetObject` returns a currently active object of the class type specified in `Class`.</span></span> <span data-ttu-id="06e4a-365">如果指定型別的物件不存在，就會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="06e4a-365">If no object of the specified type exists, an error occurs.</span></span>  
  
## <a name="accessing-a-subobject"></a><span data-ttu-id="06e4a-366">存取子物件</span><span class="sxs-lookup"><span data-stu-id="06e4a-366">Accessing a Subobject</span></span>  
 <span data-ttu-id="06e4a-367">有些應用程式可讓您啟動與檔案相關聯的子物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-367">Some applications allow you to activate a subobject associated with a file.</span></span> <span data-ttu-id="06e4a-368">若要這樣做，加上驚嘆號 (`!`) 結尾的檔案名稱和遵循它可識別檔案的一部分的字串與您要啟用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-368">To do this, add an exclamation point (`!`) to the end of the file name and follow it with a string that identifies the part of the file you want to activate.</span></span> <span data-ttu-id="06e4a-369">如需如何建立此字串的詳細資訊，請參閱 < 建立物件的應用程式的文件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-369">For information on how to create this string, see the documentation for the application that created the object.</span></span>  
  
 <span data-ttu-id="06e4a-370">比方說，一個繪圖應用程式中，您可能必須儲存在檔案中的圖形的多個圖層。</span><span class="sxs-lookup"><span data-stu-id="06e4a-370">For example, in a drawing application you might have multiple layers to a drawing stored in a file.</span></span> <span data-ttu-id="06e4a-371">您可以使用下列程式碼來啟動圖層內呼叫繪圖`schema.cad`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-371">You could use the following code to activate a layer within a drawing called `schema.cad`.</span></span>  
  
```vb  
layerObject = GetObject("C:\CAD\schema.cad!Layer3")  
```  
  
## <a name="specifying-a-class"></a><span data-ttu-id="06e4a-372">指定類別</span><span class="sxs-lookup"><span data-stu-id="06e4a-372">Specifying a Class</span></span>  
 <span data-ttu-id="06e4a-373">如果您未指定物件的`Class`，自動化判斷啟動和物件的應用程式，若要啟用，根據您提供的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-373">If you do not specify the object's `Class`, Automation determines the application to start and the object to activate, based on the file name you provide.</span></span> <span data-ttu-id="06e4a-374">不過，某些檔案，可以支援多個類別的物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-374">Some files, however, can support more than one class of object.</span></span> <span data-ttu-id="06e4a-375">例如，繪圖可能支援三種不同類型的物件：`Application`物件，`Drawing`物件，和`Toolbar`物件，這些都是相同的檔案的一部分。</span><span class="sxs-lookup"><span data-stu-id="06e4a-375">For example, a drawing might support three different types of objects: an `Application` object, a `Drawing` object, and a `Toolbar` object, all of which are part of the same file.</span></span> <span data-ttu-id="06e4a-376">若要指定您想要啟用哪一個檔案中的物件，使用 選擇性`Class`引數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-376">To specify which object in a file you want to activate, use the optional `Class` argument.</span></span> <span data-ttu-id="06e4a-377">下列範例將說明這點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-377">The following example illustrates this.</span></span>  
  
```vb  
Dim drawObj As Object  
drawObj = GetObject("C:\Drawings\sample.drw", "Figment.Drawing")  
```  
  
 <span data-ttu-id="06e4a-378">在上述範例中，`Figment`是一個繪圖應用程式的名稱和`Drawing`是其中一個支援的物件類型。</span><span class="sxs-lookup"><span data-stu-id="06e4a-378">In the preceding example, `Figment` is the name of a drawing application and `Drawing` is one of the object types it supports.</span></span>  
  
## <a name="using-the-object"></a><span data-ttu-id="06e4a-379">使用物件</span><span class="sxs-lookup"><span data-stu-id="06e4a-379">Using the Object</span></span>  
 <span data-ttu-id="06e4a-380">一旦啟動物件，會參考它，在使用您所宣告的物件變數的程式碼中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-380">Once an object is activated, you refer to it in code using the object variable you declared.</span></span> <span data-ttu-id="06e4a-381">在上述範例中，存取新的物件使用物件變數的屬性和方法`drawObj`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-381">In the preceding example, you access properties and methods of the new object using the object variable `drawObj`.</span></span> <span data-ttu-id="06e4a-382">下列範例將說明這點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-382">The following example illustrates this.</span></span>  
  
```vb  
drawObj.Line(9, 90)  
drawObj.InsertText(9, 100, "Hello, world.")  
drawObj.SaveAs("C:\Drawings\sample.drw")  
```  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-383">使用`GetObject`函式物件的目前執行個體時，或如果您想要載入的檔案建立物件。</span><span class="sxs-lookup"><span data-stu-id="06e4a-383">Use the `GetObject` function when there is a current instance of the object or if you want to create the object with a file loaded.</span></span> <span data-ttu-id="06e4a-384">如果沒有目前的執行個體，而且您不想開始使用的物件載入的檔案，請使用<xref:Microsoft.VisualBasic.Interaction.CreateObject%2A>函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-384">If there is no current instance, and you do not want the object started with a file loaded, use the <xref:Microsoft.VisualBasic.Interaction.CreateObject%2A> function.</span></span>  
>   
>  <span data-ttu-id="06e4a-385">如果物件已本身註冊為 ActiveX 單一執行個體物件，該物件只有一個執行個體建立，不論多次`CreateObject`呼叫。</span><span class="sxs-lookup"><span data-stu-id="06e4a-385">If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is called.</span></span> <span data-ttu-id="06e4a-386">使用單一執行個體物件時，`GetObject`一律會傳回相同的執行個體時呼叫零長度字串 (`""`) 的語法，而且如果會造成錯誤`PathName`省略引數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-386">With a single-instance object, `GetObject` always returns the same instance when called with the zero-length string (`""`) syntax, and it causes an error if the `PathName` argument is omitted.</span></span> <span data-ttu-id="06e4a-387">您無法使用`GetObject`以取得使用 Visual Basic 建立類別的參考。</span><span class="sxs-lookup"><span data-stu-id="06e4a-387">You cannot use `GetObject` to obtain a reference to a class created with Visual Basic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-388">`GetObject`函式需要 unmanaged 程式碼的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-388">The `GetObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-389">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-389">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-390">下列範例會使用`GetObject`函數來取得特定的 Microsoft Excel 工作表的參考 (`excelObj`)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-390">The following example uses the `GetObject` function to obtain a reference to a specific Microsoft Excel worksheet (`excelObj`).</span></span> <span data-ttu-id="06e4a-391">它會使用工作表`Application`屬性來顯現 Excel，將其關閉，並執行其他動作。</span><span class="sxs-lookup"><span data-stu-id="06e4a-391">It uses the worksheet's `Application` property to make Excel visible, to close it, and to perform other actions.</span></span> <span data-ttu-id="06e4a-392">使用兩個 API 呼叫，`detectExcel`程序適用於 Excel，看起來，並正在執行，如果輸入執行物件表格中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-392">Using two API calls, the `detectExcel` procedure looks for Excel, and if it is running, enters it in the Running Object table.</span></span> <span data-ttu-id="06e4a-393">第一次呼叫`GetObject`如果 Excel 尚未執行，在此範例會產生錯誤會導致`excelWasNotRunning`旗標設為`True`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-393">The first call to `GetObject` causes an error if Excel is not already running, which in this example causes the `excelWasNotRunning` flag to be set to `True`.</span></span> <span data-ttu-id="06e4a-394">第二個呼叫`GetObject`指定要開啟的檔案。</span><span class="sxs-lookup"><span data-stu-id="06e4a-394">The second call to `GetObject` specifies a file to open.</span></span> <span data-ttu-id="06e4a-395">如果尚未執行 Excel，第二次呼叫加以啟動，並傳回所指定的檔案，表示工作表的參考`test.xls`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-395">If Excel is not already running, the second call starts it and returns a reference to the worksheet represented by the specified file, `test.xls`.</span></span> <span data-ttu-id="06e4a-396">檔案必須存在於指定的位置;否則，Visual Basic 會擲回<xref:System.IO.FileNotFoundException>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-396">The file must exist in the specified location; otherwise, Visual Basic throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="06e4a-397">接下來，範例程式碼會讓 Excel 並包含指定的工作表顯示的視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-397">Next, the example code makes both Excel and the window containing the specified worksheet visible.</span></span>  
  
 <span data-ttu-id="06e4a-398">這個範例需要`Option Strict Off`它會使用晚期繫結，因為其中物件指派給變數的型別`Object`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-398">This example requires `Option Strict Off` because it uses late binding, where objects are assigned to variables of type `Object`.</span></span> <span data-ttu-id="06e4a-399">您可以指定`Option Strict On`，並宣告特定的物件類型的物件，如果您新增的 Excel 類型程式庫的參考**COM**索引標籤**加入參考**對話方塊中的**專案**Visual Studio 中的功能表。</span><span class="sxs-lookup"><span data-stu-id="06e4a-399">You can specify `Option Strict On` and declare objects of specific object types if you add a reference to the Excel type library from the **COM** tab of the **Add Reference** dialog box of the **Project** menu in Visual Studio.</span></span>  
  
 [!code-vb[VbVbalrExcelObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#2)]  
  
 [!code-vb[VbVbalrExcelObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#4)]  
  
 [!code-vb[VbVbalrExcelObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#5)]  
  
 <span data-ttu-id="06e4a-400">當您呼叫`getExcel`函式，會進行檢查以查看是否已執行 Excel。</span><span class="sxs-lookup"><span data-stu-id="06e4a-400">When you call the `getExcel` function, a check is made to see if Excel is already running.</span></span> <span data-ttu-id="06e4a-401">如果不存在，則會建立執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-401">If it is not, then an instance is created.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-402">為了簡單起見，上述範例會假設任何視窗，呼叫`XLMAIN`屬於 Microsoft Excel 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="06e4a-402">For simplicity, the preceding example assumes that any window called `XLMAIN` belongs to an instance of Microsoft Excel.</span></span> <span data-ttu-id="06e4a-403">如果另一個物件，可能是由竄改，啟動以該名稱建立一個視窗，它就會收到您適用於 Excel 的所有訊息。</span><span class="sxs-lookup"><span data-stu-id="06e4a-403">If another object, possibly launched by illicit tampering, created a window with that name, it would receive all the messages you intended for Excel.</span></span> <span data-ttu-id="06e4a-404">要用於生產環境應用程式中，您應該包含一些更嚴格的測試，確認`XLMAIN`確實屬於 Excel。</span><span class="sxs-lookup"><span data-stu-id="06e4a-404">In an application to be used for production, you should include some more rigorous testing to verify that `XLMAIN` really belongs to Excel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="06e4a-405">指定類別類型的物件不存在。</span><span class="sxs-lookup"><span data-stu-id="06e4a-405">No object of the specified class type exists.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="06e4a-406">具有指定路徑和檔名的物件不存在。</span><span class="sxs-lookup"><span data-stu-id="06e4a-406">No object with the specified path and file name exists.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)" />
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/declare-statement.md"><span data-ttu-id="06e4a-407">Declare Statement</span><span class="sxs-lookup"><span data-stu-id="06e4a-407">Declare Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-strict-statement.md"><span data-ttu-id="06e4a-408">Long</span><span class="sxs-lookup"><span data-stu-id="06e4a-408">Option Strict Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSetting">
      <MemberSignature Language="C#" Value="public static string GetSetting (string AppName, string Section, string Key, string Default = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetSetting(string AppName, string Section, string Key, string Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetting (AppName As String, Section As String, Key As String, Optional Default As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member GetSetting : string * string * string * string -&gt; string" Usage="Microsoft.VisualBasic.Interaction.GetSetting (AppName, Section, Key, Default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Key" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Default" Type="System.String" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="06e4a-409">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-409">Required.</span></span> <span data-ttu-id="06e4a-410"><see langword="String" /> 運算式，包含要求機碼設定的應用程式或專案的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-410"><see langword="String" /> expression containing the name of the application or project whose key setting is requested.</span></span></param>
        <param name="Section"><span data-ttu-id="06e4a-411">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-411">Required.</span></span> <span data-ttu-id="06e4a-412"><see langword="String" /> 運算式，包含找到機碼設定所在的區段名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-412"><see langword="String" /> expression containing the name of the section in which the key setting is found.</span></span></param>
        <param name="Key"><span data-ttu-id="06e4a-413">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-413">Required.</span></span> <span data-ttu-id="06e4a-414"><see langword="String" /> 運算式，包含要傳回之機碼設定的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-414"><see langword="String" /> expression containing the name of the key setting to return.</span></span></param>
        <param name="Default"><span data-ttu-id="06e4a-415">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-415">Optional.</span></span> <span data-ttu-id="06e4a-416">如果未在 <paramref name="Key" /> 設定中設定任何值，則為包含傳回值的運算式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-416">Expression containing the value to return if no value is set in the <paramref name="Key" /> setting.</span></span> <span data-ttu-id="06e4a-417">如果省略，則會假設 <paramref name="Default" /> 是長度為零的字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="06e4a-417">If omitted, <paramref name="Default" /> is assumed to be a zero-length string ("").</span></span></param>
        <summary><span data-ttu-id="06e4a-418">從 Windows 登錄的應用程式項目中傳回機碼設定值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-418">Returns a key setting value from an application's entry in the Windows registry.</span></span> <span data-ttu-id="06e4a-419"><see langword="My" /> 功能可以提供比 <see langword="GetAllSettings" /> 更強大的登錄作業產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-419">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span> <span data-ttu-id="06e4a-420">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-420">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></summary>
        <returns><span data-ttu-id="06e4a-421">來自 Windows 登錄之應用程式項目的機碼設定值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-421">A key setting value from an application's entry in the Windows registry.</span></span>  
  
<span data-ttu-id="06e4a-422"><see langword="My" /> 功能可以提供比 <see langword="GetAllSettings" /> 更強大的登錄作業產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-422">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-423">如果任何項目中名為`GetSetting`引數不存在，`GetSetting`傳回值的`Default`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-423">If any of the items named in the `GetSetting` arguments do not exist, `GetSetting` returns a value of `Default`.</span></span>  
  
 <span data-ttu-id="06e4a-424">因為在其運作方式`HKEY_LOCAL_USER`登錄機碼，它才會啟用使用者以互動方式登入時，`GetSetting`需要使用者登入。</span><span class="sxs-lookup"><span data-stu-id="06e4a-424">Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetSetting` requires that a user be logged on.</span></span>  
  
 <span data-ttu-id="06e4a-425">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下`HKEY_LOCAL_MACHINE\Software\`或`HKEY_USER\DEFAULT\Software`登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-425">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
 <span data-ttu-id="06e4a-426">`GetSetting` 需要`Read` <xref:System.Security.Permissions.RegistryPermission> 。</span><span class="sxs-lookup"><span data-stu-id="06e4a-426">`GetSetting` requires `Read`<xref:System.Security.Permissions.RegistryPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-427">此範例會先使用`SaveSetting`函式來為指定的應用程式的 Windows 登錄中建立項目`AppName`，然後使用`GetSetting`函式來顯示其中一個設定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-427">This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, and then uses the `GetSetting` function to display one of the settings.</span></span> <span data-ttu-id="06e4a-428">因為`Default`引數指定時，某些值保證會傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-428">Because the `Default` argument is specified, some value is guaranteed to be returned.</span></span> <span data-ttu-id="06e4a-429">請注意，`Section`名稱無法使用擷取`GetSetting`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-429">Notice that `Section` names cannot be retrieved with `GetSetting`.</span></span> <span data-ttu-id="06e4a-430">最後，`DeleteSetting`函式會移除應用程式的所有項目。</span><span class="sxs-lookup"><span data-stu-id="06e4a-430">Finally, the `DeleteSetting` function removes all the application's entries.</span></span>  
  
 [!code-vb[VbVbalrCatRef#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-431">一個或多個引數不是 <see langword="String" /> 運算式，或使用者未登入。</span><span class="sxs-lookup"><span data-stu-id="06e4a-431">One or more arguments are not <see langword="String" /> expressions, or user is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Security.Permissions.RegistryPermission" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md"><span data-ttu-id="06e4a-432">讀取和寫入登錄 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-432">Reading from and Writing to the Registry (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IIf">
      <MemberSignature Language="C#" Value="public static object IIf (bool Expression, object TruePart, object FalsePart);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IIf(bool Expression, object TruePart, object FalsePart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IIf (Expression As Boolean, TruePart As Object, FalsePart As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IIf(bool Expression, System::Object ^ TruePart, System::Object ^ FalsePart);" />
      <MemberSignature Language="F#" Value="static member IIf : bool * obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.IIf (Expression, TruePart, FalsePart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TruePart" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="FalsePart" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="06e4a-433">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-433">Required.</span></span> <span data-ttu-id="06e4a-434"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-434"><see langword="Boolean" />.</span></span> <span data-ttu-id="06e4a-435">要評估的運算式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-435">The expression you want to evaluate.</span></span></param>
        <param name="TruePart"><span data-ttu-id="06e4a-436">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-436">Required.</span></span> <span data-ttu-id="06e4a-437"><see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-437"><see langword="Object" />.</span></span> <span data-ttu-id="06e4a-438">在 <paramref name="Expression" /> 評估為 <see langword="True" /> 時傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-438">Returned if <paramref name="Expression" /> evaluates to <see langword="True" />.</span></span></param>
        <param name="FalsePart"><span data-ttu-id="06e4a-439">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-439">Required.</span></span> <span data-ttu-id="06e4a-440"><see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-440"><see langword="Object" />.</span></span> <span data-ttu-id="06e4a-441">在 <paramref name="Expression" /> 評估為 <see langword="False" /> 時傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-441">Returned if <paramref name="Expression" /> evaluates to <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="06e4a-442">根據運算式的評估結果，傳回兩個物件當中的其中一個。</span><span class="sxs-lookup"><span data-stu-id="06e4a-442">Returns one of two objects, depending on the evaluation of an expression.</span></span></summary>
        <returns><span data-ttu-id="06e4a-443">根據運算式的評估結果，傳回兩個物件當中的其中一個。</span><span class="sxs-lookup"><span data-stu-id="06e4a-443">Returns one of two objects, depending on the evaluation of an expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-444">`IIf`函式會提供對應的三元[條件運算子:？:](https://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271)視覺效果中C++。</span><span class="sxs-lookup"><span data-stu-id="06e4a-444">The `IIf` function provides a counterpart for the ternary [Conditional Operator: ? :](https://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271) in Visual C++.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-445">這個範例會使用`IIf`函數來評估`testMe`參數`checkIt`程序，並傳回單字的 「 大型 」 如果數量大於 1000年; 否則它會傳回這個字 「 小 」。</span><span class="sxs-lookup"><span data-stu-id="06e4a-445">This example uses the `IIf` function to evaluate the `testMe` parameter of the `checkIt` procedure and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small".</span></span>  
  
 [!code-vb[VbVbalrFunctions#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#33)]  
  
 <span data-ttu-id="06e4a-446">請注意，如果`Option Strict`已`On`，您必須使用`CStr`關鍵字，明確轉換成傳回`Object`到`String`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-446">Note that if `Option Strict` is `On`, you must use the `CStr` keyword to explicitly convert the return from `Object` to `String`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-strict-statement.md"><span data-ttu-id="06e4a-447">Long</span><span class="sxs-lookup"><span data-stu-id="06e4a-447">Option Strict Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="06e4a-448">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="06e4a-448">Type Conversion Functions</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/if-then-else-statement.md"><span data-ttu-id="06e4a-449">If...Then...Else 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-449">If...Then...Else Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/select-case-statement.md"><span data-ttu-id="06e4a-450">Select...Case 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-450">Select...Case Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public static string InputBox (string Prompt, string Title = &quot;&quot;, string DefaultResponse = &quot;&quot;, int XPos = -1, int YPos = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputBox(string Prompt, string Title, string DefaultResponse, int32 XPos, int32 YPos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As String = &quot;&quot;, Optional DefaultResponse As String = &quot;&quot;, Optional XPos As Integer = -1, Optional YPos As Integer = -1) As String" />
      <MemberSignature Language="F#" Value="static member InputBox : string * string * string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Interaction.InputBox (Prompt, Title, DefaultResponse, XPos, YPos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Title" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DefaultResponse" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="XPos" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="YPos" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="06e4a-451">必要項。<see langword="String" /> 運算式，顯示為對話方塊中的訊息。</span><span class="sxs-lookup"><span data-stu-id="06e4a-451">Required <see langword="String" /> expression displayed as the message in the dialog box.</span></span> <span data-ttu-id="06e4a-452"><paramref name="Prompt" /> 長度的最大值大約為 1024 個字元，需視使用的字元寬度而定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-452">The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used.</span></span> <span data-ttu-id="06e4a-453">如果 <paramref name="Prompt" /> 包含多行，您可以在各行間使用歸位字元 (<see langword="Chr(" />13<see langword=")" />)、換行字元 (<see langword="Chr(" />10<see langword=")" />) 或歸位字元/換行字元組合 (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) 來分隔各行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-453">If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (<see langword="Chr(" />13<see langword=")" />), a line feed character (<see langword="Chr(" />10<see langword=")" />), or a carriage return/line feed combination (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) between each line.</span></span></param>
        <param name="Title"><span data-ttu-id="06e4a-454">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-454">Optional.</span></span> <span data-ttu-id="06e4a-455"><see langword="String" /> 運算式，會顯示在對話方塊的標題列中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-455"><see langword="String" /> expression displayed in the title bar of the dialog box.</span></span> <span data-ttu-id="06e4a-456">如果您省略 <paramref name="Title" />，則會將應用程式名稱置於標題列中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-456">If you omit <paramref name="Title" />, the application name is placed in the title bar.</span></span></param>
        <param name="DefaultResponse"><span data-ttu-id="06e4a-457">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-457">Optional.</span></span> <span data-ttu-id="06e4a-458"><see langword="String" /> 運算式，會在未提供其他輸入時，顯示在文字方塊中當做預設回應。</span><span class="sxs-lookup"><span data-stu-id="06e4a-458"><see langword="String" /> expression displayed in the text box as the default response if no other input is provided.</span></span> <span data-ttu-id="06e4a-459">如果您省略 <paramref name="DefaultResponse" />，則顯示的文字方塊會是空的。</span><span class="sxs-lookup"><span data-stu-id="06e4a-459">If you omit <paramref name="DefaultResponse" />, the displayed text box is empty.</span></span></param>
        <param name="XPos"><span data-ttu-id="06e4a-460">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-460">Optional.</span></span> <span data-ttu-id="06e4a-461">數值運算式，可指定從螢幕左邊緣算起的對話方塊左邊緣的距離 (以 Twip 為單位)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-461">Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen.</span></span> <span data-ttu-id="06e4a-462">如果您省略 <paramref name="XPos" />，則會以水平置中方式顯示對話方塊。</span><span class="sxs-lookup"><span data-stu-id="06e4a-462">If you omit <paramref name="XPos" />, the dialog box is centered horizontally.</span></span></param>
        <param name="YPos"><span data-ttu-id="06e4a-463">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-463">Optional.</span></span> <span data-ttu-id="06e4a-464">數值運算式，可指定從螢幕上邊緣算起的對話方塊上邊緣的距離 (以 Twip 為單位)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-464">Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen.</span></span> <span data-ttu-id="06e4a-465">如果您省略 <paramref name="YPos" />，則會以垂直顯示方式將對話方塊置於往螢幕下方距離約三分之一的地方。</span><span class="sxs-lookup"><span data-stu-id="06e4a-465">If you omit <paramref name="YPos" />, the dialog box is positioned vertically approximately one-third of the way down the screen.</span></span></param>
        <summary><span data-ttu-id="06e4a-466">在對話方塊中顯示提示、等候使用者輸入文字或按一下按鈕，然後傳回包含文字方塊內容的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-466">Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="06e4a-467">在對話方塊中顯示提示、等候使用者輸入文字或按一下按鈕，然後傳回包含文字方塊內容的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-467">Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-468">如果使用者按一下**取消**，會傳回長度為零的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-468">If the user clicks **Cancel**, a zero-length string is returned.</span></span>  
  
 <span data-ttu-id="06e4a-469">若要指定多個第一個引數，您必須使用`InputBox`函式在運算式中的。</span><span class="sxs-lookup"><span data-stu-id="06e4a-469">To specify more than the first argument, you must use the `InputBox` function in an expression.</span></span> <span data-ttu-id="06e4a-470">如果您省略任何位置的引數時，您必須保留對應的逗號分隔符號。</span><span class="sxs-lookup"><span data-stu-id="06e4a-470">If you omit any positional arguments, you must retain the corresponding comma delimiter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-471">`InputBox`函式需要`UIPermission`在<xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>層級，可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-471">The `InputBox` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-472">如需詳細資訊，請參閱 <<c0> [ 要求權限](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/yd267cce(v%3dvs.100))和<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-472">For more information, see [Requesting Permissions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/yd267cce(v%3dvs.100)) and <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-473">此範例示範使用各種方式`InputBox`函式來提示使用者輸入的值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-473">This example shows various ways to use the `InputBox` function to prompt the user to enter a value.</span></span> <span data-ttu-id="06e4a-474">如果 x 和 y 位置會省略，對話方塊會自動置中對齊的個別座標軸。</span><span class="sxs-lookup"><span data-stu-id="06e4a-474">If the x and y positions are omitted, the dialog box is automatically centered for the respective axes.</span></span> <span data-ttu-id="06e4a-475">變數`MyValue`包含如果使用者按一下 [確定] 或按下 ENTER 鍵，使用者所輸入的值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-475">The variable `MyValue` contains the value entered by the user if the user clicks OK or presses the ENTER key.</span></span>  
  
 [!code-vb[VbVbalrCatRef#67](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MsgBox">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.MsgBoxResult MsgBox (object Prompt, Microsoft.VisualBasic.MsgBoxStyle Buttons = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, object Title = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.MsgBoxResult MsgBox(object Prompt, valuetype Microsoft.VisualBasic.MsgBoxStyle Buttons, object Title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MsgBox (Prompt As Object, Optional Buttons As MsgBoxStyle = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, Optional Title As Object = null) As MsgBoxResult" />
      <MemberSignature Language="F#" Value="static member MsgBox : obj * Microsoft.VisualBasic.MsgBoxStyle * obj -&gt; Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Interaction.MsgBox (Prompt, Buttons, Title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Buttons" Type="Microsoft.VisualBasic.MsgBoxStyle" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Title" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="06e4a-476">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-476">Required.</span></span> <span data-ttu-id="06e4a-477"><see langword="String" /> 運算式，顯示為對話方塊中的訊息。</span><span class="sxs-lookup"><span data-stu-id="06e4a-477"><see langword="String" /> expression displayed as the message in the dialog box.</span></span> <span data-ttu-id="06e4a-478"><paramref name="Prompt" /> 長度的最大值大約為 1024 個字元，需視使用的字元寬度而定。</span><span class="sxs-lookup"><span data-stu-id="06e4a-478">The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used.</span></span> <span data-ttu-id="06e4a-479">如果 <paramref name="Prompt" /> 包含多行，您可以在各行間使用歸位字元 (<see langword="Chr(" />13<see langword=")" />)、換行字元 (<see langword="Chr(" />10<see langword=")" />) 或歸位字元/換行字元組合 (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) 來分隔各行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-479">If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (<see langword="Chr(" />13<see langword=")" />), a line feed character (<see langword="Chr(" />10<see langword=")" />), or a carriage return/linefeed character combination (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) between each line.</span></span></param>
        <param name="Buttons"><span data-ttu-id="06e4a-480">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-480">Optional.</span></span> <span data-ttu-id="06e4a-481">數值運算式，其為指定要顯示的按鈕數目和類型、要使用的圖示樣式、預設按鈕的識別以及訊息方塊是否為強制回應等值的總和。</span><span class="sxs-lookup"><span data-stu-id="06e4a-481">Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box.</span></span> <span data-ttu-id="06e4a-482">如果您省略 <paramref name="Buttons" />，預設值會是零。</span><span class="sxs-lookup"><span data-stu-id="06e4a-482">If you omit <paramref name="Buttons" />, the default value is zero.</span></span></param>
        <param name="Title"><span data-ttu-id="06e4a-483">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-483">Optional.</span></span> <span data-ttu-id="06e4a-484"><see langword="String" /> 運算式，會顯示在對話方塊的標題列中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-484"><see langword="String" /> expression displayed in the title bar of the dialog box.</span></span> <span data-ttu-id="06e4a-485">如果您省略 <paramref name="Title" />，則會將應用程式名稱置於標題列中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-485">If you omit <paramref name="Title" />, the application name is placed in the title bar.</span></span></param>
        <summary><span data-ttu-id="06e4a-486">在對話方塊中顯示訊息、等候使用者按一下按鈕，然後傳回表示使用者按下的按鈕之整數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-486">Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="06e4a-487">常數</span><span class="sxs-lookup"><span data-stu-id="06e4a-487">Constant</span></span> 
 </term>
              <description> <span data-ttu-id="06e4a-488">值</span><span class="sxs-lookup"><span data-stu-id="06e4a-488">Value</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="OK" />
              </term>
              <description> <span data-ttu-id="06e4a-489">1</span><span class="sxs-lookup"><span data-stu-id="06e4a-489">1</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="Cancel" />
              </term>
              <description> <span data-ttu-id="06e4a-490">2</span><span class="sxs-lookup"><span data-stu-id="06e4a-490">2</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="Abort" />
              </term>
              <description> <span data-ttu-id="06e4a-491">3</span><span class="sxs-lookup"><span data-stu-id="06e4a-491">3</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="Retry" />
              </term>
              <description> <span data-ttu-id="06e4a-492">4</span><span class="sxs-lookup"><span data-stu-id="06e4a-492">4</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="Ignore" />
              </term>
              <description> <span data-ttu-id="06e4a-493">5</span><span class="sxs-lookup"><span data-stu-id="06e4a-493">5</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="Yes" />
              </term>
              <description> <span data-ttu-id="06e4a-494">6</span><span class="sxs-lookup"><span data-stu-id="06e4a-494">6</span></span> 
 </description>
            </item>
            <item>
              <term>
                <see langword="No" />
              </term>
              <description> <span data-ttu-id="06e4a-495">7</span><span class="sxs-lookup"><span data-stu-id="06e4a-495">7</span></span> 
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-496">如果您省略任何位置的引數時，您必須保留對應的逗號分隔符號。</span><span class="sxs-lookup"><span data-stu-id="06e4a-496">If you omit any positional arguments, you must retain the corresponding comma delimiter.</span></span>  
  
 <span data-ttu-id="06e4a-497">如果對話方塊顯示**取消**按鈕，按下 ESC 鍵具有相同的效果按一下**取消**</span><span class="sxs-lookup"><span data-stu-id="06e4a-497">If the dialog box displays a **Cancel** button, pressing the ESC key has the same effect as clicking **Cancel**</span></span>  
  
 <span data-ttu-id="06e4a-498">如果對話方塊包含**協助**按鈕時，對話方塊中提供即時線上說明。</span><span class="sxs-lookup"><span data-stu-id="06e4a-498">If the dialog box contains a **Help** button, context-sensitive Help is provided for the dialog box.</span></span> <span data-ttu-id="06e4a-499">不過，會選擇其中一個其他按鈕之前，會不傳回任何值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-499">However, no value is returned until one of the other buttons is chosen.</span></span> <span data-ttu-id="06e4a-500">在 Windows Form 應用程式，選擇**幫助**按鈕會執行<xref:System.Windows.Forms.Control.HelpRequested>事件表單。</span><span class="sxs-lookup"><span data-stu-id="06e4a-500">In Windows Form applications, choosing the **Help** button executes the <xref:System.Windows.Forms.Control.HelpRequested> event for the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-501">`MsgBox`函式需要`UIPermission`在<xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>層級，可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-501">The `MsgBox` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-502">如需詳細資訊，請參閱<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-502">For more information, see <xref:System.Security.Permissions.UIPermission>.</span></span>  
  
 <span data-ttu-id="06e4a-503">`MsgBoxStyle`列舉值會列在下表。</span><span class="sxs-lookup"><span data-stu-id="06e4a-503">The `MsgBoxStyle` enumeration values are listed in the following table.</span></span>  
  
|<span data-ttu-id="06e4a-504">成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-504">Member</span></span>|<span data-ttu-id="06e4a-505">值</span><span class="sxs-lookup"><span data-stu-id="06e4a-505">Value</span></span>|<span data-ttu-id="06e4a-506">說明</span><span class="sxs-lookup"><span data-stu-id="06e4a-506">Description</span></span>|  
|-|-|-|  
|<span data-ttu-id="06e4a-507">成員</span><span class="sxs-lookup"><span data-stu-id="06e4a-507">Member</span></span>|<span data-ttu-id="06e4a-508">值</span><span class="sxs-lookup"><span data-stu-id="06e4a-508">Value</span></span>|<span data-ttu-id="06e4a-509">描述</span><span class="sxs-lookup"><span data-stu-id="06e4a-509">Description</span></span>|  
|`OKOnly`|<span data-ttu-id="06e4a-510">0</span><span class="sxs-lookup"><span data-stu-id="06e4a-510">0</span></span>|<span data-ttu-id="06e4a-511">只顯示 [確定] 按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-511">Displays OK button only.</span></span>|  
|`OKCancel`|<span data-ttu-id="06e4a-512">1</span><span class="sxs-lookup"><span data-stu-id="06e4a-512">1</span></span>|<span data-ttu-id="06e4a-513">顯示 [確定] 和 [取消] 按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-513">Displays OK and Cancel buttons.</span></span>|  
|`AbortRetryIgnore`|<span data-ttu-id="06e4a-514">2</span><span class="sxs-lookup"><span data-stu-id="06e4a-514">2</span></span>|<span data-ttu-id="06e4a-515">顯示 中止、 重試 」 和 忽略 按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-515">Displays Abort, Retry, and Ignore buttons.</span></span>|  
|`YesNoCancel`|<span data-ttu-id="06e4a-516">3</span><span class="sxs-lookup"><span data-stu-id="06e4a-516">3</span></span>|<span data-ttu-id="06e4a-517">會顯示 Yes、 No 和取消按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-517">Displays Yes, No, and Cancel buttons.</span></span>|  
|`YesNo`|<span data-ttu-id="06e4a-518">4</span><span class="sxs-lookup"><span data-stu-id="06e4a-518">4</span></span>|<span data-ttu-id="06e4a-519">顯示 [是] 和 [否] 按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-519">Displays Yes and No buttons.</span></span>|  
|`RetryCancel`|<span data-ttu-id="06e4a-520">5</span><span class="sxs-lookup"><span data-stu-id="06e4a-520">5</span></span>|<span data-ttu-id="06e4a-521">顯示重試 和 取消 按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-521">Displays Retry and Cancel buttons.</span></span>|  
|`Critical`|<span data-ttu-id="06e4a-522">16</span><span class="sxs-lookup"><span data-stu-id="06e4a-522">16</span></span>|<span data-ttu-id="06e4a-523">顯示嚴重訊息圖示。</span><span class="sxs-lookup"><span data-stu-id="06e4a-523">Displays Critical Message icon.</span></span>|  
|`Question`|<span data-ttu-id="06e4a-524">32</span><span class="sxs-lookup"><span data-stu-id="06e4a-524">32</span></span>|<span data-ttu-id="06e4a-525">顯示警告查詢 圖示。</span><span class="sxs-lookup"><span data-stu-id="06e4a-525">Displays Warning Query icon.</span></span>|  
|`Exclamation`|<span data-ttu-id="06e4a-526">48</span><span class="sxs-lookup"><span data-stu-id="06e4a-526">48</span></span>|<span data-ttu-id="06e4a-527">顯示警告訊息圖示。</span><span class="sxs-lookup"><span data-stu-id="06e4a-527">Displays Warning Message icon.</span></span>|  
|`Information`|<span data-ttu-id="06e4a-528">64</span><span class="sxs-lookup"><span data-stu-id="06e4a-528">64</span></span>|<span data-ttu-id="06e4a-529">顯示資訊訊息圖示。</span><span class="sxs-lookup"><span data-stu-id="06e4a-529">Displays Information Message icon.</span></span>|  
|`DefaultButton1`|<span data-ttu-id="06e4a-530">0</span><span class="sxs-lookup"><span data-stu-id="06e4a-530">0</span></span>|<span data-ttu-id="06e4a-531">第一個按鈕是預設值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-531">First button is default.</span></span>|  
|`DefaultButton2`|<span data-ttu-id="06e4a-532">256</span><span class="sxs-lookup"><span data-stu-id="06e4a-532">256</span></span>|<span data-ttu-id="06e4a-533">第二個按鈕是預設值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-533">Second button is default.</span></span>|  
|`DefaultButton3`|<span data-ttu-id="06e4a-534">512</span><span class="sxs-lookup"><span data-stu-id="06e4a-534">512</span></span>|<span data-ttu-id="06e4a-535">第三個按鈕是預設值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-535">Third button is default.</span></span>|  
|`ApplicationModal`|<span data-ttu-id="06e4a-536">0</span><span class="sxs-lookup"><span data-stu-id="06e4a-536">0</span></span>|<span data-ttu-id="06e4a-537">應用程式是強制回應。</span><span class="sxs-lookup"><span data-stu-id="06e4a-537">Application is modal.</span></span> <span data-ttu-id="06e4a-538">繼續進行目前的應用程式中的工作之前，使用者必須回應訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="06e4a-538">The user must respond to the message box before continuing work in the current application.</span></span>|  
|`SystemModal`|<span data-ttu-id="06e4a-539">4096</span><span class="sxs-lookup"><span data-stu-id="06e4a-539">4096</span></span>|<span data-ttu-id="06e4a-540">系統為強制回應。</span><span class="sxs-lookup"><span data-stu-id="06e4a-540">System is modal.</span></span> <span data-ttu-id="06e4a-541">所有應用程式會暫停，直到使用者回應訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="06e4a-541">All applications are suspended until the user responds to the message box.</span></span>|  
|`MsgBoxSetForeground`|<span data-ttu-id="06e4a-542">65536</span><span class="sxs-lookup"><span data-stu-id="06e4a-542">65536</span></span>|<span data-ttu-id="06e4a-543">指定訊息方塊視窗為前景視窗。</span><span class="sxs-lookup"><span data-stu-id="06e4a-543">Specifies the message box window as the foreground window.</span></span>|  
|`MsgBoxRight`|<span data-ttu-id="06e4a-544">524288</span><span class="sxs-lookup"><span data-stu-id="06e4a-544">524288</span></span>|<span data-ttu-id="06e4a-545">文字會靠右對齊。</span><span class="sxs-lookup"><span data-stu-id="06e4a-545">Text is right-aligned.</span></span>|  
|`MsgBoxRtlReading`|<span data-ttu-id="06e4a-546">1048576</span><span class="sxs-lookup"><span data-stu-id="06e4a-546">1048576</span></span>|<span data-ttu-id="06e4a-547">指定文字應該顯示為從右至左讀取希伯來文和阿拉伯文系統上。</span><span class="sxs-lookup"><span data-stu-id="06e4a-547">Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.</span></span>|  
  
 <span data-ttu-id="06e4a-548">第一個群組的值 (0-5) 描述的數目和類型的對話方塊中顯示的按鈕。</span><span class="sxs-lookup"><span data-stu-id="06e4a-548">The first group of values (0-5) describes the number and type of buttons displayed in the dialog box.</span></span> <span data-ttu-id="06e4a-549">第二個群組的值 （16、 32、 48、 64） 說明圖示樣式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-549">The second group (16, 32, 48, 64) describes the icon style.</span></span> <span data-ttu-id="06e4a-550">第三個群組的值 （0、 256、 512） 會判斷哪一個按鈕是預設值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-550">The third group (0, 256, 512) determines which button is the default.</span></span> <span data-ttu-id="06e4a-551">第四個群組的值 （0，4096） 會決定訊息方塊中的強制回應和第五個群組可讓您指定訊息方塊視窗為前景視窗，以及對齊方式和文字的方向。</span><span class="sxs-lookup"><span data-stu-id="06e4a-551">The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text.</span></span> <span data-ttu-id="06e4a-552">若要建立的最後一個值的個數字相加時`Buttons`引數，從每個群組的使用只有一個數字。</span><span class="sxs-lookup"><span data-stu-id="06e4a-552">When adding numbers to create a final value for the `Buttons` argument, use only one number from each group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-553">這個範例會使用`MsgBox`具 Yes 和按鈕的對話方塊中顯示的嚴重錯誤訊息的函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-553">This example uses the `MsgBox` function to display a critical-error message in a dialog box with Yes and No buttons.</span></span> <span data-ttu-id="06e4a-554">[否] 會指定為預設回應。</span><span class="sxs-lookup"><span data-stu-id="06e4a-554">The No button is specified as the default response.</span></span> <span data-ttu-id="06e4a-555">這是藉由結合`MsgBox`成一個數值運算式的常數值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-555">This is done by combining the `MsgBox` constant values into one numeric expression.</span></span> <span data-ttu-id="06e4a-556">在此情況下，將 4 (是/否] 按鈕組合) 到 16 (**重大訊息**視窗) 256 （第二個按鈕為預設按鈕），以及 [276 總計。</span><span class="sxs-lookup"><span data-stu-id="06e4a-556">In this case, adding 4 (the Yes/No button combination) and 16 (the **Critical Message** window) and 256 (the second button as default button) gives a total of 276.</span></span> <span data-ttu-id="06e4a-557">所傳回的值`MsgBox`函式會視使用者選擇按鈕而定：[是] 會傳回 6; 的值沒有傳回值為 7。</span><span class="sxs-lookup"><span data-stu-id="06e4a-557">The value returned by the `MsgBox` function depends on the button chosen by the user: Yes returns a value of 6; No returns a value of 7.</span></span>  
  
 [!code-vb[VbVbalrCatRef#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-558"><paramref name="Prompt" /> 不是 <see langword="String" /> 運算式，或 <paramref name="Title" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="06e4a-558"><paramref name="Prompt" /> is not a <see langword="String" /> expression, or <paramref name="Title" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="06e4a-559">處理序不是在使用者互動模式中執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-559">Process is not running in User Interactive mode.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="06e4a-560">一或多個參數不是 <see langword="MsgBoxResult" /> 或 <see langword="MsgBoxStyle" /> 列舉類型的成員。</span><span class="sxs-lookup"><span data-stu-id="06e4a-560">One or more parameters not a member of <see langword="MsgBoxResult" /> or <see langword="MsgBoxStyle" /> enumeration.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Partition">
      <MemberSignature Language="C#" Value="public static string Partition (long Number, long Start, long Stop, long Interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Partition(int64 Number, int64 Start, int64 Stop, int64 Interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Partition (Number As Long, Start As Long, Stop As Long, Interval As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Partition(long Number, long Start, long Stop, long Interval);" />
      <MemberSignature Language="F#" Value="static member Partition : int64 * int64 * int64 * int64 -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Partition (Number, Start, Stop, Interval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Start" Type="System.Int64" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Stop" Type="System.Int64" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Interval" Type="System.Int64" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="06e4a-561">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-561">Required.</span></span> <span data-ttu-id="06e4a-562"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-562"><see langword="Long" />.</span></span> <span data-ttu-id="06e4a-563">在其中一個計算範圍中所要尋找的整數值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-563">Whole number that you want to locate within one of the calculated ranges.</span></span></param>
        <param name="Start"><span data-ttu-id="06e4a-564">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-564">Required.</span></span> <span data-ttu-id="06e4a-565"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-565"><see langword="Long" />.</span></span> <span data-ttu-id="06e4a-566">整數值，表示這組計算範圍的開頭。</span><span class="sxs-lookup"><span data-stu-id="06e4a-566">Whole number that indicates the start of the set of calculated ranges.</span></span> <span data-ttu-id="06e4a-567"><paramref name="Start" /> 不能小於 0。</span><span class="sxs-lookup"><span data-stu-id="06e4a-567"><paramref name="Start" /> cannot be less than 0.</span></span></param>
        <param name="Stop"><span data-ttu-id="06e4a-568">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-568">Required.</span></span> <span data-ttu-id="06e4a-569"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-569"><see langword="Long" />.</span></span> <span data-ttu-id="06e4a-570">整數值，表示這組計算範圍的結尾。</span><span class="sxs-lookup"><span data-stu-id="06e4a-570">Whole number that indicates the end of the set of calculated ranges.</span></span> <span data-ttu-id="06e4a-571"><paramref name="Stop" /> 不可以小於或等於 <paramref name="Start" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-571"><paramref name="Stop" /> cannot be less than or equal to <paramref name="Start" />.</span></span></param>
        <param name="Interval"><span data-ttu-id="06e4a-572">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-572">Required.</span></span> <span data-ttu-id="06e4a-573"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-573"><see langword="Long" />.</span></span> <span data-ttu-id="06e4a-574">整數值，表示 <paramref name="Start" /> 到 <paramref name="Stop" /> 之間所計算之每一個範圍的大小。</span><span class="sxs-lookup"><span data-stu-id="06e4a-574">Whole number that indicates the size of each range calculated between <paramref name="Start" /> and <paramref name="Stop" />.</span></span> <span data-ttu-id="06e4a-575"><paramref name="Interval" /> 不得小於 1。</span><span class="sxs-lookup"><span data-stu-id="06e4a-575"><paramref name="Interval" /> cannot be less than 1.</span></span></param>
        <summary><span data-ttu-id="06e4a-576">傳回字串，表示包含數字的計算範圍。</span><span class="sxs-lookup"><span data-stu-id="06e4a-576">Returns a string representing the calculated range that contains a number.</span></span></summary>
        <returns><span data-ttu-id="06e4a-577">字串，表示包含數字的計算範圍。</span><span class="sxs-lookup"><span data-stu-id="06e4a-577">A string representing the calculated range that contains a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-578">`Partition`函式會計算一組數字的範圍，每一個都會包含所指定的值數目`Interval`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-578">The `Partition` function calculates a set of numeric ranges, each containing the number of values specified by `Interval`.</span></span> <span data-ttu-id="06e4a-579">第一個範圍開始`Start`，且最後一個範圍結束於`Stop`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-579">The first range begins at `Start`, and the last range ends at `Stop`.</span></span> <span data-ttu-id="06e4a-580">`Partition`函式，然後識別哪些範圍包含`Number`，並傳回描述該範圍的字串。</span><span class="sxs-lookup"><span data-stu-id="06e4a-580">The `Partition` function then identifies which range contains `Number` and returns a string describing that range.</span></span> <span data-ttu-id="06e4a-581">範圍以字串做為 「*值較低值*:*較高值*"，其中低範圍的結尾 (*值較低值*) 分開高端 (*較高值*) 以冒號 （:）。</span><span class="sxs-lookup"><span data-stu-id="06e4a-581">The range is represented in the string as "*lowervalue*:*uppervalue*", where the low end of the range (*lowervalue*) is separated from the high end (*uppervalue*) by a colon (:).</span></span>  
  
 <span data-ttu-id="06e4a-582">如果有必要，請`Partition`函式會插入前的加上前置空格*值較低值*並*較高值*，因此它們都具有相同的字元數為字串表示的值 （`Stop` + 1)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-582">If necessary, the `Partition` function inserts leading spaces before *lowervalue* and *uppervalue* so that they both have the same number of characters as the string representation of the value (`Stop` + 1).</span></span> <span data-ttu-id="06e4a-583">這可確保如果您使用的輸出`Partition`具有數個值的函式`Number`，產生的文字是否會正確處理期間任何後續的排序作業。</span><span class="sxs-lookup"><span data-stu-id="06e4a-583">This ensures that if you use the output of the `Partition` function with several values of `Number`, the resulting text will be handled properly during any subsequent sort operation.</span></span>  
  
 <span data-ttu-id="06e4a-584">下表顯示使用三組計算範圍的一些範例字串`Start`， `Stop`，和`Interval`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-584">The following table shows some sample strings for ranges calculated using three sets of `Start`, `Stop`, and `Interval`.</span></span> <span data-ttu-id="06e4a-585">「 第一次的範圍 」 和 「 上次範圍 」 資料行顯示最低和最高給定的範圍可能的值`Start`和`Stop`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-585">The "First range" and "Last range" columns show the lowest and highest ranges possible given the values of `Start` and `Stop`.</span></span> <span data-ttu-id="06e4a-586">「 第一個範圍 」 前後"最後一個範圍 」 資料行會顯示傳回之值的字串`Number`少於`Start`且大於`Stop`分別。</span><span class="sxs-lookup"><span data-stu-id="06e4a-586">The "Before first range" and "After last range" columns show the strings returned for values of `Number` less than `Start` and greater than `Stop`, respectively.</span></span>  
  
|`Start`|`Stop`|`Interval`|<span data-ttu-id="06e4a-587">第一個範圍之前</span><span class="sxs-lookup"><span data-stu-id="06e4a-587">Before first range</span></span>|<span data-ttu-id="06e4a-588">第一個範圍</span><span class="sxs-lookup"><span data-stu-id="06e4a-588">First range</span></span>|<span data-ttu-id="06e4a-589">最後一個範圍</span><span class="sxs-lookup"><span data-stu-id="06e4a-589">Last range</span></span>|<span data-ttu-id="06e4a-590">最後一個範圍後</span><span class="sxs-lookup"><span data-stu-id="06e4a-590">After last range</span></span>|  
|-|-|-|-|-|-|-|  
|<span data-ttu-id="06e4a-591">0</span><span class="sxs-lookup"><span data-stu-id="06e4a-591">0</span></span>|<span data-ttu-id="06e4a-592">99</span><span class="sxs-lookup"><span data-stu-id="06e4a-592">99</span></span>|<span data-ttu-id="06e4a-593">5</span><span class="sxs-lookup"><span data-stu-id="06e4a-593">5</span></span>|<span data-ttu-id="06e4a-594">"   : -1"</span><span class="sxs-lookup"><span data-stu-id="06e4a-594">"   : -1"</span></span>|<span data-ttu-id="06e4a-595">"  0:4"</span><span class="sxs-lookup"><span data-stu-id="06e4a-595">"  0:  4"</span></span>|<span data-ttu-id="06e4a-596">" 95:99"</span><span class="sxs-lookup"><span data-stu-id="06e4a-596">" 95: 99"</span></span>|<span data-ttu-id="06e4a-597">"100:   "</span><span class="sxs-lookup"><span data-stu-id="06e4a-597">"100:   "</span></span>|  
|<span data-ttu-id="06e4a-598">20</span><span class="sxs-lookup"><span data-stu-id="06e4a-598">20</span></span>|<span data-ttu-id="06e4a-599">199</span><span class="sxs-lookup"><span data-stu-id="06e4a-599">199</span></span>|<span data-ttu-id="06e4a-600">10</span><span class="sxs-lookup"><span data-stu-id="06e4a-600">10</span></span>|<span data-ttu-id="06e4a-601">"   :19"</span><span class="sxs-lookup"><span data-stu-id="06e4a-601">"   : 19"</span></span>|<span data-ttu-id="06e4a-602">" 20:29"</span><span class="sxs-lookup"><span data-stu-id="06e4a-602">" 20: 29"</span></span>|<span data-ttu-id="06e4a-603">"190:199"</span><span class="sxs-lookup"><span data-stu-id="06e4a-603">"190:199"</span></span>|<span data-ttu-id="06e4a-604">"200:   "</span><span class="sxs-lookup"><span data-stu-id="06e4a-604">"200:   "</span></span>|  
|<span data-ttu-id="06e4a-605">100</span><span class="sxs-lookup"><span data-stu-id="06e4a-605">100</span></span>|<span data-ttu-id="06e4a-606">1010</span><span class="sxs-lookup"><span data-stu-id="06e4a-606">1010</span></span>|<span data-ttu-id="06e4a-607">20</span><span class="sxs-lookup"><span data-stu-id="06e4a-607">20</span></span>|<span data-ttu-id="06e4a-608">"    :99"</span><span class="sxs-lookup"><span data-stu-id="06e4a-608">"    : 99"</span></span>|<span data-ttu-id="06e4a-609">" 100:119"</span><span class="sxs-lookup"><span data-stu-id="06e4a-609">" 100: 119"</span></span>|<span data-ttu-id="06e4a-610">"1000:1010"</span><span class="sxs-lookup"><span data-stu-id="06e4a-610">"1000:1010"</span></span>|<span data-ttu-id="06e4a-611">"1011:    "</span><span class="sxs-lookup"><span data-stu-id="06e4a-611">"1011:    "</span></span>|  
  
 <span data-ttu-id="06e4a-612">在上表中，第三行顯示的結果時`Start`並`Stop`定義一組不能被平均除以的數字`Interval`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-612">In the preceding table, the third line shows the result when `Start` and `Stop` define a set of numbers that cannot be evenly divided by `Interval`.</span></span> <span data-ttu-id="06e4a-613">最後一個範圍結尾`Stop`，使得只有 11 數字很長，即使`Interval`為 20。</span><span class="sxs-lookup"><span data-stu-id="06e4a-613">The last range ends at `Stop`, making it only 11 numbers long, even though `Interval` is 20.</span></span>  
  
 <span data-ttu-id="06e4a-614">如果`Interval`為 1，範圍是 「`Number`:`Number`"，而不論`Start`和`Stop`引數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-614">If `Interval` is 1, the range is "`Number`:`Number`", regardless of the `Start` and `Stop` arguments.</span></span> <span data-ttu-id="06e4a-615">比方說，如果`Number`是出現 267`Stop`為 1000，和`Interval`為 1，`Partition`傳回"267:267".</span><span class="sxs-lookup"><span data-stu-id="06e4a-615">For example, if `Number` is 267, `Stop` is 1000, and `Interval` is 1, `Partition` returns " 267: 267".</span></span>  
  
 <span data-ttu-id="06e4a-616">`Partition` 建構資料庫查詢時，可以很有用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-616">`Partition` can be useful when constructing database queries.</span></span> <span data-ttu-id="06e4a-617">您可以建立的 SELECT 查詢，顯示發生在各種不同的值範圍，例如使用發票值從 1 到 1000，1001年到 2000年多少訂單等等。</span><span class="sxs-lookup"><span data-stu-id="06e4a-617">You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-618">下列範例會設定一系列的範圍數十年 2049 1950。</span><span class="sxs-lookup"><span data-stu-id="06e4a-618">The following example sets up a series of ranges for decades from 1950 through 2049.</span></span> <span data-ttu-id="06e4a-619">它會找出的值`year`內的適當的範圍和傳回`String`顯示範圍的值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-619">It locates the value of `year` within the appropriate range and returns a `String` value showing the range.</span></span> <span data-ttu-id="06e4a-620">如果`year`比方說，其值為 1984 年`Partition`傳回 「 1980:1989"。</span><span class="sxs-lookup"><span data-stu-id="06e4a-620">If `year` has a value of 1984, for example, `Partition` returns "1980:1989".</span></span>  
  
 [!code-vb[VbVbalrFunctions#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-621"><paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" /> 或 <paramref name="Interval" /> &lt; 1。</span><span class="sxs-lookup"><span data-stu-id="06e4a-621"><paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" />, or <paramref name="Interval" /> &lt; 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSetting">
      <MemberSignature Language="C#" Value="public static void SaveSetting (string AppName, string Section, string Key, string Setting);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SaveSetting(string AppName, string Section, string Key, string Setting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSetting (AppName As String, Section As String, Key As String, Setting As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSetting(System::String ^ AppName, System::String ^ Section, System::String ^ Key, System::String ^ Setting);" />
      <MemberSignature Language="F#" Value="static member SaveSetting : string * string * string * string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.SaveSetting (AppName, Section, Key, Setting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Key" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Setting" Type="System.String" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="06e4a-622">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-622">Required.</span></span> <span data-ttu-id="06e4a-623"><see langword="String" /> 運算式，包含此設定所套用的應用程式或專案的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-623"><see langword="String" /> expression containing the name of the application or project to which the setting applies.</span></span></param>
        <param name="Section"><span data-ttu-id="06e4a-624">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-624">Required.</span></span> <span data-ttu-id="06e4a-625"><see langword="String" /> 運算式，包含機碼設定儲存所在的區段名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-625"><see langword="String" /> expression containing the name of the section in which the key setting is being saved.</span></span></param>
        <param name="Key"><span data-ttu-id="06e4a-626">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-626">Required.</span></span> <span data-ttu-id="06e4a-627"><see langword="String" /> 運算式，包含所要儲存之機碼設定的名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-627"><see langword="String" /> expression containing the name of the key setting being saved.</span></span></param>
        <param name="Setting"><span data-ttu-id="06e4a-628">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-628">Required.</span></span> <span data-ttu-id="06e4a-629">運算式，包含 <paramref name="Key" /> 所設定成的值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-629">Expression containing the value to which <paramref name="Key" /> is being set.</span></span></param>
        <summary><span data-ttu-id="06e4a-630">在 Windows 登錄中儲存或建立應用程式項目。</span><span class="sxs-lookup"><span data-stu-id="06e4a-630">Saves or creates an application entry in the Windows registry.</span></span> <span data-ttu-id="06e4a-631"><see langword="My" /> 功能可以提供比 <see langword="SaveSetting" /> 更強大的登錄作業產能和效能。</span><span class="sxs-lookup"><span data-stu-id="06e4a-631">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="SaveSetting" />.</span></span> <span data-ttu-id="06e4a-632">如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-632">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-633">`SaveSetting`函式會將關鍵`HKEY_CURRENT_USER\Software\VB and VBA Program Settings`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-633">The `SaveSetting` function adds the key to `HKEY_CURRENT_USER\Software\VB and VBA Program Settings`.</span></span>  
  
 <span data-ttu-id="06e4a-634">如果因為任何原因，無法儲存之機碼設定，就會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="06e4a-634">If the key setting cannot be saved for any reason, an error occurs.</span></span>  
  
 <span data-ttu-id="06e4a-635">`SaveSetting` 需要使用者要登入，因為它運作`HKEY_LOCAL_USER`登錄機碼，在使用者以互動方式登入時才會啟用。</span><span class="sxs-lookup"><span data-stu-id="06e4a-635">`SaveSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.</span></span>  
  
 <span data-ttu-id="06e4a-636">要從非互動式處理序 （例如 Mtx.exe) 存取的登錄設定應該儲存之下`HKEY_LOCAL_MACHINE\Software\`或`HKEY_USER\DEFAULT\Software`登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-636">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
 <span data-ttu-id="06e4a-637">`SaveSetting` 需要`Write`並`Create` <xref:System.Security.Permissions.RegistryPermission> 。</span><span class="sxs-lookup"><span data-stu-id="06e4a-637">`SaveSetting` requires `Write` and `Create`<xref:System.Security.Permissions.RegistryPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-638">下列範例會先使用`SaveSetting`函式來建立 Windows 登錄中的項目`MyApp`應用程式，然後再使用`DeleteSetting`函式以移除它們。</span><span class="sxs-lookup"><span data-stu-id="06e4a-638">The following example first uses the `SaveSetting` function to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.</span></span>  
  
 [!code-vb[VbVbalrCatRef#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-639">無法建立登錄機碼或使用者未登入。</span><span class="sxs-lookup"><span data-stu-id="06e4a-639">Key registry could not be created, or user is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.Security.Permissions.RegistryPermission" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md"><span data-ttu-id="06e4a-640">讀取和寫入登錄 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-640">Reading from and Writing to the Registry (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Shell">
      <MemberSignature Language="C#" Value="public static int Shell (string Pathname, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Shell(string Pathname, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" FrameworkAlternate="netframework-2.0;netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function Shell (Pathname As String, Optional Style As AppWinStyle = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, Optional Wait As Boolean = false, Optional Timeout As Integer = -1) As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public static int Shell (string PathName, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Shell(string PathName, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Shell (PathName As String, Optional Style As AppWinStyle = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, Optional Wait As Boolean = false, Optional Timeout As Integer = -1) As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Shell : string * Microsoft.VisualBasic.AppWinStyle * bool * int -&gt; int" Usage="Microsoft.VisualBasic.Interaction.Shell (PathName, Style, Wait, Timeout)" FrameworkAlternate="netframework-2.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Shell : string * Microsoft.VisualBasic.AppWinStyle * bool * int -&gt; int" Usage="Microsoft.VisualBasic.Interaction.Shell (PathName, Style, Wait, Timeout)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Style" Type="Microsoft.VisualBasic.AppWinStyle" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Wait" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Timeout" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Pathname"><span data-ttu-id="06e4a-641">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-641">Required.</span></span> <span data-ttu-id="06e4a-642"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-642"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-643">要執行的程式名稱，以及任何必要的引數和命令列參數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-643">Name of the program to execute, together with any required arguments and command-line switches.</span></span> <span data-ttu-id="06e4a-644"><paramref name="PathName" /> 也可包含磁碟機和目錄路徑或資料夾。</span><span class="sxs-lookup"><span data-stu-id="06e4a-644"><paramref name="PathName" /> can also include the drive and the directory path or folder.</span></span>
<span data-ttu-id="06e4a-645">如果您不知道此程式的路徑，可以使用 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> 來尋找。</span><span class="sxs-lookup"><span data-stu-id="06e4a-645">If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it.</span></span> <span data-ttu-id="06e4a-646">例如，您可以呼叫 <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>，以傳回磁碟機 C:\\ 上任何位置名為 <c>testFile.txt</c> 之每個檔案的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="06e4a-646">For example, you can call <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, which returns the full path of every file named <c>testFile.txt</c> anywhere on drive C:\\.</span></span></param>
        <param name="PathName"><span data-ttu-id="06e4a-647">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-647">Required.</span></span> <span data-ttu-id="06e4a-648"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-648"><see langword="String" />.</span></span> <span data-ttu-id="06e4a-649">要執行的程式名稱，以及任何必要的引數和命令列參數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-649">Name of the program to execute, together with any required arguments and command-line switches.</span></span> <span data-ttu-id="06e4a-650"><paramref name="PathName" /> 也可包含磁碟機和目錄路徑或資料夾。</span><span class="sxs-lookup"><span data-stu-id="06e4a-650"><paramref name="PathName" /> can also include the drive and the directory path or folder.</span></span>  
 <span data-ttu-id="06e4a-651">如果您不知道此程式的路徑，可以使用 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> 來尋找。</span><span class="sxs-lookup"><span data-stu-id="06e4a-651">If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it.</span></span> <span data-ttu-id="06e4a-652">例如，您可以呼叫 <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>，以傳回磁碟機 C:\\ 上任何位置名為 <c>testFile.txt</c> 之每個檔案的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="06e4a-652">For example, you can call <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, which returns the full path of every file named <c>testFile.txt</c> anywhere on drive C:\\.</span></span></param>
        <param name="Style"><span data-ttu-id="06e4a-653">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-653">Optional.</span></span> <span data-ttu-id="06e4a-654"><see langword="AppWinStyle" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-654"><see langword="AppWinStyle" />.</span></span> <span data-ttu-id="06e4a-655">選自 <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> 的值，可指定此程式執行所在之視窗的樣式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-655">A value chosen from the <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> specifying the style of the window in which the program is to run.</span></span> <span data-ttu-id="06e4a-656">如果省略 <paramref name="Style" />，則 <see langword="Shell" /> 會使用 <see langword="AppWinStyle.MinimizedFocus" /> (其會以最小化狀態啟動程式，並具有焦點)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-656">If <paramref name="Style" /> is omitted, <see langword="Shell" /> uses <see langword="AppWinStyle.MinimizedFocus" />, which starts the program minimized and with focus.</span></span></param>
        <param name="Wait"><span data-ttu-id="06e4a-657">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-657">Optional.</span></span> <span data-ttu-id="06e4a-658"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-658"><see langword="Boolean" />.</span></span> <span data-ttu-id="06e4a-659">值，表示 <see langword="Shell" /> 函式是否應該等候程式完成。</span><span class="sxs-lookup"><span data-stu-id="06e4a-659">A value indicating whether the <see langword="Shell" /> function should wait for completion of the program.</span></span> <span data-ttu-id="06e4a-660">如果省略 <paramref name="Wait" />，則 <see langword="Shell" /> 會使用 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-660">If <paramref name="Wait" /> is omitted, <see langword="Shell" /> uses <see langword="False" />.</span></span></param>
        <param name="Timeout"><span data-ttu-id="06e4a-661">選擇性。</span><span class="sxs-lookup"><span data-stu-id="06e4a-661">Optional.</span></span> <span data-ttu-id="06e4a-662"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="06e4a-662"><see langword="Integer" />.</span></span> <span data-ttu-id="06e4a-663">如果 <paramref name="Wait" /> 為 <see langword="True" />，則為等候完成的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-663">The number of milliseconds to wait for completion if <paramref name="Wait" /> is <see langword="True" />.</span></span> <span data-ttu-id="06e4a-664">如果省略 <paramref name="Timeout" />，則 <see langword="Shell" /> 會使用 -1，這表示沒有逾時，且 <see langword="Shell" /> 要等到程式完成後才會傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-664">If <paramref name="Timeout" /> is omitted, <see langword="Shell" /> uses -1, which means there is no timeout and <see langword="Shell" /> does not return until the program finishes.</span></span> <span data-ttu-id="06e4a-665">因此，如果您省略 <paramref name="Timeout" /> 或是將它設定為 -1，則 <see langword="Shell" /> 有可能永遠都不會將控制權傳回給您的程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-665">Therefore, if you omit <paramref name="Timeout" /> or set it to -1, it is possible that <see langword="Shell" /> might never return control to your program.</span></span></param>
        <summary><span data-ttu-id="06e4a-666">執行可執行程式，並在它仍在執行中時傳回一個整數 (整數中包含此程式的處理序 ID)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-666">Runs an executable program and returns an integer containing the program's process ID if it is still running.</span></span></summary>
        <returns><span data-ttu-id="06e4a-667">包含此程式處理序識別碼的整數 (如果它仍在執行中)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-667">An integer containing the program's process ID if it is still running.</span></span> <span data-ttu-id="06e4a-668">如果程式已完成執行則為 0。</span><span class="sxs-lookup"><span data-stu-id="06e4a-668">0 if the program already finished executing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-669">傳回值`Shell`函式取決於程式中的具名是否`PathName`仍在執行時`Shell`傳回。</span><span class="sxs-lookup"><span data-stu-id="06e4a-669">The return value of the `Shell` function depends on whether the program named in `PathName` is still executing when `Shell` returns.</span></span> <span data-ttu-id="06e4a-670">如果您設定`Wait`要`True`並在程式完成之前逾時到期，`Shell`會傳回零。</span><span class="sxs-lookup"><span data-stu-id="06e4a-670">If you set `Wait` to `True` and the program finishes before the timeout expires, `Shell` returns zero.</span></span> <span data-ttu-id="06e4a-671">如果在逾時到期，或如果您省略`Wait`或將它設定為`False`，`Shell`傳回程式的處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-671">If the timeout expires, or if you omit `Wait` or set it to `False`, `Shell` returns the process ID of the program.</span></span> <span data-ttu-id="06e4a-672">處理序識別碼是唯一的數字，識別執行中的程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-672">The process ID is a unique number that identifies the running program.</span></span>  
  
## <a name="failure-to-start"></a><span data-ttu-id="06e4a-673">無法啟動</span><span class="sxs-lookup"><span data-stu-id="06e4a-673">Failure to Start</span></span>  
 <span data-ttu-id="06e4a-674">如果`Shell`函式的具名的程式中，無法啟動<xref:System.IO.FileNotFoundException>就會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="06e4a-674">If the `Shell` function cannot start the named program, a <xref:System.IO.FileNotFoundException> error occurs.</span></span> <span data-ttu-id="06e4a-675">這種情形，例如，當您嘗試執行的 16 位元程式，例如`command.com`，從應用程式使用<xref:System.Windows.Forms?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="06e4a-675">This can happen, for example, when you attempt to run a 16-bit program, such as `command.com`, from an application using <xref:System.Windows.Forms?displayProperty=nameWithType>.</span></span> <span data-ttu-id="06e4a-676">如需解決方法，您可以執行呼叫所需的 16 位元程式的 32 位元程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-676">For a workaround, you can run a 32-bit program that calls the desired 16-bit program.</span></span> <span data-ttu-id="06e4a-677">若是`command.com`，您可以執行`cmd.exe`替代。</span><span class="sxs-lookup"><span data-stu-id="06e4a-677">In the case of `command.com`, you can run `cmd.exe` as an alternative.</span></span>  
  
## <a name="waiting-for-completion"></a><span data-ttu-id="06e4a-678">等待完成</span><span class="sxs-lookup"><span data-stu-id="06e4a-678">Waiting for Completion</span></span>  
 <span data-ttu-id="06e4a-679">根據預設，`Shell`函式會以非同步方式執行程式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-679">By default, the `Shell` function runs the program asynchronously.</span></span> <span data-ttu-id="06e4a-680">這表示程式開始使用`Shell`函式可能會無法完成執行下列陳述式之前`Shell`函式會執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-680">This means that a program started with the `Shell` function might not finish executing before the statements following the `Shell` function are executed.</span></span> <span data-ttu-id="06e4a-681">如果您想要等到程式完成後，您繼續，請設定`Wait`至`True`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-681">If you want to wait for the program to finish before you continue, set `Wait` to `True`.</span></span>  
  
## <a name="determining-the-exit-code"></a><span data-ttu-id="06e4a-682">判斷結束代碼</span><span class="sxs-lookup"><span data-stu-id="06e4a-682">Determining the Exit Code</span></span>  
 <span data-ttu-id="06e4a-683">處理程序可以傳回*結束代碼*時終止。</span><span class="sxs-lookup"><span data-stu-id="06e4a-683">A process can return an *exit code* when it terminates.</span></span> <span data-ttu-id="06e4a-684">不過，您無法使用`Shell`擷取結束碼，因為`Shell`等候終止時，如果傳回零，也因為處理序會執行不同的物件，從`Shell`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-684">However, you cannot use `Shell` to retrieve this exit code, because `Shell` returns zero if it waits for termination, and also because the process runs in a different object from `Shell`.</span></span>  
  
 <span data-ttu-id="06e4a-685">若要擷取的結束代碼的處理程序，您必須撰寫您自己的程式碼，以起始程序，並等待結束。</span><span class="sxs-lookup"><span data-stu-id="06e4a-685">To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination.</span></span> <span data-ttu-id="06e4a-686">下列範例示範如何起始程序、 等候它終止，並擷取它的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="06e4a-686">The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.</span></span>  
  
```vb  
Dim procID As Integer  
Dim newProc As Diagnostics.Process  
newProc = Diagnostics.Process.Start("C:\WINDOWS\NOTEPAD.EXE")  
procID = newProc.Id  
newProc.WaitForExit()  
Dim procEC As Integer = -1  
If newProc.HasExited Then  
    procEC = newProc.ExitCode  
End If  
MsgBox("Process with ID " & CStr(ProcID) & _  
    " terminated with exit code " & CStr(procEC))  
```  
  
## <a name="protecting-the-file-specification"></a><span data-ttu-id="06e4a-687">保護的檔案規格</span><span class="sxs-lookup"><span data-stu-id="06e4a-687">Protecting the File Specification</span></span>  
 <span data-ttu-id="06e4a-688">您應該一律括住整個路徑和檔案規格引號，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="06e4a-688">You should always enclose the entire path and file specification in quotation marks, as the following example shows.</span></span>  
  
```vb  
ID = Shell("""C:\Program Files\display.exe"" -a -q", , True, 100000)  
```  
  
 <span data-ttu-id="06e4a-689">每一對相鄰雙引號 (`" "`) 內的字串常值會解譯為字串中的一個雙引號字元。</span><span class="sxs-lookup"><span data-stu-id="06e4a-689">Each pair of adjacent double quotation marks (`" "`) within the string literal is interpreted as one double quotation character in the string.</span></span> <span data-ttu-id="06e4a-690">因此，上述範例中會顯示下列字串`Shell`函式：</span><span class="sxs-lookup"><span data-stu-id="06e4a-690">Therefore, the preceding example presents the following string to the `Shell` function:</span></span>  
  
```console  
"C:\Program Files\display.exe" -a -q  
```  
  
 <span data-ttu-id="06e4a-691">如果您沒有用引號括住的路徑，Windows 會尋找名為的檔案`Program.exe`在 C:\ 目錄中，而不是`display.exe`C:\Program Files 目錄中。</span><span class="sxs-lookup"><span data-stu-id="06e4a-691">If you did not have the path enclosed in quotation marks, Windows would look for a file called `Program.exe` in the C:\ directory, instead of `display.exe` in the C:\Program Files directory.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-692">如果您不執行將路徑和檔案規格括在引號中，有會發生安全性風險，如果檔案名稱或路徑 節點包含空格。</span><span class="sxs-lookup"><span data-stu-id="06e4a-692">If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces.</span></span> <span data-ttu-id="06e4a-693">在上述範例中，路徑節點`\Program Files`包含空格。</span><span class="sxs-lookup"><span data-stu-id="06e4a-693">In the preceding example, the path node `\Program Files` includes a space.</span></span> <span data-ttu-id="06e4a-694">如果規格不是引號和名為內部`Program.exe`已安裝在 c:\\，例如藉由竄改，Windows 會執行，而不是`display.exe`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-694">If the specification were not inside quotation marks and a program named `Program.exe` had been installed in C:\\, for example by illicit tampering, Windows would execute it instead of `display.exe`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="06e4a-695">`Shell`函式需要 unmanaged 程式碼的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="06e4a-695">The `Shell` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="06e4a-696">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-696">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-697">下列範例會使用`Shell`執行應用程式使用者所指定的函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-697">The following example uses the `Shell` function to run an application specified by the user.</span></span> <span data-ttu-id="06e4a-698">指定<xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType>作為第二個引數的正常大小開啟應用程式並為其提供焦點。</span><span class="sxs-lookup"><span data-stu-id="06e4a-698">Specifying <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> as the second argument opens the application in normal size and gives it the focus.</span></span>  
  
 [!code-vb[VbVbalrFunctions#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-699"><paramref name="Style" /> 不在 0 到 9 的範圍內 (含 0 和 9)。</span><span class="sxs-lookup"><span data-stu-id="06e4a-699"><paramref name="Style" /> is not within range 0 through 9, inclusive.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="06e4a-700"><see langword="Shell" /> 找不到 <paramref name="PathName" /> 檔案。</span><span class="sxs-lookup"><span data-stu-id="06e4a-700"><see langword="Shell" /> cannot find the <paramref name="PathName" /> file.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="06e4a-701"><paramref name="PathName" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="06e4a-701"><paramref name="PathName" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.NullReferenceException" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />
        <altmember cref="Overload:Microsoft.VisualBasic.Interaction.AppActivate" />
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static object Switch (params object[] VarExpr);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Switch(object[] VarExpr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Switch (ParamArray VarExpr As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Switch(... cli::array &lt;System::Object ^&gt; ^ VarExpr);" />
      <MemberSignature Language="F#" Value="static member Switch : obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.Switch VarExpr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarExpr" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="VarExpr"><span data-ttu-id="06e4a-702">必要項。</span><span class="sxs-lookup"><span data-stu-id="06e4a-702">Required.</span></span> <span data-ttu-id="06e4a-703"><see langword="Object" /> 參數陣列。</span><span class="sxs-lookup"><span data-stu-id="06e4a-703"><see langword="Object" /> parameter array.</span></span> <span data-ttu-id="06e4a-704">必須有偶數數目的元素。</span><span class="sxs-lookup"><span data-stu-id="06e4a-704">Must have an even number of elements.</span></span> <span data-ttu-id="06e4a-705">您可以提供以逗號分隔的 <see langword="Object" /> 變數或運算式的清單，或是一維的 <see langword="Object" /> 元素陣列。</span><span class="sxs-lookup"><span data-stu-id="06e4a-705">You can supply a list of <see langword="Object" /> variables or expressions separated by commas, or a single-dimensional array of <see langword="Object" /> elements.</span></span></param>
        <summary><span data-ttu-id="06e4a-706">評估運算式的清單，並傳回對應到此清單中第一個 <see langword="Object" /> 的運算式之 <see langword="True" /> 值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-706">Evaluates a list of expressions and returns an <see langword="Object" /> value corresponding to the first expression in the list that is <see langword="True" />.</span></span></summary>
        <returns><span data-ttu-id="06e4a-707">評估運算式的清單，並傳回對應到此清單中第一個 <see langword="Object" /> 的運算式之 <see langword="True" /> 值。</span><span class="sxs-lookup"><span data-stu-id="06e4a-707">Evaluates a list of expressions and returns an <see langword="Object" /> value corresponding to the first expression in the list that is <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4a-708">引數提供給`VarExpr`配對的運算式和值所組成。</span><span class="sxs-lookup"><span data-stu-id="06e4a-708">The argument supplied to `VarExpr` consists of paired expressions and values.</span></span> <span data-ttu-id="06e4a-709">`Switch`函式會評估奇數運算式從最低到最高的索引，在`VarExpr`，並傳回第一個運算式評估為相關聯的偶數值`True`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-709">The `Switch` function evaluates the odd-numbered expressions from lowest to highest index in `VarExpr`, and returns the even-numbered value associated with the first expression that evaluates to `True`.</span></span> <span data-ttu-id="06e4a-710">比方說，如果`VarExpr(0)`是`True`，`Switch`會傳回`VarExpr(1)`，而如果`VarExpr(0)`是`False`但`VarExpr(2)`是`True`，`Switch`傳回`VarExpr(3)`，依此類推。</span><span class="sxs-lookup"><span data-stu-id="06e4a-710">For example, if `VarExpr(0)` is `True`, `Switch` returns `VarExpr(1)`, and if `VarExpr(0)` is `False` but `VarExpr(2)` is `True`, `Switch` returns `VarExpr(3)`, and so on.</span></span>  
  
 <span data-ttu-id="06e4a-711">如果您未提供`VarExpr`引數`Switch`傳回`Nothing`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-711">If you do not supply the `VarExpr` argument, `Switch` returns `Nothing`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4a-712">引數清單中的運算式可以包含函式呼叫。</span><span class="sxs-lookup"><span data-stu-id="06e4a-712">The expressions in the argument list can include function calls.</span></span> <span data-ttu-id="06e4a-713">為準備呼叫的引數清單的一部分`Switch`，Visual Basic 編譯器會呼叫每個運算式中的每個函式。</span><span class="sxs-lookup"><span data-stu-id="06e4a-713">As part of preparing the argument list for the call to `Switch`, the Visual Basic compiler calls every function in every expression.</span></span> <span data-ttu-id="06e4a-714">這表示您不能依賴特定的函式，如果稍早在引數清單中的運算式，無法呼叫`True`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-714">This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4a-715">下列範例會使用`Switch`函式傳回的比對的城市所在州名的語言名稱。</span><span class="sxs-lookup"><span data-stu-id="06e4a-715">The following example uses the `Switch` function to return the name of a language that matches the name of a city.</span></span> <span data-ttu-id="06e4a-716">它需要`Option Strict`是`Off`。</span><span class="sxs-lookup"><span data-stu-id="06e4a-716">It requires that `Option Strict` be `Off`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#48)]  
  
 <span data-ttu-id="06e4a-717">因為<xref:System.Diagnostics>命名空間也包含類別，稱為<xref:System.Diagnostics.Switch>，呼叫`Switch`函式必須以限定<xref:Microsoft.VisualBasic>命名空間。</span><span class="sxs-lookup"><span data-stu-id="06e4a-717">Because the <xref:System.Diagnostics> namespace also contains a class called <xref:System.Diagnostics.Switch>, a call to the `Switch` function must be qualified with the <xref:Microsoft.VisualBasic> namespace.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4a-718">引數的數目為奇數。</span><span class="sxs-lookup"><span data-stu-id="06e4a-718">Number of arguments is odd.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/select-case-statement.md"><span data-ttu-id="06e4a-719">Select...Case 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="06e4a-719">Select...Case Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/parameter-arrays.md"><span data-ttu-id="06e4a-720">參數陣列</span><span class="sxs-lookup"><span data-stu-id="06e4a-720">Parameter Arrays</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>