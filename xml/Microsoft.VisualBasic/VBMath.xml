<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0321586caa7949167e118bcc659f8f1fe5da321" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56404535" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see langword="VbMath" /> 模組包含用來執行算術運算的程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個模組支援的 Visual Basic 語言關鍵字和執行階段程式庫成員，來產生隨機數字。  
  
   
  
## Examples  
 這個範例會使用`Rnd`函式來產生隨機整數值範圍是從 1 到 6。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">數學摘要</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/derived-math-functions.md">衍生的數學函式 (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">關鍵字 (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Visual Basic 執行階段程式庫成員</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化亂數產生器。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化亂數產生器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個多載`Randomize`方法不採用的種子值。 相反地，系統計時器所傳回的值可為新的初始值。  
  
 如果`Randomize`未使用，`Rnd`函式 （不使用引數） 會使用相同的數字做為種子第一次呼叫時，它之後會使用最後產生的數字做為種子值。  
  
> [!NOTE]
>  若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。  
  
> [!IMPORTANT]
>  因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。 因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。 如需詳細資訊，請參閱<xref:System.Security.Cryptography.RandomNumberGenerator>。  
  
   
  
## Examples  
 這個範例會使用`Randomize`陳述式來初始化亂數產生器。 由於已省略引數`Randomize`會使用傳回的值從`Timer`做為新的初始值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">數學摘要</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">選擇性。 <see langword="Object" /> 或任何有效的數值運算式。</param>
        <summary>初始化亂數產生器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` 會使用`Number`初始化`Rnd`函式的隨機數字產生器，並賦予它一個新的初始值。 如果您省略`Number`，系統計時器所傳回的值做為新的初始值。  
  
 如果`Randomize`未使用，`Rnd`函式 （不使用引數） 會使用相同的數字做為種子第一次呼叫時，它之後會使用最後產生的數字做為種子值。  
  
> [!NOTE]
>  若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。 使用`Randomize`具有相同的值，如`Number`不會重複先前的序號。  
  
> [!IMPORTANT]
>  因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。 因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。 如需詳細資訊，請參閱<xref:System.Security.Cryptography.RandomNumberGenerator>。  
  
   
  
## Examples  
 這個範例會使用`Randomize`陳述式來初始化亂數產生器。 由於已省略引數`Randomize`會使用傳回的值從`Timer`做為新的初始值。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">數學摘要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回 <see langword="Single" /> 類型的亂數。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see langword="Single" /> 類型的亂數。</summary>
        <returns>序列中的下一個亂數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd`函式會傳回值小於 1，但大於或等於零。  
  
 然後再呼叫`Rnd`，使用`Randomize`系統計時器為依據的陳述式沒有引數初始化亂數產生器種子。  
  
 若要產生隨機整數指定的範圍中，使用下列公式。  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 在這裡，`upperbound`是在範圍內，最高的數字和`lowerbound`是範圍內的最小數字。  
  
> [!NOTE]
>  若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。  
  
> [!IMPORTANT]
>  因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。 因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。  
  
   
  
## Examples  
 這個範例會使用`Rnd`函式來產生隨機整數值範圍是從 1 到 6。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">數學摘要</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">選擇性。 <see langword="Single" /> 值或任何有效的 <see langword="Single" /> 運算式。</param>
        <summary>傳回 <see langword="Single" /> 類型的亂數。</summary>
        <returns>如果數字小於零，Rnd 每次都會產生相同的數字 (利用 <paramref name="Number" /> 當做種子值)。 如果數字大於零，則 Rnd 會產生序列中的下一個亂數。 如果數字等於零，則 Rnd 會產生最近所產生的數字。 如果未提供數字，則 Rnd 會產生序列中的下一個亂數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd`函式會傳回值小於 1，但大於或等於零。  
  
 值`Number`決定如何`Rnd`產生隨機數字。  
  
 對於任何指定的初始種子，因為，都會產生相同的數字序列的每一個後續呼叫`Rnd`函式使用先前產生的數字作為種子序列中下一個數字。  
  
 然後再呼叫`Rnd`，使用`Randomize`系統計時器為依據的陳述式沒有引數初始化亂數產生器種子。  
  
 若要產生隨機整數指定的範圍中，使用下列公式。  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 在這裡，`upperbound`是在範圍內，最高的數字和`lowerbound`是範圍內的最小數字。  
  
> [!NOTE]
>  若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。 使用`Randomize`具有相同的值，如`Number`不會重複先前的序號。  
  
> [!IMPORTANT]
>  因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。 因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。  
  
   
  
## Examples  
 這個範例會使用`Rnd`函式來產生隨機整數值範圍是從 1 到 6。  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">數學摘要</related>
      </Docs>
    </Member>
  </Members>
</Type>