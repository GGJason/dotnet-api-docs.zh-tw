<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed5678248f78e854ccebc41cb690d5ae586d385c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39970875" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4aab6-101">
        <see langword="VbMath" /> 模組包含用來執行算術運算的程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4aab6-101">The <see langword="VbMath" /> module contains procedures used to perform mathematical operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aab6-102">這個模組支援的 Visual Basic 語言關鍵字和執行階段程式庫成員，來產生隨機數字。</span><span class="sxs-lookup"><span data-stu-id="4aab6-102">This module supports the Visual Basic language keywords and run-time library members for generating random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aab6-103">這個範例會使用`Rnd`函式來產生隨機整數值範圍是從 1 到 6。</span><span class="sxs-lookup"><span data-stu-id="4aab6-103">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4aab6-104">初始化亂數產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-104">Initializes the random-number generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4aab6-105">初始化亂數產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-105">Initializes the random-number generator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aab6-106">這個多載`Randomize`方法不採用的種子值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-106">This overload of the `Randomize` method does not take a seed value.</span></span> <span data-ttu-id="4aab6-107">相反地，系統計時器所傳回的值可為新的初始值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-107">Instead, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="4aab6-108">如果`Randomize`未使用，`Rnd`函式 （不使用引數） 會使用相同的數字做為種子第一次呼叫時，它之後會使用最後產生的數字做為種子值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-108">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aab6-109">若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。</span><span class="sxs-lookup"><span data-stu-id="4aab6-109">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aab6-110">因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。</span><span class="sxs-lookup"><span data-stu-id="4aab6-110">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="4aab6-111">因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。</span><span class="sxs-lookup"><span data-stu-id="4aab6-111">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="4aab6-112">如需詳細資訊，請參閱<xref:System.Security.Cryptography.RandomNumberGenerator>。</span><span class="sxs-lookup"><span data-stu-id="4aab6-112">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aab6-113">這個範例會使用`Randomize`陳述式來初始化亂數產生器。</span><span class="sxs-lookup"><span data-stu-id="4aab6-113">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="4aab6-114">由於已省略引數`Randomize`會使用傳回的值從`Timer`做為新的初始值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-114">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="4aab6-115">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-115">Optional.</span>
          </span>
          <span data-ttu-id="4aab6-116">
            <see langword="Object" /> 或任何有效的數值運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-116">An <see langword="Object" /> or any valid numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aab6-117">初始化亂數產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-117">Initializes the random-number generator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aab6-118">`Randomize` 會使用`Number`初始化`Rnd`函式的隨機數字產生器，並賦予它一個新的初始值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-118">`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value.</span></span> <span data-ttu-id="4aab6-119">如果您省略`Number`，系統計時器所傳回的值做為新的初始值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-119">If you omit `Number`, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="4aab6-120">如果`Randomize`未使用，`Rnd`函式 （不使用引數） 會使用相同的數字做為種子第一次呼叫時，它之後會使用最後產生的數字做為種子值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-120">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aab6-121">若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。</span><span class="sxs-lookup"><span data-stu-id="4aab6-121">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="4aab6-122">使用`Randomize`具有相同的值，如`Number`不會重複先前的序號。</span><span class="sxs-lookup"><span data-stu-id="4aab6-122">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aab6-123">因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。</span><span class="sxs-lookup"><span data-stu-id="4aab6-123">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="4aab6-124">因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。</span><span class="sxs-lookup"><span data-stu-id="4aab6-124">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="4aab6-125">如需詳細資訊，請參閱<xref:System.Security.Cryptography.RandomNumberGenerator>。</span><span class="sxs-lookup"><span data-stu-id="4aab6-125">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aab6-126">這個範例會使用`Randomize`陳述式來初始化亂數產生器。</span><span class="sxs-lookup"><span data-stu-id="4aab6-126">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="4aab6-127">由於已省略引數`Randomize`會使用傳回的值從`Timer`做為新的初始值。</span><span class="sxs-lookup"><span data-stu-id="4aab6-127">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4aab6-128">傳回 <see langword="Single" /> 類型的亂數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-128">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4aab6-129">傳回 <see langword="Single" /> 類型的亂數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-129">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aab6-130">序列中的下一個亂數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-130">The next random number in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aab6-131">`Rnd`函式會傳回值小於 1，但大於或等於零。</span><span class="sxs-lookup"><span data-stu-id="4aab6-131">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="4aab6-132">然後再呼叫`Rnd`，使用`Randomize`系統計時器為依據的陳述式沒有引數初始化亂數產生器種子。</span><span class="sxs-lookup"><span data-stu-id="4aab6-132">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="4aab6-133">若要產生隨機整數指定的範圍中，使用下列公式。</span><span class="sxs-lookup"><span data-stu-id="4aab6-133">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="4aab6-134">在這裡，`upperbound`是在範圍內，最高的數字和`lowerbound`是範圍內的最小數字。</span><span class="sxs-lookup"><span data-stu-id="4aab6-134">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aab6-135">若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。</span><span class="sxs-lookup"><span data-stu-id="4aab6-135">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aab6-136">因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。</span><span class="sxs-lookup"><span data-stu-id="4aab6-136">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="4aab6-137">因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。</span><span class="sxs-lookup"><span data-stu-id="4aab6-137">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aab6-138">這個範例會使用`Rnd`函式來產生隨機整數值範圍是從 1 到 6。</span><span class="sxs-lookup"><span data-stu-id="4aab6-138">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="4aab6-139">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-139">Optional.</span>
          </span>
          <span data-ttu-id="4aab6-140">
            <see langword="Single" /> 值或任何有效的 <see langword="Single" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-140">A <see langword="Single" /> value or any valid <see langword="Single" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aab6-141">傳回 <see langword="Single" /> 類型的亂數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-141">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aab6-142">如果數字小於零，Rnd 每次都會產生相同的數字 (利用 <paramref name="Number" /> 當做種子值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-142">If number is less than zero, Rnd generates the same number every time, using <paramref name="Number" /> as the seed.</span>
          </span>
          <span data-ttu-id="4aab6-143">如果數字大於零，則 Rnd 會產生序列中的下一個亂數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-143">If number is greater than zero, Rnd generates the next random number in the sequence.</span>
          </span>
          <span data-ttu-id="4aab6-144">如果數字等於零，則 Rnd 會產生最近所產生的數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-144">If number is equal to zero, Rnd generates the most recently generated number.</span>
          </span>
          <span data-ttu-id="4aab6-145">如果未提供數字，則 Rnd 會產生序列中的下一個亂數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aab6-145">If number is not supplied, Rnd generates the next random number in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aab6-146">`Rnd`函式會傳回值小於 1，但大於或等於零。</span><span class="sxs-lookup"><span data-stu-id="4aab6-146">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="4aab6-147">值`Number`決定如何`Rnd`產生隨機數字。</span><span class="sxs-lookup"><span data-stu-id="4aab6-147">The value of `Number` determines how `Rnd` generates a random number.</span></span>  
  
 <span data-ttu-id="4aab6-148">對於任何指定的初始種子，因為，都會產生相同的數字序列的每一個後續呼叫`Rnd`函式使用先前產生的數字作為種子序列中下一個數字。</span><span class="sxs-lookup"><span data-stu-id="4aab6-148">For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence.</span></span>  
  
 <span data-ttu-id="4aab6-149">然後再呼叫`Rnd`，使用`Randomize`系統計時器為依據的陳述式沒有引數初始化亂數產生器種子。</span><span class="sxs-lookup"><span data-stu-id="4aab6-149">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="4aab6-150">若要產生隨機整數指定的範圍中，使用下列公式。</span><span class="sxs-lookup"><span data-stu-id="4aab6-150">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="4aab6-151">在這裡，`upperbound`是在範圍內，最高的數字和`lowerbound`是範圍內的最小數字。</span><span class="sxs-lookup"><span data-stu-id="4aab6-151">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aab6-152">若要重複的隨機數字序列，請呼叫`Rnd`負數的引數，使用之前，立即`Randomize`與數字的引數。</span><span class="sxs-lookup"><span data-stu-id="4aab6-152">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="4aab6-153">使用`Randomize`具有相同的值，如`Number`不會重複先前的序號。</span><span class="sxs-lookup"><span data-stu-id="4aab6-153">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aab6-154">因為`Random`陳述式和`Rnd`函式開頭的種子值，並產生落在有限的範圍內的數字，結果可能會知道用來產生它們的演算法的其他人可預測。</span><span class="sxs-lookup"><span data-stu-id="4aab6-154">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="4aab6-155">因此，`Random`陳述式和`Rnd`函式不應產生密碼編譯隨機數字使用。</span><span class="sxs-lookup"><span data-stu-id="4aab6-155">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aab6-156">這個範例會使用`Rnd`函式來產生隨機整數值範圍是從 1 到 6。</span><span class="sxs-lookup"><span data-stu-id="4aab6-156">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>