<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2eb7b4c550a11b5654a23c73a2f51fb4d5c2526a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36726773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e02ac-101">
        <see langword="Information" /> 模組包含了傳回、測試或驗證資訊所用的程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e02ac-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-102">這個模組支援的 Visual Basic 語言關鍵字和執行階段程式庫成員，提供錯誤資訊、 驗證資料、 判斷陣列的界限，和擷取的資料類型及色彩資訊。</span><span class="sxs-lookup"><span data-stu-id="e02ac-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-103">下列範例會使用`VbTypeName`函式傳回多個變數的資料型別名稱。</span><span class="sxs-lookup"><span data-stu-id="e02ac-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e02ac-104">傳回整數，指出最後執行之陳述式的行數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-104">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="e02ac-105">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-105">Read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-106">傳回整數，指出最後執行之陳述式的行數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-106">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="e02ac-107">唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-107">Read-only.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-108">如果 Visual Basic 遇到沒有行號，則會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="e02ac-108">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-109">這個範例會使用`Erl`屬性，指出的行號。</span><span class="sxs-lookup"><span data-stu-id="e02ac-109">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e02ac-110">包含執行階段錯誤的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-110">Contains information about run-time errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-111">包含執行階段錯誤的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-111">Contains information about run-time errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-112">內容`Err`物件設定錯誤的產生器，Visual Basic、 物件或程式設計人員。</span><span class="sxs-lookup"><span data-stu-id="e02ac-112">The properties of the `Err` object are set by the generator of an error—Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="e02ac-113">執行階段錯誤發生時，屬性`Err`物件會填入唯一識別錯誤的資訊，並可讓您處理錯誤。</span><span class="sxs-lookup"><span data-stu-id="e02ac-113">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="e02ac-114">若要在程式碼中產生執行階段錯誤，請使用`Raise`方法。</span><span class="sxs-lookup"><span data-stu-id="e02ac-114">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="e02ac-115">`Err`物件的屬性會重設為零或零長度字串 ("") 之後`Exit Sub`， `Exit Function`， `Exit Property`，或`Resume Next`在錯誤處理常式中的陳述式。</span><span class="sxs-lookup"><span data-stu-id="e02ac-115">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="e02ac-116">使用任何形式的`Resume`錯誤處理常式之外的陳述式不會重設`Err`物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="e02ac-116">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="e02ac-117">您可以使用`Clear`方法來明確地重設`Err`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-117">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="e02ac-118">使用`Raise`方法而非`Error`陳述式來產生執行階段錯誤，系統錯誤並類別模組。</span><span class="sxs-lookup"><span data-stu-id="e02ac-118">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="e02ac-119">決定是否使用`Raise`其他程式碼中的方法取決於您想要傳回的資訊的豐富性。</span><span class="sxs-lookup"><span data-stu-id="e02ac-119">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="e02ac-120">`Err`物件是具有全域領域的內建函式物件。</span><span class="sxs-lookup"><span data-stu-id="e02ac-120">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="e02ac-121">因此，您不需要在您的程式碼中建立它的執行個體。</span><span class="sxs-lookup"><span data-stu-id="e02ac-121">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-122">這個範例會使用的屬性`Err`建構一個錯誤訊息的對話方塊中的物件。</span><span class="sxs-lookup"><span data-stu-id="e02ac-122">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="e02ac-123">請注意，如果您使用`Clear`方法首先，當您產生與 Visual Basic 錯誤`Raise`方法時，Visual Basic 預設值會變成屬性`Err`物件。</span><span class="sxs-lookup"><span data-stu-id="e02ac-123">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="e02ac-124">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-124">Required.</span>
          </span>
          <span data-ttu-id="e02ac-125">
            <see langword="Object" /> 變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-125">
              <see langword="Object" /> variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-126">傳回 <see langword="Boolean" /> 值，指出變數是否指向陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-126">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-127">傳回 <see langword="Boolean" /> 值，指出變數是否指向陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-127">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-128">`IsArray` 傳回`True`如果變數會指向陣列中; 否則它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-128">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="e02ac-129">`IsArray` 會使用物件，其中可能包含陣列特別有用。</span><span class="sxs-lookup"><span data-stu-id="e02ac-129">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-130">這個範例會使用`IsArray`檢查幾個變數是否參考陣列的函式。</span><span class="sxs-lookup"><span data-stu-id="e02ac-130">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="e02ac-131">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-131">Required.</span>
          </span>
          <span data-ttu-id="e02ac-132">
            <see langword="Object" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-132">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-133">傳回 <see langword="Boolean" /> 值，指出運算式是否表示有效的 <see langword="Date" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-133">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-134">傳回 <see langword="Boolean" /> 值，指出運算式是否表示有效的 <see langword="Date" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-134">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-135">`IsDate` 傳回`True`如果`Expression`屬於<xref:System.DateTime>資料類型，或可以轉換為它; 否則它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-135">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e02ac-136"><xref:System.DateTime>資料類型會保留日期值和時間值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-136">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="e02ac-137">`IsDate` 傳回`True`如果`Expression`代表有效的日期、 有效的時間，或有效的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="e02ac-137">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-138">下列範例會使用`IsDate`函式來判斷是否是有效的數個變數<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-138">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="e02ac-139">在上述範例中，`IsDate`傳回`True`前四個呼叫以及`False`的最後一次呼叫。</span><span class="sxs-lookup"><span data-stu-id="e02ac-139">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="e02ac-140">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-140">Required.</span>
          </span>
          <span data-ttu-id="e02ac-141">
            <see langword="Object" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-141">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-142">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為 <see cref="T:System.DBNull" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-142">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-143">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為 <see cref="T:System.DBNull" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-143">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-144">`IsDBNull` 傳回`True`資料類型，是否`Expression`評估為<xref:System.DBNull>輸入; 否則`IsDBNull`傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-144">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="e02ac-145"><xref:System.DBNull?displayProperty=nameWithType>值，指出`Object`表示資料遺漏或不存在。</span><span class="sxs-lookup"><span data-stu-id="e02ac-145">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="e02ac-146">`DBNull` 不與相同`Nothing`，表示尚未初始化變數。</span><span class="sxs-lookup"><span data-stu-id="e02ac-146">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="e02ac-147">`DBNull` 也不是零長度字串相同 (`""`)，這有時稱為 null 字串。</span><span class="sxs-lookup"><span data-stu-id="e02ac-147">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-148">這個範例會使用`IsDBNull`函式來判斷是否變數會評估為`DBNull`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-148">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="e02ac-149">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-149">Required.</span>
          </span>
          <span data-ttu-id="e02ac-150">
            <see langword="Object" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-150">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-151">傳回 <see langword="Boolean" /> 值，指出運算式是否為例外狀況類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-151">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-152">傳回 <see langword="Boolean" /> 值，指出運算式是否為例外狀況類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-152">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-153">`IsError` 傳回`True`如果運算式代表`Object`衍生自變數<xref:System.Exception>類別<xref:System>命名空間。</span><span class="sxs-lookup"><span data-stu-id="e02ac-153">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="e02ac-154">例外狀況衍生自<xref:System.Exception?displayProperty=nameWithType>可以攔截與`Try...Catch...Finally`陳述式。</span><span class="sxs-lookup"><span data-stu-id="e02ac-154">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-155">下列範例會使用`IsError`函數來檢查運算式是否代表系統例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e02ac-155">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="e02ac-156">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-156">Required.</span>
          </span>
          <span data-ttu-id="e02ac-157">
            <see langword="Object" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-157">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-158">傳回 <see langword="Boolean" /> 值，指出是否沒有將任何物件指派給運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-158">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-159">傳回 <see langword="Boolean" /> 值，指出是否沒有將任何物件指派給運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-159">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-160">`IsNothing` 傳回`True`如果運算式代表目前沒有任何物件指派給它，否則為物件變數，它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-160">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e02ac-161">`IsNothing` 適用於參考型別。</span><span class="sxs-lookup"><span data-stu-id="e02ac-161">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="e02ac-162">實值類型無法保存的值，並會還原為其預設值，如果您指派`Nothing`給它。</span><span class="sxs-lookup"><span data-stu-id="e02ac-162">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="e02ac-163">如果您提供在實值類型`Expression`，`IsNothing`一律會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-163">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-164">下列範例會使用`IsNothing`函式來判斷是否與任何物件執行個體相關聯的物件變數。</span><span class="sxs-lookup"><span data-stu-id="e02ac-164">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="e02ac-165">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-165">Required.</span>
          </span>
          <span data-ttu-id="e02ac-166">
            <see langword="Object" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-166">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-167">傳回 <see langword="Boolean" /> 值，指出運算式是否可以評估為數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-167">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-168">傳回 <see langword="Boolean" /> 值，指出運算式是否可以評估為數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-168">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-169">`IsNumeric` 傳回`True`資料類型，是否`Expression`是`Boolean`， `Byte`， `Decimal`， `Double`， `Integer`， `Long`， `SByte`， `Short`， `Single`， `UInteger`，`ULong`，或`UShort`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-169">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="e02ac-170">它也會傳回`True`如果`Expression`是`Char`， `String`，或`Object`，可以成功轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="e02ac-170">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="e02ac-171">`Expression` 可以包含非數字字元。</span><span class="sxs-lookup"><span data-stu-id="e02ac-171">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="e02ac-172">`IsNumeric` 傳回`True`如果`Expression`是包含有效的十六進位或八進位表示數字的字串。</span><span class="sxs-lookup"><span data-stu-id="e02ac-172">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="e02ac-173">`IsNumeric` 也會傳回`True`如果`Expression`包含有效的數值運算式的開頭 + 或-字元或包含逗號。</span><span class="sxs-lookup"><span data-stu-id="e02ac-173">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="e02ac-174">`IsNumeric` 傳回`False`如果`Expression`的資料型別`Date`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-174">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="e02ac-175">它會傳回`False`如果`Expression`是`Char`， `String`，或`Object`，無法成功轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="e02ac-175">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-176">下列範例會使用`IsNumeric`函式來判斷是否變數的內容可以評估為數字。</span><span class="sxs-lookup"><span data-stu-id="e02ac-176">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="e02ac-177">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-177">Required.</span>
          </span>
          <span data-ttu-id="e02ac-178">
            <see langword="Object" /> 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-178">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-179">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為參考類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-179">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-180">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為參考類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-180">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-181">`IsReference` 傳回`True`如果`Expression`代表參考類型，例如類別執行個體`String`類型或陣列的任何類型; 否則它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-181">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e02ac-182">參考型別包含資料儲存在記憶體中的其他位置的指標。</span><span class="sxs-lookup"><span data-stu-id="e02ac-182">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="e02ac-183">實值類型包含它自己的資料。</span><span class="sxs-lookup"><span data-stu-id="e02ac-183">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-184">這個範例會使用`IsReference`函數來檢查是否數個變數是指參考類型。</span><span class="sxs-lookup"><span data-stu-id="e02ac-184">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="e02ac-185">在上述範例中前, 三個呼叫`IsReference`傳回`True`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-185">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="e02ac-186">最後一次呼叫傳回`False`，因為`Integer`是實值類型，而不是參考類型。</span><span class="sxs-lookup"><span data-stu-id="e02ac-186">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="e02ac-187">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-187">Required.</span>
          </span>
          <span data-ttu-id="e02ac-188">任何資料類型的陣列，</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-188">Array of any data type.</span>
          </span>
          <span data-ttu-id="e02ac-189">您想在該陣列中找到維度的最低可能註標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-189">The array in which you want to find the lowest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="e02ac-190">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-190">Optional.</span>
          </span>
          <span data-ttu-id="e02ac-191">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-191">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="e02ac-192">針對可能的最低註標，所要傳回的維度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-192">The dimension for which the lowest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="e02ac-193">使用 1 表示第一個維度，2 表示第二個維度，依此類推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-193">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="e02ac-194">如果省略了 <c>Rank</c>，則假設為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-194">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-195">傳回所指示的陣列維度之可用的最低註標 (Subscript)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-195">Returns the lowest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-196">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-196">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="e02ac-197">指定之維度的註標可以包含的最低值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-197">The lowest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="e02ac-198">只要 <paramref name="Array" /> 已經完成初始化，<see langword="LBound" /> 一定會傳回 0，即使它沒有任何項目也是如此，例如，如果它是長度為零的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-198">
              <see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span>
          </span>
          <span data-ttu-id="e02ac-199">如果 <paramref name="Array" /> 為 <see langword="Nothing" />，則 <see langword="LBound" /> 會擲回 <see cref="T:System.ArgumentNullException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-199">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-200">由於陣列註標起始為 0，每個維度的最低可用註標永遠為 0。</span><span class="sxs-lookup"><span data-stu-id="e02ac-200">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="e02ac-201">與下列維度中，陣列`LBound`傳回下表中的值：</span><span class="sxs-lookup"><span data-stu-id="e02ac-201">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="e02ac-202">LBound 呼叫</span><span class="sxs-lookup"><span data-stu-id="e02ac-202">Call to LBound</span></span>|<span data-ttu-id="e02ac-203">傳回值</span><span class="sxs-lookup"><span data-stu-id="e02ac-203">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="e02ac-204">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-204">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="e02ac-205">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-205">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="e02ac-206">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-206">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-207">下列範例會使用`LBound`函式來判斷所指定維度的陣列最低可用註標。</span><span class="sxs-lookup"><span data-stu-id="e02ac-207">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e02ac-208">
            <paramref name="Array" /> 為 <see langword="Nothing" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-208">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="e02ac-209">
            <paramref name="Rank" /> 小於 1 或 <paramref name="Rank" /> 大於 <paramref name="Array" /> 的陣序規範。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-209">
              <paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color">
          <span data-ttu-id="e02ac-210">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-210">Required.</span>
          </span>
          <span data-ttu-id="e02ac-211">介於 0–15 範圍之間的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-211">A whole number in the range 0–15.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-212">傳回 <see langword="Integer" /> 值，表示對應到指定之色彩編號的 RGB 色彩代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-212">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-213">傳回 <see langword="Integer" /> 值，表示對應到指定之色彩編號的 RGB 色彩代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-213">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-214">從最小顯著性位元組開始，傳回的值會指定用來在 Visual Basic 語言所使用的 RGB 系統中設定適當的色彩的紅色、 綠色和藍色值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-214">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="e02ac-215">`Color`引數必須具有這些設定。</span><span class="sxs-lookup"><span data-stu-id="e02ac-215">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="e02ac-216">數字</span><span class="sxs-lookup"><span data-stu-id="e02ac-216">Number</span></span>|<span data-ttu-id="e02ac-217">色彩</span><span class="sxs-lookup"><span data-stu-id="e02ac-217">Color</span></span>|<span data-ttu-id="e02ac-218">number</span><span class="sxs-lookup"><span data-stu-id="e02ac-218">Number</span></span>|<span data-ttu-id="e02ac-219">色彩</span><span class="sxs-lookup"><span data-stu-id="e02ac-219">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="e02ac-220">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-220">0</span></span>|<span data-ttu-id="e02ac-221">黑色</span><span class="sxs-lookup"><span data-stu-id="e02ac-221">Black</span></span>|<span data-ttu-id="e02ac-222">8</span><span class="sxs-lookup"><span data-stu-id="e02ac-222">8</span></span>|<span data-ttu-id="e02ac-223">灰色</span><span class="sxs-lookup"><span data-stu-id="e02ac-223">Gray</span></span>|  
|<span data-ttu-id="e02ac-224">1</span><span class="sxs-lookup"><span data-stu-id="e02ac-224">1</span></span>|<span data-ttu-id="e02ac-225">藍色</span><span class="sxs-lookup"><span data-stu-id="e02ac-225">Blue</span></span>|<span data-ttu-id="e02ac-226">9</span><span class="sxs-lookup"><span data-stu-id="e02ac-226">9</span></span>|<span data-ttu-id="e02ac-227">淺藍色</span><span class="sxs-lookup"><span data-stu-id="e02ac-227">Light blue</span></span>|  
|<span data-ttu-id="e02ac-228">2</span><span class="sxs-lookup"><span data-stu-id="e02ac-228">2</span></span>|<span data-ttu-id="e02ac-229">綠色</span><span class="sxs-lookup"><span data-stu-id="e02ac-229">Green</span></span>|<span data-ttu-id="e02ac-230">10</span><span class="sxs-lookup"><span data-stu-id="e02ac-230">10</span></span>|<span data-ttu-id="e02ac-231">淺綠色</span><span class="sxs-lookup"><span data-stu-id="e02ac-231">Light green</span></span>|  
|<span data-ttu-id="e02ac-232">3</span><span class="sxs-lookup"><span data-stu-id="e02ac-232">3</span></span>|<span data-ttu-id="e02ac-233">青色</span><span class="sxs-lookup"><span data-stu-id="e02ac-233">Cyan</span></span>|<span data-ttu-id="e02ac-234">11</span><span class="sxs-lookup"><span data-stu-id="e02ac-234">11</span></span>|<span data-ttu-id="e02ac-235">淺色青色</span><span class="sxs-lookup"><span data-stu-id="e02ac-235">Light cyan</span></span>|  
|<span data-ttu-id="e02ac-236">4</span><span class="sxs-lookup"><span data-stu-id="e02ac-236">4</span></span>|<span data-ttu-id="e02ac-237">紅色</span><span class="sxs-lookup"><span data-stu-id="e02ac-237">Red</span></span>|<span data-ttu-id="e02ac-238">12</span><span class="sxs-lookup"><span data-stu-id="e02ac-238">12</span></span>|<span data-ttu-id="e02ac-239">淺紅色</span><span class="sxs-lookup"><span data-stu-id="e02ac-239">Light red</span></span>|  
|<span data-ttu-id="e02ac-240">5</span><span class="sxs-lookup"><span data-stu-id="e02ac-240">5</span></span>|<span data-ttu-id="e02ac-241">洋紅色</span><span class="sxs-lookup"><span data-stu-id="e02ac-241">Magenta</span></span>|<span data-ttu-id="e02ac-242">13</span><span class="sxs-lookup"><span data-stu-id="e02ac-242">13</span></span>|<span data-ttu-id="e02ac-243">淺洋紅色</span><span class="sxs-lookup"><span data-stu-id="e02ac-243">Light magenta</span></span>|  
|<span data-ttu-id="e02ac-244">6</span><span class="sxs-lookup"><span data-stu-id="e02ac-244">6</span></span>|<span data-ttu-id="e02ac-245">黃色</span><span class="sxs-lookup"><span data-stu-id="e02ac-245">Yellow</span></span>|<span data-ttu-id="e02ac-246">14</span><span class="sxs-lookup"><span data-stu-id="e02ac-246">14</span></span>|<span data-ttu-id="e02ac-247">淺黃色</span><span class="sxs-lookup"><span data-stu-id="e02ac-247">Light yellow</span></span>|  
|<span data-ttu-id="e02ac-248">7</span><span class="sxs-lookup"><span data-stu-id="e02ac-248">7</span></span>|<span data-ttu-id="e02ac-249">白色</span><span class="sxs-lookup"><span data-stu-id="e02ac-249">White</span></span>|<span data-ttu-id="e02ac-250">15</span><span class="sxs-lookup"><span data-stu-id="e02ac-250">15</span></span>|<span data-ttu-id="e02ac-251">亮白色</span><span class="sxs-lookup"><span data-stu-id="e02ac-251">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-252">這個範例會使用`QBColor`函式，若要變更色彩由`colorInteger`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-252">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="e02ac-253">`QBColor` 接受介於 0 到 15 之間的整數值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-253">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e02ac-254">
            <paramref name="Color" /> 超出 0 到 15 的範圍 (含 0 和 15)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-254">
              <paramref name="Color" /> is outside of range 0 to 15, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red">
          <span data-ttu-id="e02ac-255">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-255">Required.</span>
          </span>
          <span data-ttu-id="e02ac-256">在 0–255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中紅色元件的濃度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-256">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</span>
          </span>
        </param>
        <param name="Green">
          <span data-ttu-id="e02ac-257">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-257">Required.</span>
          </span>
          <span data-ttu-id="e02ac-258">在 0–255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中綠色元件的濃度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-258">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</span>
          </span>
        </param>
        <param name="Blue">
          <span data-ttu-id="e02ac-259">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-259">Required.</span>
          </span>
          <span data-ttu-id="e02ac-260">在 0–255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中藍色元件的濃度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-260">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-261">傳回 <see langword="Integer" /> 值，表示一組紅色、綠色和藍色元件中的 RGB 色彩值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-261">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-262">傳回 <see langword="Integer" /> 值，表示一組紅色、綠色和藍色元件中的 RGB 色彩值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-262">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-263">應用程式方法和屬性，以接受色彩規格預期規格是數字表示 RGB 色彩值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-263">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="e02ac-264">RGB 色彩值會指定相對的紅色、 綠色和藍色顯示的色彩濃度。</span><span class="sxs-lookup"><span data-stu-id="e02ac-264">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="e02ac-265">如果任何引數的值`RGB`大於 255，255 用。</span><span class="sxs-lookup"><span data-stu-id="e02ac-265">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="e02ac-266">下表列出一些標準的色彩及它們包含紅色、 綠色和藍色值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-266">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="e02ac-267">色彩</span><span class="sxs-lookup"><span data-stu-id="e02ac-267">Color</span></span>|<span data-ttu-id="e02ac-268">紅色值</span><span class="sxs-lookup"><span data-stu-id="e02ac-268">Red value</span></span>|<span data-ttu-id="e02ac-269">綠色的值</span><span class="sxs-lookup"><span data-stu-id="e02ac-269">Green value</span></span>|<span data-ttu-id="e02ac-270">藍色值</span><span class="sxs-lookup"><span data-stu-id="e02ac-270">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="e02ac-271">黑色</span><span class="sxs-lookup"><span data-stu-id="e02ac-271">Black</span></span>|<span data-ttu-id="e02ac-272">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-272">0</span></span>|<span data-ttu-id="e02ac-273">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-273">0</span></span>|<span data-ttu-id="e02ac-274">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-274">0</span></span>|  
|<span data-ttu-id="e02ac-275">藍色</span><span class="sxs-lookup"><span data-stu-id="e02ac-275">Blue</span></span>|<span data-ttu-id="e02ac-276">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-276">0</span></span>|<span data-ttu-id="e02ac-277">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-277">0</span></span>|<span data-ttu-id="e02ac-278">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-278">255</span></span>|  
|<span data-ttu-id="e02ac-279">綠色</span><span class="sxs-lookup"><span data-stu-id="e02ac-279">Green</span></span>|<span data-ttu-id="e02ac-280">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-280">0</span></span>|<span data-ttu-id="e02ac-281">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-281">255</span></span>|<span data-ttu-id="e02ac-282">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-282">0</span></span>|  
|<span data-ttu-id="e02ac-283">青色</span><span class="sxs-lookup"><span data-stu-id="e02ac-283">Cyan</span></span>|<span data-ttu-id="e02ac-284">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-284">0</span></span>|<span data-ttu-id="e02ac-285">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-285">255</span></span>|<span data-ttu-id="e02ac-286">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-286">255</span></span>|  
|<span data-ttu-id="e02ac-287">紅色</span><span class="sxs-lookup"><span data-stu-id="e02ac-287">Red</span></span>|<span data-ttu-id="e02ac-288">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-288">255</span></span>|<span data-ttu-id="e02ac-289">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-289">0</span></span>|<span data-ttu-id="e02ac-290">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-290">0</span></span>|  
|<span data-ttu-id="e02ac-291">洋紅色</span><span class="sxs-lookup"><span data-stu-id="e02ac-291">Magenta</span></span>|<span data-ttu-id="e02ac-292">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-292">255</span></span>|<span data-ttu-id="e02ac-293">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-293">0</span></span>|<span data-ttu-id="e02ac-294">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-294">255</span></span>|  
|<span data-ttu-id="e02ac-295">黃色</span><span class="sxs-lookup"><span data-stu-id="e02ac-295">Yellow</span></span>|<span data-ttu-id="e02ac-296">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-296">255</span></span>|<span data-ttu-id="e02ac-297">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-297">255</span></span>|<span data-ttu-id="e02ac-298">0</span><span class="sxs-lookup"><span data-stu-id="e02ac-298">0</span></span>|  
|<span data-ttu-id="e02ac-299">白色</span><span class="sxs-lookup"><span data-stu-id="e02ac-299">White</span></span>|<span data-ttu-id="e02ac-300">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-300">255</span></span>|<span data-ttu-id="e02ac-301">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-301">255</span></span>|<span data-ttu-id="e02ac-302">255</span><span class="sxs-lookup"><span data-stu-id="e02ac-302">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-303">這個範例會示範如何`RGB`函式用來傳回整數，代表`RGB`色彩值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-303">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e02ac-304">
            <paramref name="Green" />、<paramref name="Blue" /> 或 <paramref name="Red" /> 超出 0 到 225 的範圍 (含 0 和 225)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-304">
              <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName">
          <span data-ttu-id="e02ac-305">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-305">Required.</span>
          </span>
          <span data-ttu-id="e02ac-306">
            <see langword="String" /> 變數，包含 Visual Basic 類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-306">A <see langword="String" /> variable containing a Visual Basic type name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-307">傳回 <see langword="String" /> 值，其中包含某個變數的系統資料類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-307">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-308">傳回 <see langword="String" /> 值，其中包含某個變數的系統資料類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-308">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-309">`SystemTypeName` 傳回的完整 common language runtime (CLR) 型別名稱對應至 Visual Basic 型別名稱。</span><span class="sxs-lookup"><span data-stu-id="e02ac-309">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="e02ac-310">例如，如果`VbName`包含 「 日期 」，`SystemTypeName`傳回"System.DateTime"。</span><span class="sxs-lookup"><span data-stu-id="e02ac-310">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="e02ac-311">如果`SystemTypeName`無法辨識的值`VbName`，它會傳回`Nothing`(不是字串"Nothing")。</span><span class="sxs-lookup"><span data-stu-id="e02ac-311">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-312">下列範例會使用`SystemTypeName`函式傳回多個變數的資料型別名稱。</span><span class="sxs-lookup"><span data-stu-id="e02ac-312">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="e02ac-313">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-313">Required.</span>
          </span>
          <span data-ttu-id="e02ac-314">
            <see langword="Object" /> 變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-314">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="e02ac-315">如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-315">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-316">傳回 <see langword="String" /> 值，其中包含與變數有關的資料類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-316">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-317">傳回 <see langword="String" /> 值，其中包含與變數有關的資料類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-317">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-318">下表顯示`String`所傳回的值`TypeName`的不同內容`VarName`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-318">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="e02ac-319">`VarName` 內容</span><span class="sxs-lookup"><span data-stu-id="e02ac-319">`VarName` contents</span></span>|<span data-ttu-id="e02ac-320">傳回的字串</span><span class="sxs-lookup"><span data-stu-id="e02ac-320">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="e02ac-321">16 位元`True`或`False`實值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-321">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="e02ac-322">「 布林 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-322">"Boolean"</span></span>|  
|<span data-ttu-id="e02ac-323">8 位元的二進位值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-323">8-bit binary value type</span></span>|<span data-ttu-id="e02ac-324">「 位元組 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-324">"Byte"</span></span>|  
|<span data-ttu-id="e02ac-325">16 位元的字元值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-325">16-bit character value type</span></span>|<span data-ttu-id="e02ac-326">"Char"</span><span class="sxs-lookup"><span data-stu-id="e02ac-326">"Char"</span></span>|  
|<span data-ttu-id="e02ac-327">64 位元的日期和時間值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-327">64-bit date and time value type</span></span>|<span data-ttu-id="e02ac-328">「 日期 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-328">"Date"</span></span>|  
|<span data-ttu-id="e02ac-329">表示資料遺漏或不存在的參考類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-329">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="e02ac-330">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="e02ac-330">"DBNull"</span></span>|  
|<span data-ttu-id="e02ac-331">128 位元定點的實值型別</span><span class="sxs-lookup"><span data-stu-id="e02ac-331">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="e02ac-332">「 小數點 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-332">"Decimal"</span></span>|  
|<span data-ttu-id="e02ac-333">64 位元浮點數值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-333">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="e02ac-334">"Double"</span><span class="sxs-lookup"><span data-stu-id="e02ac-334">"Double"</span></span>|  
|<span data-ttu-id="e02ac-335">32 位元整數實值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-335">32-bit integer value type</span></span>|<span data-ttu-id="e02ac-336">「 整數 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-336">"Integer"</span></span>|  
|<span data-ttu-id="e02ac-337">指向特製化的物件參考型別</span><span class="sxs-lookup"><span data-stu-id="e02ac-337">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="e02ac-338">「 物件 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-338">"Object"</span></span>|  
|<span data-ttu-id="e02ac-339">指向特定的物件，從類別建立參考型別*objectclass*</span><span class="sxs-lookup"><span data-stu-id="e02ac-339">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="e02ac-340">「*objectclass*"</span><span class="sxs-lookup"><span data-stu-id="e02ac-340">"*objectclass*"</span></span>|  
|<span data-ttu-id="e02ac-341">64 位元整數實值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-341">64-bit integer value type</span></span>|<span data-ttu-id="e02ac-342">"Long"</span><span class="sxs-lookup"><span data-stu-id="e02ac-342">"Long"</span></span>|  
|<span data-ttu-id="e02ac-343">沒有物件目前指派給它的參考型別</span><span class="sxs-lookup"><span data-stu-id="e02ac-343">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="e02ac-344">"Nothing"</span><span class="sxs-lookup"><span data-stu-id="e02ac-344">"Nothing"</span></span>|  
|<span data-ttu-id="e02ac-345">8 位元帶正負號的整數值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-345">8-bit signed integer value type</span></span>|<span data-ttu-id="e02ac-346">「 SByte"</span><span class="sxs-lookup"><span data-stu-id="e02ac-346">"SByte"</span></span>|  
|<span data-ttu-id="e02ac-347">16 位元整數實值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-347">16-bit integer value type</span></span>|<span data-ttu-id="e02ac-348">"Short"</span><span class="sxs-lookup"><span data-stu-id="e02ac-348">"Short"</span></span>|  
|<span data-ttu-id="e02ac-349">32 位元浮點數值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-349">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="e02ac-350">[單一]</span><span class="sxs-lookup"><span data-stu-id="e02ac-350">"Single"</span></span>|  
|<span data-ttu-id="e02ac-351">指向 16 位元的字元字串的參考類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-351">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="e02ac-352">「 字串 」</span><span class="sxs-lookup"><span data-stu-id="e02ac-352">"String"</span></span>|  
|<span data-ttu-id="e02ac-353">32 位元不帶正負號的整數值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-353">32-bit unsigned integer value type</span></span>|<span data-ttu-id="e02ac-354">「 UInteger"</span><span class="sxs-lookup"><span data-stu-id="e02ac-354">"UInteger"</span></span>|  
|<span data-ttu-id="e02ac-355">64 位元不帶正負號的整數值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-355">64-bit unsigned integer value type</span></span>|<span data-ttu-id="e02ac-356">「 ULong"</span><span class="sxs-lookup"><span data-stu-id="e02ac-356">"ULong"</span></span>|  
|<span data-ttu-id="e02ac-357">16 位元不帶正負號的整數值類型</span><span class="sxs-lookup"><span data-stu-id="e02ac-357">16-bit unsigned integer value type</span></span>|<span data-ttu-id="e02ac-358">「 UShort"</span><span class="sxs-lookup"><span data-stu-id="e02ac-358">"UShort"</span></span>|  
  
 <span data-ttu-id="e02ac-359">如果`VarName`是陣列，傳回的字串可以是任何一個以附加空括號上表中的字串。</span><span class="sxs-lookup"><span data-stu-id="e02ac-359">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="e02ac-360">例如，如果`VarName`指向整數的陣列、`TypeName`傳回"Integer()"。</span><span class="sxs-lookup"><span data-stu-id="e02ac-360">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="e02ac-361">當`TypeName`傳回參考類型的名稱如類別，它會傳回只有名稱本身，不是限定名稱。</span><span class="sxs-lookup"><span data-stu-id="e02ac-361">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="e02ac-362">例如，如果`VarName`指向類別的物件<xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>，`TypeName`傳回"PaperSource"。</span><span class="sxs-lookup"><span data-stu-id="e02ac-362">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="e02ac-363">請注意，如果宣告為特定類別類型的變數，但卻沒有物件指派給它，`TypeName`傳回"Nothing"。</span><span class="sxs-lookup"><span data-stu-id="e02ac-363">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-364">下列範例會使用`TypeName`函數來傳回有關數個變數資料類型資訊。</span><span class="sxs-lookup"><span data-stu-id="e02ac-364">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="e02ac-365">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-365">Required.</span>
          </span>
          <span data-ttu-id="e02ac-366">任何資料類型的陣列，</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-366">Array of any data type.</span>
          </span>
          <span data-ttu-id="e02ac-367">您想在該陣列中找到維度的最高可能註標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-367">The array in which you want to find the highest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="e02ac-368">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-368">Optional.</span>
          </span>
          <span data-ttu-id="e02ac-369">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-369">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="e02ac-370">針對可能的最高註標，所要傳回的維度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-370">The dimension for which the highest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="e02ac-371">使用 1 表示第一個維度，2 表示第二個維度，依此類推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-371">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="e02ac-372">如果省略了 <c>Rank</c>，則假設為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-372">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-373">傳回所指示的陣列維度之可用的最高註標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-373">Returns the highest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-374">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-374">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="e02ac-375">指定之維度的註標可以包含的最高值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-375">The highest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="e02ac-376">如果 <paramref name="Array" /> 只有一個元素，則 <see langword="UBound" /> 會傳回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-376">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span>
          </span>
          <span data-ttu-id="e02ac-377">如果 <paramref name="Array" /> 沒有任何項目，例如它是零長度字串，則 <see langword="UBound" /> 會傳回 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-377">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-378">由於陣列註標起始為 0，就有一個維度的長度大於一比該維度的最高可用註標。</span><span class="sxs-lookup"><span data-stu-id="e02ac-378">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="e02ac-379">與下列維度中，陣列`UBound`傳回下表中的值：</span><span class="sxs-lookup"><span data-stu-id="e02ac-379">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="e02ac-380">UBound 呼叫</span><span class="sxs-lookup"><span data-stu-id="e02ac-380">Call to UBound</span></span>|<span data-ttu-id="e02ac-381">傳回值</span><span class="sxs-lookup"><span data-stu-id="e02ac-381">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="e02ac-382">100</span><span class="sxs-lookup"><span data-stu-id="e02ac-382">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="e02ac-383">5</span><span class="sxs-lookup"><span data-stu-id="e02ac-383">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="e02ac-384">4</span><span class="sxs-lookup"><span data-stu-id="e02ac-384">4</span></span>|  
  
 <span data-ttu-id="e02ac-385">您可以使用`UBound`判斷總計的項目數的陣列，但是您必須調整其傳回的事實，註標起始為 0 的值。</span><span class="sxs-lookup"><span data-stu-id="e02ac-385">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="e02ac-386">下列範例會計算陣列的大小總計`a`在上述範例中：</span><span class="sxs-lookup"><span data-stu-id="e02ac-386">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="e02ac-387">計算值`total`是 3030，也就是 101 * 6 * 5。</span><span class="sxs-lookup"><span data-stu-id="e02ac-387">The value calculated for `total` is 3030, which is 101 * 6 * 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-388">下列範例會使用`UBound`函式來判斷所指定維度的陣列的最高可用註標。</span><span class="sxs-lookup"><span data-stu-id="e02ac-388">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e02ac-389">
            <paramref name="Array" /> 為 <see langword="Nothing" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-389">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="e02ac-390">
            <paramref name="Rank" /> 小於 1 或 <paramref name="Rank" /> 大於 <paramref name="Array" /> 的陣序規範。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-390">
              <paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="e02ac-391">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-391">Required.</span>
          </span>
          <span data-ttu-id="e02ac-392">
            <see langword="Object" /> 變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-392">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="e02ac-393">如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-393">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-394">傳回 <see langword="Integer" /> 值，其中包含某個變數的資料類型分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-394">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-395">傳回 <see langword="Integer" /> 值，其中包含某個變數的資料類型分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-395">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-396">所傳回的整數值`VarType`隸屬<xref:Microsoft.VisualBasic.VariantType>。</span><span class="sxs-lookup"><span data-stu-id="e02ac-396">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="e02ac-397">下表顯示所傳回的值`VarType`的特殊案例`VarName`。</span><span class="sxs-lookup"><span data-stu-id="e02ac-397">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="e02ac-398">所代表的資料類型 `VarName`</span><span class="sxs-lookup"><span data-stu-id="e02ac-398">Data type represented by `VarName`</span></span>|<span data-ttu-id="e02ac-399">傳回值 `VarType`</span><span class="sxs-lookup"><span data-stu-id="e02ac-399">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="e02ac-400">Nothing</span><span class="sxs-lookup"><span data-stu-id="e02ac-400">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="e02ac-401">列舉</span><span class="sxs-lookup"><span data-stu-id="e02ac-401">Enumeration</span></span>|<span data-ttu-id="e02ac-402">基礎資料類型 (`SByte`， `Byte`， `Short`， `UShort`， `Integer`， `UInteger`， `Long`，或`ULong`)</span><span class="sxs-lookup"><span data-stu-id="e02ac-402">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="e02ac-403">陣列</span><span class="sxs-lookup"><span data-stu-id="e02ac-403">Array</span></span>|<span data-ttu-id="e02ac-404">陣列項目類型的位元 OR 和 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="e02ac-404">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="e02ac-405">陣列的陣列</span><span class="sxs-lookup"><span data-stu-id="e02ac-405">Array of arrays</span></span>|<span data-ttu-id="e02ac-406">位元 OR`VariantType.Object`和 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="e02ac-406">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="e02ac-407">結構 (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="e02ac-407">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="e02ac-408">不明</span><span class="sxs-lookup"><span data-stu-id="e02ac-408">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-409">下列範例會使用`VarType`函數來傳回有關數個變數資料類型分類的資訊。</span><span class="sxs-lookup"><span data-stu-id="e02ac-409">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName">
          <span data-ttu-id="e02ac-410">必要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-410">Required.</span>
          </span>
          <span data-ttu-id="e02ac-411">
            <see langword="String" /> 變數，包含 Common Language Runtime 所用的類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-411">
              <see langword="String" /> variable containing a type name used by the common language runtime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e02ac-412">傳回 <see langword="String" /> 值，其中包含某個變數的 Visual Basic 資料類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-412">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e02ac-413">傳回 <see langword="String" /> 值，其中包含某個變數的 Visual Basic 資料類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e02ac-413">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e02ac-414">`VbTypeName` 傳回對應至 common language runtime 類型名稱的 Visual Basic 型別名稱。</span><span class="sxs-lookup"><span data-stu-id="e02ac-414">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="e02ac-415">例如，如果`UrtName`包含"Int32"或"System.Int32"、`VbTypeName`傳回 「 整數 」。</span><span class="sxs-lookup"><span data-stu-id="e02ac-415">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="e02ac-416">如果`VbTypeName`無法辨識的值`UrtName`，它會傳回`Nothing`(不是字串"Nothing")。</span><span class="sxs-lookup"><span data-stu-id="e02ac-416">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="e02ac-417">中的類型名稱`UrtName`可從各種來源，例如取得<xref:System.Reflection.MemberInfo.Name%2A>屬性<xref:System.Reflection.MemberInfo>陣列<xref:System.Type>類別。</span><span class="sxs-lookup"><span data-stu-id="e02ac-417">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e02ac-418">下列範例會使用`VbTypeName`函式傳回多個變數的資料型別名稱。</span><span class="sxs-lookup"><span data-stu-id="e02ac-418">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>