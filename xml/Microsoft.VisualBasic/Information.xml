<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e03709c548a8fc00caebcd97ebbac39a021435f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56352125" /></Metadata><TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c11c1-101"><see langword="Information" /> 模組包含了傳回、測試或驗證資訊所用的程序。</span><span class="sxs-lookup"><span data-stu-id="c11c1-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-102">這個模組支援的 Visual Basic 語言關鍵字和執行階段程式庫成員所提供的錯誤資訊、 驗證資料、 判斷陣列界限和擷取的資料類型及色彩資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-103">下列範例會使用`VbTypeName`函式傳回多個變數的資料型別名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md"><span data-ttu-id="c11c1-104">資訊和互動摘要</span><span class="sxs-lookup"><span data-stu-id="c11c1-104">Information and Interaction Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/data-types-summary.md"><span data-ttu-id="c11c1-105">Data Types Summary</span><span class="sxs-lookup"><span data-stu-id="c11c1-105">Data Types Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/declarations-and-constants-summary.md"><span data-ttu-id="c11c1-106">宣告和常數摘要</span><span class="sxs-lookup"><span data-stu-id="c11c1-106">Declarations and Constants Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="c11c1-107">關鍵字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-107">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="c11c1-108">Visual Basic 執行階段程式庫成員</span><span class="sxs-lookup"><span data-stu-id="c11c1-108">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c11c1-109">傳回整數，指出最後執行之陳述式的行數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-109">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="c11c1-110">唯讀。</span><span class="sxs-lookup"><span data-stu-id="c11c1-110">Read-only.</span></span></summary>
        <returns><span data-ttu-id="c11c1-111">傳回整數，指出最後執行之陳述式的行數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-111">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="c11c1-112">唯讀。</span><span class="sxs-lookup"><span data-stu-id="c11c1-112">Read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-113">如果 Visual Basic 遇到沒有行號，則會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="c11c1-113">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-114">這個範例會使用`Erl`屬性，可指出的行號。</span><span class="sxs-lookup"><span data-stu-id="c11c1-114">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c11c1-115">包含執行階段錯誤的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-115">Contains information about run-time errors.</span></span></summary>
        <returns><span data-ttu-id="c11c1-116">包含執行階段錯誤的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-116">Contains information about run-time errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-117">屬性`Err`物件所設定的錯誤-Visual Basic、 物件或程式設計人員的產生器。</span><span class="sxs-lookup"><span data-stu-id="c11c1-117">The properties of the `Err` object are set by the generator of an error - Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="c11c1-118">執行階段發生錯誤時，屬性`Err`物件會填入唯一識別錯誤的資訊，並可供您處理錯誤。</span><span class="sxs-lookup"><span data-stu-id="c11c1-118">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="c11c1-119">若要在程式碼中產生執行階段錯誤，請使用`Raise`方法。</span><span class="sxs-lookup"><span data-stu-id="c11c1-119">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="c11c1-120">`Err`物件的屬性會重設為零或零長度字串 ("") 之後`Exit Sub`， `Exit Function`， `Exit Property`，或`Resume Next`錯誤處理常式內的陳述式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-120">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="c11c1-121">使用任何形式的`Resume`之外的錯誤處理常式的陳述式不會重設`Err`物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="c11c1-121">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="c11c1-122">您可以使用`Clear`方法來明確地重設`Err`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-122">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="c11c1-123">使用`Raise`方法而非`Error`陳述式來產生執行階段錯誤，系統錯誤，並在類別模組。</span><span class="sxs-lookup"><span data-stu-id="c11c1-123">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="c11c1-124">您決定是否要使用`Raise`其他程式碼中的方法取決於您想要傳回的資訊的豐富功能。</span><span class="sxs-lookup"><span data-stu-id="c11c1-124">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="c11c1-125">`Err`物件是具有全域領域的內建函式物件。</span><span class="sxs-lookup"><span data-stu-id="c11c1-125">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="c11c1-126">因此，您不需要程式碼中建立它的執行個體。</span><span class="sxs-lookup"><span data-stu-id="c11c1-126">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-127">此範例使用的屬性`Err`建構錯誤訊息對話方塊中的物件。</span><span class="sxs-lookup"><span data-stu-id="c11c1-127">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="c11c1-128">請注意，如果您使用`Clear`方法時產生與 Visual Basic 錯誤的先`Raise`方法，而 Visual Basic 的預設值會變成屬性`Err`物件。</span><span class="sxs-lookup"><span data-stu-id="c11c1-128">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="c11c1-129">Error 陳述式</span><span class="sxs-lookup"><span data-stu-id="c11c1-129">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="c11c1-130">On Error 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-130">On Error Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/exit-statement.md"><span data-ttu-id="c11c1-131">Exit 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-131">Exit Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/resume-statement.md"><span data-ttu-id="c11c1-132">Resume 陳述式</span><span class="sxs-lookup"><span data-stu-id="c11c1-132">Resume Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/error-messages/index.md"><span data-ttu-id="c11c1-133">錯誤訊息 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-133">Error Messages (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="c11c1-134">Try...Catch...Finally 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-134">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="c11c1-135">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-135">Required.</span></span> <span data-ttu-id="c11c1-136"><see langword="Object" /> 變數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-136"><see langword="Object" /> variable.</span></span></param>
        <summary><span data-ttu-id="c11c1-137">傳回 <see langword="Boolean" /> 值，指出變數是否指向陣列。</span><span class="sxs-lookup"><span data-stu-id="c11c1-137">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></summary>
        <returns><span data-ttu-id="c11c1-138">傳回 <see langword="Boolean" /> 值，指出變數是否指向陣列。</span><span class="sxs-lookup"><span data-stu-id="c11c1-138">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-139">`IsArray` 會傳回`True`變數指向的陣列中; 否則它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-139">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="c11c1-140">`IsArray` 會使用物件，其中可能包含陣列特別有用。</span><span class="sxs-lookup"><span data-stu-id="c11c1-140">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-141">這個範例會使用`IsArray`檢查幾個變數如果參考陣列的函式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-141">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/arrays/index.md"><span data-ttu-id="c11c1-142">Visual Basic 中的陣列</span><span class="sxs-lookup"><span data-stu-id="c11c1-142">Arrays in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c11c1-143">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-143">Required.</span></span> <span data-ttu-id="c11c1-144"><see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-144"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="c11c1-145">傳回 <see langword="Boolean" /> 值，指出運算式是否表示有效的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-145">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="c11c1-146">傳回 <see langword="Boolean" /> 值，指出運算式是否表示有效的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-146">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-147">`IsDate` 會傳回`True`如果`Expression`屬於<xref:System.DateTime>資料類型，或可以轉換成它; 否則它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-147">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="c11c1-148"><xref:System.DateTime>資料類型會保留日期值和時間值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-148">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="c11c1-149">`IsDate` 會傳回`True`如果`Expression`代表有效的日期、 有效的時間，或有效的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="c11c1-149">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-150">下列範例會使用`IsDate`函式來判斷是否數個變數代表有效<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-150">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="c11c1-151">在上述範例中，`IsDate`會傳回`True`前四個呼叫和`False`的最後一次呼叫。</span><span class="sxs-lookup"><span data-stu-id="c11c1-151">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c11c1-152">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-152">Required.</span></span> <span data-ttu-id="c11c1-153"><see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-153"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="c11c1-154">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為 <see cref="T:System.DBNull" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="c11c1-154">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></summary>
        <returns><span data-ttu-id="c11c1-155">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為 <see cref="T:System.DBNull" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="c11c1-155">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-156">`IsDBNull` 會傳回`True`資料類型，是否`Expression`評估為<xref:System.DBNull>類型; 否則`IsDBNull`傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-156">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="c11c1-157"><xref:System.DBNull?displayProperty=nameWithType>值，指出`Object`表示遺失或不存在的資料。</span><span class="sxs-lookup"><span data-stu-id="c11c1-157">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="c11c1-158">`DBNull` 不與相同`Nothing`，這表示尚未初始化的變數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-158">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="c11c1-159">`DBNull` 也不是零長度字串相同 (`""`)，這有時稱為 null 字串。</span><span class="sxs-lookup"><span data-stu-id="c11c1-159">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-160">這個範例會使用`IsDBNull`函式來判斷變數是否評估為`DBNull`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-160">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c11c1-161">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-161">Required.</span></span> <span data-ttu-id="c11c1-162"><see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-162"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="c11c1-163">傳回 <see langword="Boolean" /> 值，指出運算式是否為例外狀況類型。</span><span class="sxs-lookup"><span data-stu-id="c11c1-163">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></summary>
        <returns><span data-ttu-id="c11c1-164">傳回 <see langword="Boolean" /> 值，指出運算式是否為例外狀況類型。</span><span class="sxs-lookup"><span data-stu-id="c11c1-164">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-165">`IsError` 會傳回`True`如果運算式代表`Object`變數，會衍生自<xref:System.Exception>類別在<xref:System>命名空間。</span><span class="sxs-lookup"><span data-stu-id="c11c1-165">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="c11c1-166">例外狀況衍生自<xref:System.Exception?displayProperty=nameWithType>可攔截與`Try...Catch...Finally`陳述式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-166">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-167">下列範例會使用`IsError`函式來檢查運算式是否代表系統例外狀況。</span><span class="sxs-lookup"><span data-stu-id="c11c1-167">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c11c1-168">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-168">Required.</span></span> <span data-ttu-id="c11c1-169"><see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-169"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="c11c1-170">傳回 <see langword="Boolean" /> 值，指出是否沒有將任何物件指派給運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-170">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></summary>
        <returns><span data-ttu-id="c11c1-171">傳回 <see langword="Boolean" /> 值，指出是否沒有將任何物件指派給運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-171">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-172">`IsNothing` 會傳回`True`如果運算式代表目前不含任何物件指派給它，否則為物件變數，它會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-172">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="c11c1-173">`IsNothing` 被要在參考類型上運作。</span><span class="sxs-lookup"><span data-stu-id="c11c1-173">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="c11c1-174">實值型別不能保存的值，並還原為其預設值，如果您指派`Nothing`給它。</span><span class="sxs-lookup"><span data-stu-id="c11c1-174">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="c11c1-175">如果您提供在中的實值型別`Expression`，`IsNothing`一律會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-175">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-176">下列範例會使用`IsNothing`函式來判斷是否與任何物件執行個體相關聯的物件變數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-176">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="c11c1-177">Value Types and Reference Types</span><span class="sxs-lookup"><span data-stu-id="c11c1-177">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c11c1-178">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-178">Required.</span></span> <span data-ttu-id="c11c1-179"><see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-179"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="c11c1-180">傳回 <see langword="Boolean" /> 值，指出運算式是否可以評估為數字。</span><span class="sxs-lookup"><span data-stu-id="c11c1-180">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></summary>
        <returns><span data-ttu-id="c11c1-181">傳回 <see langword="Boolean" /> 值，指出運算式是否可以評估為數字。</span><span class="sxs-lookup"><span data-stu-id="c11c1-181">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-182">`IsNumeric` 會傳回`True`資料類型，是否`Expression`是`Boolean`， `Byte`， `Decimal`， `Double`， `Integer`， `Long`， `SByte`， `Short`， `Single`， `UInteger`，`ULong`，或`UShort`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-182">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="c11c1-183">它也會傳回`True`如果`Expression`是`Char`， `String`，或`Object`，可以成功轉換的數字。</span><span class="sxs-lookup"><span data-stu-id="c11c1-183">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="c11c1-184">`Expression` 可以包含非數字字元。</span><span class="sxs-lookup"><span data-stu-id="c11c1-184">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="c11c1-185">`IsNumeric` 會傳回`True`如果`Expression`是包含有效的十六進位或八進位表示數字的字串。</span><span class="sxs-lookup"><span data-stu-id="c11c1-185">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="c11c1-186">`IsNumeric` 也會傳回`True`如果`Expression`包含有效的數值運算式以 + 或-字元或包含逗號。</span><span class="sxs-lookup"><span data-stu-id="c11c1-186">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="c11c1-187">`IsNumeric` 會傳回`False`如果`Expression`資料類型`Date`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-187">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="c11c1-188">它會傳回`False`如果`Expression`是`Char`， `String`，或`Object`，無法成功轉換成數字。</span><span class="sxs-lookup"><span data-stu-id="c11c1-188">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-189">下列範例會使用`IsNumeric`函式來判斷是否變數的內容可以評估為數字。</span><span class="sxs-lookup"><span data-stu-id="c11c1-189">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c11c1-190">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-190">Required.</span></span> <span data-ttu-id="c11c1-191"><see langword="Object" /> 運算式。</span><span class="sxs-lookup"><span data-stu-id="c11c1-191"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="c11c1-192">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為參考類型。</span><span class="sxs-lookup"><span data-stu-id="c11c1-192">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></summary>
        <returns><span data-ttu-id="c11c1-193">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為參考類型。</span><span class="sxs-lookup"><span data-stu-id="c11c1-193">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-194">`IsReference` 會傳回`True`如果`Expression`表示參考類型，例如類別執行個體`String`型別或任何類型; 的陣列，否則會傳回`False`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-194">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="c11c1-195">參考型別包含資料儲存在記憶體中的其他位置的指標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-195">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="c11c1-196">實值型別包含它自己的資料。</span><span class="sxs-lookup"><span data-stu-id="c11c1-196">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-197">這個範例會使用`IsReference`函式來檢查是否數個變數指向參考型別。</span><span class="sxs-lookup"><span data-stu-id="c11c1-197">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="c11c1-198">在上述範例中前, 三個呼叫來`IsReference`傳回`True`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-198">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="c11c1-199">最後一次呼叫會傳回`False`，因為`Integer`是實值類型，而不是參考型別。</span><span class="sxs-lookup"><span data-stu-id="c11c1-199">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="c11c1-200">Value Types and Reference Types</span><span class="sxs-lookup"><span data-stu-id="c11c1-200">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="c11c1-201">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-201">Required.</span></span> <span data-ttu-id="c11c1-202">任何資料類型的陣列，</span><span class="sxs-lookup"><span data-stu-id="c11c1-202">Array of any data type.</span></span> <span data-ttu-id="c11c1-203">您想在該陣列中找到維度的最低可能註標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-203">The array in which you want to find the lowest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="c11c1-204">選擇性。</span><span class="sxs-lookup"><span data-stu-id="c11c1-204">Optional.</span></span> <span data-ttu-id="c11c1-205"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="c11c1-205"><see langword="Integer" />.</span></span> <span data-ttu-id="c11c1-206">針對可能的最低註標，所要傳回的維度。</span><span class="sxs-lookup"><span data-stu-id="c11c1-206">The dimension for which the lowest possible subscript is to be returned.</span></span> <span data-ttu-id="c11c1-207">使用 1 表示第一個維度，2 表示第二個維度，依此類推。</span><span class="sxs-lookup"><span data-stu-id="c11c1-207">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="c11c1-208">如果省略了 <paramref name="Rank" />，則假設為 1。</span><span class="sxs-lookup"><span data-stu-id="c11c1-208">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="c11c1-209">傳回所指示的陣列維度之可用的最低註標 (Subscript)。</span><span class="sxs-lookup"><span data-stu-id="c11c1-209">Returns the lowest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="c11c1-210"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="c11c1-210"><see langword="Integer" />.</span></span> <span data-ttu-id="c11c1-211">指定之維度的註標可以包含的最低值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-211">The lowest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="c11c1-212">只要 <paramref name="Array" /> 已經完成初始化，<see langword="LBound" /> 一定會傳回 0，即使它沒有任何項目也是如此，例如，如果它是長度為零的字串。</span><span class="sxs-lookup"><span data-stu-id="c11c1-212"><see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span></span> <span data-ttu-id="c11c1-213">如果 <paramref name="Array" /> 為 <see langword="Nothing" />，則 <see langword="LBound" /> 會擲回 <see cref="T:System.ArgumentNullException" />。</span><span class="sxs-lookup"><span data-stu-id="c11c1-213">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-214">由於陣列註標起始為 0，每個維度的最低可用註標永遠為 0。</span><span class="sxs-lookup"><span data-stu-id="c11c1-214">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="c11c1-215">與下列維度中，陣列`LBound`傳回下表中的值：</span><span class="sxs-lookup"><span data-stu-id="c11c1-215">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="c11c1-216">LBound 呼叫</span><span class="sxs-lookup"><span data-stu-id="c11c1-216">Call to LBound</span></span>|<span data-ttu-id="c11c1-217">傳回值</span><span class="sxs-lookup"><span data-stu-id="c11c1-217">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="c11c1-218">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-218">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="c11c1-219">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-219">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="c11c1-220">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-220">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-221">下列範例會使用`LBound`函式來判斷指定的陣列維度之最低可用註標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-221">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c11c1-222"><paramref name="Array" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="c11c1-222"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="c11c1-223"><paramref name="Rank" /> 小於 1 或 <paramref name="Rank" /> 大於 <paramref name="Array" /> 的陣序規範。</span><span class="sxs-lookup"><span data-stu-id="c11c1-223"><paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="c11c1-224">Dim 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-224">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="c11c1-225">ReDim 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-225">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color"><span data-ttu-id="c11c1-226">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-226">Required.</span></span> <span data-ttu-id="c11c1-227">介於 0-15 範圍之間的整數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-227">A whole number in the range 0-15.</span></span></param>
        <summary><span data-ttu-id="c11c1-228">傳回 <see langword="Integer" /> 值，表示對應到指定之色彩編號的 RGB 色彩代碼。</span><span class="sxs-lookup"><span data-stu-id="c11c1-228">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></summary>
        <returns><span data-ttu-id="c11c1-229">傳回 <see langword="Integer" /> 值，表示對應到指定之色彩編號的 RGB 色彩代碼。</span><span class="sxs-lookup"><span data-stu-id="c11c1-229">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-230">從最小顯著性位元組開始，傳回的值，指定用來設定適當的色彩，RGB 系統使用的 Visual Basic 語言中的紅色、 綠色和藍色值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-230">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="c11c1-231">`Color`引數具有這些設定。</span><span class="sxs-lookup"><span data-stu-id="c11c1-231">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="c11c1-232">number</span><span class="sxs-lookup"><span data-stu-id="c11c1-232">Number</span></span>|<span data-ttu-id="c11c1-233">色彩</span><span class="sxs-lookup"><span data-stu-id="c11c1-233">Color</span></span>|<span data-ttu-id="c11c1-234">number</span><span class="sxs-lookup"><span data-stu-id="c11c1-234">Number</span></span>|<span data-ttu-id="c11c1-235">色彩</span><span class="sxs-lookup"><span data-stu-id="c11c1-235">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="c11c1-236">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-236">0</span></span>|<span data-ttu-id="c11c1-237">黑色</span><span class="sxs-lookup"><span data-stu-id="c11c1-237">Black</span></span>|<span data-ttu-id="c11c1-238">8</span><span class="sxs-lookup"><span data-stu-id="c11c1-238">8</span></span>|<span data-ttu-id="c11c1-239">灰色</span><span class="sxs-lookup"><span data-stu-id="c11c1-239">Gray</span></span>|  
|<span data-ttu-id="c11c1-240">1</span><span class="sxs-lookup"><span data-stu-id="c11c1-240">1</span></span>|<span data-ttu-id="c11c1-241">藍色</span><span class="sxs-lookup"><span data-stu-id="c11c1-241">Blue</span></span>|<span data-ttu-id="c11c1-242">9</span><span class="sxs-lookup"><span data-stu-id="c11c1-242">9</span></span>|<span data-ttu-id="c11c1-243">淺藍色</span><span class="sxs-lookup"><span data-stu-id="c11c1-243">Light blue</span></span>|  
|<span data-ttu-id="c11c1-244">2</span><span class="sxs-lookup"><span data-stu-id="c11c1-244">2</span></span>|<span data-ttu-id="c11c1-245">綠色</span><span class="sxs-lookup"><span data-stu-id="c11c1-245">Green</span></span>|<span data-ttu-id="c11c1-246">10</span><span class="sxs-lookup"><span data-stu-id="c11c1-246">10</span></span>|<span data-ttu-id="c11c1-247">淺綠色</span><span class="sxs-lookup"><span data-stu-id="c11c1-247">Light green</span></span>|  
|<span data-ttu-id="c11c1-248">3</span><span class="sxs-lookup"><span data-stu-id="c11c1-248">3</span></span>|<span data-ttu-id="c11c1-249">青色</span><span class="sxs-lookup"><span data-stu-id="c11c1-249">Cyan</span></span>|<span data-ttu-id="c11c1-250">11</span><span class="sxs-lookup"><span data-stu-id="c11c1-250">11</span></span>|<span data-ttu-id="c11c1-251">淺青綠</span><span class="sxs-lookup"><span data-stu-id="c11c1-251">Light cyan</span></span>|  
|<span data-ttu-id="c11c1-252">4</span><span class="sxs-lookup"><span data-stu-id="c11c1-252">4</span></span>|<span data-ttu-id="c11c1-253">紅色</span><span class="sxs-lookup"><span data-stu-id="c11c1-253">Red</span></span>|<span data-ttu-id="c11c1-254">12</span><span class="sxs-lookup"><span data-stu-id="c11c1-254">12</span></span>|<span data-ttu-id="c11c1-255">淡紅色</span><span class="sxs-lookup"><span data-stu-id="c11c1-255">Light red</span></span>|  
|<span data-ttu-id="c11c1-256">5</span><span class="sxs-lookup"><span data-stu-id="c11c1-256">5</span></span>|<span data-ttu-id="c11c1-257">洋紅色</span><span class="sxs-lookup"><span data-stu-id="c11c1-257">Magenta</span></span>|<span data-ttu-id="c11c1-258">13</span><span class="sxs-lookup"><span data-stu-id="c11c1-258">13</span></span>|<span data-ttu-id="c11c1-259">淺洋紅色</span><span class="sxs-lookup"><span data-stu-id="c11c1-259">Light magenta</span></span>|  
|<span data-ttu-id="c11c1-260">6</span><span class="sxs-lookup"><span data-stu-id="c11c1-260">6</span></span>|<span data-ttu-id="c11c1-261">黃色</span><span class="sxs-lookup"><span data-stu-id="c11c1-261">Yellow</span></span>|<span data-ttu-id="c11c1-262">14</span><span class="sxs-lookup"><span data-stu-id="c11c1-262">14</span></span>|<span data-ttu-id="c11c1-263">淺黃色</span><span class="sxs-lookup"><span data-stu-id="c11c1-263">Light yellow</span></span>|  
|<span data-ttu-id="c11c1-264">7</span><span class="sxs-lookup"><span data-stu-id="c11c1-264">7</span></span>|<span data-ttu-id="c11c1-265">白皮書</span><span class="sxs-lookup"><span data-stu-id="c11c1-265">White</span></span>|<span data-ttu-id="c11c1-266">15</span><span class="sxs-lookup"><span data-stu-id="c11c1-266">15</span></span>|<span data-ttu-id="c11c1-267">亮白色</span><span class="sxs-lookup"><span data-stu-id="c11c1-267">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-268">這個範例會使用`QBColor`所指定的函式來變更色彩`colorInteger`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-268">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="c11c1-269">`QBColor` 接受介於 0 到 15 之間的整數值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-269">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c11c1-270"><paramref name="Color" /> 超出 0 到 15 的範圍 (含 0 和 15)。</span><span class="sxs-lookup"><span data-stu-id="c11c1-270"><paramref name="Color" /> is outside of range 0 to 15, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red"><span data-ttu-id="c11c1-271">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-271">Required.</span></span> <span data-ttu-id="c11c1-272">在 0-255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中紅色元件的濃度。</span><span class="sxs-lookup"><span data-stu-id="c11c1-272"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the red component of the color.</span></span></param>
        <param name="Green"><span data-ttu-id="c11c1-273">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-273">Required.</span></span> <span data-ttu-id="c11c1-274">在 0-255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中綠色元件的濃度。</span><span class="sxs-lookup"><span data-stu-id="c11c1-274"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the green component of the color.</span></span></param>
        <param name="Blue"><span data-ttu-id="c11c1-275">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-275">Required.</span></span> <span data-ttu-id="c11c1-276">在 0-255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中藍色元件的濃度。</span><span class="sxs-lookup"><span data-stu-id="c11c1-276"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the blue component of the color.</span></span></param>
        <summary><span data-ttu-id="c11c1-277">傳回 <see langword="Integer" /> 值，表示一組紅色、綠色和藍色元件中的 RGB 色彩值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-277">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></summary>
        <returns><span data-ttu-id="c11c1-278">傳回 <see langword="Integer" /> 值，表示一組紅色、綠色和藍色元件中的 RGB 色彩值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-278">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-279">應用程式的方法和屬性接受的色彩規格，預期規格是數字表示的 RGB 色彩值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-279">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="c11c1-280">RGB 色彩值會指定相對的紅色、 綠色和藍色顯示的色彩濃度。</span><span class="sxs-lookup"><span data-stu-id="c11c1-280">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="c11c1-281">如果任何引數的值`RGB`大於 255，則使用 255。</span><span class="sxs-lookup"><span data-stu-id="c11c1-281">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="c11c1-282">下表列出一些標準的色彩及其包含的紅色、 綠色和藍色值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-282">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="c11c1-283">色彩</span><span class="sxs-lookup"><span data-stu-id="c11c1-283">Color</span></span>|<span data-ttu-id="c11c1-284">紅色值</span><span class="sxs-lookup"><span data-stu-id="c11c1-284">Red value</span></span>|<span data-ttu-id="c11c1-285">環保價值</span><span class="sxs-lookup"><span data-stu-id="c11c1-285">Green value</span></span>|<span data-ttu-id="c11c1-286">藍色的值</span><span class="sxs-lookup"><span data-stu-id="c11c1-286">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="c11c1-287">黑色</span><span class="sxs-lookup"><span data-stu-id="c11c1-287">Black</span></span>|<span data-ttu-id="c11c1-288">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-288">0</span></span>|<span data-ttu-id="c11c1-289">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-289">0</span></span>|<span data-ttu-id="c11c1-290">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-290">0</span></span>|  
|<span data-ttu-id="c11c1-291">藍色</span><span class="sxs-lookup"><span data-stu-id="c11c1-291">Blue</span></span>|<span data-ttu-id="c11c1-292">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-292">0</span></span>|<span data-ttu-id="c11c1-293">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-293">0</span></span>|<span data-ttu-id="c11c1-294">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-294">255</span></span>|  
|<span data-ttu-id="c11c1-295">綠色</span><span class="sxs-lookup"><span data-stu-id="c11c1-295">Green</span></span>|<span data-ttu-id="c11c1-296">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-296">0</span></span>|<span data-ttu-id="c11c1-297">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-297">255</span></span>|<span data-ttu-id="c11c1-298">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-298">0</span></span>|  
|<span data-ttu-id="c11c1-299">青色</span><span class="sxs-lookup"><span data-stu-id="c11c1-299">Cyan</span></span>|<span data-ttu-id="c11c1-300">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-300">0</span></span>|<span data-ttu-id="c11c1-301">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-301">255</span></span>|<span data-ttu-id="c11c1-302">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-302">255</span></span>|  
|<span data-ttu-id="c11c1-303">紅色</span><span class="sxs-lookup"><span data-stu-id="c11c1-303">Red</span></span>|<span data-ttu-id="c11c1-304">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-304">255</span></span>|<span data-ttu-id="c11c1-305">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-305">0</span></span>|<span data-ttu-id="c11c1-306">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-306">0</span></span>|  
|<span data-ttu-id="c11c1-307">洋紅色</span><span class="sxs-lookup"><span data-stu-id="c11c1-307">Magenta</span></span>|<span data-ttu-id="c11c1-308">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-308">255</span></span>|<span data-ttu-id="c11c1-309">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-309">0</span></span>|<span data-ttu-id="c11c1-310">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-310">255</span></span>|  
|<span data-ttu-id="c11c1-311">黃色</span><span class="sxs-lookup"><span data-stu-id="c11c1-311">Yellow</span></span>|<span data-ttu-id="c11c1-312">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-312">255</span></span>|<span data-ttu-id="c11c1-313">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-313">255</span></span>|<span data-ttu-id="c11c1-314">0</span><span class="sxs-lookup"><span data-stu-id="c11c1-314">0</span></span>|  
|<span data-ttu-id="c11c1-315">白皮書</span><span class="sxs-lookup"><span data-stu-id="c11c1-315">White</span></span>|<span data-ttu-id="c11c1-316">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-316">255</span></span>|<span data-ttu-id="c11c1-317">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-317">255</span></span>|<span data-ttu-id="c11c1-318">255</span><span class="sxs-lookup"><span data-stu-id="c11c1-318">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-319">此範例示範如何`RGB`函式用來傳回整數，代表`RGB`色彩值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-319">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c11c1-320"><paramref name="Green" />、<paramref name="Blue" /> 或 <paramref name="Red" /> 超出 0 到 225 的範圍 (含 0 和 225)。</span><span class="sxs-lookup"><span data-stu-id="c11c1-320"><paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName"><span data-ttu-id="c11c1-321">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-321">Required.</span></span> <span data-ttu-id="c11c1-322"><see langword="String" /> 變數，包含 Visual Basic 類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-322">A <see langword="String" /> variable containing a Visual Basic type name.</span></span></param>
        <summary><span data-ttu-id="c11c1-323">傳回 <see langword="String" /> 值，其中包含某個變數的系統資料類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-323">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="c11c1-324">傳回 <see langword="String" /> 值，其中包含某個變數的系統資料類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-324">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-325">`SystemTypeName` 傳回完整 common language runtime (CLR) 型別名稱對應至 Visual Basic 類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-325">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="c11c1-326">例如，如果`VbName`包含 「 日期 」，`SystemTypeName`傳回"System.DateTime"。</span><span class="sxs-lookup"><span data-stu-id="c11c1-326">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="c11c1-327">如果`SystemTypeName`無法辨識的值`VbName`，它會傳回`Nothing`(不是字串"Nothing")。</span><span class="sxs-lookup"><span data-stu-id="c11c1-327">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-328">下列範例會使用`SystemTypeName`函式傳回多個變數的資料型別名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-328">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c11c1-329">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-329">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="c11c1-330">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-330">Required.</span></span> <span data-ttu-id="c11c1-331"><see langword="Object" /> 變數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-331"><see langword="Object" /> variable.</span></span> <span data-ttu-id="c11c1-332">如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</span><span class="sxs-lookup"><span data-stu-id="c11c1-332">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="c11c1-333">傳回 <see langword="String" /> 值，其中包含與變數有關的資料類型資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-333">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></summary>
        <returns><span data-ttu-id="c11c1-334">傳回 <see langword="String" /> 值，其中包含與變數有關的資料類型資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-334">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-335">下表顯示`String`所傳回的值`TypeName`當作不同內容`VarName`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-335">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="c11c1-336">`VarName` 內容</span><span class="sxs-lookup"><span data-stu-id="c11c1-336">`VarName` contents</span></span>|<span data-ttu-id="c11c1-337">傳回的字串</span><span class="sxs-lookup"><span data-stu-id="c11c1-337">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="c11c1-338">16 位元`True`或`False`實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-338">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="c11c1-339">"Boolean"</span><span class="sxs-lookup"><span data-stu-id="c11c1-339">"Boolean"</span></span>|  
|<span data-ttu-id="c11c1-340">8 位元二進位實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-340">8-bit binary value type</span></span>|<span data-ttu-id="c11c1-341">「 位元組 」</span><span class="sxs-lookup"><span data-stu-id="c11c1-341">"Byte"</span></span>|  
|<span data-ttu-id="c11c1-342">16 位元字元實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-342">16-bit character value type</span></span>|<span data-ttu-id="c11c1-343">"Char"</span><span class="sxs-lookup"><span data-stu-id="c11c1-343">"Char"</span></span>|  
|<span data-ttu-id="c11c1-344">64 位元的日期和時間值類型</span><span class="sxs-lookup"><span data-stu-id="c11c1-344">64-bit date and time value type</span></span>|<span data-ttu-id="c11c1-345">「 日期 」</span><span class="sxs-lookup"><span data-stu-id="c11c1-345">"Date"</span></span>|  
|<span data-ttu-id="c11c1-346">表示資料遺失或不存在的參考型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-346">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="c11c1-347">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="c11c1-347">"DBNull"</span></span>|  
|<span data-ttu-id="c11c1-348">128 位元定點的實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-348">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="c11c1-349">[十進位]</span><span class="sxs-lookup"><span data-stu-id="c11c1-349">"Decimal"</span></span>|  
|<span data-ttu-id="c11c1-350">64 位元浮點數的實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-350">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="c11c1-351">"Double"</span><span class="sxs-lookup"><span data-stu-id="c11c1-351">"Double"</span></span>|  
|<span data-ttu-id="c11c1-352">32 位元整數實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-352">32-bit integer value type</span></span>|<span data-ttu-id="c11c1-353">"Integer"</span><span class="sxs-lookup"><span data-stu-id="c11c1-353">"Integer"</span></span>|  
|<span data-ttu-id="c11c1-354">指向特製化的物件參考型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-354">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="c11c1-355">「 物件 」</span><span class="sxs-lookup"><span data-stu-id="c11c1-355">"Object"</span></span>|  
|<span data-ttu-id="c11c1-356">指向 從類別建立的特定物件的參考型別*objectclass*</span><span class="sxs-lookup"><span data-stu-id="c11c1-356">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="c11c1-357">"*objectclass*"</span><span class="sxs-lookup"><span data-stu-id="c11c1-357">"*objectclass*"</span></span>|  
|<span data-ttu-id="c11c1-358">64 位元整數實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-358">64-bit integer value type</span></span>|<span data-ttu-id="c11c1-359">"Long"</span><span class="sxs-lookup"><span data-stu-id="c11c1-359">"Long"</span></span>|  
|<span data-ttu-id="c11c1-360">與目前已指派給它的任何物件的參考型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-360">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="c11c1-361">"Nothing"</span><span class="sxs-lookup"><span data-stu-id="c11c1-361">"Nothing"</span></span>|  
|<span data-ttu-id="c11c1-362">8 位元帶正負號的整數值的型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-362">8-bit signed integer value type</span></span>|<span data-ttu-id="c11c1-363">"SByte"</span><span class="sxs-lookup"><span data-stu-id="c11c1-363">"SByte"</span></span>|  
|<span data-ttu-id="c11c1-364">16 位元整數實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-364">16-bit integer value type</span></span>|<span data-ttu-id="c11c1-365">"Short"</span><span class="sxs-lookup"><span data-stu-id="c11c1-365">"Short"</span></span>|  
|<span data-ttu-id="c11c1-366">32 位元浮點數的實值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-366">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="c11c1-367">「 單一 」</span><span class="sxs-lookup"><span data-stu-id="c11c1-367">"Single"</span></span>|  
|<span data-ttu-id="c11c1-368">16 位元的字元字串所指向的參考型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-368">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="c11c1-369">「 字串 」</span><span class="sxs-lookup"><span data-stu-id="c11c1-369">"String"</span></span>|  
|<span data-ttu-id="c11c1-370">32 位元不帶正負號的整數值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-370">32-bit unsigned integer value type</span></span>|<span data-ttu-id="c11c1-371">「 UInteger"</span><span class="sxs-lookup"><span data-stu-id="c11c1-371">"UInteger"</span></span>|  
|<span data-ttu-id="c11c1-372">64 位元不帶正負號的整數值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-372">64-bit unsigned integer value type</span></span>|<span data-ttu-id="c11c1-373">「 ULong"</span><span class="sxs-lookup"><span data-stu-id="c11c1-373">"ULong"</span></span>|  
|<span data-ttu-id="c11c1-374">16 位元不帶正負號的整數值型別</span><span class="sxs-lookup"><span data-stu-id="c11c1-374">16-bit unsigned integer value type</span></span>|<span data-ttu-id="c11c1-375">「 UShort"</span><span class="sxs-lookup"><span data-stu-id="c11c1-375">"UShort"</span></span>|  
  
 <span data-ttu-id="c11c1-376">如果`VarName`是陣列，傳回的字串可以是其中一個以附加空括號上表中的字串。</span><span class="sxs-lookup"><span data-stu-id="c11c1-376">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="c11c1-377">例如，如果`VarName`指向整數的陣列、`TypeName`傳回 「 Integer()"。</span><span class="sxs-lookup"><span data-stu-id="c11c1-377">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="c11c1-378">當`TypeName`傳回參考類型的名稱等類別，它會傳回只有名稱本身，而不是限定名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-378">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="c11c1-379">例如，如果`VarName`指向類別的物件<xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>，`TypeName`傳回 「 PaperSource"。</span><span class="sxs-lookup"><span data-stu-id="c11c1-379">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="c11c1-380">請注意，如果宣告為特定類別類型的變數，但卻沒有物件指派給它，`TypeName`傳回"Nothing"。</span><span class="sxs-lookup"><span data-stu-id="c11c1-380">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-381">下列範例會使用`TypeName`函式來傳回幾個變數的資料型別資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-381">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c11c1-382">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-382">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="c11c1-383">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-383">Required.</span></span> <span data-ttu-id="c11c1-384">任何資料類型的陣列，</span><span class="sxs-lookup"><span data-stu-id="c11c1-384">Array of any data type.</span></span> <span data-ttu-id="c11c1-385">您想在該陣列中找到維度的最高可能註標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-385">The array in which you want to find the highest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="c11c1-386">選擇性。</span><span class="sxs-lookup"><span data-stu-id="c11c1-386">Optional.</span></span> <span data-ttu-id="c11c1-387"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="c11c1-387"><see langword="Integer" />.</span></span> <span data-ttu-id="c11c1-388">針對可能的最高註標，所要傳回的維度。</span><span class="sxs-lookup"><span data-stu-id="c11c1-388">The dimension for which the highest possible subscript is to be returned.</span></span> <span data-ttu-id="c11c1-389">使用 1 表示第一個維度，2 表示第二個維度，依此類推。</span><span class="sxs-lookup"><span data-stu-id="c11c1-389">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="c11c1-390">如果省略了 <paramref name="Rank" />，則假設為 1。</span><span class="sxs-lookup"><span data-stu-id="c11c1-390">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="c11c1-391">傳回所指示的陣列維度之可用的最高註標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-391">Returns the highest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="c11c1-392"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="c11c1-392"><see langword="Integer" />.</span></span> <span data-ttu-id="c11c1-393">指定之維度的註標可以包含的最高值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-393">The highest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="c11c1-394">如果 <paramref name="Array" /> 只有一個元素，則 <see langword="UBound" /> 會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="c11c1-394">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span></span> <span data-ttu-id="c11c1-395">如果 <paramref name="Array" /> 沒有任何項目，例如它是零長度字串，則 <see langword="UBound" /> 會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="c11c1-395">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-396">由於陣列註標起始為 0，就有一個維度的長度大於一比該維度的最大可用註標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-396">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="c11c1-397">與下列維度中，陣列`UBound`傳回下表中的值：</span><span class="sxs-lookup"><span data-stu-id="c11c1-397">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="c11c1-398">呼叫 UBound</span><span class="sxs-lookup"><span data-stu-id="c11c1-398">Call to UBound</span></span>|<span data-ttu-id="c11c1-399">傳回值</span><span class="sxs-lookup"><span data-stu-id="c11c1-399">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="c11c1-400">100</span><span class="sxs-lookup"><span data-stu-id="c11c1-400">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="c11c1-401">5</span><span class="sxs-lookup"><span data-stu-id="c11c1-401">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="c11c1-402">4</span><span class="sxs-lookup"><span data-stu-id="c11c1-402">4</span></span>|  
  
 <span data-ttu-id="c11c1-403">您可以使用`UBound`判斷總計的項目數的陣列，但是您必須調整其傳回至註標起始為 0 的事實的值。</span><span class="sxs-lookup"><span data-stu-id="c11c1-403">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="c11c1-404">下列範例會計算陣列的大小總計`a`在上述範例中：</span><span class="sxs-lookup"><span data-stu-id="c11c1-404">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="c11c1-405">計算值`total`為 3030，也就是 101 \* 6 \* 5。</span><span class="sxs-lookup"><span data-stu-id="c11c1-405">The value calculated for `total` is 3030, which is 101 \* 6 \* 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-406">下列範例會使用`UBound`函式來判斷所指定維度的陣列的最大可用註標。</span><span class="sxs-lookup"><span data-stu-id="c11c1-406">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c11c1-407"><paramref name="Array" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="c11c1-407"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="c11c1-408"><paramref name="Rank" /> 小於 1 或 <paramref name="Rank" /> 大於 <paramref name="Array" /> 的陣序規範。</span><span class="sxs-lookup"><span data-stu-id="c11c1-408"><paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="c11c1-409">Dim 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-409">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="c11c1-410">ReDim 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-410">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="c11c1-411">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-411">Required.</span></span> <span data-ttu-id="c11c1-412"><see langword="Object" /> 變數。</span><span class="sxs-lookup"><span data-stu-id="c11c1-412"><see langword="Object" /> variable.</span></span> <span data-ttu-id="c11c1-413">如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</span><span class="sxs-lookup"><span data-stu-id="c11c1-413">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="c11c1-414">傳回 <see langword="Integer" /> 值，其中包含某個變數的資料類型分類。</span><span class="sxs-lookup"><span data-stu-id="c11c1-414">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></summary>
        <returns><span data-ttu-id="c11c1-415">傳回 <see langword="Integer" /> 值，其中包含某個變數的資料類型分類。</span><span class="sxs-lookup"><span data-stu-id="c11c1-415">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-416">所傳回的整數值`VarType`隸屬<xref:Microsoft.VisualBasic.VariantType>。</span><span class="sxs-lookup"><span data-stu-id="c11c1-416">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="c11c1-417">下表顯示所傳回的值`VarType`的特殊案例`VarName`。</span><span class="sxs-lookup"><span data-stu-id="c11c1-417">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="c11c1-418">所表示的資料類型 `VarName`</span><span class="sxs-lookup"><span data-stu-id="c11c1-418">Data type represented by `VarName`</span></span>|<span data-ttu-id="c11c1-419">所傳回的值 `VarType`</span><span class="sxs-lookup"><span data-stu-id="c11c1-419">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="c11c1-420">Nothing</span><span class="sxs-lookup"><span data-stu-id="c11c1-420">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="c11c1-421">列舉</span><span class="sxs-lookup"><span data-stu-id="c11c1-421">Enumeration</span></span>|<span data-ttu-id="c11c1-422">基礎資料類型 (`SByte`， `Byte`， `Short`， `UShort`， `Integer`， `UInteger`， `Long`，或`ULong`)</span><span class="sxs-lookup"><span data-stu-id="c11c1-422">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="c11c1-423">陣列</span><span class="sxs-lookup"><span data-stu-id="c11c1-423">Array</span></span>|<span data-ttu-id="c11c1-424">陣列項目類型的位元 OR 與 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="c11c1-424">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="c11c1-425">陣列的陣列</span><span class="sxs-lookup"><span data-stu-id="c11c1-425">Array of arrays</span></span>|<span data-ttu-id="c11c1-426">位元 OR`VariantType.Object`和 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="c11c1-426">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="c11c1-427">結構 (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="c11c1-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="c11c1-428">不明</span><span class="sxs-lookup"><span data-stu-id="c11c1-428">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-429">下列範例會使用`VarType`函數來傳回有關數個變數的資料型別分類資訊。</span><span class="sxs-lookup"><span data-stu-id="c11c1-429">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c11c1-430">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-430">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName"><span data-ttu-id="c11c1-431">必要項。</span><span class="sxs-lookup"><span data-stu-id="c11c1-431">Required.</span></span> <span data-ttu-id="c11c1-432"><see langword="String" /> 變數，包含 Common Language Runtime 所用的類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-432"><see langword="String" /> variable containing a type name used by the common language runtime.</span></span></param>
        <summary><span data-ttu-id="c11c1-433">傳回 <see langword="String" /> 值，其中包含某個變數的 Visual Basic 資料類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-433">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="c11c1-434">傳回 <see langword="String" /> 值，其中包含某個變數的 Visual Basic 資料類型名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-434">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c11c1-435">`VbTypeName` 傳回對應至 common language runtime 型別名稱的 Visual Basic 型別名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-435">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="c11c1-436">例如，如果`UrtName`包含"Int32"或"System.Int32"，`VbTypeName`傳回"Integer"。</span><span class="sxs-lookup"><span data-stu-id="c11c1-436">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="c11c1-437">如果`VbTypeName`無法辨識的值`UrtName`，它會傳回`Nothing`(不是字串"Nothing")。</span><span class="sxs-lookup"><span data-stu-id="c11c1-437">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="c11c1-438">中的類型名稱`UrtName`可以從各種來源，例如取得<xref:System.Reflection.MemberInfo.Name%2A>中的屬性<xref:System.Reflection.MemberInfo>陣列<xref:System.Type>類別。</span><span class="sxs-lookup"><span data-stu-id="c11c1-438">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c11c1-439">下列範例會使用`VbTypeName`函式傳回多個變數的資料型別名稱。</span><span class="sxs-lookup"><span data-stu-id="c11c1-439">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c11c1-440">資料類型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c11c1-440">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>