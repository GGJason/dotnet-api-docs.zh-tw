<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="698d4c7779138119bfe452e95602b55a06711e5b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37712140" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem sealed" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ac3c2-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac3c2-101">The <see langword="FileSystem" /> module contains the procedures that are used to perform file, directory or folder, and system operations.</span>
      </span>
      <span data-ttu-id="ac3c2-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac3c2-102">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than using the <see langword="FileSystem" /> module.</span>
      </span>
      <span data-ttu-id="ac3c2-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac3c2-103">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-104">這個模組支援的 Visual Basic 語言關鍵字和存取檔案和資料夾的執行階段程式庫成員。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-104">This module supports the Visual Basic language keywords and run-time library members that access files and folders.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-105">這個範例會使用`GetAttr`函式來判斷檔案和目錄或資料夾的屬性。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-105">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChDir">
      <MemberSignature Language="C#" Value="public static void ChDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member ChDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="ac3c2-106">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-106">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-107">A <see langword="String" /> expression that identifies which directory or folder becomes the new default directory or folder.</span>
          </span>
          <span data-ttu-id="ac3c2-108">
            <c>Path</c> may include the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-108">
              <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="ac3c2-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-109">If no drive is specified, <see langword="ChDir" /> changes the default directory or folder on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-110">Changes the current directory or folder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-110">Changes the current directory or folder.</span>
          </span>
          <span data-ttu-id="ac3c2-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-111">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than the <see langword="ChDir" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-112">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-113">`ChDir`函式會變更預設目錄，但不是在預設的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-113">The `ChDir` function changes the default directory, but not the default drive.</span></span> <span data-ttu-id="ac3c2-114">例如，如果預設磁碟機 C，下列陳述式會變更磁碟機 D 上的預設目錄，但 C 則保持預設的磁碟機：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-114">For example, if the default drive is C, the following statement changes the default directory on drive D, but C remains the default drive:</span></span>  
  
 [!code-vb[VbVbalrCatRef#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#39)]  
  
 <span data-ttu-id="ac3c2-115">您可以進行相對目錄變更，請輸入兩個句號，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-115">You can make relative directory changes is by typing two periods, as follows:</span></span>  
  
 [!code-vb[VbVbalrCatRef#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#40)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-116">`ChDir`函式需要 unmanaged 程式碼的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-116">The `ChDir` function requires unmanaged code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="ac3c2-117">如需詳細資訊，請參閱<xref:System.Security.Permissions.SecurityPermission>和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-117">For more information, see <xref:System.Security.Permissions.SecurityPermission> and .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-118">這個範例會使用`ChDir`函式來變更目前的目錄或資料夾。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-118">This example uses the `ChDir` function to change the current directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-119">
            <paramref name="Path" /> is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-119">
              <paramref name="Path" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-120">Invalid drive is specified, or drive is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-120">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ChDrive">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-121">Changes the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-121">Changes the current drive.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(char Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : char -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="ac3c2-122">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-122">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-123">String expression that specifies an existing drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-123">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="ac3c2-124">If you supply a zero-length string (""), the current drive does not change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-124">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="ac3c2-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-125">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-126">Changes the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-126">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-127">`ChDrive`函式需要 unmanaged 程式碼的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-127">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="ac3c2-128">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-128">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-129">這個範例會使用`ChDrive`函式來變更目前的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-129">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="ac3c2-130">如果磁碟機不存在，則此函式會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-130">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-131">Invalid drive is specified, or drive is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-131">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ChDrive">
      <MemberSignature Language="C#" Value="public static void ChDrive (string Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ChDrive(string Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChDrive (Drive As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChDrive(System::String ^ Drive);" />
      <MemberSignature Language="F#" Value="static member ChDrive : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.ChDrive Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="ac3c2-132">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-132">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-133">String expression that specifies an existing drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-133">String expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="ac3c2-134">If you supply a zero-length string (""), the current drive does not change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-134">If you supply a zero-length string (""), the current drive does not change.</span>
          </span>
          <span data-ttu-id="ac3c2-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-135">If the <c>Drive</c> argument is a multiple-character string, <see langword="ChDrive" /> uses only the first letter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-136">Changes the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-136">Changes the current drive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-137">`ChDrive`函式需要 unmanaged 程式碼的權限，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-137">The `ChDrive` function requires unmanaged-code permission, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="ac3c2-138">如需詳細資訊，請參閱 <<c0> <xref:System.Security.Permissions.SecurityPermission> 並[程式碼存取權限](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-138">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-139">這個範例會使用`ChDrive`函式來變更目前的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-139">This example uses the `ChDrive` function to change the current drive.</span></span> <span data-ttu-id="ac3c2-140">如果磁碟機不存在，則此函式會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-140">The function throws an exception if the drive does not exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-141">Invalid drive is specified, or drive is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-141">Invalid drive is specified, or drive is unavailable.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CurDir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-142">Returns a string representing the current path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-142">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="ac3c2-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-143">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="ac3c2-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-144">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir();" />
      <MemberSignature Language="F#" Value="static member CurDir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-145">Returns a string representing the current path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-145">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="ac3c2-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-146">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="ac3c2-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-147">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-148">A string representing the current path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-148">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac3c2-149">這個範例會使用`CurDir`函式來傳回目前的路徑。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-149">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="CurDir">
      <MemberSignature Language="C#" Value="public static string CurDir (char Drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static string CurDir(char Drive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CurDir (Drive As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CurDir(char Drive);" />
      <MemberSignature Language="F#" Value="static member CurDir : char -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.CurDir Drive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Drive" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Drive">
          <span data-ttu-id="ac3c2-150">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-150">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-151">
            <see langword="Char" /> expression that specifies an existing drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-151">
              <see langword="Char" /> expression that specifies an existing drive.</span>
          </span>
          <span data-ttu-id="ac3c2-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-152">If no drive is specified, or if <c>Drive</c> is a zero-length string (""), <see langword="CurDir" /> returns the path for the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-153">Returns a string representing the current path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-153">Returns a string representing the current path.</span>
          </span>
          <span data-ttu-id="ac3c2-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-154">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="CurDir" />.</span>
          </span>
          <span data-ttu-id="ac3c2-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-155">For more information, see <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-156">A string representing the current path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-156">A string representing the current path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac3c2-157">這個範例會使用`CurDir`函式來傳回目前的路徑。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-157">This example uses the `CurDir` function to return the current path.</span></span>  
  
 [!code-vb[VbVbalrCatRef#65](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#65)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dir">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-158">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="ac3c2-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-159">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-160">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Dir();" />
      <MemberSignature Language="F#" Value="static member Dir : unit -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-161">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="ac3c2-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-162">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-163">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-164">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-165">`Dir`函式支援使用多個字元 (`*`) 和單一字元 (`?`) 萬用字元來指定多個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-165">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="ac3c2-166">`VbVolume` 傳回而不是特定的檔案名稱的磁碟機的磁碟區標籤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-166">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="ac3c2-167">您必須提供`PathName`第一次，讓您呼叫`Dir`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-167">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="ac3c2-168">若要擷取下一個項目，您可以進行後續呼叫`Dir`不含參數的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-168">To retrieve the next item, you can make subsequent calls to the `Dir` function without parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-169">若要正常運作，`Dir`函式需要<xref:System.Security.Permissions.FileIOPermissionAccess.Read>並<xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery>加上旗標的<xref:System.Security.Permissions.FileIOPermission>要授與執行的程式碼。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-169">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="ac3c2-170">如需詳細資訊，請參閱 < <xref:System.Security.Permissions.FileIOPermission>， <xref:System.Security.SecurityException>，並[程式碼存取權限](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-170">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="ac3c2-171">`Attributes`引數的列舉值如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-171">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="ac3c2-172">值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-172">Value</span></span>|<span data-ttu-id="ac3c2-173">常數</span><span class="sxs-lookup"><span data-stu-id="ac3c2-173">Constant</span></span>|<span data-ttu-id="ac3c2-174">描述</span><span class="sxs-lookup"><span data-stu-id="ac3c2-174">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="ac3c2-175">預設值：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-175">Default.</span></span> <span data-ttu-id="ac3c2-176">指定沒有屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-176">Specifies files without attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="ac3c2-177">指定唯讀檔案，以及不需屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-177">Specifies read-only files, and also files without attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="ac3c2-178">指定隱藏的檔，以及不需屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-178">Specifies hidden files, and also files without attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="ac3c2-179">指定系統檔案，以及不需屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-179">Specifies system files, and also files without attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="ac3c2-180">指定磁碟區標籤。如果未指定任何其他屬性，則`vbVolume`會被忽略。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-180">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="ac3c2-181">指定目錄或資料夾，以及不需屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-181">Specifies directories or folders, and also files without attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="ac3c2-182">上次備份之後變更檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-182">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="ac3c2-183">檔案有不同的名稱。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-183">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-184">這些列舉由 Visual Basic 語言，並可用於您的程式碼，而不是實際值的任何位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-184">These enumerations are specified by the Visual Basic language and can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-185">這個範例會使用`Dir`函式來檢查特定的檔案和目錄是否存在。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-185">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dir">
      <MemberSignature Language="C#" Value="public static string Dir (string Pathname, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Dir(string Pathname, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (Pathname As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (Pathname, Attributes)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static string Dir (string PathName, Microsoft.VisualBasic.FileAttribute Attributes = Microsoft.VisualBasic.FileAttribute.Normal);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static string Dir(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Dir (PathName As String, Optional Attributes As FileAttribute = Microsoft.VisualBasic.FileAttribute.Normal) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="static member Dir : string * Microsoft.VisualBasic.FileAttribute -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.Dir (PathName, Attributes)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" Index="1" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="ac3c2-186">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-186">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-187">
            <see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-187">
              <see langword="String" /> expression that specifies a file name, directory or folder name, or drive volume label.</span>
          </span>
          <span data-ttu-id="ac3c2-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-188">A zero-length string (<see langword="&quot;&quot;" />) is returned if <c>PathName</c> is not found.</span>
          </span>
        </param>
        <param name="Pathname">To be added.</param>
        <param name="Attributes">
          <span data-ttu-id="ac3c2-189">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-189">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-190">Enumeration or numeric expression whose value specifies file attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-190">Enumeration or numeric expression whose value specifies file attributes.</span>
          </span>
          <span data-ttu-id="ac3c2-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-191">If omitted, <see langword="Dir" /> returns files that match <c>PathName</c> but have no attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-192">Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
          <span data-ttu-id="ac3c2-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-193">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="Dir" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-194">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-195">A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-196">`Dir`函式支援使用多個字元 (`*`) 和單一字元 (`?`) 萬用字元來指定多個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-196">The `Dir` function supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="ac3c2-197">`VbVolume` 傳回而不是特定的檔案名稱的磁碟機的磁碟區標籤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-197">`VbVolume` returns the volume label for the drive instead of a specific file name.</span></span>  
  
 <span data-ttu-id="ac3c2-198">您必須提供`PathName`第一次，讓您呼叫`Dir`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-198">You must supply a `PathName` the first time that you call the `Dir` function.</span></span> <span data-ttu-id="ac3c2-199">若要擷取下一個項目，您可以進行後續呼叫`Dir`不含任何參數的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-199">To retrieve the next item, you can make subsequent calls to the `Dir` function with no parameters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-200">若要正常運作，`Dir`函式需要<xref:System.Security.Permissions.FileIOPermissionAccess.Read>並<xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery>加上旗標的<xref:System.Security.Permissions.FileIOPermission>要授與執行的程式碼。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-200">To run correctly, the `Dir` function requires the <xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="ac3c2-201">如需詳細資訊，請參閱 < <xref:System.Security.Permissions.FileIOPermission>， <xref:System.Security.SecurityException>，並[程式碼存取權限](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-201">For more information, see <xref:System.Security.Permissions.FileIOPermission>, <xref:System.Security.SecurityException>, and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="ac3c2-202">`Attributes`引數的列舉值如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-202">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="ac3c2-203">值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-203">Value</span></span>|<span data-ttu-id="ac3c2-204">常數</span><span class="sxs-lookup"><span data-stu-id="ac3c2-204">Constant</span></span>|<span data-ttu-id="ac3c2-205">描述</span><span class="sxs-lookup"><span data-stu-id="ac3c2-205">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbnormal`|<span data-ttu-id="ac3c2-206">預設值：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-206">Default.</span></span> <span data-ttu-id="ac3c2-207">指定沒有屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-207">Specifies files that have no attributes.</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="ac3c2-208">指定唯讀檔案，除了沒有屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-208">Specifies read-only files, in addition to files that have no attributes.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="ac3c2-209">指定隱藏的檔，除了沒有屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-209">Specifies hidden files, in addition to files that have no attributes.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="ac3c2-210">指定系統檔案，除了沒有屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-210">Specifies system files, in addition to files that have no attributes.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="ac3c2-211">指定磁碟區標籤。如果未指定任何其他屬性，則`vbVolume`會被忽略。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-211">Specifies volume label; if any other attribute is specified, `vbVolume` is ignored.</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="ac3c2-212">指定目錄或資料夾，以及沒有屬性的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-212">Specifies directories or folders, in addition to files that have no attributes.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="ac3c2-213">上次備份之後變更檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-213">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="ac3c2-214">檔案有不同的名稱。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-214">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-215">這些列舉由 Visual Basic 語言，並可用於您的程式碼來取代實際值的任何位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-215">These enumerations are specified by the Visual Basic language and can be used anywhere in your code in place of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-216">這個範例會使用`Dir`函式來檢查特定的檔案和目錄是否存在。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-216">This example uses the `Dir` function to check if certain files and directories exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.ChDrive" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public static bool EOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool EOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EOF (FileNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member EOF : int -&gt; bool" Usage="Microsoft.VisualBasic.FileSystem.EOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-217">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-217">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-218">An <see langword="Integer" /> that contains any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-218">An <see langword="Integer" /> that contains any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-219">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-220">Returns a Boolean value <see langword="True" /> when the end of a file opened for <see langword="Random" /> or sequential <see langword="Input" /> has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-221">使用`EOF`以避免嘗試取得輸入超過檔案結尾所產生的錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-221">Use `EOF` to avoid the error generated by attempting to get input past the end of a file.</span></span>  
  
 <span data-ttu-id="ac3c2-222">`EOF`函式會傳回`False`直到達到檔案結尾為止。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-222">The `EOF` function returns `False` until the end of the file has been reached.</span></span> <span data-ttu-id="ac3c2-223">使用開啟的檔案`Random`或`Binary`存取`EOF`會傳回`False`直到最後一個執行`FileGet`函式是無法讀取整個記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-223">With files opened for `Random` or `Binary` access, `EOF` returns `False` until the last executed `FileGet` function is unable to read a whole record.</span></span>  
  
 <span data-ttu-id="ac3c2-224">使用開啟的檔案`Binary`存取，請嘗試透過檔案使用讀取`Input`運作直到`EOF`傳回`True`會產生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-224">With files opened for `Binary` access, an attempt to read through the file using the `Input` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="ac3c2-225">使用`LOF`並`Loc`函數，而`EOF`讀取二進位檔案時`Input`，或使用`Get`使用時`EOF`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-225">Use the `LOF` and `Loc` functions instead of `EOF` when reading binary files with `Input`, or use `Get` when using the `EOF` function.</span></span> <span data-ttu-id="ac3c2-226">使用開啟的檔案`Output`，`EOF`一律會傳回`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-226">With files opened for `Output`, `EOF` always returns `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-227">這個範例會使用`EOF`函式來偵測檔案的結尾。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-227">This example uses the `EOF` function to detect the end of a file.</span></span> <span data-ttu-id="ac3c2-228">這個範例假設`Testfile`是文字檔案，其中包含幾行文字。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-228">This example assumes that `Testfile` is a text file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#62](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-229">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-229">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.OpenMode FileAttr (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.OpenMode FileAttr(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileAttr (FileNumber As Integer) As OpenMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::OpenMode FileAttr(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member FileAttr : int -&gt; Microsoft.VisualBasic.OpenMode" Usage="Microsoft.VisualBasic.FileSystem.FileAttr FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.OpenMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-230">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-230">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-231">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-231">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="ac3c2-232">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-232">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-233">Returns an enumeration representing the file mode for files opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-234">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than the <see langword="FileAttr" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-235">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> for more information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-236">The following enumeration values indicate the file access mode:  <list type="table"><item><term> Value  </term><description> Mode  </description></item><item><term> 1  </term><description><see langword="OpenMode.Input" /></description></item><item><term> 2  </term><description><see langword="OpenMode.Output" /></description></item><item><term> 4  </term><description><see langword="OpenMode.Random" /></description></item><item><term> 8  </term><description><see langword="OpenMode.Append" /></description></item><item><term> 32  </term><description><see langword="OpenMode.Binary" /></description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-236">The following enumeration values indicate the file access mode:  <list type="table"><item><term> Value  </term><description> Mode  </description></item><item><term> 1  </term><description><see langword="OpenMode.Input" /></description></item><item><term> 2  </term><description><see langword="OpenMode.Output" /></description></item><item><term> 4  </term><description><see langword="OpenMode.Random" /></description></item><item><term> 8  </term><description><see langword="OpenMode.Append" /></description></item><item><term> 32  </term><description><see langword="OpenMode.Binary" /></description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-237">此函數會傳回代表使用開啟的檔案模式的列舉型別`FileOpen`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-237">This function returns an enumeration representing the file mode for files opened using the `FileOpen` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-238">這個範例會使用`FileAttr`函數來傳回已開啟之檔案的檔案模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-238">This example uses the `FileAttr` function to return the file mode of an open file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FileClose">
      <MemberSignature Language="C#" Value="public static void FileClose (params int[] FileNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileClose(int32[] FileNumbers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileClose (ParamArray FileNumbers As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileClose(... cli::array &lt;int&gt; ^ FileNumbers);" />
      <MemberSignature Language="F#" Value="static member FileClose : int[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileClose FileNumbers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumbers" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumbers">
          <span data-ttu-id="ac3c2-239">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-239">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-240">Parameter array of 0 or more channels to be closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-240">Parameter array of 0 or more channels to be closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-241">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-241">Concludes input/output (I/O) to a file opened using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-242">
            <see langword="My" /> gives you better productivity and performance in file I/O operations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-242">
              <see langword="My" /> gives you better productivity and performance in file I/O operations.</span>
          </span>
          <span data-ttu-id="ac3c2-243">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-243">See <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-244">`FileClose`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-244">The `FileClose` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-245">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-245">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-246">如需詳細資訊，請參閱 <<c0> [ 如何： StreamReader 從檔案讀取文字](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)，[如何： 將文字寫入檔案以 streamwriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)，和[逐步解說： 中管理檔案和目錄Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-246">For more information, see [How to: Read Text from Files with a StreamReader](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md),[How to: Write Text to Files with a StreamWriter](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md), and [Walkthrough: Manipulating Files and Directories in Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md).</span></span>  
  
 <span data-ttu-id="ac3c2-247">如果您省略`FileNumbers`，開啟的所有作用中檔案`FileOpen`函式會關閉。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-247">If you omit `FileNumbers`, all active files opened by the `FileOpen` function are closed.</span></span>  
  
 <span data-ttu-id="ac3c2-248">當您關閉已開啟的檔案時`Output`或`Append`，最後的緩衝區的輸出會寫入該檔案的作業系統緩衝區。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-248">When you close files that were opened for `Output` or `Append`, the final buffer of output is written to the operating system buffer for that file.</span></span> <span data-ttu-id="ac3c2-249">所有的緩衝區空間的封閉型相關聯檔案釋出。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-249">All buffer space associated with the closed file is released.</span></span>  
  
 <span data-ttu-id="ac3c2-250">當`FileClose`函式執行、 其檔案的檔案的關聯數字結尾。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-250">When the `FileClose` function is executed, the association of a file with its file number ends.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-251">這個範例會使用`FileClose`函式，以關閉 檔案開啟為`Input`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-251">This example uses the `FileClose` function to close a file opened for `Input`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#69](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-252">
            <paramref name="FileNumber" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-252">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Reset" />
      </Docs>
    </Member>
    <Member MemberName="FileCopy">
      <MemberSignature Language="C#" Value="public static void FileCopy (string Source, string Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileCopy(string Source, string Destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileCopy (Source As String, Destination As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileCopy(System::String ^ Source, System::String ^ Destination);" />
      <MemberSignature Language="F#" Value="static member FileCopy : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileCopy (Source, Destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Destination" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="ac3c2-253">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-253">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-254">
            <see langword="String" /> expression that specifies the name of the file to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-254">
              <see langword="String" /> expression that specifies the name of the file to be copied.</span>
          </span>
          <span data-ttu-id="ac3c2-255">
            <c>Source</c> may include the directory or folder, and drive, of the source file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-255">
              <c>Source</c> may include the directory or folder, and drive, of the source file.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="ac3c2-256">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-256">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-257">
            <see langword="String" /> expression that specifies the destination file name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-257">
              <see langword="String" /> expression that specifies the destination file name.</span>
          </span>
          <span data-ttu-id="ac3c2-258">
            <c>Destination</c> may include the directory or folder, and drive, of the destination file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-258">
              <c>Destination</c> may include the directory or folder, and drive, of the destination file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-259">Copies a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-259">Copies a file.</span>
          </span>
          <span data-ttu-id="ac3c2-260">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-260">The <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> gives you better productivity and performance in file I/O operations than <see langword="FileCopy" />.</span>
          </span>
          <span data-ttu-id="ac3c2-261">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-261">See <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> for more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-262">如果您嘗試使用`FileCopy`函式在目前開啟的檔案，則會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-262">If you try to use the `FileCopy` function on a currently open file, an error occurs.</span></span>  
  
 <span data-ttu-id="ac3c2-263">`FileCopy` 需要完全信任才能在本機的磁碟機上運作。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-263">`FileCopy` requires full trust to work on the local drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-264">這個範例會使用`FileCopy`函式複製到另一個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-264">This example uses the `FileCopy` function to copy one file to another.</span></span> <span data-ttu-id="ac3c2-265">基於此範例的詳細資訊，假設`SrcFile`是包含資料的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-265">For purposes of this example, assume that `SrcFile` is a file that contains data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-266">
            <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-266">
              <paramref name="Source" /> or <paramref name="Destination" /> is invalid or not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-267">File is already open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-267">File is already open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-268">File does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-268">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileDateTime">
      <MemberSignature Language="C#" Value="public static DateTime FileDateTime (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime FileDateTime(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileDateTime (PathName As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FileDateTime(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileDateTime : string -&gt; DateTime" Usage="Microsoft.VisualBasic.FileSystem.FileDateTime PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="ac3c2-269">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-269">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-270">
            <see langword="String" /> expression that specifies a file name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-270">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="ac3c2-271">
            <c>PathName</c> may include the directory or folder, and the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-271">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-272">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-272">Returns a <see langword="Date" /> value that indicates the date and time a file was written to.</span>
          </span>
          <span data-ttu-id="ac3c2-273">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-273">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileDateTime" />.</span>
          </span>
          <span data-ttu-id="ac3c2-274">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-274">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-275">
            <see langword="Date" /> value that indicates the date and time a file was created or last modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-275">
              <see langword="Date" /> value that indicates the date and time a file was created or last modified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac3c2-276">這個範例會使用`FileDateTime`建立函式來判斷日期和時間的檔案或上次修改檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-276">This example uses the `FileDateTime` function to determine the date and time a file was created or last modified.</span></span> <span data-ttu-id="ac3c2-277">格式的日期和時間顯示為基礎的系統地區設定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-277">The format of the date and time displayed is based on the locale settings of the system.</span></span>  
  
 [!code-vb[VbVbalrCatRef#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-278">
            <paramref name="PathName" /> is invalid or contains wildcards.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-278">
              <paramref name="PathName" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-279">Target file does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-279">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FileGet">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-280">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-280">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-281">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-281">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-282">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-282">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, bool&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-283">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-283">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-284">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-284">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-285">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-285">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-286">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-286">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-287">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-287">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-288">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-288">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-289">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-289">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-290">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-290">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-291">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-291">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-292">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-292">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-293">讀取的資料`FileGet`通常會寫入的檔案`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-293">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-294">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-294">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-295">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-295">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-296">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-296">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-297">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-297">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-298">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-298">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-299">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-299">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-300">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-300">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-301">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-301">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-302">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-302">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-303">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-303">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-304">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-304">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-305">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-305">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-306">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-306">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-307">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-307">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-308">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-308">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-309">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-309">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-310">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-310">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-311">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-311">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-312">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-312">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-313">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-313">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-314">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-314">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-315">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-315">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-316">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-316">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-317">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-317">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-318">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-318">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-319">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-319">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-320">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-320">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-321">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-321">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-322">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-322">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-323">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-323">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-324">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-324">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-325">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-325">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-326">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-326">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-327">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-327">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-328">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-328">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-329">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-329">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-330">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-330">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-331">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-331">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-332">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-332">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-333">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-333">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-334">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-334">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-335">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-335">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-336">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-336">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-337">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-337">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, unsigned int8&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-338">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-338">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-339">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-339">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-340">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-340">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-341">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-341">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-342">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-342">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-343">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-343">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-344">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-344">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-345">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-345">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-346">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-346">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-347">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-347">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-348">讀取的資料`FileGet`通常會寫入的檔案`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-348">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-349">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-349">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-350">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-350">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-351">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-351">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-352">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-352">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-353">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-353">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-354">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-354">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-355">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-355">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-356">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-356">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-357">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-357">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-358">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-358">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-359">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-359">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-360">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-360">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-361">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-361">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-362">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-362">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-363">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-363">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-364">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-364">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-365">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-365">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-366">如果不使用描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-366">If the descriptor is not used.</span></span> <span data-ttu-id="ac3c2-367">則的大小和陣列的界限傳遞到`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-367">Then the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-368">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-368">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-369">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-369">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-370">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-370">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-371">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-371">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-372">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-372">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-373">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-373">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-374">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-374">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-375">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-375">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-376">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-376">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-377">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-377">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-378">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-378">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-379">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-379">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-380">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-380">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-381">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-381">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-382">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-382">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-383">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-383">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-384">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-384">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-385">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-385">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-386">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-386">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-387">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-387">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-388">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-388">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-389">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-389">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-390">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-390">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-391">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-391">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-392">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-392">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-393">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-393">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, char&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-394">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-394">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-395">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-395">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-396">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-396">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-397">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-397">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-398">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-398">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-399">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-399">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-400">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-400">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-401">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-401">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-402">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-402">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-403">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-403">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-404">讀取的資料`FileGet`通常會寫入的檔案`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-404">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-405">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-405">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-406">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-406">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-407">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-407">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-408">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-408">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-409">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-409">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-410">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-410">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-411">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-411">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-412">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-412">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-413">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-413">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-414">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-414">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-415">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-415">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-416">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-416">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-417">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-417">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-418">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-418">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-419">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-419">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-420">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-420">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-421">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-421">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-422">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-422">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-423">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-423">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-424">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-424">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-425">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-425">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-426">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-426">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-427">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-427">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-428">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-428">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-429">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-429">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-430">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-430">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-431">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-431">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-432">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-432">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-433">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-433">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-434">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-434">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-435">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-435">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-436">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-436">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-437">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-437">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-438">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-438">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-439">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-439">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-440">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-440">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-441">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-441">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-442">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-442">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-443">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-443">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-444">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-444">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-445">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-445">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-446">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-446">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-447">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-447">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-448">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-448">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.DateTime&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-449">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-449">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-450">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-450">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-451">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-451">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-452">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-452">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-453">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-453">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-454">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-454">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-455">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-455">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-456">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-456">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-457">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-457">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-458">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-458">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-459">讀取的資料`FileGet`通常會寫入的檔案`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-459">Data read with `FileGet` is usually written to a file with `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-460">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-460">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-461">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-461">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-462">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-462">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-463">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-463">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-464">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-464">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-465">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-465">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-466">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-466">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function,`FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-467">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-467">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-468">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-468">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-469">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-469">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-470">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-470">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-471">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-471">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-472">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-472">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-473">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-473">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-474">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-474">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-475">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-475">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-476">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-476">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-477">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-477">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-478">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-478">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-479">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-479">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-480">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-480">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-481">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-481">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-482">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-482">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-483">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-483">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-484">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-484">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-485">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-485">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-486">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-486">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-487">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-487">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-488">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-488">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-489">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-489">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-490">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-490">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-491">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-491">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-492">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-492">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-493">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-493">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-494">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-494">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-495">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-495">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-496">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-496">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-497">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-497">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-498">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-498">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-499">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-499">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-500">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-500">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-501">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-501">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-502">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-502">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-503">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-503">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, valuetype System.Decimal&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-504">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-504">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-505">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-505">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-506">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-506">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-507">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-507">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-508">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-508">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-509">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-509">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-510">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-510">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-511">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-511">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-512">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-512">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-513">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-513">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-514">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-514">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-515">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-515">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-516">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-516">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-517">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-517">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-518">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-518">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-519">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-519">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-520">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-520">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-521">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-521">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-522">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-522">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-523">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-523">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-524">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-524">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-525">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-525">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-526">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-526">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-527">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-527">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-528">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-528">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-529">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-529">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-530">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-530">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-531">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-531">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-532">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-532">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-533">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-533">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-534">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-534">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-535">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-535">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-536">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-536">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-537">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-537">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-538">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-538">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-539">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-539">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-540">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-540">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-541">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-541">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-542">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-542">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-543">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-543">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-544">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-544">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-545">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-545">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-546">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-546">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-547">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-547">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-548">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-548">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-549">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-549">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-550">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-550">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-551">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-551">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-552">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-552">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-553">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-553">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-554">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-554">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-555">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-555">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-556">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-556">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-557">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-557">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-558">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-558">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-559">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-559">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-560">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-560">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-561">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-561">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-562">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-562">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-563">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-563">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-564">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-564">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-565">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-565">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-566">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-566">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-567">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-567">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-568">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-568">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-569">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-569">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-570">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-570">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-571">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-571">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-572">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-572">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-573">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-573">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-574">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-574">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-575">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-575">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-576">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-576">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-577">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-577">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-578">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-578">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-579">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-579">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-580">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-580">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-581">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-581">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-582">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-582">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-583">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-583">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-584">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-584">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-585">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-585">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-586">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-586">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-587">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-587">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-588">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-588">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-589">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-589">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-590">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-590">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-591">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-591">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-592">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-592">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-593">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-593">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-594">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-594">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-595">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-595">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-596">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-596">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-597">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-597">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-598">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-598">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-599">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-599">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-600">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-600">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-601">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-601">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-602">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-602">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-603">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-603">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-604">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-604">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-605">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-605">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-606">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-606">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-607">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-607">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-608">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-608">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-609">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-609">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-610">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-610">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-611">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-611">Reading from a file by using the`FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-612">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-612">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-613">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-613">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int16&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-614">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-614">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-615">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-615">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-616">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-616">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-617">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-617">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-618">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-618">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-619">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-619">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-620">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-620">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-621">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-621">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-622">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-622">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-623">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-623">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-624">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-624">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-625">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-625">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-626">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-626">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-627">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-627">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-628">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-628">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-629">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-629">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-630">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-630">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-631">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-631">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-632">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-632">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-633">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-633">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-634">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-634">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-635">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-635">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-636">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-636">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-637">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-637">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-638">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-638">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-639">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-639">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-640">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-640">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-641">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-641">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-642">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-642">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-643">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-643">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-644">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-644">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-645">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-645">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-646">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-646">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-647">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-647">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-648">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-648">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-649">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-649">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-650">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-650">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-651">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-651">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-652">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-652">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-653">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-653">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-654">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-654">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-655">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-655">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-656">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-656">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-657">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-657">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-658">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-658">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-659">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-659">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-660">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-660">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-661">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-661">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-662">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-662">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-663">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-663">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-664">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-664">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-665">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-665">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-666">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-666">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-667">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-667">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-668">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-668">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-669">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-669">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-670">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-670">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-671">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-671">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-672">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-672">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-673">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-673">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-674">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-674">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-675">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-675">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-676">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-676">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-677">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-677">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-678">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-678">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-679">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-679">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-680">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-680">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-681">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-681">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-682">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-682">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-683">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-683">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-684">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-684">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-685">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-685">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-686">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-686">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-687">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-687">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-688">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-688">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-689">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-689">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-690">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-690">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-691">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-691">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-692">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-692">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-693">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-693">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-694">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-694">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-695">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-695">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-696">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-696">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-697">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-697">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-698">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-698">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-699">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-699">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-700">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-700">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-701">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-701">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-702">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-702">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-703">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-703">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-704">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-704">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-705">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-705">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-706">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-706">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-707">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-707">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-708">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-708">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-709">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-709">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-710">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-710">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-711">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-711">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-712">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-712">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-713">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-713">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-714">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-714">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-715">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-715">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-716">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-716">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-717">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-717">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-718">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-718">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-719">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-719">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-720">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-720">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-721">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-721">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-722">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-722">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-723">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-723">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, int64&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-724">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-724">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-725">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-725">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-726">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-726">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-727">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-727">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-728">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-728">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-729">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-729">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-730">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-730">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-731">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-731">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-732">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-732">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-733">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-733">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-734">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-734">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-735">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-735">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-736">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-736">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-737">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-737">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-738">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-738">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-739">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-739">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-740">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-740">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-741">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-741">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-742">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-742">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-743">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-743">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-744">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-744">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-745">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-745">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-746">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-746">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-747">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-747">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-748">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-748">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-749">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-749">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-750">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-750">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-751">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-751">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-752">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-752">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-753">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-753">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-754">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-754">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-755">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-755">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-756">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-756">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-757">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-757">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-758">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-758">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-759">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-759">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-760">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-760">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-761">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-761">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-762">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-762">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-763">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-763">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-764">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-764">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-765">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-765">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-766">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-766">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-767">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-767">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-768">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-768">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-769">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-769">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-770">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-770">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-771">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-771">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-772">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-772">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-773">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-773">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-774">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-774">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-775">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-775">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-776">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-776">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-777">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-777">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-778">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-778">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, float32&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-779">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-779">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-780">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-780">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-781">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-781">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-782">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-782">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-783">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-783">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-784">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-784">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-785">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-785">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-786">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-786">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-787">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-787">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-788">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-788">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-789">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-789">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-790">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-790">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-791">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-791">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-792">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-792">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-793">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-793">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-794">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-794">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-795">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-795">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-796">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-796">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-797">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-797">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-798">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-798">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-799">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-799">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-800">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-800">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-801">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-801">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-802">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-802">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-803">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-803">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-804">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-804">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-805">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-805">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-806">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-806">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-807">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-807">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-808">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-808">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-809">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-809">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-810">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-810">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-811">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-811">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-812">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-812">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-813">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-813">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-814">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-814">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-815">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-815">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-816">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-816">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-817">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-817">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-818">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-818">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-819">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-819">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-820">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-820">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-821">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-821">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-822">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-822">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-823">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-823">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-824">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-824">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-825">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-825">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-826">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-826">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-827">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-827">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-828">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-828">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-829">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-829">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-830">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-830">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-831">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-831">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-832">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-832">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-833">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-833">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.ValueType&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-834">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-834">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-835">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-835">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-836">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-836">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-837">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-837">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-838">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-838">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-839">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-839">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-840">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-840">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-841">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-841">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-842">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-842">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-843">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-843">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-844">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-844">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-845">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-845">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-846">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-846">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-847">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-847">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-848">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-848">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-849">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-849">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-850">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-850">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-851">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-851">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-852">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-852">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-853">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-853">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-854">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-854">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-855">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-855">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-856">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-856">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-857">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-857">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-858">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-858">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-859">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-859">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-860">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-860">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-861">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-861">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-862">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-862">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-863">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-863">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-864">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-864">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-865">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-865">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-866">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-866">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-867">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-867">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-868">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-868">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-869">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-869">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-870">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-870">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-871">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-871">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-872">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-872">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-873">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-873">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-874">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-874">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-875">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-875">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-876">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-876">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-877">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-877">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-878">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-878">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-879">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-879">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-880">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-880">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-881">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-881">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-882">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-882">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-883">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-883">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-884">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-884">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-885">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-885">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-886">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-886">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-887">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-887">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-888">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-888">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, string&amp; Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-889">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-889">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-890">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-890">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-891">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-891">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-892">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-892">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-893">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-893">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-894">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-894">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="ac3c2-895">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-895">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-896">Applies only when writing a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-896">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="ac3c2-897">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-897">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="ac3c2-898">The default is <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-898">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-899">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-899">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-900">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-900">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-901">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-901">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-902">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-902">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-903">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-903">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-904">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-904">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-905">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-905">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-906">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-906">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-907">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-907">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-908">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-908">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-909">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-909">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-910">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-910">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-911">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-911">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-912">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-912">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-913">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-913">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-914">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-914">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-915">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-915">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-916">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-916">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-917">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-917">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-918">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-918">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-919">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-919">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-920">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-920">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-921">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-921">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-922">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-922">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-923">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-923">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-924">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-924">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-925">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-925">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-926">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-926">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-927">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-927">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-928">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-928">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-929">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-929">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-930">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-930">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-931">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-931">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-932">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-932">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-933">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-933">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-934">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-934">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-935">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-935">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-936">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-936">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-937">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-937">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-938">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-938">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-939">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-939">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-940">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-940">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-941">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-941">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-942">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-942">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-943">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-943">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-944">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-944">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-945">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-945">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-946">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-946">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-947">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-947">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGet">
      <MemberSignature Language="C#" Value="public static void FileGet (int FileNumber, ref Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGet(int32 FileNumber, class System.Array&amp; Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGet (FileNumber As Integer, ByRef Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FileGet : int *  * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGet (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-948">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-948">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-949">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-949">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-950">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-950">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-951">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-951">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-952">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-952">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-953">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-953">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="ac3c2-954">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-954">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-955">Applies only when writing an array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-955">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="ac3c2-956">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-956">Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="ac3c2-957">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-957">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-958">Applies only when writing a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-958">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="ac3c2-959">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-959">Specifies whether to write a two-byte descriptor for the string that describes the length.</span>
          </span>
          <span data-ttu-id="ac3c2-960">The default is <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-960">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-961">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-961">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-962">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-962">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGet" />.</span>
          </span>
          <span data-ttu-id="ac3c2-963">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-963">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-964">`FileGet` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-964">`FileGet` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-965">讀取的資料`FileGet`通常會先寫入至檔案使用`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-965">Data read with `FileGet` is usually written to a file by using `FilePut`.</span></span>  
  
 <span data-ttu-id="ac3c2-966">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-966">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-967">如果您省略`RecordNumber`下, 一步 的資料錄或最後一個位元組`FileGet`或`FilePut`函式 (或最後一個指向`Seek`函式) 會讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-967">If you omit `RecordNumber`, the next record or byte following the last `FileGet` or `FilePut` function (or pointed to by the last `Seek` function) is read.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-968">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-968">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-969">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-969">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-970">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-970">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-971">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-971">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-972">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGet`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-972">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGet` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-973">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-973">The space between the end of one record and the starting of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-974">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-974">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-975">根據預設，在讀入的變數是一個字串，如果`FileGet`讀取雙位元組描述元，其中包含字串的長度，並接著會讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-975">By default, if the variable being read into is a string, `FileGet` reads a two-byte descriptor that contains the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-976">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-976">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-977">Visual Basic 6.0 和更早版本支援固定長度的字串;置入檔案時，不寫入的長度描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-977">Visual Basic 6.0 and earlier versions support fixed-length strings; when put to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-978">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-978">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-979">如果正在讀入的變數陣列，您可以選擇是否要讀取的大小和陣列的維度的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-979">If the variable being read into is an array, you can choose whether to read a descriptor for the size and dimension of the array.</span></span> <span data-ttu-id="ac3c2-980">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-980">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-981">當讀取陣列，您一定要相符寫入陣列的方式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-981">When reading the array, you have to match the way the array was written.</span></span> <span data-ttu-id="ac3c2-982">如果它具有描述元所撰寫，您必須讀取的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-982">If it was written with the descriptor, you have to read the descriptor.</span></span> <span data-ttu-id="ac3c2-983">如果未使用的描述元，大小和陣列界限的傳入`FileGet`判斷要讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-983">If the descriptor is not used, the size and bounds of the array passed into `FileGet` determine what to read.</span></span>  
  
     <span data-ttu-id="ac3c2-984">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-984">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-985">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-985">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-986">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-986">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-987">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-987">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#21)]  
  
     <span data-ttu-id="ac3c2-988">218 個位元組的分散，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-988">The 218 bytes are distributed as follows:</span></span>  
  
    -   <span data-ttu-id="ac3c2-989">描述元的 18 個位元組: (2 + 8 \* 2)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-989">18 bytes for the descriptor: (2 + 8 \* 2)</span></span>  
  
    -   <span data-ttu-id="ac3c2-990">200 個位元組的資料: (5 * 10 * 4)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-990">200 bytes for the data: (5 * 10 * 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-991">如果被讀入到變數是任何其他類型的變數 （不可變長度字串或物件）`FileGet`讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-991">If the variable being read into is any other type of variable (not a variable-length string or an object), `FileGet` reads only the variable data.</span></span> <span data-ttu-id="ac3c2-992">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所讀取的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-992">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-993">`FileGet` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-993">`FileGet` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-994">在磁碟上，動態陣列中的使用者定義型別 (以`FilePut`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-994">On disk, a dynamic array in a user-defined type (written with `FilePut`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-995">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-995">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements.</span></span> <span data-ttu-id="ac3c2-996">這包括任何陣列和其描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-996">This includes any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-997">`VBFixedString`屬性可以套用至字串欄位中指出的大小字串寫入時的結構至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-997">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of a string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-998">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-998">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-999">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-999">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1000">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1000">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1001">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1001">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1002">`FileGet` 從磁碟讀取所有的變數時，也將連續;也就不含之間的填補的記錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1002">`FileGet` reads all variables from disk contiguously; that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1003">在結構中，陣列以外的所有陣列`FileGet`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1003">For any array other than an array in a structure, `FileGet` reads only the data.</span></span> <span data-ttu-id="ac3c2-1004">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1004">No descriptor is read.</span></span>  
  
-   <span data-ttu-id="ac3c2-1005">`FileGet` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1005">`FileGet` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1006">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1006">The number of bytes read equals the number of characters already in the string.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ac3c2-1007">使用 從檔案讀取`FileGet`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1007">Reading from a file by using the `FileGet` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1008">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1008">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1009">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1009">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FileGetObject">
      <MemberSignature Language="C#" Value="public static void FileGetObject (int FileNumber, ref object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileGetObject(int32 FileNumber, object&amp; Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileGetObject (FileNumber As Integer, ByRef Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FileGetObject : int *  * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileGetObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1010">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1010">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1011">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1011">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1012">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1012">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1013">Valid variable name into which data is read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1013">Valid variable name into which data is read.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1014">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1014">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1015">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1015">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which reading starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1016">Reads data from an open disk file into a variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1016">Reads data from an open disk file into a variable.</span>
          </span>
          <span data-ttu-id="ac3c2-1017">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1017">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileGetObject" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1018">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1018">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1019">`FileGetObject`而不是使用函式`FileGet`若要避免模稜兩可在編譯時期，如果型別`Object`傳回而不是另一個類型，例如`Integer`， `Long`， `Short`，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1019">The `FileGetObject` function is used instead of `FileGet` to avoid ambiguities at compile time if type `Object` is returned instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="ac3c2-1020">如果您想要寫出`Variant`型別，`FileGetObject`需要。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1020">If you intend to write out the `Variant` type, `FileGetObject` is required.</span></span> <span data-ttu-id="ac3c2-1021">有疑問，如果您使用物件來作為第二個參數，一律建議您改用`FilePutObject`和`FileGetObject`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1021">When in doubt, if you are using an object for the second parameter, it is always suggested that you use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="ac3c2-1022">`FileGetObject` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1022">`FileGetObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1023">讀取的資料`FileGetObject`通常會使用寫入`FilePutObject`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1023">Data read with `FileGetObject` is usually written with `FilePutObject`.</span></span>  
  
 <span data-ttu-id="ac3c2-1024">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1024">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1025">如果您省略`RecordNumber`，`FileGetObject`讀取最後一個之後的資料錄或位元組`FileGetObject`或是`FilePutObject`函式 (或最後一個指向`Seek`函式)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1025">If you omit `RecordNumber`, `FileGetObject` reads the record or byte after the last `FileGetObject` or `FilePutObject` function (or pointed to by the last `Seek` function).</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1026">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1026">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1027">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1027">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1028">正在讀取資料的長度是否在指定的長度小於`RecordLength`子句`FileOpen`函式，`FileGetObject`讀取後續的記錄資料錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1028">If the length of the data being read is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FileGetObject` reads subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1029">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開頭之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1029">The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1030">因為填補資料的數量無法精確地判斷，所以最好有符合所讀取的資料長度的資料錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1030">Because the amount of padding data cannot be precisely determined, it is a good idea to have the record length match the length of the data being read.</span></span>  
  
-   <span data-ttu-id="ac3c2-1031">正在讀取到變數是否為字串，預設`FileGetObject`讀取雙位元組描述元包含字串的長度，然後再讀取變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1031">If the variable being read into is a string, by default `FileGetObject` reads a two-byte descriptor containing the string length and then reads the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1032">因此，所指定的記錄長度`RecordLength`子句`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1032">Therefore, the record length specified by the `RecordLength` clause of the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1033">Visual Basic 6.0 和更早版本支援固定長度字串和讀取檔案時，長度的描述項不會寫入。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1033">Visual Basic 6.0 and earlier versions support fixed-length strings and when read to a file, the length descriptor is not written.</span></span> <span data-ttu-id="ac3c2-1034">如果您想要讀取描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1034">If you want to read a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1035">如果正在讀入的變數陣列，則所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1035">If the variable being read into is an array, then the record length specified by the `RecordLength` parameter in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1036">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1036">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1037">其長度等於 2，再加上 8 倍的維度數目： 2 + 8 \* NumberOfDimensions。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1037">Its length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span>  
  
     <span data-ttu-id="ac3c2-1038">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1038">For example, the following array declaration requires 218 bytes when the array is written to disk:</span></span>  
  
     [!code-vb[VbVbalrCatRef#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#27)]  
  
     <span data-ttu-id="ac3c2-1039">218 個位元組會分散，如下所示： 18 位元組描述元 (2 + 8 \* 2)，以及 100 個位元組 (5 \* 10 \* 4) 的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1039">The 218 bytes are distributed as follows: 18 bytes for the descriptor (2 + 8 \* 2), and 100 bytes for the data (5 \* 10 \* 4).</span></span>  
  
-   <span data-ttu-id="ac3c2-1040">`FileGetObject` 如同讀取每個個別，只不過是沒有任何項目之間的填補，讀取結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1040">`FileGetObject` reads elements of structures as if each were being read individually, except that there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1041">在磁碟上，動態陣列中的使用者定義型別 (以`FilePutObject`) 加上其長度會等於 2 加上 8 倍的維度數目的描述元： 2 + 8 \* NumberOfDimensions。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1041">On disk, a dynamic array in a user-defined type (written with `FilePutObject`) is prefixed by a descriptor whose length equals 2 plus 8 times the number of dimensions: 2 + 8 \* NumberOfDimensions.</span></span> <span data-ttu-id="ac3c2-1042">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於讀取個別的項目，包括任何陣列和其描述項所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1042">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to read the individual elements, including any arrays and their descriptors.</span></span> <span data-ttu-id="ac3c2-1043"><xref:Microsoft.VisualBasic.VBFixedStringAttribute>類別，可指出的大小字串寫入時的結構中的字串欄位套用至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1043">The <xref:Microsoft.VisualBasic.VBFixedStringAttribute> class can be applied to string fields in the structures to indicate the size of string when written to disk.</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1044">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1044">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1045">在開啟的檔案`Binary`模式中，所有`Random`套用規則，但有下列例外：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1045">For files opened in `Binary` mode, all of the `Random` rules apply, with these exceptions:</span></span>  
  
-   <span data-ttu-id="ac3c2-1046">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1046">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1047">`FileGetObject` 所有連續讀取變數，從磁碟，也就是記錄之間的不帶填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1047">`FileGetObject` reads all variables from disk contiguously, that is, with no padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1048">在結構中，陣列以外的所有陣列`FileGetObject`讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1048">For any array other than an array in a structure, `FileGetObject` reads only the data.</span></span> <span data-ttu-id="ac3c2-1049">不讀取任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1049">No descriptor is read.</span></span>  
  
 <span data-ttu-id="ac3c2-1050">`FileGetObject` 讀取可變長度的字串不是結構，而不需要雙位元組長度的描述項的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1050">`FileGetObject` reads variable-length strings that are not elements of structures without expecting the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1051">讀取的位元組數目等於已經在字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1051">The number of bytes read equals the number of characters already in the string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-1052">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1052">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-1053">例如，名為 Form1.vb 檔案可能不是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1053">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1054">下列範例讀入測試檔案中的記錄，然後擷取它。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1054">The following example reads a record into a test file and then retrieves it.</span></span>  
  
 [!code-vb[VbVbalrCatRef#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
      </Docs>
    </Member>
    <Member MemberName="FileLen">
      <MemberSignature Language="C#" Value="public static long FileLen (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 FileLen(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileLen (PathName As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long FileLen(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member FileLen : string -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.FileLen PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="ac3c2-1055">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1055">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1056">
            <see langword="String" /> expression that specifies a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1056">
              <see langword="String" /> expression that specifies a file.</span>
          </span>
          <span data-ttu-id="ac3c2-1057">
            <c>PathName</c> may include the directory or folder, and the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1057">
              <c>PathName</c> may include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1058">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1058">Returns a <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
          <span data-ttu-id="ac3c2-1059">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1059">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileLen" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1060">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1060">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-1061">
            <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1061">
              <see langword="Long" /> value that specifies the length of a file in bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1062">如果指定的檔案時，開啟`FileLen`函式呼叫，傳回的值代表檔案的大小，在它已開啟的時間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1062">If the specified file is open when the `FileLen` function is called, the value returned represents the size of the file at the time it was opened.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-1063">若要取得目前已開啟之檔案的長度，請使用`LOF`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1063">To obtain the current length of an open file, use the `LOF` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1064">這個範例會使用`FileLen`函數來傳回檔案的長度，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1064">This example uses the `FileLen` function to return the length of a file in bytes.</span></span> <span data-ttu-id="ac3c2-1065">基於此範例的詳細資訊，假設`TestFile`是包含某些資料的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1065">For purposes of this example, assume that `TestFile` is a file that contains some data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-1066">File does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1066">File does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="FileOpen">
      <MemberSignature Language="C#" Value="public static void FileOpen (int FileNumber, string FileName, Microsoft.VisualBasic.OpenMode Mode, Microsoft.VisualBasic.OpenAccess Access = Microsoft.VisualBasic.OpenAccess.Default, Microsoft.VisualBasic.OpenShare Share = Microsoft.VisualBasic.OpenShare.Default, int RecordLength = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileOpen(int32 FileNumber, string FileName, valuetype Microsoft.VisualBasic.OpenMode Mode, valuetype Microsoft.VisualBasic.OpenAccess Access, valuetype Microsoft.VisualBasic.OpenShare Share, int32 RecordLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileOpen (FileNumber As Integer, FileName As String, Mode As OpenMode, Optional Access As OpenAccess = Microsoft.VisualBasic.OpenAccess.Default, Optional Share As OpenShare = Microsoft.VisualBasic.OpenShare.Default, Optional RecordLength As Integer = -1)" />
      <MemberSignature Language="F#" Value="static member FileOpen : int * string * Microsoft.VisualBasic.OpenMode * Microsoft.VisualBasic.OpenAccess * Microsoft.VisualBasic.OpenShare * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileOpen (FileNumber, FileName, Mode, Access, Share, RecordLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.VisualBasic.OpenMode" />
        <Parameter Name="Access" Type="Microsoft.VisualBasic.OpenAccess" />
        <Parameter Name="Share" Type="Microsoft.VisualBasic.OpenShare" />
        <Parameter Name="RecordLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1067">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1067">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1068">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1068">Any valid file number.</span>
          </span>
          <span data-ttu-id="ac3c2-1069">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1069">Use the <see langword="FreeFile" /> function to obtain the next available file number.</span>
          </span>
        </param>
        <param name="FileName">
          <span data-ttu-id="ac3c2-1070">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1070">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1071">
            <see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1071">
              <see langword="String" /> expression that specifies a file name—may include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Mode">
          <span data-ttu-id="ac3c2-1072">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1072">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1073">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1073">Enumeration specifying the file mode: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, or <see langword="Random" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1074">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1074">For more information, see <see cref="T:Microsoft.VisualBasic.OpenMode" /> .</span>
          </span>
        </param>
        <param name="Access">
          <span data-ttu-id="ac3c2-1075">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1075">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1076">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1076">Enumeration specifying the operations permitted on the open file: <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1077">Defaults to <see langword="ReadWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1077">Defaults to <see langword="ReadWrite" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1078">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1078">For more information, see <see cref="T:Microsoft.VisualBasic.OpenAccess" /> .</span>
          </span>
        </param>
        <param name="Share">
          <span data-ttu-id="ac3c2-1079">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1079">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1080">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1080">Enumeration specifying the operations not permitted on the open file by other processes: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, and <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1081">Defaults to <see langword="Lock Read Write" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1081">Defaults to <see langword="Lock Read Write" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1082">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1082">For more information, see <see cref="T:Microsoft.VisualBasic.OpenShare" /> .</span>
          </span>
        </param>
        <param name="RecordLength">
          <span data-ttu-id="ac3c2-1083">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1083">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1084">Number less than or equal to 32,767 (bytes).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1084">Number less than or equal to 32,767 (bytes).</span>
          </span>
          <span data-ttu-id="ac3c2-1085">For files opened for random access, this value is the record length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1085">For files opened for random access, this value is the record length.</span>
          </span>
          <span data-ttu-id="ac3c2-1086">For sequential files, this value is the number of characters buffered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1086">For sequential files, this value is the number of characters buffered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1087">Opens a file for input or output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1087">Opens a file for input or output.</span>
          </span>
          <span data-ttu-id="ac3c2-1088">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1088">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileOpen" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1089">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1089">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1090">`FileOpen`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1090">The `FileOpen` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-1091">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1091">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-1092">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1092">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-1093">您必須開啟檔案，才能在其上執行任何 I/O 作業。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1093">You must open a file before any I/O operation can be performed on it.</span></span> <span data-ttu-id="ac3c2-1094">`FileOpen` 會針對 I/O 配置緩衝區至檔案，並判斷權限與緩衝區使用的模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1094">`FileOpen` allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-1095">寫入至檔案時，應用程式可能要建立檔案，如果嘗試寫入的檔案不存在。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1095">When writing to a file, an application may have to create a file, if the file to which it is trying to write does not exist.</span></span> <span data-ttu-id="ac3c2-1096">若要這樣做，它會需要權限的 建立檔案的目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1096">To do so, it needs permission for the directory in which the file is to be created.</span></span> <span data-ttu-id="ac3c2-1097">不過，如果指定的檔案`FileName`存在，應用程式需求`Write`只對檔案本身的權限。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1097">However, if the file specified by `FileName` does exist, the application needs `Write` permission only to the file itself.</span></span> <span data-ttu-id="ac3c2-1098">盡量，以協助改善安全性、 部署和授與期間建立檔案的任一處`Write`該檔案的權限唯一的而不是整個目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1098">Wherever possible, to help improve security, create the file during deployment and grant `Write` permission to that file only, instead of to the whole directory.</span></span> <span data-ttu-id="ac3c2-1099">若要改善安全性，請將資料寫入使用者目錄，而不是目錄的根目錄或 Program Files 目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1099">To help improve security, write data to user directories instead of to the root directory or the Program Files directory.</span></span>  
  
 <span data-ttu-id="ac3c2-1100">若要開啟的通道可使用`FreeFile()`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1100">The channel to open can be found by using the `FreeFile()` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-1101">`FileOpen`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別，這可能會影響在部分信任情況下執行。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1101">The `FileOpen` function requires `Read` access from the `FileIOPermissionAccess` enumeration, which may affect its execution in partial trust situations.</span></span> <span data-ttu-id="ac3c2-1102">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1102">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1103">此範例說明的各種用法`FileOpen`函式可讓輸入與輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1103">This example illustrates various uses of the `FileOpen` function to enable input and output to a file.</span></span>  
  
 <span data-ttu-id="ac3c2-1104">下列程式碼會開啟檔案`TestFile`在`Input`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1104">The following code opens the file `TestFile` in `Input` mode.</span></span>  
  
 [!code-vb[VbVbalrCatRef#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#5)]  
  
 <span data-ttu-id="ac3c2-1105">此範例會開啟中的檔案`Binary`模式只允許寫入作業。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1105">This example opens the file in `Binary` mode for writing operations only.</span></span>  
  
 [!code-vb[VbVbalrCatRef#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#6)]  
  
 <span data-ttu-id="ac3c2-1106">下列範例會開啟中的檔案`Random`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1106">The following example opens the file in `Random` mode.</span></span> <span data-ttu-id="ac3c2-1107">檔案包含的結構記錄`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1107">The file contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#7)]  
  
 <span data-ttu-id="ac3c2-1108">此程式碼範例會開啟中的檔案`Output`模式; 任何程序可以讀取或寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1108">This code example opens the file in `Output` mode; any process can read or write to file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ac3c2-1109">此程式碼範例會開啟中的檔案`Binary`模式進行讀取，其他處理序無法讀取檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1109">This code example opens the file in `Binary` mode for reading; other processes cannot read file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1110">Record length is negative (and not equal to -1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1110">Record length is negative (and not equal to -1).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1111">
            <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1111">
              <paramref name="FileName" /> is already open, or <paramref name="FileName" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FilePut">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-1112">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1112">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1113">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1113">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1114">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1114">F For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, bool Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, bool Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Boolean, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * bool * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1115">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1115">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1116">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1116">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1117">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1117">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1118">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1118">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1119">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1119">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1120">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1120">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1121">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1121">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1122">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1122">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1123">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1123">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1124">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1124">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1125">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1125">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1126">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1126">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1127">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1127">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1128">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1128">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1129">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1129">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1130">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1130">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1131">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1131">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1132">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1132">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1133">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1133">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1134">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1134">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1135">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1135">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1136">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1136">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1137">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1137">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1138">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1138">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1139">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1139">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1140">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1140">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1141">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1141">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1142">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1142">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1143">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1143">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1144">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1144">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1145">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1145">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1146">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1146">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1147">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1147">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1148">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1148">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1149">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1149">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1150">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1150">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1151">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1151">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1152">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1152">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1153">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1153">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1154">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1154">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1155">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1155">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1156">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1156">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1157">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1157">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1158">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1158">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1159">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1159">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1160">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1160">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1161">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1161">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1162">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1162">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1163">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1163">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1164">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1164">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1165">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1165">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1166">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1166">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1167">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1167">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1168">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1168">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1169">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1169">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1170">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1170">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1171">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1171">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1172">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1172">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1173">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1173">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, byte Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, unsigned int8 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Byte, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * byte * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1174">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1174">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1175">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1175">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1176">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1176">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1177">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1177">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1178">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1178">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1179">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1179">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1180">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1180">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1181">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1181">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1182">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1182">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1183">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1183">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1184">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1184">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1185">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1185">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1186">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1186">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1187">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1187">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1188">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1188">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1189">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1189">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1190">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1190">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1191">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1191">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1192">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1192">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1193">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1193">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1194">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1194">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1195">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1195">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1196">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1196">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1197">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1197">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1198">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1198">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1199">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1199">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1200">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1200">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1201">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1201">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1202">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1202">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1203">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1203">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1204">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1204">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1205">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1205">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1206">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1206">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1207">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1207">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1208">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1208">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1209">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1209">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1210">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1210">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1211">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1211">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1212">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1212">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1213">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1213">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1214">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1214">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1215">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1215">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1216">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1216">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1217">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1217">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1218">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1218">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1219">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1219">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1220">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1220">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1221">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1221">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1222">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1222">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1223">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1223">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1224">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1224">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1225">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1225">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1226">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1226">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1227">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1227">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1228">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1228">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1229">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1229">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1230">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1230">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1231">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1231">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1232">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1232">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, char Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, char Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Char, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * char * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1233">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1233">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1234">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1234">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1235">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1235">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1236">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1236">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1237">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1237">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1238">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1238">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1239">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1239">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1240">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1240">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1241">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1241">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1242">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1242">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1243">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1243">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1244">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1244">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1245">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1245">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1246">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1246">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1247">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1247">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1248">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1248">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1249">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1249">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1250">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1250">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1251">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1251">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1252">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1252">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1253">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1253">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1254">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1254">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1255">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1255">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1256">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1256">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1257">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1257">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1258">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1258">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1259">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1259">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1260">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1260">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1261">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1261">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1262">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1262">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1263">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1263">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1264">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1264">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1265">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1265">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1266">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1266">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1267">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1267">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1268">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1268">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1269">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1269">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1270">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1270">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1271">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1271">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1272">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1272">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1273">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1273">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1274">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1274">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1275">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1275">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1276">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1276">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1277">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1277">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1278">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1278">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1279">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1279">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1280">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1280">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1281">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1281">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1282">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1282">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1283">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1283">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1284">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1284">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1285">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1285">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1286">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1286">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1287">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1287">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1288">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1288">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1289">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1289">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1290">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1290">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1291">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1291">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, DateTime Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.DateTime Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As DateTime, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * DateTime * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1292">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1292">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1293">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1293">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1294">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1294">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1295">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1295">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1296">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1296">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1297">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1297">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1298">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1298">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1299">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1299">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1300">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1300">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1301">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1301">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1302">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1302">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1303">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1303">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1304">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1304">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1305">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1305">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1306">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1306">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1307">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1307">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1308">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1308">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1309">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1309">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1310">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1310">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1311">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1311">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1312">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1312">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1313">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1313">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1314">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1314">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1315">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1315">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1316">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1316">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1317">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1317">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1318">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1318">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1319">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1319">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1320">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1320">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1321">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1321">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1322">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1322">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1323">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1323">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1324">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1324">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1325">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1325">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1326">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1326">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1327">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1327">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1328">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1328">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1329">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1329">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1330">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1330">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1331">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1331">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1332">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1332">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1333">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1333">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1334">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1334">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1335">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1335">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1336">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1336">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1337">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1337">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1338">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1338">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1339">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1339">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1340">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1340">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1341">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1341">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1342">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1342">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1343">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1343">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1344">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1344">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1345">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1345">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1346">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1346">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1347">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1347">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1348">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1348">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1349">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1349">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1350">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1350">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, decimal Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, valuetype System.Decimal Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Decimal, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * decimal * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1351">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1351">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1352">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1352">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1353">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1353">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1354">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1354">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1355">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1355">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1356">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1356">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1357">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1357">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1358">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1358">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1359">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1359">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1360">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1360">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1361">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1361">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1362">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1362">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1363">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1363">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1364">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1364">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1365">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1365">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1366">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1366">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1367">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1367">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1368">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1368">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1369">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1369">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1370">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1370">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1371">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1371">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1372">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1372">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1373">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1373">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1374">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1374">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1375">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1375">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1376">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1376">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1377">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1377">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1378">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1378">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1379">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1379">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1380">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1380">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1381">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1381">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1382">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1382">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1383">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1383">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1384">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1384">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1385">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1385">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1386">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1386">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1387">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1387">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1388">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1388">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1389">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1389">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1390">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1390">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1391">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1391">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1392">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1392">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1393">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1393">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1394">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1394">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1395">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1395">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1396">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1396">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1397">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1397">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1398">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1398">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1399">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1399">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1400">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1400">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1401">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1401">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1402">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1402">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1403">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1403">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1404">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1404">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1405">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1405">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1406">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1406">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1407">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1407">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1408">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1408">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1409">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1409">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, double Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Double, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * double * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1410">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1410">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1411">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1411">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1412">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1412">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1413">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1413">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1414">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1414">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1415">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1415">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1416">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1416">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1417">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1417">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1418">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1418">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1419">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1419">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1420">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1420">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1421">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1421">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1422">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1422">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1423">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1423">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1424">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1424">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1425">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1425">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1426">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1426">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1427">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1427">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1428">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1428">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1429">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1429">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1430">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1430">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1431">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1431">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1432">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1432">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1433">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1433">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1434">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1434">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1435">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1435">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1436">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1436">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1437">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1437">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1438">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1438">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1439">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1439">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1440">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1440">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1441">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1441">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1442">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1442">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1443">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1443">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1444">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1444">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1445">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1445">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1446">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1446">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1447">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1447">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1448">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1448">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1449">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1449">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1450">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1450">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1451">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1451">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1452">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1452">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1453">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1453">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1454">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1454">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1455">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1455">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1456">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1456">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1457">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1457">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1458">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1458">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1459">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1459">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1460">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1460">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1461">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1461">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1462">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1462">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1463">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1463">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1464">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1464">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1465">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1465">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1466">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1466">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1467">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1467">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1468">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1468">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, short Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int16 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Short, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int16 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1469">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1469">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1470">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1470">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1471">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1471">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1472">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1472">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1473">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1473">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1474">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1474">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1475">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1475">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1476">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1476">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1477">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1477">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1478">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1478">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1479">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1479">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1480">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1480">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1481">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1481">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1482">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1482">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1483">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1483">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1484">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1484">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1485">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1485">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1486">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1486">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1487">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1487">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1488">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1488">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1489">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1489">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1490">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1490">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1491">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1491">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1492">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1492">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1493">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1493">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1494">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1494">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1495">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1495">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1496">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1496">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the`VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1497">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1497">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1498">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1498">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1499">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1499">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1500">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1500">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1501">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1501">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1502">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1502">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1503">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1503">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1504">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1504">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1505">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1505">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1506">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1506">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1507">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1507">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1508">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1508">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1509">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1509">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1510">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1510">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1511">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1511">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1512">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1512">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1513">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1513">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1514">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1514">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1515">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1515">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1516">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1516">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1517">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1517">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1518">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1518">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1519">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1519">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1520">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1520">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1521">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1521">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1522">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1522">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1523">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1523">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1524">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1524">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1525">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1525">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1526">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1526">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1527">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1527">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, int Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Integer, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1528">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1528">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1529">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1529">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1530">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1530">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1531">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1531">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1532">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1532">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1533">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1533">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1534">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1534">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1536">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1536">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1537">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1537">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1538">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1538">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1539">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1539">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1540">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1540">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1541">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1541">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1542">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1542">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1543">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1543">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1544">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1544">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1545">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1545">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1546">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1546">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1547">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1547">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1548">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1548">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1549">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1549">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1550">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1550">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1551">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1551">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1552">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1552">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1553">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1553">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1554">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1554">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1555">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1555">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1556">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1556">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1557">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1557">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1558">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1558">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1559">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1559">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1560">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1560">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1561">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1561">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1562">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1562">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1563">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1563">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1564">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1564">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1565">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1565">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1566">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1566">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1567">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1567">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1568">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1568">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1569">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1569">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1570">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1570">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1571">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1571">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1572">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1572">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1573">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1573">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1574">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1574">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1575">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1575">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1576">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1576">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1577">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1577">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1578">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1578">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1579">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1579">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1580">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1580">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1581">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1581">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1582">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1582">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1583">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1583">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1584">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1584">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1585">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1585">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1586">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1586">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, long Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, int64 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Long, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1587">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1587">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1588">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1588">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1589">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1589">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1590">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1590">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1591">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1591">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1592">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1592">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1593">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1593">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1594">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1594">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1595">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1595">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1596">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1596">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1597">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1597">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1598">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1598">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1599">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1599">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1600">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1600">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1601">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1601">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1602">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1602">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1603">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1603">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1604">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1604">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1605">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1605">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1606">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1606">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1607">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1607">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1608">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1608">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1609">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1609">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1610">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1610">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1611">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1611">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1612">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1612">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1613">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1613">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1614">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1614">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1615">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1615">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1616">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1616">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1617">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1617">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1618">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1618">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1619">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1619">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1620">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1620">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1621">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1621">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1622">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1622">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1623">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1623">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1624">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1624">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1625">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1625">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1626">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1626">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1627">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1627">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1628">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1628">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1629">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1629">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1630">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1630">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1631">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1631">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1632">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1632">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1633">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1633">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1634">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1634">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1635">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1635">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1636">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1636">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1637">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1637">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1638">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1638">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1639">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1639">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1640">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1640">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1641">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1641">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1642">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1642">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1643">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1643">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1644">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1644">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1645">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1645">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, float Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, float32 Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Single, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * single * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1646">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1646">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1647">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1647">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1648">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1648">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1649">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1649">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1650">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1650">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1651">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1651">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1652">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1652">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1653">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1653">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1654">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1654">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1655">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1655">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1656">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1656">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1657">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1657">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1658">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1658">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1659">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1659">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1660">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1660">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1661">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1661">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1662">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1662">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1663">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1663">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1664">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1664">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1665">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1665">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1666">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1666">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1667">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1667">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1668">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1668">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1669">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1669">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1670">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1670">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1671">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1671">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1672">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1672">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1673">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1673">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1674">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1674">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1675">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1675">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1676">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1676">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1677">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1677">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1678">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1678">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1679">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1679">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1680">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1680">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1681">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1681">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1682">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1682">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1683">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1683">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1684">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1684">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1685">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1685">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1686">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1686">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1687">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1687">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1688">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1688">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1689">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1689">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1690">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1690">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1691">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1691">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1692">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1692">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1693">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1693">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1694">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1694">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1695">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1695">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1696">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1696">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1697">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1697">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1698">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1698">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1699">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1699">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1700">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1700">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1701">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1701">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1702">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1702">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1703">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1703">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1704">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1704">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, ValueType Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.ValueType Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As ValueType, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * ValueType * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.ValueType" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1705">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1705">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1706">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1706">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1707">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1707">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1708">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1708">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1709">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1709">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1710">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1710">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1711">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1711">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1712">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1712">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1713">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1713">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1714">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1714">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1715">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1715">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1716">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1716">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1717">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1717">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1718">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1718">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1719">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1719">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1720">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1720">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1721">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1721">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1722">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1722">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1723">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1723">If the length of the data being written is less than the length specified in the`RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1724">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1724">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1725">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1725">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1726">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1726">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1727">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1727">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1728">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1728">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1729">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1729">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1730">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1730">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1731">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1731">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1732">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1732">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1733">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1733">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1734">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1734">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1735">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1735">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1736">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1736">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1737">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1737">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1738">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1738">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1739">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1739">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1740">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1740">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1741">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1741">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1742">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1742">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1743">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1743">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1744">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1744">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1745">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1745">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1746">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1746">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1747">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1747">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1748">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1748">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1749">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1749">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1750">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1750">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1751">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1751">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1752">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1752">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1753">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1753">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1754">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1754">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1755">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1755">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1756">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1756">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1757">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1757">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1758">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1758">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1759">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1759">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1760">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1760">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1761">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1761">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1762">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1762">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1763">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1763">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (object FileNumber, object Value, object RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(object FileNumber, object Value, object RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Object, Value As Object, Optional RecordNumber As Object = -1)" />
      <MemberSignature Language="F#" Value="static member FilePut : obj * obj * obj -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This member has been deprecated. Please use FilePutObject to write Object types, or coerce FileNumber and RecordNumber to Integer for writing non-Object types. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Object" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1764">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1764">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1765">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1765">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1766">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1766">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1767">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1767">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1768">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1768">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1769">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1769">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1770">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1770">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1771">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1771">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1772">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1772">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1773">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1773">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1774">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1774">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1775">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1775">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1776">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1776">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1777">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1777">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1778">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1778">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1779">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1779">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1780">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1780">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1781">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1781">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1782">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1782">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1783">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1783">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1784">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1784">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1785">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1785">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1786">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1786">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1787">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1787">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1788">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1788">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1789">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1789">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1790">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1790">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1791">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1791">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1792">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1792">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1793">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1793">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1794">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1794">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1795">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1795">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1796">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1796">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1797">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1797">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1798">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1798">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1799">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1799">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1800">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1800">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1801">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1801">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1802">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1802">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1803">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1803">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1804">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1804">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1805">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1805">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1806">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1806">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1807">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1807">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1808">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1808">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1809">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1809">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1810">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1810">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1811">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1811">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1812">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1812">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1813">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1813">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1814">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1814">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1815">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1815">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1816">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1816">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1817">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1817">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1818">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1818">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1819">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1819">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1820">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1820">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1821">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1821">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1822">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1822">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, string Value, long RecordNumber = -1, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, string Value, int64 RecordNumber, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As String, Optional RecordNumber As Long = -1, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * string * int64 * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1823">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1823">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1824">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1824">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1825">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1825">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1826">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1826">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1827">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1827">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1828">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1828">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="ac3c2-1829">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1829">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1830">Applies only when writing a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1830">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="ac3c2-1831">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1831">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="ac3c2-1832">The default is <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1832">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1833">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1833">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1834">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1834">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1835">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1835">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />..</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1836">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1836">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1837">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1837">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1838">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1838">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1839">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1839">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1840">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1840">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1841">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1841">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1842">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1842">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1843">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1843">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1844">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1844">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1845">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1845">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1846">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1846">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1847">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1847">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1848">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1848">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1849">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1849">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1850">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1850">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1851">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1851">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1852">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1852">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1853">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1853">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1854">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1854">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1855">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1855">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1856">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1856">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1857">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1857">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1858">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1858">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1859">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1859">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1860">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1860">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1861">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1861">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1862">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1862">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1863">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1863">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1864">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1864">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1865">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1865">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1866">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1866">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1867">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1867">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1868">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1868">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1869">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1869">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1870">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1870">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1871">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1871">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1872">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1872">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1873">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1873">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1874">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1874">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1875">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1875">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1876">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1876">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1877">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1877">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1878">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1878">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1879">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1879">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1880">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1880">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1881">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1881">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1882">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1882">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1883">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1883">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1884">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1884">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1885">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1885">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePut">
      <MemberSignature Language="C#" Value="public static void FilePut (int FileNumber, Array Value, long RecordNumber = -1, bool ArrayIsDynamic = false, bool StringIsFixedLength = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePut(int32 FileNumber, class System.Array Value, int64 RecordNumber, bool ArrayIsDynamic, bool StringIsFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePut (FileNumber As Integer, Value As Array, Optional RecordNumber As Long = -1, Optional ArrayIsDynamic As Boolean = false, Optional StringIsFixedLength As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member FilePut : int * Array * int64 * bool * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePut (FileNumber, Value, RecordNumber, ArrayIsDynamic, StringIsFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Array" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
        <Parameter Name="ArrayIsDynamic" Type="System.Boolean" />
        <Parameter Name="StringIsFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1886">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1886">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1887">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1887">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1888">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1888">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1889">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1889">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1890">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1890">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1891">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1891">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <param name="ArrayIsDynamic">
          <span data-ttu-id="ac3c2-1892">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1892">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1893">Applies only when writing an array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1893">Applies only when writing an array.</span>
          </span>
          <span data-ttu-id="ac3c2-1894">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1894">Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.</span>
          </span>
        </param>
        <param name="StringIsFixedLength">
          <span data-ttu-id="ac3c2-1895">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1895">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1896">Applies only when writing a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1896">Applies only when writing a string.</span>
          </span>
          <span data-ttu-id="ac3c2-1897">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1897">Specifies whether to write a two-byte string length descriptor for the string to the file.</span>
          </span>
          <span data-ttu-id="ac3c2-1898">The default is <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1898">The default is <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1899">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1899">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1900">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1900">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePut" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1901">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1901">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1902">`FilePut` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1902">`FilePut` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1903">使用 `FilePut` 寫入的資料，通常會透過使用 `FileGet` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1903">Data written with `FilePut` is usually read from a file by using `FileGet`.</span></span>  
  
 <span data-ttu-id="ac3c2-1904">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1904">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1905">如果您省略`RecordNumber`下, 一個資料錄或最後一個之後的位元組`FileGet`或是`FilePut`函式，或指向最後一個`Seek`撰寫函式時。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1905">If you omit `RecordNumber`, the next record or byte after the last `FileGet` or `FilePut` function or pointed to by the last `Seek` function is written.</span></span>  
  
 <span data-ttu-id="ac3c2-1906">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1906">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1907">`FilePut` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1907">`FilePut` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1908">如果您使用`StringIsFixedLength`  =  `True`具有`FilePut`，您必須執行相同的`FileGet`，而且您必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1908">If you use `StringIsFixedLength` = `True` with `FilePut`, you have to do the same with `FileGet`, and you have to make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1909">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1909">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1910">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1910">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1911">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePut`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1911">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePut` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1912">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1912">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1913">因為無法任何確定地決定填補資料的數量，通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1913">Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1914">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1914">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception will be thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1915">如果寫入的變數是字串，`FilePut`寫入雙位元組描述元包含字串的長度，並再寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1915">If the variable being written is a string, `FilePut` writes a two-byte descriptor that contains the string length, and then writes the data that goes into the variable.</span></span> <span data-ttu-id="ac3c2-1916">因此，所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是至少在兩個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1916">Therefore, the record length specified by the `RecordLength` clause in the `FileOpen` function must be at least two bytes greater than the actual length of the string.</span></span>  
  
-   <span data-ttu-id="ac3c2-1917">如果要寫入的變數是物件，包含數值的型別，`FilePut`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1917">If the variable being written is an object that contains a numeric type, `FilePut` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1918">比方說，撰寫物件時，包含整數`FilePut`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1918">For example, when writing an object that contains an integer, `FilePut` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1919">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1919">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1920">如果寫入的變數是包含字串、 物件`FilePut`寫入兩個位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1920">If the variable being written is an object that contains a string, `FilePut` writes a two byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1921">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1921">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1922">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1922">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1923">如果寫入的變數陣列，您會有關於要寫入的大小和陣列維度的描述元的選擇。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1923">If the variable being written is an array, you have a choice as to whether or not to write a descriptor for the size and dimensions of the array.</span></span> <span data-ttu-id="ac3c2-1924">Visual Basic 6.0 和更早版本撰寫的動態陣列，但不是會為固定大小陣列的檔案描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1924">Visual Basic 6.0 and earlier versions write the file descriptor for a dynamic array but not for a fixed-size array.</span></span> <span data-ttu-id="ac3c2-1925">Visual Basic 2005 預設為不寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1925">Visual Basic 2005 defaults to not writing the descriptor.</span></span> <span data-ttu-id="ac3c2-1926">若要寫入的描述元，將`ArrayIsDynamic`參數來`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1926">To write the descriptor, set the `ArrayIsDynamic` parameter to `True`.</span></span> <span data-ttu-id="ac3c2-1927">在撰寫時的陣列，您必須比對會讀取陣列; 的方式它會讀取具有描述元，如果您有寫入描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1927">When writing the array, you have to match the way the array will be read; if it will be read with the descriptor, you have to write the descriptor.</span></span> <span data-ttu-id="ac3c2-1928">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1928">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1929">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1929">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span> <span data-ttu-id="ac3c2-1930">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1930">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1931">比方說，下列陣列宣告需要 218 的位元組陣列寫入至磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1931">For example, the following array declaration requires 218 bytes when the array is written to disk.</span></span>  
  
     [!code-vb[VbVbalrCatRef#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#43)]  
  
-   <span data-ttu-id="ac3c2-1932">如果要寫入的變數是任何其他類型的變數 （不可變長度字串或物件）`FilePut`寫入變數的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1932">If the variable being written is any other type of variable (not a variable-length string or an object), `FilePut` writes only the variable data.</span></span> <span data-ttu-id="ac3c2-1933">所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於所寫入的資料長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1933">The record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the length of the data being written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1934">`FilePut` 如同寫入每個個別但沒有任何項目之間的填補，將結構的項目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1934">`FilePut` writes elements of structures as if each were written individually, except there is no padding between elements.</span></span> <span data-ttu-id="ac3c2-1935">`VBFixedString`屬性可以套用至字串欄位中的結構，表示字串寫入時的大小到磁碟。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1935">The `VBFixedString` attribute can be applied to string fields in the structures to indicate the size of the string when written to disk.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="ac3c2-1936">字串已超過所指定位元組數目的欄位`VBFixedString`屬性會被截斷時寫入至磁碟，</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1936">String fields that have more bytes than specified by the `VBFixedString` attribute are truncated when written to disk,</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1937">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1937">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1938">在開啟的檔案`Binary`模式中，大部分的`Random`模式規則的套用，但有些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1938">For files opened in `Binary` mode, most of the `Random` mode rules apply, with some exceptions.</span></span> <span data-ttu-id="ac3c2-1939">在中開啟檔案的下列規則`Binary`模式與不同的規則`Random`模式︰</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1939">The following rules for files opened in `Binary` mode differ from the rules for `Random` mode:</span></span>  
  
-   <span data-ttu-id="ac3c2-1940">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1940">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1941">`FilePut` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1941">`FilePut` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
-   <span data-ttu-id="ac3c2-1942">在結構中，陣列以外的所有陣列`FilePut`寫入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1942">For any array other than an array in a structure, `FilePut` writes only the data.</span></span> <span data-ttu-id="ac3c2-1943">會不寫入任何描述項。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1943">No descriptor is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-1944">`FilePut` 寫入不是雙位元組長度描述項的結構元素的可變長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1944">`FilePut` writes variable-length strings that are not elements of structures without the two-byte length descriptor.</span></span> <span data-ttu-id="ac3c2-1945">寫入的位元組數目等於字串中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1945">The number of bytes written equals the number of characters in the string.</span></span> <span data-ttu-id="ac3c2-1946">例如，下列陳述式會將 11 個位元組寫入檔案編號 1:</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1946">For example, the following statements write 11 bytes to file number 1:</span></span>  
  
     [!code-vb[VbVbalrCatRef#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#44)]  
  
-   <span data-ttu-id="ac3c2-1947">寫入檔案，使用`FilePut`函式需要`Write`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1947">Writing to a file by using the `FilePut` function requires `Write` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1948">這個範例會使用`FilePut`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1948">This example uses the `FilePut` function to write data to a file.</span></span> <span data-ttu-id="ac3c2-1949">結構的五筆記錄`Person`會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1949">Five records of the structure `Person` are written to the file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-1950">
            <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1950">
              <paramref name="RecordNumber" /> &lt; 1 and not equal to -1.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-1951">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1951">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FilePutObject">
      <MemberSignature Language="C#" Value="public static void FilePutObject (int FileNumber, object Value, long RecordNumber = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FilePutObject(int32 FileNumber, object Value, int64 RecordNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilePutObject (FileNumber As Integer, Value As Object, Optional RecordNumber As Long = -1)" />
      <MemberSignature Language="F#" Value="static member FilePutObject : int * obj * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FilePutObject (FileNumber, Value, RecordNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object" />
        <Parameter Name="RecordNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1952">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1952">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1953">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1953">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-1954">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1954">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1955">Valid variable name that contains data written to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1955">Valid variable name that contains data written to disk.</span>
          </span>
        </param>
        <param name="RecordNumber">
          <span data-ttu-id="ac3c2-1956">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1956">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-1957">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1957">Record number (<see langword="Random" /> mode files) or byte number (<see langword="Binary" /> mode files) at which writing starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1958">Writes data from a variable to a disk file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1958">Writes data from a variable to a disk file.</span>
          </span>
          <span data-ttu-id="ac3c2-1959">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1959">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FilePutObject" />.</span>
          </span>
          <span data-ttu-id="ac3c2-1960">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1960">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-1961">`FilePutObject`而不是使用函式`FilePut`若要避免模稜兩可在編譯時期，如果型別`Object`傳遞，而另一個類型，例如`Integer`， `Long`， `Short`，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1961">The `FilePutObject` function is used instead of `FilePut` to avoid ambiguities at compile time if type `Object` is passed instead of another type, such as `Integer`, `Long`, `Short`, and so forth.</span></span>  
  
 <span data-ttu-id="ac3c2-1962">`FilePutObject` 寫入，並讀取描述物件的描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1962">`FilePutObject` writes and reads descriptors that describe the object.</span></span> <span data-ttu-id="ac3c2-1963">如果您想要寫出`Variant`型別，`FilePutObject`需要。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1963">If you intend to write out the `Variant` type, `FilePutObject` is required.</span></span> <span data-ttu-id="ac3c2-1964">如有疑問，如果您使用物件來作為第二個參數，我們建議您一律使用`FilePutObject`和`FileGetObject`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1964">When in doubt, if you are using an object for the second parameter, we recommend that you always use `FilePutObject` and `FileGetObject`.</span></span>  
  
 <span data-ttu-id="ac3c2-1965">`FilePutObject` 只有在有效`Random`和`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1965">`FilePutObject` is valid only in `Random` and `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-1966">使用 `FilePutObject` 寫入的資料，通常會透過使用 `FileGetObject` 從檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1966">Data written with `FilePutObject` is usually read from a file by using `FileGetObject`.</span></span>  
  
 <span data-ttu-id="ac3c2-1967">第一個記錄或檔案中的位元組在位置 1，第二個資料錄或位元組位於位置 2，依此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1967">The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on.</span></span> <span data-ttu-id="ac3c2-1968">如果您省略`RecordNumber`，`FilePutObject`寫入最後一個之後的下一步 的資料錄或位元組`FileGetObject`或是`FilePutObject`函式 (或資料錄或位元組所指的最後一個`Seek`函式)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1968">If you omit `RecordNumber`, `FilePutObject` writes the next record or byte after the last `FileGetObject` or `FilePutObject` function (or the record or byte pointed to by the last `Seek` function).</span></span>  
  
 <span data-ttu-id="ac3c2-1969">`StringIsFixedLength`引數可讓您控制是否函式會將字串解譯為變數或固定的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1969">The `StringIsFixedLength` argument controls whether the function interprets strings as variable or fixed length.</span></span> <span data-ttu-id="ac3c2-1970">`FilePutObject` 引數時，會將寫入的長度描述元`True`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1970">`FilePutObject` does not write the length descriptor when the argument is `True`.</span></span> <span data-ttu-id="ac3c2-1971">如果您使用`StringIsFixedLength`  =  `True`具有`FilePutObject`，您必須執行相同的`FileGetObject`，和您也必須確定該字串會初始化為預期的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1971">If you use `StringIsFixedLength` = `True` with `FilePutObject`, you have to do the same with `FileGetObject`, and you must also make sure that the string is initialized to the length expected.</span></span>  
  
## <a name="random-mode"></a><span data-ttu-id="ac3c2-1972">隨機的模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1972">Random Mode</span></span>  
 <span data-ttu-id="ac3c2-1973">在開啟的檔案的`Random`模式中，適用下列規則：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1973">For files opened in `Random` mode, the following rules apply:</span></span>  
  
-   <span data-ttu-id="ac3c2-1974">如果正在寫入資料的長度小於指定的長度`RecordLength`子句`FileOpen`函式，`FilePutObject`將後續的記錄寫入記錄長度界限上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1974">If the length of the data being written is less than the length specified in the `RecordLength` clause of the `FileOpen` function, `FilePutObject` writes subsequent records on record-length boundaries.</span></span> <span data-ttu-id="ac3c2-1975">檔案緩衝區的現有內容填補一筆記錄的結尾與下一筆記錄的開始之間的空間。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1975">The space between the end of one record and the start of the next record is padded with the existing contents of the file buffer.</span></span> <span data-ttu-id="ac3c2-1976">填補資料的數量無法精確地判斷，因為它通常是個不錯的主意，具有符合要寫入的資料長度的記錄長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1976">Because the amount of padding data cannot be precisely determined, it is generally a good idea to have the record length match the length of the data being written.</span></span> <span data-ttu-id="ac3c2-1977">如果正在寫入資料的長度大於指定的長度`RecordLength`子句`FileOpen`函式擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1977">If the length of the data being written is greater than the length specified in the `RecordLength` clause of the `FileOpen` function, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="ac3c2-1978">如果要寫入的變數是物件，包含數值的型別，`FilePutObject`寫入兩個位元組，識別`VarType`物件的然後將寫入的變數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1978">If the variable being written is an object that contains a numeric type, `FilePutObject` writes two bytes identifying the `VarType` of the object and then writes the variable.</span></span> <span data-ttu-id="ac3c2-1979">比方說，撰寫物件時，包含整數`FilePutObject`寫入 6 個位元組： 識別做為物件的兩個位元組`VarType(3)`(`Integer`) 和包含資料的四個位元組。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1979">For example, when writing an object that contains an integer, `FilePutObject` writes six bytes: two bytes that identify the object as `VarType(3)` (`Integer`) and four bytes that contain the data.</span></span> <span data-ttu-id="ac3c2-1980">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在兩個位元組大於實際儲存變數所需的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1980">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least two bytes greater than the actual number of bytes required to store the variable.</span></span>  
  
-   <span data-ttu-id="ac3c2-1981">如果寫入的變數是包含字串、 物件`FilePutObject`寫入雙位元組描述元，識別`VarType(8)`的物件，表示的字串，然後再寫入字串資料長度的雙位元組描述元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1981">If the variable being written is an object that contains a string, `FilePutObject` writes a two-byte descriptor identifying the `VarType(8)` of the object, a two-byte descriptor indicating the length of the string, and then writes the string data.</span></span> <span data-ttu-id="ac3c2-1982">所指定的記錄長度`RecordLength`中的參數`FileOpen`函式必須是至少在四個位元組大於字串的實際長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1982">The record length specified by the `RecordLength` parameter in the `FileOpen` function must be at least four bytes greater than the actual length of the string.</span></span> <span data-ttu-id="ac3c2-1983">如果您想要將描述項的字串，您應該傳遞`True`至`StringIsFixedLength`參數，而您讀入應該是正確的長度的字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1983">If you want to put a string without the descriptor, you should pass `True` to the `StringIsFixedLength` parameter, and the string you read into should be the correct length.</span></span>  
  
-   <span data-ttu-id="ac3c2-1984">如果寫入的變數陣列，則所指定的記錄長度`RecordLength`子句中的`FileOpen`函式必須是大於或等於要寫入的陣列資料和陣列描述元所需的所有位元組的總和。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1984">If the variable being written is an array, then the record length specified by the `RecordLength` clause in the `FileOpen` function must be greater than or equal to the sum of all the bytes required to write the array data and the array descriptor.</span></span> <span data-ttu-id="ac3c2-1985">描述元指定陣列大小及每個陣序規範下限的陣序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1985">The descriptor specifies the rank of the array, the size, and the lower bounds for each rank.</span></span> <span data-ttu-id="ac3c2-1986">其長度等於 2，再加上 8 倍的維度數目: (2 + 8 \* NumberOfDimensions)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1986">Its length equals 2 plus 8 times the number of dimensions: (2 + 8 \* NumberOfDimensions).</span></span>  
  
## <a name="binary-mode"></a><span data-ttu-id="ac3c2-1987">二進位模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1987">Binary Mode</span></span>  
 <span data-ttu-id="ac3c2-1988">在開啟的檔案`Binary`模式中，所有`Random`套用模式的規則，除了：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1988">For files opened in `Binary` mode, all the `Random` mode rules apply, except:</span></span>  
  
-   <span data-ttu-id="ac3c2-1989">`RecordLength`子句中的`FileOpen`函式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1989">The `RecordLength` clause in the `FileOpen` function has no effect.</span></span> <span data-ttu-id="ac3c2-1990">`FilePutObject` 將所有的變數，連續地寫入磁碟，也就是沒有記錄之間的填補。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1990">`FilePutObject` writes all variables to disk contiguously, that is, without padding between records.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-1991">這個範例會使用`FilePutObject`函式來將字串寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1991">This example uses the `FilePutObject` function to write a string to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="FileWidth">
      <MemberSignature Language="C#" Value="public static void FileWidth (int FileNumber, int RecordWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static void FileWidth(int32 FileNumber, int32 RecordWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FileWidth (FileNumber As Integer, RecordWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FileWidth(int FileNumber, int RecordWidth);" />
      <MemberSignature Language="F#" Value="static member FileWidth : int * int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.FileWidth (FileNumber, RecordWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="RecordWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-1992">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1992">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1993">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1993">Any valid file number.</span>
          </span>
        </param>
        <param name="RecordWidth">
          <span data-ttu-id="ac3c2-1994">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1994">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-1995">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1995">Numeric expression in the range 0–255, inclusive, which indicates how many characters appear on a line before a new line is started.</span>
          </span>
          <span data-ttu-id="ac3c2-1996">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1996">If <c>RecordWidth</c> equals 0, there is no limit to the length of a line.</span>
          </span>
          <span data-ttu-id="ac3c2-1997">The default value for <c>RecordWidth</c> is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1997">The default value for <c>RecordWidth</c> is 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-1998">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-1998">Assigns an output line width to a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac3c2-1999">這個範例會使用`FileWidth`函式來設定輸出行寬度的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-1999">This example uses the `FileWidth` function to set the output line width for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2000">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2000">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FreeFile">
      <MemberSignature Language="C#" Value="public static int FreeFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FreeFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.FreeFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FreeFile () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FreeFile();" />
      <MemberSignature Language="F#" Value="static member FreeFile : unit -&gt; int" Usage="Microsoft.VisualBasic.FileSystem.FreeFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2001">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2001">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2002">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2002">Returns an <see langword="Integer" /> value that represents the next file number available for use by the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2003">使用`FreeFile`提供尚未使用的檔案數字。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2003">Use `FreeFile` to supply a file number that is not already being used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2004">這個範例會使用`FreeFile`函式傳回下一個可用的檔案數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2004">This example uses the `FreeFile` function to return the next available file number.</span></span> <span data-ttu-id="ac3c2-2005">輸出，在迴圈內，開啟五個檔案和一些範例資料會寫入每一個。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2005">Five files are opened for output within the loop, and some sample data is written to each.</span></span>  
  
 [!code-vb[VbVbalrCatRef#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2006">More than 255 files are in use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2006">More than 255 files are in use.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttr">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileAttribute GetAttr (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.FileAttribute GetAttr(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttr (PathName As String) As FileAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileAttribute GetAttr(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member GetAttr : string -&gt; Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.FileSystem.GetAttr PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="ac3c2-2007">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2007">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2008">
            <see langword="String" /> expression that specifies a file, directory, or folder name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2008">
              <see langword="String" /> expression that specifies a file, directory, or folder name.</span>
          </span>
          <span data-ttu-id="ac3c2-2009">
            <c>PathName</c> can include the directory or folder, and the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2009">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2010">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2010">Returns a <see langword="FileAttribute" /> value that represents the attributes of a file, directory, or folder.</span>
          </span>
          <span data-ttu-id="ac3c2-2011">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2011">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="FileAttribute" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2012">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2012">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2013">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:  <list type="table"><item><term> Value  </term><description> Constant  </description><description> Description  </description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normal.  </description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Read-only.  </description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Hidden.  </description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System file.  </description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Directory or folder.  </description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> File has changed since last backup.  </description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> File has a different name.  </description></item></list><block subset="none" type="note"><para> These enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.  </para></block></span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2013">The value returned by <see langword="GetAttr" /> is the sum of the following enumeration values:  <list type="table"><item><term> Value  </term><description> Constant  </description><description> Description  </description></item><item><term><see langword="Normal" /></term><description><see langword="vbNormal" /></description><description> Normal.  </description></item><item><term><see langword="ReadOnly" /></term><description><see langword="vbReadOnly" /></description><description> Read-only.  </description></item><item><term><see langword="Hidden" /></term><description><see langword="vbHidden" /></description><description> Hidden.  </description></item><item><term><see langword="System" /></term><description><see langword="vbSystem" /></description><description> System file.  </description></item><item><term><see langword="Directory" /></term><description><see langword="vbDirectory" /></description><description> Directory or folder.  </description></item><item><term><see langword="Archive" /></term><description><see langword="vbArchive" /></description><description> File has changed since last backup.  </description></item><item><term><see langword="Alias" /></term><description><see langword="vbAlias" /></description><description> File has a different name.  </description></item></list><block subset="none" type="note"><para> These enumerations are specified by the Visual Basic language. The names can be used anywhere in your code in place of the actual values.  </para></block></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2014">若要判斷設定了哪些屬性，請使用`And`運算子來執行所傳回的值的位元比較`GetAttr`函式和您想要個別的檔案屬性的值。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2014">To determine which attributes are set, use the `And` operator to perform a bitwise comparison of the value returned by the `GetAttr` function and the value of the individual file attribute you want.</span></span> <span data-ttu-id="ac3c2-2015">如果結果不是零，該屬性是設定具名的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2015">If the result is not zero, that attribute is set for the named file.</span></span> <span data-ttu-id="ac3c2-2016">例如，下列的傳回值`And`運算式是零，如果`Archive`未設定屬性：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2016">For example, the return value of the following `And` expression is zero if the `Archive` attribute is not set:</span></span>  
  
```vb  
Result = GetAttr(FName) And vbArchive  
```  
  
 <span data-ttu-id="ac3c2-2017">會傳回非零值，如果`Archive`屬性設定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2017">A nonzero value is returned if the `Archive` attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2018">這個範例會使用`GetAttr`函式來判斷檔案和目錄或資料夾的屬性。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2018">This example uses the `GetAttr` function to determine the attributes of a file and directory or folder.</span></span>  
  
 [!code-vb[VbVbalrCatRef#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2019">
            <paramref name="Pathname" /> is invalid or contains wildcards.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2019">
              <paramref name="Pathname" /> is invalid or contains wildcards.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-2020">Target file does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2020">Target file does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Input">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2021">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2021">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, bool&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, bool % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2022">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2022">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2023">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2023">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2024">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2024">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2025">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2025">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2026">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2026">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2027">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2027">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2028">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2028">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2029">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2029">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2030">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2030">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2031">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2031">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2032">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2032">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2033">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2033">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2034">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2034">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2035">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2035">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2036">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2036">Data</span></span>|<span data-ttu-id="ac3c2-2037">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2037">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2038">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2038">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2039">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2039">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2040">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2040">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2041">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2041">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2042">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2042">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2043">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2043">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2044">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2044">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2045">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2045">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2046">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2046">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2047">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2047">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2048">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2048">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2049">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2049">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2050">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2050">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2051">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2051">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2052">這個範例假設`TestFile`是一個檔案，有一些使用寫入的資料行`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2052">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2053">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2053">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, unsigned int8&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Byte % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2054">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2054">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2055">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2055">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2056">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2056">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2057">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2057">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2058">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2058">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2059">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2059">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2060">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2060">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2061">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2061">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2062">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2062">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2063">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2063">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2064">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2064">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2065">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2065">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2066">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2066">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2067">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2067">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2068">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2068">Data</span></span>|<span data-ttu-id="ac3c2-2069">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2069">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2070">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2070">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2071">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2071">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2072">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2072">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2073">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2073">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2074">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2074">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2075">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2075">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2076">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2076">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2077">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2077">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2078">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2078">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2079">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2079">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2080">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2080">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2081">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2081">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2082">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2082">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2083">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2083">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2084">這個範例假設`TestFile`是一個檔案，有一些使用寫入的資料行`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2084">This example assumes that `TestFile` is a file that has some lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2085">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2085">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, char&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, char % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Char&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2086">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2086">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2087">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2087">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2088">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2088">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2089">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2089">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2090">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2090">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2091">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2091">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2092">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2092">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2093">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2093">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2094">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2094">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2095">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2095">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2096">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2096">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2097">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2097">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2098">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2098">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2099">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2099">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2100">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2100">Data</span></span>|<span data-ttu-id="ac3c2-2101">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2101">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2102">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2102">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2103">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2103">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2104">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2104">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2105">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2105">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2106">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2106">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2107">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2107">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2108">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2108">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2109">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2109">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2110">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2110">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2111">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2111">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2112">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2112">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2113">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2113">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2114">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2114">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2115">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2115">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2116">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2116">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2117">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2117">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.DateTime&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, DateTime % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.DateTime&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2118">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2118">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2119">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2119">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2120">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2120">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2121">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2121">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2122">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2122">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2123">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2123">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2124">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2124">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2125">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2125">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2126">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2126">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2127">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2127">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2128">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2128">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2129">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2129">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2130">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2130">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2131">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2131">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2132">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2132">Data</span></span>|<span data-ttu-id="ac3c2-2133">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2133">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2134">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2134">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2135">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2135">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2136">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2136">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2137">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2137">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2138">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2138">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2139">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2139">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2140">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2140">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2141">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2141">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2142">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2142">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2143">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2143">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2144">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2144">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2145">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2145">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2146">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2146">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2147">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2147">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2148">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2148">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2149">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2149">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, valuetype System.Decimal&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Decimal % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Decimal&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2150">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2150">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2151">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2151">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2152">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2152">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2153">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2153">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2154">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2154">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2155">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2155">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2156">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2156">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2157">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2157">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2158">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2158">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2159">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2159">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2160">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2160">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2161">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2161">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2162">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2162">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2163">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2163">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2164">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2164">Data</span></span>|<span data-ttu-id="ac3c2-2165">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2165">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2166">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2166">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2167">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2167">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2168">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2168">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2169">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2169">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2170">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2170">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2171">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2171">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2172">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2172">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2173">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2173">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2174">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2174">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2175">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2175">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2176">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2176">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2177">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2177">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2178">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2178">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2179">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2179">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2180">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2180">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2181">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2181">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, double % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2182">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2182">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2183">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2183">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2184">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2184">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2185">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2185">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2186">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2186">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2187">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2187">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2188">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2188">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2189">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2189">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2190">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2190">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2191">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2191">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2192">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2192">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2193">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2193">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2194">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2194">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2195">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2195">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2196">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2196">Data</span></span>|<span data-ttu-id="ac3c2-2197">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2197">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2198">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2198">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2199">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2199">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2200">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2200">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2201">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2201">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2202">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2202">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2203">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2203">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2204">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2204">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2205">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2205">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2206">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2206">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2207">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2207">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2208">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2208">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2209">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2209">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2210">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2210">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2211">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2211">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2212">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2212">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2213">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2213">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int16&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, short % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2214">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2214">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2215">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2215">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2216">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2216">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2217">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2217">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2218">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2218">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2219">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2219">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2220">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2220">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2221">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2221">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2222">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2222">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2223">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2223">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2224">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2224">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2225">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2225">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2226">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2226">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2227">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2227">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2228">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2228">Data</span></span>|<span data-ttu-id="ac3c2-2229">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2229">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2230">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2230">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2231">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2231">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2232">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2232">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2233">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2233">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2234">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2234">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2235">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2235">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2236">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2236">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2237">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2237">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2238">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2238">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2239">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2239">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2240">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2240">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2241">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2241">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2242">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2242">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2243">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2243">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2244">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2244">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2245">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2245">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, int % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2246">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2246">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2247">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2247">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2248">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2248">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2249">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2249">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2250">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2250">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2251">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2251">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2252">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2252">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2253">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2253">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2254">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2254">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2255">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2255">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2256">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2256">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2257">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2257">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2258">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2258">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2259">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2259">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2260">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2260">Data</span></span>|<span data-ttu-id="ac3c2-2261">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2261">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2262">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2262">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2263">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2263">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2264">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2264">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2265">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2265">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2266">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2266">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2267">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2267">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2268">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2268">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2269">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2269">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2270">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2270">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2271">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2271">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2272">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2272">For example, in the German version, if you input 3,14159, it returns only 3, since the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2273">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2273">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2274">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2274">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2275">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2275">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2276">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2276">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2277">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2277">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, int64&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, long % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Int64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2278">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2278">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2279">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2279">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2280">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2280">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2281">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2281">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2282">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2282">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2283">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2283">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2284">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2284">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2285">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2285">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2286">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2286">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2287">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2287">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2288">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2288">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2289">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2289">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2290">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2290">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2291">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2291">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2292">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2292">Data</span></span>|<span data-ttu-id="ac3c2-2293">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2293">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2294">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2294">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2295">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2295">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2296">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2296">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2297">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2297">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2298">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2298">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2299">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2299">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2300">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2300">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2301">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2301">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2302">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2302">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2303">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2303">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2304">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2304">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2305">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2305">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2306">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2306">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2307">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2307">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2308">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2308">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2309">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2309">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, object&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::Object ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2310">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2310">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2311">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2311">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2312">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2312">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2313">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2313">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2314">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2314">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2315">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2315">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2316">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2316">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2317">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2317">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2318">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2318">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2319">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2319">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2320">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2320">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2321">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2321">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2322">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2322">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2323">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2323">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2324">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2324">Data</span></span>|<span data-ttu-id="ac3c2-2325">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2325">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2326">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2326">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2327">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2327">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2328">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2328">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2329">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2329">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2330">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2330">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2331">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2331">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2332">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2332">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2333">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2333">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2334">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2334">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2335">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2335">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2336">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2336">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2337">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2337">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2338">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2338">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2339">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2339">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2340">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2340">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2341">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2341">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, float32&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, float % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2342">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2342">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2343">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2343">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2344">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2344">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2345">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2345">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2346">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2346">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2347">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2347">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2348">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2348">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2349">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2349">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2350">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2350">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2351">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2351">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2352">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2352">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2353">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2353">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2354">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2354">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2355">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2355">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2356">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2356">Data</span></span>|<span data-ttu-id="ac3c2-2357">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2357">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2358">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2358">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2359">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2359">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2360">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2360">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2361">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2361">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2362">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2362">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2363">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2363">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2364">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2364">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2365">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2365">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2366">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2366">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2367">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2367">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2368">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2368">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2369">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2369">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2370">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2370">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2371">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2371">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2372">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2372">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2373">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2373">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public static void Input (int FileNumber, ref string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Input(int32 FileNumber, string&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Input (FileNumber As Integer, ByRef Value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Input(int FileNumber, System::String ^ % Value);" />
      <MemberSignature Language="F#" Value="static member Input : int *  -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Input (FileNumber, Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Value" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2374">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2374">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2375">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2375">Any valid file number.</span>
          </span>
        </param>
        <param name="Value">
          <span data-ttu-id="ac3c2-2376">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2376">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2377">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2377">Variable that is assigned the values read from the file—cannot be an array or object variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2378">Reads data from an open sequential file and assigns the data to variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2378">Reads data from an open sequential file and assigns the data to variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2379">`Input`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2379">The `Input` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2380">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2380">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2381">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2381">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2382">讀取的資料`Input`通常會先寫入至檔案使用`Write`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2382">Data read with `Input` is usually written to a file by using `Write`.</span></span> <span data-ttu-id="ac3c2-2383">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2383">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2384">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2384">When reading from files, do not make decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2385">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 2005 原始程式檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2385">For example, a file that is named Form1.vb may not be a Visual Basic 2005 source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2386">讀取時，標準的字串或數值資料會指派給變數，而不需修改。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2386">When read, standard string or numeric data is assigned to variables without modification.</span></span> <span data-ttu-id="ac3c2-2387">下表將說明如何處理其他輸入的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2387">The following table illustrates how other input data is treated.</span></span>  
  
|<span data-ttu-id="ac3c2-2388">資料</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2388">Data</span></span>|<span data-ttu-id="ac3c2-2389">指派給變數的值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2389">Value assigned to variable</span></span>|  
|-|-|  
|<span data-ttu-id="ac3c2-2390">用來分隔逗號或空白行</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2390">Delimiting comma or blank line</span></span>|<span data-ttu-id="ac3c2-2391">Empty</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2391">Empty</span></span>|  
|<span data-ttu-id="ac3c2-2392">#NULL #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2392">#NULL#</span></span>|`DBNull`|  
|<span data-ttu-id="ac3c2-2393">#TRUE # 或 #FALSE #</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2393">#TRUE# or #FALSE#</span></span>|<span data-ttu-id="ac3c2-2394">`True` 或 `False`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2394">`True` or `False`</span></span>|  
|#`yyyy-mm-dd hh:mm:ss`#|<span data-ttu-id="ac3c2-2395">日期和/或運算式所代表的時間</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2395">The date and/or time represented by the expression</span></span>|  
|<span data-ttu-id="ac3c2-2396">#ERROR `errornumber`#</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2396">#ERROR `errornumber`#</span></span>|<span data-ttu-id="ac3c2-2397">`errornumber` （變數會是標記為錯誤的物件）</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2397">`errornumber` (variable is an object tagged as an error)</span></span>|  
  
 <span data-ttu-id="ac3c2-2398">如果在輸入資料的項目時，您會到達檔案結尾，停止輸入，而發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2398">If you reach the end of the file while you are inputting a data item, the input is stopped and an error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2399">`Input`函式不會進行當地語系化。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2399">The `Input` function is not localized.</span></span> <span data-ttu-id="ac3c2-2400">比方說，在德文版中，如果您輸入 3,14159，它只會傳回 3，因為逗號會被視為變數做為小數點分隔符號而不是。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2400">For example, in the German version, if you input 3,14159, it returns only 3, because the comma is treated as a variable separator instead of as a decimal point.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2401">使用 從檔案讀取`Input`函式需要`Read`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2401">Reading from a file by using the `Input` function requires `Read` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2402">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2402">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2403">這個範例會使用`Input`置於兩個變數，從檔案讀取資料的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2403">This example uses the `Input` function to read data from a file into two variables.</span></span> <span data-ttu-id="ac3c2-2404">這個範例假設`TestFile`是一個檔案，有數行的資料寫入至其中使用`Write`函式，每一行包含引號，並以逗號分隔，例如數字的字串: ("Hello"，234)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2404">This example assumes that `TestFile` is a file that has several lines of data written to it using the `Write` function, each line containing a string in quotations and a number separated by a comma, for example: ("Hello", 234).</span></span>  
  
 [!code-vb[VbVbalrCatRef#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2405">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2405">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputString">
      <MemberSignature Language="C#" Value="public static string InputString (int FileNumber, int CharCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputString(int32 FileNumber, int32 CharCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputString (FileNumber As Integer, CharCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InputString(int FileNumber, int CharCount);" />
      <MemberSignature Language="F#" Value="static member InputString : int * int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.InputString (FileNumber, CharCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="CharCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2406">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2406">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2407">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2407">Any valid file number.</span>
          </span>
        </param>
        <param name="CharCount">
          <span data-ttu-id="ac3c2-2408">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2408">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2409">Any valid numeric expression specifying the number of characters to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2409">Any valid numeric expression specifying the number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2410">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2410">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="ac3c2-2411">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2411">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2412">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2412">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2413">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2413">Returns <see langword="String" /> value that contains characters from a file opened in <see langword="Input" /> or <see langword="Binary" /> mode.</span>
          </span>
          <span data-ttu-id="ac3c2-2414">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2414">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="InputString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2415">`InputString`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2415">The `InputString` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2416">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2416">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2417">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2417">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2418">讀取的資料`InputString`函式通常利用寫入至檔案`Print`或`FilePut`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2418">Data read with the `InputString` function is usually written to a file by using `Print` or `FilePut`.</span></span> <span data-ttu-id="ac3c2-2419">此函式只適用於在開啟的檔案`Input`或`Binary`模式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2419">Use this function only with files opened in `Input` or `Binary` mode.</span></span>  
  
 <span data-ttu-id="ac3c2-2420">不同於`Input`函式，`InputString`函式會傳回讀取的字元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2420">Unlike the `Input` function, the `InputString` function returns all the characters it reads.</span></span> <span data-ttu-id="ac3c2-2421">這包括逗號、 換行字元、 換行、 引號和前置空格。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2421">This includes commas, carriage returns, line feeds, quotation marks, and leading spaces.</span></span>  
  
 <span data-ttu-id="ac3c2-2422">使用開啟的檔案`Binary`存取，嘗試讀取檔案，使用`InputString`運作直到`EOF`傳回`True`會產生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2422">With files opened for `Binary` access, an attempt to read through the file by using the `InputString` function until `EOF` returns `True` generates an error.</span></span> <span data-ttu-id="ac3c2-2423">使用`LOF`並`Loc`函數，而`EOF`藉由讀取二進位檔案時`InputString`，或使用`FileGet`當您使用`EOF`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2423">Use the `LOF` and `Loc` functions instead of `EOF` when you read binary files by using `InputString`, or use `FileGet` when you use the `EOF` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2424">從檔案讀取時，請勿依據副檔名的檔案內容的相關安全性決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2424">When reading from files, do not make security decisions about the contents of the file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2425">例如，名為 Form1.vb 檔案可能不是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2425">For example, a file named Form1.vb may not be a Visual Basic source file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2426">這個範例會使用`InputString`函式來從檔案一次讀取一個字元，並列印它`Output`視窗。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2426">This example uses the `InputString` function to read one character at a time from a file and print it to the `Output` window.</span></span> <span data-ttu-id="ac3c2-2427">這個範例假設`MyFile`是具有數行的範例資料的文字檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2427">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2428">
            <paramref name="FileNumber" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2428">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-2429">
            <paramref name="CharCount" /> &lt; 0 or &gt; 214.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2429">
              <paramref name="CharCount" /> &lt; 0 or &gt; 214.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public static void Kill (string PathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Kill(string PathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill (PathName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Kill(System::String ^ PathName);" />
      <MemberSignature Language="F#" Value="static member Kill : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Kill PathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="ac3c2-2430">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2430">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2431">
            <see langword="String" /> expression that specifies one or more file names to be deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2431">
              <see langword="String" /> expression that specifies one or more file names to be deleted.</span>
          </span>
          <span data-ttu-id="ac3c2-2432">
            <c>PathName</c> can include the directory or folder, and the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2432">
              <c>PathName</c> can include the directory or folder, and the drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2433">Deletes files from a disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2433">Deletes files from a disk.</span>
          </span>
          <span data-ttu-id="ac3c2-2434">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2434">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Kill" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2435">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2435">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2436">`Kill` 支援使用多個字元 (`*`) 和單一字元 (`?`) 萬用字元來指定多個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2436">`Kill` supports the use of multiple-character (`*`) and single-character (`?`) wildcards to specify multiple files.</span></span>  
  
 <span data-ttu-id="ac3c2-2437">**安全性注意事項**才能執行，請`Kill`函式需要`Read`並`PathDiscovery`加上旗標的<xref:System.Security.Permissions.FileIOPermission>要授與執行的程式碼。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2437">**Security Note** In order to execute, the `Kill` function requires `Read` and `PathDiscovery` flags of <xref:System.Security.Permissions.FileIOPermission> to be granted to the executing code.</span></span> <span data-ttu-id="ac3c2-2438">如需詳細資訊，請參閱 < <xref:System.Security.SecurityException>[程式碼存取權限](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2438">For more information, see <xref:System.Security.SecurityException>[Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2439">這個範例會使用`Kill`函式來從磁碟中刪除檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2439">This example uses the `Kill` function to delete a file from a disk.</span></span>  
  
 [!code-vb[VbVbalrCatRef#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2440">Target file(s) open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2440">Target file(s) open.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-2441">Target file(s) not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2441">Target file(s) not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ac3c2-2442">Permission denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2442">Permission denied.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="LineInput">
      <MemberSignature Language="C#" Value="public static string LineInput (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LineInput(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineInput (FileNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LineInput(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LineInput : int -&gt; string" Usage="Microsoft.VisualBasic.FileSystem.LineInput FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2443">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2443">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2444">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2444">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2445">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2445">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2446">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2446">Reads a single line from an open sequential file and assigns it to a <see langword="String" /> variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2447">`LineInput`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2447">The `LineInput` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2448">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2448">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2449">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2449">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2450">讀取的資料`LineInput`通常會先寫入至檔案使用`Print`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2450">Data read with `LineInput` is usually written to a file by using `Print`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2451">從檔案讀取時，請勿根據檔案名稱副檔名的檔案內容的相關決策。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2451">When reading from files, do not make decisions about the contents of a file based on the file name extension.</span></span> <span data-ttu-id="ac3c2-2452">例如，名為 Form1.vb 檔案可能不會是 Visual Basic 來源檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2452">For example, a file that is named Form1.vb may not be a Visual Basic source file.</span></span>  
  
 <span data-ttu-id="ac3c2-2453">`LineInput`函式會從檔案的一個字元讀取一次直到遇到歸位字元 (`Chr(13)`) 或歸位字元/換 (`Chr(13) + Chr(10)`) 順序。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2453">The `LineInput` function reads from a file one character at a time until it encounters a carriage return (`Chr(13)`) or carriage return/line feed (`Chr(13) + Chr(10)`) sequence.</span></span> <span data-ttu-id="ac3c2-2454">歸位字元 return/line 摘要的序列會略過而不是附加的字元字串。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2454">Carriage return/line feed sequences are skipped instead of appended to the character string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2455">使用 從檔案讀取`LineInput`函式需要`Read`從存取<xref:System.Security.Permissions.FileIOPermissionAccess>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2455">Reading from a file by using the `LineInput` function requires `Read` access from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2456">這個範例會使用`LineInput`從循序檔案讀取一行，並將它指派給變數的函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2456">This example uses the `LineInput` function to read a line from a sequential file and assign it to a variable.</span></span> <span data-ttu-id="ac3c2-2457">這個範例假設`TestFile`是具有數行的範例資料的文字檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2457">This example assumes that `TestFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="ac3c2-2458">End of file reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2458">End of file reached.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2459">
            <paramref name="FileNumber" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2459">
              <paramref name="FileNumber" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
      </Docs>
    </Member>
    <Member MemberName="Loc">
      <MemberSignature Language="C#" Value="public static long Loc (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Loc(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Loc (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Loc(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Loc : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Loc FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2460">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2460">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2461">Any valid <see langword="Integer" /> file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2461">Any valid <see langword="Integer" /> file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2462">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2462">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2463">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2463">Returns a <see langword="Long" /> value that specifies the current read/write position in an open file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2464">`Loc`為以零為起始的函式，使用它來擷取檔案中的第一個位元組，則會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2464">The `Loc` function is zero-based; using it to retrieve the first byte in a file will return 0.</span></span>  
  
 <span data-ttu-id="ac3c2-2465">`Loc`函式會提供回溯相容性，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2465">The `Loc` function is provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2466">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2466">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2467">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2467">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2468">以下說明每個檔案存取模式的傳回值：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2468">The following describes the return value for each file access mode:</span></span>  
  
|<span data-ttu-id="ac3c2-2469">模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2469">Mode</span></span>|<span data-ttu-id="ac3c2-2470">傳回值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2470">Return value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="ac3c2-2471">讀取或寫入檔案的最後一個記錄的數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2471">Number of the last record read from or written to the file.</span></span>|  
|`Sequential`|<span data-ttu-id="ac3c2-2472">除以 128 檔案中的目前位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2472">Current byte position in the file divided by 128.</span></span> <span data-ttu-id="ac3c2-2473">不過，資訊會由`Loc`的循序檔案不會使用或所需。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2473">However, information returned by `Loc` for sequential files is neither used nor required.</span></span>|  
|`Binary`|<span data-ttu-id="ac3c2-2474">讀取或寫入的最後一個位元組的位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2474">Position of the last byte read or written.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2475">這個範例會使用`Loc`函式來傳回目前的讀取/寫入位置，在開啟的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2475">This example uses the `Loc` function to return the current read/write position in an open file.</span></span> <span data-ttu-id="ac3c2-2476">這個範例假設`MyFile`是具有數行的範例資料的文字檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2476">This example assumes that `MyFile` is a text file that has several lines of sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2477">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2477">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Seek" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Lock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2478">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2478">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2479">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2479">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2480">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2480">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Lock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2481">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2481">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2482">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2482">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2483">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2483">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2484">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2484">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2485">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2485">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2486">`Lock`和`Unlock`函式適用於環境中，數個程序可能需要存取相同的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2486">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="ac3c2-2487">`Lock` 和`Unlock`函式一律會在配對。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2487">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="ac3c2-2488">引數`Lock`和`Unlock`必須相同。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2488">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="ac3c2-2489">如果`Record`，或`FromRecord`和`ToRecord`都未提供，鎖定將會針對整個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2489">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="ac3c2-2490">如果`Record`單獨指定單一資料錄將會鎖定/解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2490">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="ac3c2-2491">如果已為循序的輸入或輸出中，開啟檔案`Lock`並`Unlock`影響整個檔案，而不論所指定的範圍`FromRecord`和`ToRecord`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2491">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2492">此範例說明如何使用`Lock`和`Unlock`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2492">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="ac3c2-2493">這個範例假設`People.txt`是包含的結構記錄檔`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2493">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2494">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2494">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2495">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2495">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2496">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2496">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="ac3c2-2497">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2497">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2498">Number of the only record or byte to lock or unlock</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2498">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2499">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2499">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2500">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2500">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2501">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2501">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2502">`Lock`和`Unlock`函式適用於環境中，數個程序可能需要存取相同的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2502">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="ac3c2-2503">`Lock` 和`Unlock`函式一律會在配對。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2503">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="ac3c2-2504">引數`Lock`和`Unlock`必須相同。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2504">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="ac3c2-2505">如果`Record`，或`FromRecord`和`ToRecord`都未提供，鎖定將會針對整個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2505">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="ac3c2-2506">如果`Record`單獨指定單一資料錄將會鎖定/解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2506">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="ac3c2-2507">如果已為循序的輸入或輸出中，開啟檔案`Lock`並`Unlock`影響整個檔案，而不論所指定的範圍`FromRecord`和`ToRecord`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2507">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2508">此範例說明如何使用`Lock`和`Unlock`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2508">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="ac3c2-2509">這個範例假設`People.txt`是包含的結構記錄檔`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2509">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2510">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2510">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public static void Lock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Lock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Lock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Lock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Lock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2511">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2511">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2512">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2512">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="ac3c2-2513">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2513">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2514">Number of the first record or byte to lock or unlock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2514">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="ac3c2-2515">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2515">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2516">Number of the last record or byte to lock or unlock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2516">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2517">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2517">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2518">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2518">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2519">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2519">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2520">`Lock`和`Unlock`函式適用於環境中，數個程序可能需要存取相同的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2520">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="ac3c2-2521">`Lock` 和`Unlock`函式一律會在配對。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2521">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="ac3c2-2522">引數`Lock`和`Unlock`必須相同。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2522">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="ac3c2-2523">如果`Record`，或`FromRecord`和`ToRecord`都未提供，鎖定將會針對整個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2523">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="ac3c2-2524">如果`Record`單獨指定單一資料錄將會鎖定/解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2524">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="ac3c2-2525">如果已為循序的輸入或輸出中，開啟檔案`Lock`並`Unlock`影響整個檔案，而不論所指定的範圍`FromRecord`和`ToRecord`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2525">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2526">此範例說明如何使用`Lock`和`Unlock`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2526">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="ac3c2-2527">這個範例假設`People.txt`是包含的結構記錄檔`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2527">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2528">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2528">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="LOF">
      <MemberSignature Language="C#" Value="public static long LOF (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 LOF(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LOF (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long LOF(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member LOF : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.LOF FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2529">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2529">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2530">An <see langword="Integer" /> that contains a valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2530">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2531">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2531">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2532">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2532">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2533">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2533">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2534">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2534">Returns a <see langword="Long" /> representing the size, in bytes, of a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2535">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="LOF" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2536">使用`FileLen`函式來取得未開啟檔案的長度。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2536">Use the `FileLen` function to obtain the length of a file that is not open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2537">這個範例會使用`LOF`函式來判斷已開啟之檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2537">This example uses the `LOF` function to determine the size of an open file.</span></span> <span data-ttu-id="ac3c2-2538">這個範例假設`TestFile`是文字檔案，其中包含範例資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2538">This example assumes that `TestFile` is a text file that contains sample data.</span></span>  
  
 [!code-vb[VbVbalrCatRef#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2539">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2539">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="MkDir">
      <MemberSignature Language="C#" Value="public static void MkDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MkDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MkDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MkDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member MkDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.MkDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="ac3c2-2540">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2540">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2541">
            <see langword="String" /> expression that identifies the directory to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2541">
              <see langword="String" /> expression that identifies the directory to be created.</span>
          </span>
          <span data-ttu-id="ac3c2-2542">The <c>Path</c> may include the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2542">The <c>Path</c> may include the drive.</span>
          </span>
          <span data-ttu-id="ac3c2-2543">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2543">If no drive is specified, <see langword="MkDir" /> creates the new directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2544">Creates a new directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2544">Creates a new directory.</span>
          </span>
          <span data-ttu-id="ac3c2-2545">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2545">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="MkDir" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2546">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2546">For more information, see <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2547">此函式會建立新的目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2547">This function creates a new directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2548">這個範例會使用`MkDir`函式來建立目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2548">This example uses the `MkDir` function to create a directory.</span></span> <span data-ttu-id="ac3c2-2549">如果未指定磁碟機，在目前的磁碟機上建立新的目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2549">If the drive is not specified, the new directory is created on the current drive.</span></span>  
  
 [!code-vb[VbVbalrCatRef#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-2550">
            <paramref name="Path" /> is not specified or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2550">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ac3c2-2551">Permission denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2551">Permission denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2552">Directory already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2552">Directory already exists.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Print(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Print : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Print (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2553">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2553">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2554">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2554">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="ac3c2-2555">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2555">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2556">Zero or more comma-delimited expressions to write to a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2556">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="ac3c2-2557">The <c>Output</c> argument settings are:  <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2557">The <c>Output</c> argument settings are:  <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="ac3c2-2558">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2558">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2559">Writes display-formatted data to a sequential file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2559">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2560">`Print`和`PrintLine`函式針對回溯相容性提供，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2560">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2561">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2561">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2562">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2562">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2563">`Print` 不包含換行字元結尾的行不過，`PrintLine`包含換行字元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2563">`Print` does not include a line feed at the end of a line; however, `PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="ac3c2-2564">資料寫入`Print`通常從檔案讀取利用`LineInput`或`Input`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2564">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="ac3c2-2565">如果您省略`Output`for `PrintLine`，列印一行空白行檔案; 如`Print`，沒有輸出。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2565">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="ac3c2-2566">多個以逗號分隔的運算式將會對齊索引標籤的界限，但混用逗號和`TAB`可能會導致不一致的結果。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2566">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="ac3c2-2567">針對`Boolean`資料，可以是`True`或`False`列印。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2567">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="ac3c2-2568">`True`和`False`關鍵字不會轉譯，不論地區設定為何。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2568">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="ac3c2-2569">日期資料寫入檔案中，使用您的系統可辨識的標準的簡短日期格式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2569">Date data is written to the file by using the standard short date format recognized by your system.</span></span> <span data-ttu-id="ac3c2-2570">當日期或時間的元件遺失或為零時，只提供部分寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2570">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="ac3c2-2571">如果，則不寫入至檔案`Output`是空的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2571">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="ac3c2-2572">不過，如果`Output`清單中的資料`DBNull`，`Null`寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2572">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="ac3c2-2573">針對`Error`資料，輸出會顯示為`Error errorcode`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2573">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="ac3c2-2574">`Error`不論地區設定不會轉譯關鍵字。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2574">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="ac3c2-2575">寫入檔案中使用的所有資料`Print`是國際感知; 也就是資料已正確地格式化使用適當的小數分隔符號。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2575">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="ac3c2-2576">如果使用者想要輸出多個地區設定中，供資料`Write`應該使用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2576">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="ac3c2-2577">寫入檔案，使用`Print`或是`PrintLine`函式需要`Write`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2577">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2578">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2578">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2579">這個範例會使用`Print`和`PrintLine`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2579">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="PrintLine">
      <MemberSignature Language="C#" Value="public static void PrintLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void PrintLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrintLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member PrintLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.PrintLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2580">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2580">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2581">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2581">Any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="ac3c2-2582">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2582">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2583">Zero or more comma-delimited expressions to write to a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2583">Zero or more comma-delimited expressions to write to a file.</span>
          </span>
          <span data-ttu-id="ac3c2-2584">The <c>Output</c> argument settings are:  <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2584">The <c>Output</c> argument settings are:  <see langword="T:System.IO.IOException" />: File mode is invalid.</span>
          </span>
          <span data-ttu-id="ac3c2-2585">
            <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2585">
              <see langword="T:System.IO.IOException" />: <c>FileNumber</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2586">Writes display-formatted data to a sequential file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2586">Writes display-formatted data to a sequential file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2587">`Print`和`PrintLine`函式針對回溯相容性提供，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2587">The `Print` and `PrintLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2588">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2588">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2589">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2589">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2590">`Print` 不包含換行字元結尾的行不過，`PrintLine`包含換行字元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2590">`Print` does not include a line feed at the end of a line; however,`PrintLine` does include a line feed.</span></span>  
  
 <span data-ttu-id="ac3c2-2591">資料寫入`Print`通常從檔案讀取利用`LineInput`或`Input`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2591">Data written with `Print` is usually read from a file by using `LineInput` or `Input`.</span></span>  
  
 <span data-ttu-id="ac3c2-2592">如果您省略`Output`for `PrintLine`，列印一行空白行檔案; 如`Print`，沒有輸出。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2592">If you omit `Output` for `PrintLine`, a blank line is printed to the file; for `Print`, nothing is output.</span></span> <span data-ttu-id="ac3c2-2593">多個以逗號分隔的運算式將會對齊索引標籤的界限，但混用逗號和`TAB`可能會導致不一致的結果。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2593">Multiple expressions separated with a comma will be aligned on tab boundaries, but mixing commas and `TAB` may cause inconsistent results.</span></span>  
  
 <span data-ttu-id="ac3c2-2594">針對`Boolean`資料，可以是`True`或`False`列印。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2594">For `Boolean` data, either `True` or `False` is printed.</span></span> <span data-ttu-id="ac3c2-2595">`True`和`False`關鍵字不會轉譯，不論地區設定為何。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2595">The `True` and `False` keywords are not translated, regardless of the locale.</span></span>  
  
 <span data-ttu-id="ac3c2-2596">日期資料寫入檔案中，使用系統可辨識的標準的簡短日期格式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2596">Date data is written to the file by using the standard short date format recognized by the system.</span></span> <span data-ttu-id="ac3c2-2597">當日期或時間的元件遺失或為零時，只提供部分寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2597">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
 <span data-ttu-id="ac3c2-2598">如果，則不寫入至檔案`Output`是空的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2598">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="ac3c2-2599">不過，如果`Output`清單中的資料`DBNull`，`Null`寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2599">However, if `Output` list data is `DBNull`, `Null` is written to the file.</span></span>  
  
 <span data-ttu-id="ac3c2-2600">針對`Error`資料，輸出會顯示為`Error errorcode`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2600">For `Error` data, the output appears as `Error errorcode`.</span></span> <span data-ttu-id="ac3c2-2601">`Error`不論地區設定不會轉譯關鍵字。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2601">The `Error` keyword is not translated regardless of the locale.</span></span>  
  
 <span data-ttu-id="ac3c2-2602">寫入檔案中使用的所有資料`Print`是國際感知; 也就是資料已正確地格式化使用適當的小數分隔符號。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2602">All data written to the file by using `Print` is internationally aware; that is, the data is correctly formatted using the appropriate decimal separator.</span></span> <span data-ttu-id="ac3c2-2603">如果使用者想要輸出多個地區設定中，供資料`Write`應該使用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2603">If the user wishes to output data for use by multiple locales, `Write` should be used.</span></span>  
  
 <span data-ttu-id="ac3c2-2604">寫入檔案，使用`Print`或是`PrintLine`函式需要`Write`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2604">Writing to a file by using the `Print` or `PrintLine` functions requires `Write` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2605">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2605">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2606">這個範例會使用`Print`和`PrintLine`函式，將資料寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2606">This example uses the `Print` and `PrintLine` functions to write data to a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public static void Rename (string OldPath, string NewPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Rename(string OldPath, string NewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (OldPath As String, NewPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Rename(System::String ^ OldPath, System::String ^ NewPath);" />
      <MemberSignature Language="F#" Value="static member Rename : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Rename (OldPath, NewPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OldPath" Type="System.String" />
        <Parameter Name="NewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="OldPath">
          <span data-ttu-id="ac3c2-2607">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2607">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2608">
            <see langword="String" /> expression that specifies the existing file name and location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2608">
              <see langword="String" /> expression that specifies the existing file name and location.</span>
          </span>
          <span data-ttu-id="ac3c2-2609">
            <c>OldPath</c> may include the directory, and drive, of the file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2609">
              <c>OldPath</c> may include the directory, and drive, of the file.</span>
          </span>
        </param>
        <param name="NewPath">
          <span data-ttu-id="ac3c2-2610">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2610">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2611">
            <see langword="String" /> expression that specifies the new file name and location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2611">
              <see langword="String" /> expression that specifies the new file name and location.</span>
          </span>
          <span data-ttu-id="ac3c2-2612">
            <c>NewPath</c> may include directory and drive of the destination location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2612">
              <c>NewPath</c> may include directory and drive of the destination location.</span>
          </span>
          <span data-ttu-id="ac3c2-2613">The file name specified by <c>NewPath</c> cannot already exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2613">The file name specified by <c>NewPath</c> cannot already exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2614">Renames a disk file or directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2614">Renames a disk file or directory.</span>
          </span>
          <span data-ttu-id="ac3c2-2615">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2615">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Rename" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2616">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2616">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2617">`Rename`函式重新命名檔案，並將它移到另一個目錄，如有必要。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2617">The`Rename` function renames a file and moves it to a different directory, if it is required.</span></span> <span data-ttu-id="ac3c2-2618">`Rename`函式可以將檔案移到磁碟機，但它只能重新命名現有的目錄時兩者`NewPath`和`OldPath`都位於相同的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2618">The `Rename` function can move a file across drives, but it can only rename an existing directory when both `NewPath` and `OldPath` are located on the same drive.</span></span> <span data-ttu-id="ac3c2-2619">`Rename` 無法建立新的檔案或目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2619">`Rename` cannot create a new file or directory.</span></span>  
  
 <span data-ttu-id="ac3c2-2620">使用`Rename`函式開啟的檔案會產生錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2620">Using the `Rename` function on an open file produces an error.</span></span> <span data-ttu-id="ac3c2-2621">您必須先關閉開啟的檔案，才能重新命名。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2621">You must close an open file before renaming it.</span></span> <span data-ttu-id="ac3c2-2622">`Rename` 引數不能包含多個字元 （\*） 和單一字元 （？） 的萬用字元。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2622">`Rename` arguments cannot include multiple-character (\*) and single-character (?) wildcards.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac3c2-2623">當使用`Rename`將來自未受保護位置的檔案複製到受保護的位置中，該檔案會保留的限制較少的權限。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2623">When using `Rename` to copy a file from an unprotected location to a protected location, the file retains the less restricted rights.</span></span> <span data-ttu-id="ac3c2-2624">請檢查以確定未造成可能的安全性風險。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2624">Check to make sure that you are not introducing a possible security risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2625">這個範例會使用`Rename`函式來重新命名檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2625">This example uses the `Rename` function to rename a file.</span></span> <span data-ttu-id="ac3c2-2626">基於此範例的詳細資訊，請假設已指定的目錄已經存在。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2626">For purposes of this example, assume that the directories that are specified already exist.</span></span>  
  
 [!code-vb[VbVbalrCatRef#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-2627">Path is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2627">Path is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-2628">
            <paramref name="OldPath" /> file does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2628">
              <paramref name="OldPath" /> file does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2629">Cannot rename to different device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2629">Cannot rename to different device.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public static void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reset();" />
      <MemberSignature Language="F#" Value="static member Reset : unit -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2630">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2630">Closes all disk files opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2631">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2631">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Reset" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2632">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2632">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2633">`Reset`函式會關閉開啟的所有作用中檔案`FileOpen`函式，並具有相同的功能`FileClose()`不含任何參數。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2633">The `Reset` function closes all active files opened by the `FileOpen` function and has the same function as `FileClose()` without any parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2634">這個範例會使用`Reset`函式來關閉所有開啟的檔案並寫入磁碟中的所有檔案緩衝區的內容。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2634">This example uses the `Reset` function to close all open files and write the contents of all file buffers to disk.</span></span> <span data-ttu-id="ac3c2-2635">請注意，使用`Object`變數`FileNumber`做為字串和數字。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2635">Note the use of the `Object` variable `FileNumber` as both a string and a number.</span></span>  
  
 [!code-vb[VbVbalrCatRef#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RmDir">
      <MemberSignature Language="C#" Value="public static void RmDir (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public static void RmDir(string Path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RmDir (Path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RmDir(System::String ^ Path);" />
      <MemberSignature Language="F#" Value="static member RmDir : string -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.RmDir Path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path">
          <span data-ttu-id="ac3c2-2636">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2636">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2637">
            <see langword="String" /> expression that identifies the directory or folder to be removed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2637">
              <see langword="String" /> expression that identifies the directory or folder to be removed.</span>
          </span>
          <span data-ttu-id="ac3c2-2638">
            <c>Path</c> can include the drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2638">
              <c>Path</c> can include the drive.</span>
          </span>
          <span data-ttu-id="ac3c2-2639">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2639">If no drive is specified, <see langword="RmDir" /> removes the directory on the current drive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2640">Removes an existing directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2640">Removes an existing directory.</span>
          </span>
          <span data-ttu-id="ac3c2-2641">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2641">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="RmDir" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2642">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2642">For more information, see <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2643">如果您嘗試使用，就會發生錯誤`RmDir`包含檔案的目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2643">An error occurs if you try to use `RmDir` on a directory that contains files.</span></span> <span data-ttu-id="ac3c2-2644">使用`Kill`函式來刪除所有檔案，然後再移除目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2644">Use the `Kill` function to delete all files before you try to remove a directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2645">這個範例會使用`RmDir`函式以移除現有的目錄。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2645">This example uses the `RmDir` function to remove an existing directory.</span></span>  
  
 [!code-vb[VbVbalrCatRef#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-2646">
            <paramref name="Path" /> is not specified or is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2646">
              <paramref name="Path" /> is not specified or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2647">Target directory contains files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2647">Target directory contains files.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ac3c2-2648">Directory does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2648">Directory does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.CurDir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.IOException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2649">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2649">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2650">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2650">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2651">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2651">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static long Seek (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Seek(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Seek (FileNumber As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Seek(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Seek : int -&gt; int64" Usage="Microsoft.VisualBasic.FileSystem.Seek FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2652">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2652">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2653">An <see langword="Integer" /> that contains a valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2653">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2654">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2654">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2655">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2655">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2656">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2656">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2657">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2657">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2658">`Seek` 傳回介於 1 到 2,147,483,647 之間的值 (相當於 2 ^31-1) 之間，內含。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2658">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="ac3c2-2659">以下說明每個檔案存取模式的傳回值：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2659">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="ac3c2-2660">模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2660">Mode</span></span>|<span data-ttu-id="ac3c2-2661">傳回值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2661">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="ac3c2-2662">下一個記錄讀取或寫入的數目</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2662">Number of the next record read or written</span></span>|  
|<span data-ttu-id="ac3c2-2663">`Binary`、`Input`、`Output``Append`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2663">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="ac3c2-2664">下一項作業就會發生的位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2664">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="ac3c2-2665">在檔案中的第一個位元組位於位置 1，第二個位元組是在位置 2，以此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2665">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2666">這個範例會使用`Seek`函數來傳回目前的檔案位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2666">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="ac3c2-2667">此範例假設`TestFile`是包含的結構記錄檔`Record`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2667">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="ac3c2-2668">在開啟的檔案`Random`模式中，`Seek`傳回下一筆記錄的數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2668">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="ac3c2-2669">以外的其他模式中開啟之檔案`Random`模式中，`Seek`傳回下一項作業就會發生的位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2669">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="ac3c2-2670">假設`TestFile`是包含幾行文字的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2670">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="ac3c2-2671">這個範例會使用`Seek`函式，以將位置設定下一個要讀取或寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2671">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="ac3c2-2672">以外的其他模式中開啟之檔案`Random`模式中，`Seek`設定下一個作業就會發生的位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2672">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="ac3c2-2673">假設`TestFile`是包含幾行文字的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2673">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2674">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2674">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public static void Seek (int FileNumber, long Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Seek(int32 FileNumber, int64 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (FileNumber As Integer, Position As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Seek(int FileNumber, long Position);" />
      <MemberSignature Language="F#" Value="static member Seek : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Seek (FileNumber, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Position" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2675">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2675">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2676">An <see langword="Integer" /> that contains a valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2676">An <see langword="Integer" /> that contains a valid file number.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="ac3c2-2677">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2677">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2678">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2678">Number in the range 1–2,147,483,647, inclusive, that indicates where the next read/write operation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2679">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2679">Returns a <see langword="Long" /> specifying the current read/write position in a file opened by using the <see langword="FileOpen" /> function, or sets the position for the next read/write operation in a file opened by using the <see langword="FileOpen" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2680">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2680">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Seek" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2681">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2681">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2682">`Seek` 傳回介於 1 到 2,147,483,647 之間的值 (相當於 2 ^31-1) 之間，內含。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2682">`Seek` returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</span></span>  
  
 <span data-ttu-id="ac3c2-2683">以下說明每個檔案存取模式的傳回值：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2683">The following describes the return values for each file access mode:</span></span>  
  
|<span data-ttu-id="ac3c2-2684">模式</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2684">Mode</span></span>|<span data-ttu-id="ac3c2-2685">傳回值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2685">Return Value</span></span>|  
|-|-|  
|`Random`|<span data-ttu-id="ac3c2-2686">下一個記錄讀取或寫入的數目</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2686">Number of the next record read or written</span></span>|  
|<span data-ttu-id="ac3c2-2687">`Binary`、`Input`、`Output``Append`</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2687">`Binary`, `Input`, `Output`, `Append`</span></span>|<span data-ttu-id="ac3c2-2688">下一項作業就會發生的位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2688">Byte position at which the next operation occurs.</span></span> <span data-ttu-id="ac3c2-2689">在檔案中的第一個位元組位於位置 1，第二個位元組是在位置 2，以此類推。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2689">The first byte in a file is at position 1, the second byte is at position 2, and so on.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2690">這個範例會使用`Seek`函數來傳回目前的檔案位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2690">This example uses the `Seek` function to return the current file position.</span></span> <span data-ttu-id="ac3c2-2691">此範例假設`TestFile`是包含的結構記錄檔`Record`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2691">The example assumes `TestFile` is a file that contains records of the structure `Record`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#47)]  
  
 <span data-ttu-id="ac3c2-2692">在開啟的檔案`Random`模式中，`Seek`傳回下一筆記錄的數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2692">For files opened in `Random` mode, `Seek` returns the number of next record.</span></span>  
  
 [!code-vb[VbVbalrCatRef#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#48)]  
  
 <span data-ttu-id="ac3c2-2693">以外的其他模式中開啟之檔案`Random`模式中，`Seek`傳回下一項作業就會發生的位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2693">For files opened in modes other than `Random` mode, `Seek` returns the byte position at which the next operation occurs.</span></span> <span data-ttu-id="ac3c2-2694">假設`TestFile`是包含幾行文字的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2694">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#49)]  
  
 <span data-ttu-id="ac3c2-2695">這個範例會使用`Seek`函式，以將位置設定下一個要讀取或寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2695">This example uses the `Seek` function to set the position for the next read or write in a file.</span></span>  
  
 <span data-ttu-id="ac3c2-2696">以外的其他模式中開啟之檔案`Random`模式中，`Seek`設定下一個作業就會發生的位元組位置。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2696">For files opened in modes other than `Random` mode, `Seek` sets the byte position at which the next operation occurs.</span></span> <span data-ttu-id="ac3c2-2697">假設`TestFile`是包含幾行文字的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2697">Assume `TestFile` is a file that contains several lines of text.</span></span>  
  
 [!code-vb[VbVbalrCatRef#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2698">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2698">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FileGet" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetAttr">
      <MemberSignature Language="C#" Value="public static void SetAttr (string PathName, Microsoft.VisualBasic.FileAttribute Attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetAttr(string PathName, valuetype Microsoft.VisualBasic.FileAttribute Attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttr (PathName As String, Attributes As FileAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAttr(System::String ^ PathName, Microsoft::VisualBasic::FileAttribute Attributes);" />
      <MemberSignature Language="F#" Value="static member SetAttr : string * Microsoft.VisualBasic.FileAttribute -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.SetAttr (PathName, Attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Attributes" Type="Microsoft.VisualBasic.FileAttribute" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="ac3c2-2699">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2699">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2700">
            <see langword="String" /> expression that specifies a file name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2700">
              <see langword="String" /> expression that specifies a file name.</span>
          </span>
          <span data-ttu-id="ac3c2-2701">
            <c>PathName</c> can include directory or folder, and drive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2701">
              <c>PathName</c> can include directory or folder, and drive.</span>
          </span>
        </param>
        <param name="Attributes">
          <span data-ttu-id="ac3c2-2702">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2702">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2703">Constant or numeric expression, whose sum specifies file attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2703">Constant or numeric expression, whose sum specifies file attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2704">Sets attribute information for a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2704">Sets attribute information for a file.</span>
          </span>
          <span data-ttu-id="ac3c2-2705">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2705">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="SetAttr" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2706">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2706">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2707">如果您嘗試設定已開啟之檔案的屬性，就會發生執行階段錯誤。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2707">A run-time error occurs if you try to set the attributes of an open file.</span></span>  
  
 <span data-ttu-id="ac3c2-2708">`Attributes`引數的列舉值如下所示：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2708">The `Attributes` argument enumeration values are as follows:</span></span>  
  
|<span data-ttu-id="ac3c2-2709">值</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2709">Value</span></span>|<span data-ttu-id="ac3c2-2710">常數</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2710">Constant</span></span>|<span data-ttu-id="ac3c2-2711">描述</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2711">Description</span></span>|  
|-|-|-|  
|`Normal`|`vbNormal`|<span data-ttu-id="ac3c2-2712">標準模式 （預設值）。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2712">Normal (default).</span></span>|  
|`ReadOnly`|`vbReadOnly`|<span data-ttu-id="ac3c2-2713">唯讀。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2713">Read-only.</span></span>|  
|`Hidden`|`vbHidden`|<span data-ttu-id="ac3c2-2714">隱藏。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2714">Hidden.</span></span>|  
|`System`|`vbSystem`|<span data-ttu-id="ac3c2-2715">系統檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2715">System file.</span></span>|  
|`Volume`|`vbVolume`|<span data-ttu-id="ac3c2-2716">磁碟區標籤</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2716">Volume label</span></span>|  
|`Directory`|`vbDirectory`|<span data-ttu-id="ac3c2-2717">目錄或資料夾。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2717">Directory or folder.</span></span>|  
|`Archive`|`vbArchive`|<span data-ttu-id="ac3c2-2718">上次備份之後變更檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2718">File has changed since last backup.</span></span>|  
|`Alias`|`vbAlias`|<span data-ttu-id="ac3c2-2719">檔案有不同的名稱。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2719">File has a different name.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2720">這些列舉 Visual Basic 語言所指定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2720">These enumerations are specified by the Visual Basic language.</span></span> <span data-ttu-id="ac3c2-2721">名稱可在您的程式碼，而不是實際的值中的任何地方使用。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2721">The names can be used anywhere in your code instead of the actual values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2722">這個範例會使用`SetAttr`函式來設定檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2722">This example uses the `SetAttr` function to set attributes for a file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac3c2-2723">
            <paramref name="Attribute" /> type is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2723">
              <paramref name="Attribute" /> type is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="SPC">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.SpcInfo SPC (short Count);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.SpcInfo SPC(int16 Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function SPC (Count As Short) As SpcInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::SpcInfo SPC(short Count);" />
      <MemberSignature Language="F#" Value="static member SPC : int16 -&gt; Microsoft.VisualBasic.SpcInfo" Usage="Microsoft.VisualBasic.FileSystem.SPC Count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.SpcInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Count" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Count">
          <span data-ttu-id="ac3c2-2724">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2724">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2725">The number of spaces to insert before displaying or printing the next expression in a list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2725">The number of spaces to insert before displaying or printing the next expression in a list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2726">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2726">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2727">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2727">Used with the <see langword="Print" /> or <see langword="PrintLine" /> function to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2728">如果`Count`少於輸出行寬度下, 一個列印位置立即遵循的列印的空格數目。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2728">If `Count` is less than the output line width, the next print position immediately follows the number of spaces printed.</span></span> <span data-ttu-id="ac3c2-2729">如果`Count`大於輸出行寬度，`SPC`計算中使用的公式的下一步 列印位置：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2729">If`Count` is greater than the output line width, `SPC` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="ac3c2-2730">`currentprintposition`(+(`Count``Mod``width`))</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2730">`currentprintposition`(+(`Count``Mod``width`))</span></span>  
  
 <span data-ttu-id="ac3c2-2731">比方說，如果目前的列印位置為 24，輸出行寬度是 80，且您指定`SPC(90)`下, 一個列印時會啟動位置為 34 （目前的列印位置 + 90/80 的餘數）。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2731">For example, if the current print position is 24, the output line width is 80, and you specify `SPC(90)`, the next print will start at position 34 (current print position + the remainder of 90/80).</span></span> <span data-ttu-id="ac3c2-2732">如果目前的列印位置與輸出行寬度之間的差異是小於`Count`(或`Count` `Mod` *寬度*)，則`SPC`函式就會跳到下一行的開頭，並產生空間等於`Count`– (*寬度*– *currentprintposition*)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2732">If the difference between the current print position and the output line width is less than `Count` (or `Count` `Mod` *width*), the `SPC` function skips to the start of the next line and generates spaces equal to `Count` – (*width* – *currentprintposition*).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2733">請確定您的表格式資料行的寬度不足以容納寬字母。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2733">Make sure your tabular columns are wide enough to allow for wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2734">這個範例會使用`SPC`函式用於定位輸出檔案中，然後在**輸出**視窗。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2734">This example uses the `SPC` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.TAB" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TAB">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2735">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2735">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB ();" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB () As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB();" />
      <MemberSignature Language="F#" Value="static member TAB : unit -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2736">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2736">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2737">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2737">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2738">如果目前的行上目前的列印位置大於`Column`，`TAB`就會跳到資料行值等於`Column`在下一步 的輸出行。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2738">If the current print position on the current line is larger than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="ac3c2-2739">如果`Column`小於 1，`TAB`的列印位置移至 資料行 1。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2739">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="ac3c2-2740">如果`Column`大於輸出行寬度，`TAB`計算中使用的公式的下一步 列印位置：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2740">If `Column` is larger than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="ac3c2-2741">資料行的 Mod 寬度</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2741">Column Mod width</span></span>  
  
 <span data-ttu-id="ac3c2-2742">例如，如果*寬度*是 80，且您指定`TAB(90)`下, 一個列印會開始於行 10 （90/80 的餘數）。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2742">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="ac3c2-2743">如果`Column`小於目前的列印位置，在下一行中的導出的列印位置在列印開始。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2743">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="ac3c2-2744">如果導出的列印位置大於目前的列印位置，列印會在計算列印位置位於同一行上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2744">If the calculated print position is larger than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="ac3c2-2745">在輸出行上最左邊的列印位置一律為 1。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2745">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="ac3c2-2746">當您使用`Print`或是`PrintLine`函數來列印至檔案，最右邊的列印位置是輸出檔，您可以使用設定的目前寬度`FileWidth`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2746">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="ac3c2-2747">`TAB`函式也會搭配`WriteLine`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2747">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="ac3c2-2748">它不能搭配<xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType>或<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2748">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2749">請確定您的表格式資料行的寬度不足以包含廣泛的字母。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2749">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2750">這個範例會使用`TAB`函式用於定位輸出檔案中，然後在**輸出**視窗。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2750">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TAB">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.TabInfo TAB (short Column);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.TabInfo TAB(int16 Column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function TAB (Column As Short) As TabInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::TabInfo TAB(short Column);" />
      <MemberSignature Language="F#" Value="static member TAB : int16 -&gt; Microsoft.VisualBasic.TabInfo" Usage="Microsoft.VisualBasic.FileSystem.TAB Column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TabInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Column">
          <span data-ttu-id="ac3c2-2751">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2751">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2752">The column number moved to before displaying or printing the next expression in a list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2752">The column number moved to before displaying or printing the next expression in a list.</span>
          </span>
          <span data-ttu-id="ac3c2-2753">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2753">If omitted, <see langword="TAB" /> moves the insertion point to the start of the next print zone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2754">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2754">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac3c2-2755">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2755">Used with the <see langword="Print" /> or <see langword="PrintLine" /> functions to position output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2756">目前的行上目前的列印位置是否大於`Column`，`TAB`就會跳到資料行值等於`Column`在下一步 的輸出行。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2756">If the current print position on the current line is greater than `Column`, `TAB` skips to the column value equal to `Column` on the next output line.</span></span> <span data-ttu-id="ac3c2-2757">如果`Column`小於 1，`TAB`的列印位置移至 資料行 1。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2757">If `Column` is less than 1, `TAB` moves the print position to column 1.</span></span> <span data-ttu-id="ac3c2-2758">如果`Column`大於輸出行寬度，`TAB`計算中使用的公式的下一步 列印位置：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2758">If `Column` is greater than the output line width, `TAB` calculates the next print position using the formula:</span></span>  
  
 <span data-ttu-id="ac3c2-2759">資料行的 Mod 寬度</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2759">Column Mod width</span></span>  
  
 <span data-ttu-id="ac3c2-2760">例如，如果*寬度*是 80，且您指定`TAB(90)`下, 一個列印會開始於行 10 （90/80 的餘數）。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2760">For example, if *width* is 80 and you specify `TAB(90)`, the next print will start at column 10 (the remainder of 90/80).</span></span> <span data-ttu-id="ac3c2-2761">如果`Column`小於目前的列印位置，在下一行中的導出的列印位置在列印開始。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2761">If `Column` is less than the current print position, printing starts on the next line at the calculated print position.</span></span> <span data-ttu-id="ac3c2-2762">導出的列印位置是否大於目前的列印位置，列印會在計算列印位置位於同一行上。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2762">If the calculated print position is greater than the current print position, printing starts at the calculated print position on the same line.</span></span>  
  
 <span data-ttu-id="ac3c2-2763">在輸出行上最左邊的列印位置一律為 1。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2763">The leftmost print position on an output line is always 1.</span></span> <span data-ttu-id="ac3c2-2764">當您使用`Print`或是`PrintLine`函數來列印至檔案，最右邊的列印位置是輸出檔，您可以使用設定的目前寬度`FileWidth`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2764">When you use the `Print` or `PrintLine` functions to print to files, the rightmost print position is the current width of the output file, which you can set using the `FileWidth` function.</span></span>  
  
 <span data-ttu-id="ac3c2-2765">`TAB`函式也會搭配`WriteLine`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2765">The `TAB` function can also be used with the `WriteLine` function.</span></span> <span data-ttu-id="ac3c2-2766">它不能搭配<xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType>或<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2766">It cannot be used with <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac3c2-2767">請確定您的表格式資料行的寬度不足以包含廣泛的字母。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2767">Make sure your tabular columns are wide enough to contain wide letters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2768">這個範例會使用`TAB`函式用於定位輸出檔案中，然後在**輸出**視窗。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2768">This example uses the `TAB` function to position output in a file and in the **Output** window.</span></span>  
  
 [!code-vb[VbVbalrCatRef#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unlock">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac3c2-2769">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2769">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2770">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2770">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2771">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2771">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber);" />
      <MemberSignature Language="F#" Value="static member Unlock : int -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock FileNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2772">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2772">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2773">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2773">Any valid file number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2774">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2774">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2775">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2775">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2776">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2776">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2777">`Lock`和`Unlock`函式適用於環境中，數個程序可能需要存取相同的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2777">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="ac3c2-2778">`Lock` 和`Unlock`函式一律會在配對。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2778">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="ac3c2-2779">引數`Lock`和`Unlock`必須相同。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2779">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="ac3c2-2780">如果`Record`，或`FromRecord`和`ToRecord`都未提供，鎖定將會針對整個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2780">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="ac3c2-2781">如果`Record`單獨指定單一資料錄將會鎖定/解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2781">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="ac3c2-2782">如果已為循序的輸入或輸出中，開啟檔案`Lock`並`Unlock`影響整個檔案，而不論所指定的範圍`FromRecord`和`ToRecord`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2782">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2783">此範例說明如何使用`Lock`和`Unlock`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2783">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="ac3c2-2784">這個範例假設`People.txt`是包含的結構記錄檔`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2784">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2785">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2785">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long Record);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 Record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, Record As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long Record);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, Record)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Record" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2786">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2786">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2787">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2787">Any valid file number.</span>
          </span>
        </param>
        <param name="Record">
          <span data-ttu-id="ac3c2-2788">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2788">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2789">Number of the only record or byte to lock or unlock</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2789">Number of the only record or byte to lock or unlock</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2790">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2790">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2791">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2791">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2792">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2792">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2793">`Lock`和`Unlock`函式適用於環境中，數個程序可能需要存取相同的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2793">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="ac3c2-2794">`Lock` 和`Unlock`函式一律會在配對。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2794">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="ac3c2-2795">引數`Lock`和`Unlock`必須相同。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2795">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="ac3c2-2796">如果`Record`，或`FromRecord`和`ToRecord`都未提供，鎖定將會針對整個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2796">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="ac3c2-2797">如果`Record`單獨指定單一資料錄將會鎖定/解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2797">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="ac3c2-2798">如果已為循序的輸入或輸出中，開啟檔案`Lock`並`Unlock`影響整個檔案，而不論所指定的範圍`FromRecord`和`ToRecord`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2798">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2799">此範例說明如何使用`Lock`和`Unlock`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2799">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="ac3c2-2800">這個範例假設`People.txt`是包含的結構記錄檔`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2800">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2801">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2801">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public static void Unlock (int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Unlock(int32 FileNumber, int64 FromRecord, int64 ToRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock (FileNumber As Integer, FromRecord As Long, ToRecord As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unlock(int FileNumber, long FromRecord, long ToRecord);" />
      <MemberSignature Language="F#" Value="static member Unlock : int * int64 * int64 -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Unlock (FileNumber, FromRecord, ToRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="FromRecord" Type="System.Int64" />
        <Parameter Name="ToRecord" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2802">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2802">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2803">Any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2803">Any valid file number.</span>
          </span>
        </param>
        <param name="FromRecord">
          <span data-ttu-id="ac3c2-2804">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2804">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2805">Number of the first record or byte to lock or unlock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2805">Number of the first record or byte to lock or unlock.</span>
          </span>
        </param>
        <param name="ToRecord">
          <span data-ttu-id="ac3c2-2806">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2806">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2807">Number of the last record or byte to lock or unlock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2807">Number of the last record or byte to lock or unlock.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2808">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2808">Controls access by other processes to all or part of a file opened by using the <see langword="Open" /> function.</span>
          </span>
          <span data-ttu-id="ac3c2-2809">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2809">The <see langword="My" /> feature gives you better productivity and performance in file I/O operations than <see langword="Lock" /> and <see langword="Unlock" />.</span>
          </span>
          <span data-ttu-id="ac3c2-2810">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2810">For more information, see <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2811">`Lock`和`Unlock`函式適用於環境中，數個程序可能需要存取相同的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2811">The `Lock` and `Unlock` functions are used in environments where several processes might need access to the same file.</span></span>  
  
 <span data-ttu-id="ac3c2-2812">`Lock` 和`Unlock`函式一律會在配對。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2812">`Lock` and `Unlock` functions are always used in pairs.</span></span> <span data-ttu-id="ac3c2-2813">引數`Lock`和`Unlock`必須相同。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2813">The arguments to `Lock` and `Unlock` must be identical.</span></span>  
  
 <span data-ttu-id="ac3c2-2814">如果`Record`，或`FromRecord`和`ToRecord`都未提供，鎖定將會針對整個檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2814">If `Record`, or `FromRecord` and `ToRecord` are not supplied, the lock will be for the whole file.</span></span> <span data-ttu-id="ac3c2-2815">如果`Record`單獨指定單一資料錄將會鎖定/解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2815">If `Record` alone is specified the single record will be locked/unlocked.</span></span>  
  
 <span data-ttu-id="ac3c2-2816">如果已為循序的輸入或輸出中，開啟檔案`Lock`並`Unlock`影響整個檔案，而不論所指定的範圍`FromRecord`和`ToRecord`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2816">If the file has been opened for sequential input or output, `Lock` and `Unlock` affect the whole file, regardless of the range specified by `FromRecord` and`ToRecord`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2817">此範例說明如何使用`Lock`和`Unlock`函式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2817">This example illustrates the use of the `Lock` and `Unlock` functions.</span></span> <span data-ttu-id="ac3c2-2818">這個範例假設`People.txt`是包含的結構記錄檔`Person`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2818">This example assumes that `People.txt` is a file that contains records of the structure `Person`.</span></span>  
  
 [!code-vb[VbVbalrCatRef#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2819">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2819">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="T:System.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Write(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member Write : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.Write (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2820">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2820">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2821">An <see langword="Integer" /> expression that contains any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2821">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="ac3c2-2822">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2822">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2823">One or more comma-delimited expressions to write to a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2823">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2824">Writes data to a sequential file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2824">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="ac3c2-2825">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2825">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2826">`Write`和`WriteLine`函式針對回溯相容性提供，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2826">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2827">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2827">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2828">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2828">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2829">如果您省略`Output`，空白的線條會列印到檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2829">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="ac3c2-2830">可以以逗號分隔的多個運算式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2830">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="ac3c2-2831">不同於`Print`函式，`Write`函式會插入項目和字串的引號之間插入逗號會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2831">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="ac3c2-2832">您沒有在清單中放置明確的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2832">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="ac3c2-2833">當`Write`用來將資料寫入至檔案，只是數字`Boolean`，日期、 null、 和`Error`支援的資料格式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2833">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="ac3c2-2834">因此資料一律可以讀取並正確地解譯使用遵循下列通用假設`Input`，而不論地區設定：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2834">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="ac3c2-2835">寫入的數值資料使用句點作為小數分隔符號。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2835">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="ac3c2-2836">針對`Boolean`資料，可以是`#TRUE#`或`#FALSE#`列印。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2836">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="ac3c2-2837">`True`和`False`關鍵字不會轉譯，不論地區設定為何。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2837">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="ac3c2-2838">日期資料會寫入至使用通用的日期格式的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2838">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="ac3c2-2839">當日期或時間的元件遺失或為零時，只提供部分寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2839">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="ac3c2-2840">如果，則不寫入至檔案`Output`是空的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2840">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="ac3c2-2841">不過，對於 null 資料，`#NULL#`寫入。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2841">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-2842">針對`Error`資料，輸出會顯示為`#ERROR errorcode#`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2842">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="ac3c2-2843">`Error`關鍵字不會轉譯，不論地區設定為何。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2843">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="ac3c2-2844">`WriteLine` 插入新行字元 (也就是歸位字元/換，或是`Chr(13) + Chr(10)`)，撰寫最後一個字元之後`Output`檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2844">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="ac3c2-2845">您也可以使用雙引號括住，在字串中內嵌引號或""。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2845">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="ac3c2-2846">例如，套用至物件的</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2846">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="ac3c2-2847">傳回字串，其值為`Double quotation marks aren't "difficult" to handle`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2847">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="ac3c2-2848">寫入檔案，使用`Write`或是`WriteLine`函式需要`Append`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2848">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2849">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2849">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2850">這個範例會使用`Write`函式，將原始資料寫入循序檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2850">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ac3c2-2851">File mode is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2851">File mode is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int FileNumber, params object[] Output);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteLine(int32 FileNumber, object[] Output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (FileNumber As Integer, ParamArray Output As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int FileNumber, ... cli::array &lt;System::Object ^&gt; ^ Output);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int * obj[] -&gt; unit" Usage="Microsoft.VisualBasic.FileSystem.WriteLine (FileNumber, Output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileNumber" Type="System.Int32" />
        <Parameter Name="Output" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="FileNumber">
          <span data-ttu-id="ac3c2-2852">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2852">Required.</span>
          </span>
          <span data-ttu-id="ac3c2-2853">An <see langword="Integer" /> expression that contains any valid file number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2853">An <see langword="Integer" /> expression that contains any valid file number.</span>
          </span>
        </param>
        <param name="Output">
          <span data-ttu-id="ac3c2-2854">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2854">Optional.</span>
          </span>
          <span data-ttu-id="ac3c2-2855">One or more comma-delimited expressions to write to a file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2855">One or more comma-delimited expressions to write to a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac3c2-2856">Writes data to a sequential file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2856">Writes data to a sequential file.</span>
          </span>
          <span data-ttu-id="ac3c2-2857">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac3c2-2857">Data written with <see langword="Write" /> is usually read from a file by using <see langword="Input" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac3c2-2858">`Write`和`WriteLine`函式針對回溯相容性提供，而且可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2858">The `Write` and `WriteLine` functions are provided for backward compatibility and may affect performance.</span></span> <span data-ttu-id="ac3c2-2859">對於非傳統應用程式，`My.Computer.FileSystem`物件提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2859">For non-legacy applications, the `My.Computer.FileSystem` object provides better performance.</span></span> <span data-ttu-id="ac3c2-2860">如需詳細資訊，請參閱 <<c0> [ 使用 Visual Basic 存取檔案](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md)。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2860">For more information, see [File Access with Visual Basic](~/docs/visual-basic/developing-apps/programming/drives-directories-files/file-access.md).</span></span>  
  
 <span data-ttu-id="ac3c2-2861">如果您省略`Output`，空白的線條會列印到檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2861">If you omit `Output`, a blank line is printed to the file.</span></span> <span data-ttu-id="ac3c2-2862">可以以逗號分隔的多個運算式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2862">Multiple expressions can be separated with a comma.</span></span>  
  
 <span data-ttu-id="ac3c2-2863">不同於`Print`函式，`Write`函式會插入項目和字串的引號之間插入逗號會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2863">Unlike the `Print` function, the `Write` function inserts commas between items and quotation marks around strings as they are written to the file.</span></span> <span data-ttu-id="ac3c2-2864">您沒有在清單中放置明確的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2864">You do not have to put explicit delimiters in the list.</span></span> <span data-ttu-id="ac3c2-2865">當`Write`用來將資料寫入至檔案，只是數字`Boolean`，日期、 null、 和`Error`支援的資料格式。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2865">When `Write` is used to write data to a file, only numeric, `Boolean`, date, null, and `Error` data formats are supported.</span></span> <span data-ttu-id="ac3c2-2866">因此資料一律可以讀取並正確地解譯使用遵循下列通用假設`Input`，而不論地區設定：</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2866">The following universal assumptions are followed so the data can always be read and correctly interpreted using `Input`, regardless of locale:</span></span>  
  
-   <span data-ttu-id="ac3c2-2867">寫入的數值資料使用句點作為小數分隔符號。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2867">Numeric data is always written using the period as the decimal separator.</span></span>  
  
-   <span data-ttu-id="ac3c2-2868">針對`Boolean`資料，可以是`#TRUE#`或`#FALSE#`列印。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2868">For `Boolean` data, either `#TRUE#` or `#FALSE#` is printed.</span></span> <span data-ttu-id="ac3c2-2869">`True`和`False`關鍵字不會轉譯，不論地區設定為何。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2869">The `True` and `False` keywords are not translated, regardless of locale.</span></span>  
  
-   <span data-ttu-id="ac3c2-2870">日期資料會寫入至使用通用的日期格式的檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2870">Date data is written to the file using the universal date format.</span></span> <span data-ttu-id="ac3c2-2871">當日期或時間的元件遺失或為零時，只提供部分寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2871">When either the date or the time component is missing or zero, only the part provided is written to the file.</span></span>  
  
-   <span data-ttu-id="ac3c2-2872">如果，則不寫入至檔案`Output`是空的資料。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2872">Nothing is written to the file if `Output` data is empty.</span></span> <span data-ttu-id="ac3c2-2873">不過，對於 null 資料，`#NULL#`寫入。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2873">However, for null data, `#NULL#` is written.</span></span>  
  
-   <span data-ttu-id="ac3c2-2874">針對`Error`資料，輸出會顯示為`#ERROR errorcode#`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2874">For `Error` data, the output appears as `#ERROR errorcode#`.</span></span> <span data-ttu-id="ac3c2-2875">`Error`關鍵字不會轉譯，不論地區設定為何。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2875">The `Error` keyword is not translated, regardless of locale.</span></span>  
  
 <span data-ttu-id="ac3c2-2876">`WriteLine` 插入新行字元 (也就是歸位字元/換，或是`Chr(13) + Chr(10)`)，撰寫最後一個字元之後`Output`檔案。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2876">`WriteLine` inserts a newline character (that is, a carriage return/line feed, or `Chr(13) + Chr(10)`), after it has written the final character in `Output` to the file.</span></span>  
  
 <span data-ttu-id="ac3c2-2877">您也可以使用雙引號括住，在字串中內嵌引號或""。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2877">You can embed quotation marks in a string by using double quotation marks, or "".</span></span> <span data-ttu-id="ac3c2-2878">例如，套用至物件的</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2878">For example,</span></span>  
  
 [!code-vb[VbVbalrCatRef#63](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#63)]  
  
 <span data-ttu-id="ac3c2-2879">傳回字串，其值為`Double quotation marks aren't "difficult" to handle`。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2879">returns a string with the value of `Double quotation marks aren't "difficult" to handle`.</span></span>  
  
 <span data-ttu-id="ac3c2-2880">寫入檔案，使用`Write`或是`WriteLine`函式需要`Append`從存取`FileIOPermissionAccess`列舉型別。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2880">Writing to a file by using the `Write` or `WriteLine` functions requires `Append` access from the `FileIOPermissionAccess` enumeration.</span></span> <span data-ttu-id="ac3c2-2881">如需詳細資訊，請參閱<xref:System.Security.Permissions.FileIOPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2881">For more information, see <xref:System.Security.Permissions.FileIOPermissionAccess> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac3c2-2882">這個範例會使用`Write`函式，將原始資料寫入循序檔。</span><span class="sxs-lookup"><span data-stu-id="ac3c2-2882">This example uses the `Write` function to write raw data to a sequential file.</span></span>  
  
 [!code-vb[VbVbalrCatRef#64](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#64)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.Input" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
  </Members>
</Type>