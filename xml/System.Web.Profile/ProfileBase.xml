<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d95658de48ddc5b87e057e44efe4033884a8c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36598307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <TypeSignature Language="F#" Value="type ProfileBase = class&#xA;    inherit SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides untyped access to profile property values and information.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 會使用<xref:System.Web.Profile.ProfileBase>類別來建立使用者設定檔所使用的類別。 ASP.NET 具有已啟用的使用者設定檔的應用程式啟動時，會建立新的類別類型的`ProfileCommon`，後者繼承自<xref:System.Web.Profile.ProfileBase>類別。 強型別存取子會加入至`ProfileCommon`組態區段中定義的每一個屬性的類別。 強型別存取子`ProfileCommon`類別呼叫<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法<xref:System.Web.Profile.ProfileBase>基底類別，擷取和分別設定設定檔屬性值。 執行個體`ProfileCommon`類別設定的值為<xref:System.Web.HttpContext.Profile%2A>ASP.NET 應用程式的屬性。  
  
 若要建立 ASP.NET 應用程式的使用者設定檔的執行個體，建議您改用<xref:System.Web.Profile.ProfileBase.Create%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例顯示可指定使用者設定檔，其中包含 Web.config 檔`ZipCode`型別的屬性`string`和`RecentSearchList`型別的屬性<xref:System.Collections.Specialized.StringCollection>。 產生<xref:System.Web.HttpContext.Profile%2A>屬性的目前<xref:System.Web.HttpContext>將具有強型別存取子的每一個指定的屬性。  
  
```  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 下列程式碼範例示範讀取並設定 ASP.NET 網頁`ZipCode`屬性指定的使用者設定檔。 然後再嘗試執行此程式碼，提供者設定為預設`AspNetSqlProvider`在網站上的 ASP.NET 組態設定。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 下列程式碼範例定義一個類別，繼承自<xref:System.Web.Profile.ProfileBase>類別來建立自訂的設定檔。 已在指定的自訂設定檔類型`inherits`應用程式的 Web.config 檔案中的組態項目的屬性。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>您可以建立自訂設定檔實作繼承自<see cref="T:System.Web.Profile.ProfileBase" />抽象類別，並定義使用者設定檔中的組態項目未指定的屬性。您可以在 Web.config 檔案中指定的自訂使用者設定檔類型<see langword="inherits" />的組態項目，如下列範例所示的屬性。程式碼<c>EmployeeProfile</c>類別包含在本主題的範例 &gt; 一節。 ''&lt;分析 inherits="Samples.AspNet.Profile.EmployeeProfile"defaultProvider ="根據 SqlProvider"&gt; &lt;提供者&gt;&lt;清除 /&gt; &lt;新增名稱 ="根據 SqlProvider"type="System.Web.Profile.SqlProfileProvider"connectionStringName ="SqlServices 」 描述 ="SQL 設定檔提供者範例 」 /&gt; &lt;新增名稱 ="EmployeeInfoProvider"type ="System.Web.Profile.SqlProfileProvider"connectionStringName ="SqlServices 」 描述 = 「 員工 」 資訊的 SQL 設定檔提供者 」 /&gt; &lt;/providers&gt;&lt;屬性&gt;&lt;新增名稱 ="GarmentSize"/&gt; &lt;/properties&gt;  &lt; /設定檔  &gt;  
```</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.Profile.ProfileBase" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 會使用<xref:System.Web.Profile.ProfileBase>類別來建立使用者設定檔所使用的類別。 ASP.NET 具有已啟用的使用者設定檔的應用程式啟動時，會建立新的類別類型的`ProfileCommon`，後者繼承自<xref:System.Web.Profile.ProfileBase>類別。 強型別存取子會加入至`ProfileCommon`組態區段中定義的每一個屬性的類別。 強型別存取子`ProfileCommon`類別呼叫<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法<xref:System.Web.Profile.ProfileBase>基底類別，擷取和分別設定設定檔屬性值。 執行個體`ProfileCommon`類別設定的值為<xref:System.Web.HttpContext.Profile%2A>ASP.NET 應用程式的屬性。  
  
> [!NOTE]
>  用來產生儲存在該類別的基底類別<xref:System.Web.HttpContext.Profile%2A>屬性會覆寫使用`inherits`區段的組態檔的屬性。 在此情況下，您會指定自訂的類別繼承自<xref:System.Web.Profile.ProfileBase>基底類別。  
  
 這個建構函式不是從應用程式程式碼使用。 若要建立使用者設定檔的執行個體，請使用<xref:System.Web.Profile.ProfileBase.Create%2A>方法。  
  
   
  
## Examples  
 下列的 Web.config 檔會指定使用者設定檔，其中包含`ZipCode`型別的屬性`string`和`RecentSearchList`型別的屬性<xref:System.Collections.Specialized.StringCollection>。 產生<xref:System.Web.HttpContext.Profile%2A>屬性的目前<xref:System.Web.HttpContext>將具有強型別存取子的每一個指定的屬性。  
  
```  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 讀取下列 ASP.NET 網頁，並設定`ZipCode`屬性指定的使用者設定檔。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates an instance of a user profile.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to create a profile for.</param>
        <summary>Used by ASP.NET to create an instance of a profile for the specified user name.</summary>
        <returns>An <see cref="T:System.Web.Profile.ProfileBase" /> that represents the profile for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Create%2A>方法會建立並初始化新的設定檔執行個體，並使用自訂設定檔的應用程式物件，或管理使用者設定檔，在非 ASP.NET 的環境中很有用。  
  
 這個多載<xref:System.Web.Profile.ProfileBase.Create%2A>方法會假設指定的使用者名稱是已驗證的使用者。  
  
   
  
## Examples  
 下列程式碼範例建立自訂設定檔物件的執行個體、 設定屬性，並儲存到資料來源的設定檔。  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to create a profile for.</param>
        <param name="isAuthenticated">
          <see langword="true" /> to indicate the user is authenticated; <see langword="false" /> to indicate the user is anonymous.</param>
        <summary>Used by ASP.NET to create an instance of a profile for the specified user name. Takes a parameter indicating whether the user is authenticated or anonymous.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileBase" /> object that represents the profile for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Create%2A>方法會建立並初始化新的設定檔執行個體，並使用自訂設定檔的應用程式物件，或管理使用者設定檔，在非 ASP.NET 的環境中很有用。  
  
 這個多載<xref:System.Web.Profile.ProfileBase.Create%2A>方法可以用來建立已驗證的使用者或匿名使用者的設定檔。  
  
   
  
## Examples  
 下列程式碼範例建立自訂設定檔物件的執行個體、 設定屬性，並儲存到資料來源的設定檔。  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.GetProfileGroup : string -&gt; System.Web.Profile.ProfileGroupBase" Usage="profileBase.GetProfileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The name of the group of properties.</param>
        <summary>Gets a group of properties identified by a group name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileGroupBase" /> object for a group of properties configured with the specified group name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定檔屬性可以分成較佳的組織的群組。 <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A>屬性可以用來擷取一組屬性，依照群組名稱。 您也可以藉由指定的群組名稱的成員身分來存取群組中的設定檔內容`Profile`每個頁面上所提供的屬性。 例如，`ZipCode`設定檔內容的成員`Address`無法使用存取設定檔群組`Profile.Address.ZipCode`。  
  
   
  
## Examples  
 下列的 Web.config 檔會指定使用者設定檔，其中包含與群組名稱的屬性群組`Address`。 針對產生的群組的屬性<xref:System.Web.HttpContext.Profile%2A>屬性的目前<xref:System.Web.HttpContext>會加上的群組名稱。 例如，`Profile.Address.Street`。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 下列 ASP.NET 網頁讀取，並設定指定使用者設定檔的群組的屬性。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The specified profile property group name was not found in the  configuration section.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; obj" Usage="profileBase.GetPropertyValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the profile property.</param>
        <summary>Gets the value of a profile property.</summary>
        <returns>The value of the specified profile property, typed as <see langword="object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 會使用<xref:System.Web.Profile.ProfileBase>類別來建立使用者設定檔所使用的類別。 ASP.NET 具有已啟用的使用者設定檔的應用程式啟動時，會建立新的類別類型的`ProfileCommon`，後者繼承自<xref:System.Web.Profile.ProfileBase>類別。 強型別存取子會加入至`ProfileCommon`組態區段中定義的每一個屬性的類別。 強型別存取子`ProfileCommon`類別呼叫<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>方法來擷取不具類型的值從<xref:System.Web.Profile.ProfileProvider>產生的存取子，然後將轉換成指定的型別並傳回做為屬性值。  
  
 您可以使用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>依名稱擷取您的應用程式的使用者設定檔的屬性值的方法。 傳回的值都不具類型，且必須轉換成擷取時的特定物件類型。 強型別存取設定檔屬性值，您可以存取屬性名稱的每個頁面，可用的設定檔屬性的成員身分，例如`Profile.CustomerAddress`。  
  
   
  
## Examples  
 下列程式碼範例示範讀取並設定 ASP.NET 網頁`ZipCode`屬性指定的使用者設定檔。 Web.config 檔案中指定的使用者設定檔屬性的範例，請參閱提供的範例<xref:System.Web.Profile.ProfileBase>類別。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.  -or-  The specified profile property name does not exist in the current profile.  -or-  The provider for the specified profile property did not recognize the specified property.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * bool -&gt; unit" Usage="profileBase.Initialize (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to initialize the profile for.</param>
        <param name="isAuthenticated">
          <see langword="true" /> to indicate the user is authenticated; <see langword="false" /> to indicate the user is anonymous.</param>
        <summary>Initializes the profile property values and information for the current user.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從您的程式碼使用。 使用其中一種<xref:System.Web.Profile.ProfileBase.Create%2A>多載來建立使用者設定檔的執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile is for an anonymous user.</summary>
        <value>
          <see langword="true" /> 如果使用者設定檔適用於匿名使用者。否則， <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 啟用匿名存取的使用者設定檔使用的組態區段和`allowAnonymous`用來指定設定檔屬性的組態項目的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.Profile.ProfileBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether any of the profile properties have been modified.</summary>
        <value>
          <see langword="true" /> 如果已修改的任何設定檔屬性。否則， <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.IsDirty%2A>屬性可以用設定檔提供者期間<xref:System.Configuration.SettingsBase.Save%2A>方法，以判斷屬性是否構成的基本型別，字串，或<xref:System.DateTime>物件已變更。 然後會更新已變更的屬性中的設定檔提供者<xref:System.Configuration.SettingsBase.Save%2A>方法。 <xref:System.Configuration.SettingsBase.Save%2A>方法會自動呼叫結尾的頁面執行<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>屬性 `true`  
  
 的設定檔提供者<xref:System.Configuration.SettingsBase.Save%2A>方法明確地無法判斷是否已變更的自訂類別類型或複雜類型，例如集合、 設定檔屬性。 您可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件判斷是否已經修改自訂物件，並且將繼續進行自動儲存的已修改的物件或取消自動儲存，如果已修改的物件。 預設行為<xref:System.Web.Profile.ProfileBase>類別是要設定<xref:System.Web.Profile.ProfileBase.IsDirty%2A>屬性`true`存取的屬性都是自訂或複雜類型的第一個時間屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Profile.ProfileBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the profile property.</param>
        <summary>Gets or sets a profile property value indexed by the property name.</summary>
        <value>指定的設定檔屬性的型別值<see langword="object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來擷取，或依名稱設定應用程式的使用者設定檔的屬性值。 傳回的值的型別為`object`，而且必須轉換為擷取時的特定物件類型。 強型別存取設定檔屬性值，您可以存取的屬性名稱的成員身分`Profile`屬性可用在每個頁面上，例如`Profile.CustomerAddress`。  
  
   
  
## Examples  
 下列程式碼範例列出的使用者設定檔中的屬性名稱的繫結<xref:System.Configuration.SettingsProperty.Name%2A>靜態屬性<xref:System.Web.Profile.ProfileBase.Properties%2A>集合<xref:System.Configuration.SettingsProperty>物件加入至<xref:System.Web.UI.WebControls.GridView>控制項。 選取的屬性值，使用名稱來擷取<xref:System.Web.Profile.ProfileBase.Item%2A>集合。 Web.config 檔案中指定的使用者設定檔屬性的範例，請參閱提供的範例<xref:System.Web.Profile.ProfileBase>類別。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.  -or-  The specified profile property name does not exist in the current profile.  -or-  The provider for the specified profile property did not recognize the specified property.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a property value that was marked as read-only.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">An attempt was made to assign a value to a property using an incompatible type.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastActivityDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the most recent date and time that the profile was read or modified.</summary>
        <value>最新的日期和時間的讀取或修改預設提供者設定檔。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性值只能被修改預設設定檔提供者。 對設定檔屬性的預設設定檔提供者以外的提供者所做的變更不會影響值<xref:System.Web.Profile.ProfileBase.LastActivityDate%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the most recent date and time that the profile was modified.</summary>
        <value>最新的日期和時間設定檔已修改預設提供者。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性值只能被修改預設設定檔提供者。 對設定檔屬性的預設設定檔提供者以外的提供者所做的變更不會影響值<xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Web.Profile.ProfileBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of <see cref="T:System.Configuration.SettingsProperty" /> objects for each property in the profile.</summary>
        <value>A<see cref="T:System.Configuration.SettingsPropertyCollection" />的<see cref="T:System.Configuration.SettingsProperty" />應用程式的設定檔中每一個屬性的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來取得設定的應用程式，包括屬性名稱和類型的設定檔屬性的相關資訊。 您也可以參考<xref:System.Web.Profile.ProfileProvider>每個屬性。 A<xref:System.Web.Profile.ProfileProvider>管理儲存和擷取資料來源的屬性值。  
  
   
  
## Examples  
 下列程式碼範例列出的使用者設定檔中的屬性名稱的繫結<xref:System.Configuration.SettingsProperty.Name%2A>靜態屬性<xref:System.Web.Profile.ProfileBase.Properties%2A>集合<xref:System.Configuration.SettingsProperty>物件加入至<xref:System.Web.UI.WebControls.GridView>控制項。 選取的屬性值，使用名稱來擷取<xref:System.Web.Profile.ProfileBase.Item%2A>集合。 Web.config 檔案中指定的使用者設定檔屬性的範例，請參閱提供的範例<xref:System.Web.Profile.ProfileBase>類別。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A property type specified in the  section of the Web.config file could not be created.  -or-  The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.  -or-  The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.  -or-  The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.  -or-  The <see langword="type" /> specified for a profile property could not be found.  -or-  A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit&#xA;override this.Save : unit -&gt; unit" Usage="profileBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the profile data source with changed profile property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Save%2A>方法會將已修改的設定檔屬性值寫入至資料來源。 設定檔提供者可以減少在資料來源的活動執行更新時，才<xref:System.Web.Profile.ProfileBase.IsDirty%2A>屬性設定為`true`。 這是預設的情況<xref:System.Web.Profile.SqlProfileProvider>。 之後<xref:System.Web.Profile.ProfileBase.Save%2A>方法已儲存至資料來源的屬性值<xref:System.Web.Profile.ProfileBase.IsDirty%2A>設`false`。  
  
 您可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件，以實作自訂邏輯，判斷是否已修改的自訂型別或複雜類型的設定檔屬性，並繼續進行自動儲存的已修改的物件或取消自動儲存，如果沒有任何物件具有已修改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : string * obj -&gt; unit" Usage="profileBase.SetPropertyValue (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property to set.</param>
        <param name="propertyValue">The value to assign to the property.</param>
        <summary>Sets the value of a profile property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 會使用<xref:System.Web.Profile.ProfileBase>類別來建立使用者設定檔所使用的類別。 ASP.NET 具有已啟用的使用者設定檔的應用程式啟動時，會建立新的類別類型的`ProfileCommon`，後者繼承自<xref:System.Web.Profile.ProfileBase>類別。 強型別存取子會加入至`ProfileCommon`組態區段中定義的每一個屬性的類別。 強型別存取子`ProfileCommon`類別呼叫<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法以傳遞屬性值來<xref:System.Web.Profile.ProfileProvider>儲存在資料來源。  
  
 您可以使用<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法，以將您的應用程式的使用者設定檔中的屬性值指派名稱。 值不具型別，而型別檢查都是在執行階段，而不是編譯時間。 強型別存取設定檔屬性值，您可以存取的屬性名稱的成員身分`Profile`屬性可在每個頁面上，例如`Profile.CustomerAddress`。  
  
   
  
## Examples  
 下列程式碼範例示範讀取並設定 ASP.NET 網頁`ZipCode`屬性指定的使用者設定檔。 Web.config 檔案中指定的使用者設定檔屬性的範例，請參閱提供的範例<xref:System.Web.Profile.ProfileBase>類別。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties defined for the current profile.  -or-  The specified profile property name does not exist in the current profile.  -or-  The provider for the specified profile property did not recognize the specified property.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a value value on a property that was marked as read-only.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">An attempt was made to assign a value to a property using an incompatible type.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Web.Profile.ProfileBase.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the user name for the profile.</summary>
        <value>使用者設定檔或指派給設定檔的匿名使用者識別項名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.UserName%2A>屬性會傳回已驗證的使用者設定檔相關聯的名稱或如果指派給設定檔的匿名使用者識別項<xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>屬性是`true`。  
  
 啟用匿名存取的使用者設定檔使用的組態區段和`allowAnonymous`用來指定設定檔屬性的組態項目的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>