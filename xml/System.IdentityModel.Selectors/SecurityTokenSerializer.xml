<Type Name="SecurityTokenSerializer" FullName="System.IdentityModel.Selectors.SecurityTokenSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="629a3bbb4e9f1e9d5e0006dccaf1804a1ee62f1e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36483088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenSerializer abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b8234-101">表示可以讀取和寫入金鑰識別碼、金鑰識別碼子句及安全性權杖的類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8234-101">Represents a class that can read and write key identifiers, key identifier clauses, and security tokens.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-102">使用 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別，以 XML 的格式讀取和寫入 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 和 <xref:System.IdentityModel.Tokens.SecurityToken> 類別。</span><span class="sxs-lookup"><span data-stu-id="b8234-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class to read and write <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>, and <xref:System.IdentityModel.Tokens.SecurityToken> classes as XML.</span></span> <span data-ttu-id="b8234-103"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別有一些方法，可以判定這個類別是否能讀取和寫入這些實體 (Entity) 並實際加以讀取和寫入。</span><span class="sxs-lookup"><span data-stu-id="b8234-103">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class has methods to determine whether this class can read and write these entities and to actually read and write them.</span></span> <span data-ttu-id="b8234-104">如果要用於安全性權杖，這些方法是 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>、<xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>、<xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>。</span><span class="sxs-lookup"><span data-stu-id="b8234-104">For security tokens, these methods are <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A>, and <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8234-105">初始化 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifier (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifier : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-106">要讀取金鑰識別碼的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-106">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-107">判定這個序列化程式是否能讀取指定之 XML 讀取器所參考的 <see langword="&lt;KeyIdentifier&gt;" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-107">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-108">如果可以讀取指定的 <see langword="true" /> XML 項目，則為 <see langword="&lt;KeyIdentifier&gt;" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-108">
              <see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> XML element can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-109">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-109">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-110"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-110">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-111">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-111">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-112">要讀取金鑰識別碼子句的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-112">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-113">判定這個序列化程式是否能讀取指定之 XML 讀取器所參考 <see langword="&lt;KeyIdentifier&gt;" /> 項目中的子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-113">Determines whether this serializer can read a clause in a <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-114">如果可以讀取指定的金鑰識別碼子句，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-114">
              <see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-115">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-115">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-116"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-116">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-117">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-117">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierClauseCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-118">要讀取金鑰識別碼子句的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-118">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-119">判定這個序列化程式是否能讀取指定之 XML 讀取器所參考的 <see langword="&lt;KeyIdentifier&gt;" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-119">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
          <span data-ttu-id="b8234-120">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-120">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-121">如果可以讀取指定的 <see langword="true" /> 項目，則為 <see langword="&lt;KeyIdentifier&gt;" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-121">
              <see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> element can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-122">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-122">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-123"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-123">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-124">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-124">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-125">要讀取金鑰識別碼的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-125">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-126">判定這個序列化程式是否能讀取指定之 XML 讀取器所參考的 <see langword="&lt;KeyIdentifier&gt;" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-126">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
          <span data-ttu-id="b8234-127">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-127">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-128">如果可以讀取指定的金鑰識別碼子句，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-128">
              <see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-129">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-129">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-130"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-130">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-131">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-131">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-132">要讀取安全性權杖的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-132">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-133">判定這個序列化程式是否能讀取指定之 XML 讀取器所指向的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-133">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-134">如果可以讀取安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-134">
              <see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-135">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-135">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-136"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-136">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-137">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-137">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadTokenCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadTokenCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadTokenCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadTokenCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadTokenCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadTokenCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-138">要讀取安全性權杖的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-138">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-139">判定這個序列化程式是否能讀取指定之 XML 讀取器所指向的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-139">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span>
          </span>
          <span data-ttu-id="b8234-140">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-140">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-141">如果可以讀取安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-141">
              <see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-142">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-142">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-143"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-143">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-144">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-144">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifier(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifier (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifier(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifier keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="b8234-145">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示要寫入的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-146">判定這個序列化程式是否可以寫入指定的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-146">Determines whether this serializer can write the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-147">如果這個序列化程式可以寫入指定的金鑰識別碼，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-147">
              <see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-148">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-148">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="b8234-149"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-149">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-150">
            <paramref name="keyIdentifier" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-150">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="b8234-151">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示要寫入的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-152">判定這個序列化程式是否可以寫入指定的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-152">Determines whether this serializer can write the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-153">如果這個序列化程式可以寫入指定的金鑰識別碼子句，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-153">
              <see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-154">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-154">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="b8234-155"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-155">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-156">
            <paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-156">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierClauseCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierClauseCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierClauseCore (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierClauseCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClauseCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClauseCore keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="b8234-157">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示要寫入的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-157">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-158">判定這個序列化程式是否可以寫入指定的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-158">Determines whether this serializer can write the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="b8234-159">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-159">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-160">如果這個序列化程式可以寫入指定的金鑰識別碼子句，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-160">
              <see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-161">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-161">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="b8234-162"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-162">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-163">
            <paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-163">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierCore (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierCore : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierCore keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="b8234-164">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示要寫入的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-164">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-165">判定這個序列化程式是否可以寫入指定的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-165">Determines whether this serializer can write the specified key identifier.</span>
          </span>
          <span data-ttu-id="b8234-166">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-166">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-167">如果這個序列化程式可以寫入指定的金鑰識別碼，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-167">
              <see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-168">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-168">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="b8234-169"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-169">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-170">
            <paramref name="keyIdentifier" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-170">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="b8234-171">要轉換為 XML 的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-171">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-172">判定這個序列化程式是否可以將指定的安全性權杖寫入至 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-172">Determines whether this serializer can write the specified security token to XML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-173">如果可以寫入安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-173">
              <see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-174">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-174">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="b8234-175"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-175">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-176">
            <paramref name="token" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-176">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="b8234-177">要轉換為 XML 的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-177">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-178">判定這個序列化程式是否可以將指定的安全性權杖寫入至 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-178">Determines whether this serializer can write the specified security token to XML.</span>
          </span>
          <span data-ttu-id="b8234-179">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-179">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-180">如果可以寫入安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-180">
              <see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-181">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-181">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="b8234-182"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-182">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-183">
            <paramref name="token" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-183">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifier (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifier : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-184">要讀取金鑰識別碼的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-184">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-185">使用指定的 XML 讀取器，讀取金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-185">Reads the key identifier using specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-186">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示已讀取的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-186">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-187">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-187">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-188"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-188">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-189">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-189">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-190">要讀取金鑰識別碼的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-190">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-191">使用指定的 XML 讀取器，讀取金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-191">Reads the key identifier clause using specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-192">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示已讀取的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-192">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-193">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-193">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-194"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-194">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-195">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-195">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierClauseCore (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-196">要讀取金鑰識別碼的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-196">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-197">使用指定的 XML 讀取器，讀取金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-197">Reads the key identifier clause using specified XML reader.</span>
          </span>
          <span data-ttu-id="b8234-198">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-198">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-199">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示已讀取的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-199">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-200">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-200">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-201"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-201">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-202">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-202">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierCore (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-203">要讀取金鑰識別碼的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-203">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-204">使用指定的 XML 讀取器，讀取金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-204">Reads the key identifier clause using specified XML reader.</span>
          </span>
          <span data-ttu-id="b8234-205">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-205">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-206">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示已讀取的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-206">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-207">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-207">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="b8234-208"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-208">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-209">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-209">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="member this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-210">要讀取安全性權杖的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-210">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="b8234-211">要判定安全性權杖類型的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-211">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-212">讀取指定之 XML 讀取器所指向的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-212">Reads the security token pointed at by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-213">
            <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示已讀取的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-213">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-214">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-214">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="b8234-215"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-215">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-216">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-216">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-217">-或-  <paramref name="tokenResolver" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-217">-or-  <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken ReadTokenCore (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadTokenCore(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadTokenCore (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ ReadTokenCore(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadTokenCore : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadTokenCore (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b8234-218">要讀取安全性權杖的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-218">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="b8234-219">要判定安全性權杖類型的 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-219">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-220">讀取指定之 XML 讀取器所指向的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-220">Reads the security token pointed at by the specified XML reader.</span>
          </span>
          <span data-ttu-id="b8234-221">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-221">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8234-222">
            <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示已讀取的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-222">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-223">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-223">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="b8234-224"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-224">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-225">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-225">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-226">-或-  <paramref name="tokenResolver" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-226">-or-  <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifier (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifier(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifier (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifier(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifier : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifier (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="b8234-227">要將金鑰識別碼寫入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-227">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span>
          </span>
        </param>
        <param name="keyIdentifier">
          <span data-ttu-id="b8234-228">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示要寫入的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-228">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-229">使用指定的 XML 寫入器，寫入指定的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-229">Writes the specified key identifier using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-230">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-230">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="b8234-231"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-231">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-232">
            <paramref name="keyIdentifier" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-232">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-233">-或-  <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-233">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifierClause (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClause (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="b8234-234">要將金鑰識別碼子句寫入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-234">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span>
          </span>
        </param>
        <param name="keyIdentifierClause">
          <span data-ttu-id="b8234-235">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示要寫入的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-235">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-236">使用指定的 XML 寫入器，寫入指定的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-236">Writes the specified key identifier clause using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-237">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-237">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="b8234-238"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-238">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-239">
            <paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-239">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-240">-或-  <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-240">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierClauseCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierClauseCore (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierClauseCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClauseCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClauseCore (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="b8234-241">要將金鑰識別碼子句寫入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-241">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span>
          </span>
        </param>
        <param name="keyIdentifierClause">
          <span data-ttu-id="b8234-242">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，表示要寫入的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-242">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-243">使用指定的 XML 寫入器，寫入指定的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-243">Writes the specified key identifier clause using the specified XML writer.</span>
          </span>
          <span data-ttu-id="b8234-244">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-244">Called by the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-245">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-245">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="b8234-246"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-246">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-247">
            <paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-247">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-248">-或-  <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-248">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierCore (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierCore (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="b8234-249">要將金鑰識別碼寫入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-249">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span>
          </span>
        </param>
        <param name="keyIdentifier">
          <span data-ttu-id="b8234-250">
            <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示要寫入的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-250">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-251">使用指定的 XML 寫入器，寫入指定的金鑰識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-251">Writes the specified key identifier using the specified XML writer.</span>
          </span>
          <span data-ttu-id="b8234-252">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-252">Called by the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-253">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-253">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="b8234-254"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-254">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-255">
            <paramref name="keyIdentifier" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-255">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-256">-或-  <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-256">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="b8234-257">要將安全性權杖寫入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-257">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="b8234-258">
            <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示要寫入的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-258">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-259">使用指定的 XML 寫入器，寫入指定的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-259">Writes the specified security token using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-260">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-260">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="b8234-261"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-261">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-262">
            <paramref name="token" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-262">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-263">-或-  <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-263">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteTokenCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTokenCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteTokenCore (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteTokenCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteTokenCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteTokenCore (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="b8234-264">要將安全性權杖寫入的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-264">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="b8234-265">
            <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示要寫入的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-265">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8234-266">使用指定的 XML 寫入器，寫入指定的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-266">Writes the specified security token using the specified XML writer.</span>
          </span>
          <span data-ttu-id="b8234-267">由基底類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-267">Called by the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8234-268">衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的類別必須覆寫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-268">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="b8234-269"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法會呼叫 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="b8234-269">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8234-270">
            <paramref name="token" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-270">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b8234-271">-或-  <paramref name="writer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8234-271">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>