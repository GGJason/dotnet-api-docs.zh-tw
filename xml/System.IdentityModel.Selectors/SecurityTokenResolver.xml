<Type Name="SecurityTokenResolver" FullName="System.IdentityModel.Selectors.SecurityTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a9f1909ecc5cbcee826670141ca59c0644e0e92" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46639002" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenResolver abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="7fe4e-101">表示公用程式類別，這個公用程式類別可以在您有金鑰識別碼或金鑰識別碼子句時擷取安全性權杖或金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-101">Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-102">使用 <xref:System.IdentityModel.Selectors.SecurityTokenResolver> 類別，在您有金鑰識別碼或金鑰識別碼子句時擷取金鑰或安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenResolver> class to retrieve a key or security token when you have a key identifier or key identifier clause.</span></span> <span data-ttu-id="7fe4e-103">如果有金鑰識別碼或金鑰識別碼子句，<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 方法會擷取權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-103">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> methods retrieve a token given that there is a key identifier or key identifier clause.</span></span> <span data-ttu-id="7fe4e-104">如果有金鑰識別碼子句，<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 會擷取金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-104">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> retrieve a key given that there is a key identifier clause.</span></span> <span data-ttu-id="7fe4e-105">當擷取失敗時，具有 `Try` 前置詞的方法會傳回 `false`，然而沒有 `Try` 前置詞的方法則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-105">The methods with a `Try` prefix return `false` when the retrieval is unsuccessful, whereas the methods without a `Try` prefix throw an exception.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fe4e-106">初始化 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultSecurityTokenResolver">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultSecurityTokenResolver (tokens As ReadOnlyCollection(Of SecurityToken), canMatchLocalId As Boolean) As SecurityTokenResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::SecurityTokenResolver ^ CreateDefaultSecurityTokenResolver(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ tokens, bool canMatchLocalId);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultSecurityTokenResolver : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; * bool -&gt; System.IdentityModel.Selectors.SecurityTokenResolver" Usage="System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver (tokens, canMatchLocalId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt;" />
        <Parameter Name="canMatchLocalId" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tokens"><span data-ttu-id="7fe4e-107">型別為 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，包含這個安全性權杖解析程式可以為其解析金鑰識別碼和金鑰識別碼子句的一組安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-107">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to.</span></span></param>
        <param name="canMatchLocalId"><span data-ttu-id="7fe4e-108">若要解析參考位於 SOAP 訊息中其他位置之安全性金鑰的 <see langword="true" /> 金鑰識別碼子句，則為 <see langword="&lt;SecurityTokenReference&gt;" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-108"><see langword="true" /> to resolve the <see langword="&lt;SecurityTokenReference&gt;" /> key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7fe4e-109">建立指定之安全性權杖的預設安全性權杖解析程式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-109">Creates a default security token resolver for the specified security tokens.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-110"><see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />，它會解析與 <paramref name="tokens" /> 參數中所指定之安全性權杖相符的金鑰識別碼和子句。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-110">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that resolves key identifiers and clauses that match the security tokens specified in the <paramref name="tokens" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-111">由這個方法所傳回的安全性權杖解析程式，會在指定的安全性權杖上使用 <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> 方法來解析金鑰識別碼和金鑰識別碼子句。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-111">The security token resolver that is returned from this method, uses the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> methods on the specified security tokens to resolve key identifiers and key identifier clauses.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenResolver.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="7fe4e-112">自訂組態項目。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-112">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="7fe4e-113">在衍生類別中覆寫時，從 XML 載入自訂組態。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-113">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-114">根據預設，會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-114">By default, throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="7fe4e-115">您可以覆寫這個方法，以提供衍生類別中的功能。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-115">You can override this method to provide functionality in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSecurityKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKey ^ ResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityTokenResolver.ResolveSecurityKey keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="7fe4e-116">要擷取金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-116">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <summary><span data-ttu-id="7fe4e-117">取得指定之金鑰識別碼子句中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-117">Obtains the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-118"><see cref="T:System.IdentityModel.Tokens.SecurityKey" />，這是在指定之金鑰識別碼子句中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-118">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the key referenced in the specified key identifier clause.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-119"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> 方法之間的差異，在於它們在金鑰識別碼子句無法解析為金鑰時所採取的處理方式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-119">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key.</span></span> <span data-ttu-id="7fe4e-120"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 方法會傳回 `false`，而 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> 方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-120">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fe4e-121"><paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-121"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fe4e-122">無法擷取 <paramref name="keyIdentifierClause" /> 參數中指定之金鑰識別碼子句的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-122">A key could not be retrieved for the key identifier clause specified in the <paramref name="keyIdentifierClause" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fe4e-123">擷取與指定之金鑰識別碼相符的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-123">Retrieves a security token that matches the specified key identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifier As SecurityKeyIdentifier) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="7fe4e-124">要建立安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-124">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <summary><span data-ttu-id="7fe4e-125">擷取安全性權杖，這個安全性權杖與指定之金鑰識別碼內含的其中一個安全性金鑰識別碼子句相符。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-125">Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-126"><see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示指定的金鑰識別碼。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-126">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-127"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法之間的差異，在於它們在金鑰識別碼無法解析為安全性權杖時所採取的處理方式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-127">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token.</span></span> <span data-ttu-id="7fe4e-128"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 方法會傳回 `false`，而 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-128">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fe4e-129"><paramref name="keyIdentifier" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-129"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fe4e-130">無法建立指定之金鑰識別碼的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-130">A security token cannot be created for the specified key identifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="7fe4e-131">要建立安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-131">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <summary><span data-ttu-id="7fe4e-132">擷取與指定之金鑰識別碼子句相符的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-132">Retrieves the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-133"><see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示指定的金鑰識別碼子句。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-133">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-134"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法之間的差異，在於它們在金鑰識別碼子句無法解析為安全性權杖時所採取的處理方式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-134">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token.</span></span> <span data-ttu-id="7fe4e-135"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 方法會傳回 `false`，而 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-135">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKey">
      <MemberSignature Language="C#" Value="public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="member this.TryResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKey (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="7fe4e-136">要擷取金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-136">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <param name="key"><span data-ttu-id="7fe4e-137">當這個方法回傳時，會包含 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />，而其中會包含在指定之金鑰識別碼子句中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-137">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause.</span></span> <span data-ttu-id="7fe4e-138">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-138">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7fe4e-139">嘗試擷取在指定之金鑰識別碼子句中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-139">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-140">如果可以擷取指定之金鑰識別碼子句的金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-140"><see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-141"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> 方法之間的差異，在於它們在金鑰識別碼子句無法解析為金鑰時所採取的處理方式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-141">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key.</span></span> <span data-ttu-id="7fe4e-142"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 方法會傳回 `false`，而 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> 方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-142">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fe4e-143"><paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-143"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="7fe4e-144">要擷取金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-144">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <param name="key"><span data-ttu-id="7fe4e-145">當這個方法回傳時，會包含 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />，而其中會包含在指定之金鑰識別碼子句中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-145">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause.</span></span> <span data-ttu-id="7fe4e-146">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-146">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7fe4e-147">嘗試擷取在指定之金鑰識別碼子句中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-147">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-148">如果可以擷取指定之金鑰識別碼子句的金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-148"><see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-149"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> 方法會被 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> 方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-149">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fe4e-150">嘗試擷取在指定之物件中所參考的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-150">Attempts to retrieve the security token that is referenced in the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="7fe4e-151">要建立安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-151">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="7fe4e-152">當這個方法回傳時，會包含表示指定之金鑰識別碼的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-152">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span> <span data-ttu-id="7fe4e-153">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-153">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7fe4e-154">嘗試擷取安全性權杖，這個安全性權杖與指定之金鑰識別碼內含的其中一個金鑰識別碼子句相符。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-154">Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-155">如果可以擷取指定之金鑰識別碼的安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-155"><see langword="true" /> when a security token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-156"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法之間的差異，在於它們在金鑰識別碼無法解析為安全性權杖時所採取的處理方式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-156">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token.</span></span> <span data-ttu-id="7fe4e-157"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 方法會傳回 `false`，而 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-157">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fe4e-158"><paramref name="keyIdentifier" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-158"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="7fe4e-159">要建立安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-159">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="7fe4e-160">當這個方法回傳時，會包含表示指定之金鑰識別碼子句的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-160">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span> <span data-ttu-id="7fe4e-161">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-161">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7fe4e-162">嘗試擷取與指定之金鑰識別碼子句相符的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-162">Attempts to retrieve the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-163">如果可以擷取指定之金鑰識別碼子句的安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-163"><see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-164"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法之間的差異，在於它們在金鑰識別碼子句無法解析為安全性權杖時所採取的處理方式。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-164">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token.</span></span> <span data-ttu-id="7fe4e-165"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 方法會傳回 `false`，而 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-165">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fe4e-166"><paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-166"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fe4e-167">嘗試擷取在指定之物件中所參考的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-167">Attempts to retrieve the key that is referenced in the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="7fe4e-168">要建立安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-168">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="7fe4e-169">當這個方法回傳時，會包含表示指定之金鑰識別碼的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-169">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span> <span data-ttu-id="7fe4e-170">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-170">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7fe4e-171">在衍生類別中覆寫時，嘗試擷取與指定之金鑰識別碼內含的其中一個金鑰識別碼子句相符的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-171">When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-172">如果可以擷取指定之金鑰識別碼的安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-172"><see langword="true" /> when a security token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-173"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> 方法會被 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-173">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="7fe4e-174">要建立安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-174">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="7fe4e-175">當這個方法回傳時，會包含表示指定之金鑰識別碼子句的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-175">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span> <span data-ttu-id="7fe4e-176">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-176">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7fe4e-177">在衍生類別中覆寫時，嘗試解析與指定之金鑰識別碼子句相符的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-177">When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="7fe4e-178">如果可以擷取指定之金鑰識別碼子句的安全性權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-178"><see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fe4e-179"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> 方法會被 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 和 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> 方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="7fe4e-179">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>