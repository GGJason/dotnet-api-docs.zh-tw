<Type Name="AudienceUriMode" FullName="System.IdentityModel.Selectors.AudienceUriMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30491a886d0c9f22f98db625b91c65840df736fa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36482646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum AudienceUriMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AudienceUriMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.AudienceUriMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum AudienceUriMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class AudienceUriMode" />
  <TypeSignature Language="F#" Value="type AudienceUriMode = " />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定是否應驗證 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以在使用會發行 <xref:System.IdentityModel.Selectors.AudienceUriMode> 安全性權杖之安全性權杖服務 (STS) 的聯合應用程式中使用 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 屬性。 當 STS 發出安全性權杖時，它可以將 <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 加入至安全性權杖中，以便指定此安全性權杖適用之 Web 服務的 URI。 如此便可讓接收端 Web 服務的 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> 驗證發出的安全性權杖是否適用於此 Web 服務，而驗證的方法則是指定這項檢查應該透過執行下列動作來進行：  
  
-   設定<xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A>為 Always 或 BearerKeyOnly 屬性。  
  
-   將 URI 加入 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> 集合中，以指定有效的 URI 集合。  
  
 或者，選擇覆寫 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> 方法，以指定用於允許之 URI 的驗證演算法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyType" />
    <altmember cref="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode" />
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Selectors.AudienceUriMode Always = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Selectors.AudienceUriMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 1" Usage="System.IdentityModel.Selectors.AudienceUriMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.AudienceUriMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>永遠。</summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKeyOnly">
      <MemberSignature Language="C#" Value="BearerKeyOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Selectors.AudienceUriMode BearerKeyOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly" />
      <MemberSignature Language="VB.NET" Value="BearerKeyOnly" />
      <MemberSignature Language="C++ CLI" Value="BearerKeyOnly" />
      <MemberSignature Language="F#" Value="BearerKeyOnly = 2" Usage="System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.AudienceUriMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>只有在安全性權杖的金鑰型別為 BearerKey，且無法證明安全性權杖中有所有權金鑰時才適用。</summary>
      </Docs>
    </Member>
    <Member MemberName="Never">
      <MemberSignature Language="C#" Value="Never" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Selectors.AudienceUriMode Never = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Selectors.AudienceUriMode.Never" />
      <MemberSignature Language="VB.NET" Value="Never" />
      <MemberSignature Language="C++ CLI" Value="Never" />
      <MemberSignature Language="F#" Value="Never = 0" Usage="System.IdentityModel.Selectors.AudienceUriMode.Never" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.AudienceUriMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>永不。</summary>
      </Docs>
    </Member>
  </Members>
</Type>