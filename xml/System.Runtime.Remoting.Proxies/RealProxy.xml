<Type Name="RealProxy" FullName="System.Runtime.Remoting.Proxies.RealProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab72fc750fdda5bc2353d8ec47021567eda9bfcc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RealProxy" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit RealProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Proxies.RealProxy" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RealProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RealProxy abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供 Proxy 的基底功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Proxies.RealProxy>類別是`abstract`基底的類別必須衍生自 proxy。  
  
 使用物件之間任何一種遠端界限的用戶端實際上正在使用 transparent proxy 物件。 傳輸 proxy 提供實際的物件位於用戶端空間深度的幻影。 它的做法是轉送實際使用的遠端執行功能基礎結構的物件上所進行的呼叫。  
  
 透明 proxy 裝載的 managed 執行階段類型的類別之執行個體本身是<xref:System.Runtime.Remoting.Proxies.RealProxy>。 <xref:System.Runtime.Remoting.Proxies.RealProxy>實作功能所需從傳輸 proxy 轉送作業的一部分。 請注意繼承相關的語意，例如記憶體回收、 欄位和方法，支援受管理物件的 proxy 物件，並且可以擴充為新的類別。 Proxy 具有雙重本質： 它做為遠端物件 (透明 proxy)，位於同一個類別的物件，而且它是受管理的物件本身。  
  
 可用的 proxy 物件而不考慮內任何遠端處理細分<xref:System.AppDomain>。  
  
> [!NOTE]
>  此類別可讓連結要求和繼承要求在類別層級。 A<xref:System.Security.SecurityException>立即呼叫者或衍生的類別沒有基礎結構的權限時，會擲回。 如需安全性需求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)和[繼承要求](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)。  
  
   
  
## Examples  
 [!code-cpp[ChannelServices_SyncDispatchMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage/CPP/channelservices_syncdispatchmessage_client.cpp#1)]
 [!code-csharp[ChannelServices_SyncDispatchMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage/CS/channelservices_syncdispatchmessage_client.cs#1)]
 [!code-vb[ChannelServices_SyncDispatchMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage/VB/channelservices_syncdispatchmessage_client.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">營運與基礎結構程式碼。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
    <block subset="none" type="overrides">
      <para>當您繼承自<see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />，您必須覆寫<see cref="M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)" />方法。</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RealProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RealProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用預設值，初始化 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#12](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#12)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#12](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#12)]
 [!code-vb[CustomProxy_Attribute_RealProxy#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RealProxy (Type classToProxy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type classToProxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (classToProxy As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RealProxy(Type ^ classToProxy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classToProxy" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="classToProxy">要為其建立 Proxy 之遠端物件的 <see cref="T:System.Type" />。</param>
        <summary>初始化 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 類別的新執行個體，這個執行個體代表指定 <see cref="T:System.Type" /> 的遠端物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目前的方法會建立 transparent proxy，可以透過存取<xref:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy%2A>方法。  
  
 使用物件之間任何一種遠端界限的用戶端實際上正在使用 transparent proxy 物件。 透明 proxy 可讓您以為實際物件位於用戶端的空間。 它的做法是轉送實際使用的遠端執行功能基礎結構的物件上所進行的呼叫。  
  
 透明 proxy 位於由受管理的執行階段類別的執行個體<xref:System.Runtime.Remoting.Proxies.RealProxy>。 <xref:System.Runtime.Remoting.Proxies.RealProxy>實作功能所需從傳輸 proxy 轉送作業的一部分。 請注意，proxy 物件繼承的受管理的物件，例如記憶體回收和支援的欄位和方法，相關聯的語意，而且可以擴充為新的類別。 Proxy 具有雙重本質： 其做為遠端物件 (透明 proxy)，位於同一個類別的物件，並受管理的物件本身。  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#10)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#10)]
 [!code-vb[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="classToProxy" /> 不是介面，並且不是衍生自 <see cref="T:System.MarshalByRefObject" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RealProxy (Type classToProxy, IntPtr stub, object stubData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type classToProxy, native int stub, object stubData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type,System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (classToProxy As Type, stub As IntPtr, stubData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RealProxy(Type ^ classToProxy, IntPtr stub, System::Object ^ stubData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classToProxy" Type="System.Type" />
        <Parameter Name="stub" Type="System.IntPtr" />
        <Parameter Name="stubData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="classToProxy">要為其建立 Proxy 之遠端物件的 <see cref="T:System.Type" />。</param>
        <param name="stub">要與新 Proxy 執行個體產生關聯的 Stub。</param>
        <param name="stubData">要設定給指定 Stub 和新 Proxy 執行個體的 Stub 資料。</param>
        <summary>初始化 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虛設常式資料是自訂的 proxy 使用者用來決定要如何處理傳入方法呼叫。 例如，stub 資料可能是伺服器的內容，您可以用來判斷是否要執行的呼叫在本機，或將它傳送到遠端基礎結構的相關資訊。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="classToProxy" /> 不是介面，並且不是衍生自 <see cref="T:System.MarshalByRefObject" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於呼叫 unmanaged 程式碼。 關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="AttachServer">
      <MemberSignature Language="C#" Value="protected void AttachServer (MarshalByRefObject s);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AttachServer(class System.MarshalByRefObject s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AttachServer (s As MarshalByRefObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AttachServer(MarshalByRefObject ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="s">目前 Proxy 執行個體所表示的 <see cref="T:System.MarshalByRefObject" />。</param>
        <summary>附加目前 Proxy 執行個體到指定的遠端 <see cref="T:System.MarshalByRefObject" />。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">目前的呼叫端沒有 UnmanagedCode 權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供呼叫 unmanaged 程式碼的能力。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType">其 <see cref="T:System.Runtime.Remoting.ObjRef" /> 已建立的物件型別。</param>
        <summary>建立指定物件型別的 <see cref="T:System.Runtime.Remoting.ObjRef" />，並向遠端基礎結構將它註冊為用戶端啟動的物件。</summary>
        <returns>為指定之型別建立的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 的新執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#6](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#6)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#6](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#6)]
 [!code-vb[CustomProxy_Attribute_RealProxy#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="DetachServer">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject DetachServer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject DetachServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.DetachServer" />
      <MemberSignature Language="VB.NET" Value="Protected Function DetachServer () As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ DetachServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將目前 Proxy 執行個體從它所代表的遠端伺服器物件上中斷連結。</summary>
        <returns>中斷連結的伺服器物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">目前的呼叫端沒有 UnmanagedCode 權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供呼叫 unmanaged 程式碼的能力。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCOMIUnknown">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetCOMIUnknown (bool fIsMarshalled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetCOMIUnknown(bool fIsMarshalled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCOMIUnknown (fIsMarshalled As Boolean) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetCOMIUnknown(bool fIsMarshalled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fIsMarshalled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fIsMarshalled">
          如果要求物件參考是為了封送處理至遠端位置，則為 <see langword="true" />；如果要求物件參考是為了透過 COM 和目前處理序中的 Unmanaged 物件進行通訊，則為 <see langword="false" />。</param>
        <summary>要求目前 Proxy 執行個體所表示之物件的 Unmanaged 參考。</summary>
        <returns>如果要求物件參考是為了透過 COM 和目前處理序中的 Unmanaged 物件進行通訊，則為 [COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)的指標；如果要求物件參考是為了封送處理至遠端位置，則為快取或新產生的 <see langword="IUnknown" /> COM 介面指標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 proxy 要求的封送處理，則`IUnknown`介面會傳回目前的 proxy 執行個體所表示的物件。 如果`IUnknown`先前已快取<xref:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown%2A>方法，則會傳回該執行個體; 否則傳回的新執行個體。  
  
 如果 proxy 要求不適用於封送處理，但與未受管理物件中目前的處理序通訊則[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)(CCW)，這可以用於目前的處理序中通訊透過 COM，則會傳回。  
  
   
  
## Examples  
 [!code-cpp[RealProxy_Sample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RealProxy_Sample/CPP/realproxy_sample.cpp#2)]
 [!code-csharp[RealProxy_Sample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RealProxy_Sample/CS/realproxy_sample.cs#2)]
 [!code-vb[RealProxy_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RealProxy_Sample/VB/realproxy_sample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化透明 Proxy 所至的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">序列化的來源和目的端。</param>
        <summary>將 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 的目前執行個體所代表物件的透明 Proxy 加入至 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#7)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#7)]
 [!code-vb[CustomProxy_Attribute_RealProxy#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> 或 <paramref name="context" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">立即呼叫端沒有 SerializationFormatter 使用權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetProxiedType">
      <MemberSignature Language="C#" Value="public Type GetProxiedType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetProxiedType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxiedType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetProxiedType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Type" /> 的目前執行個體所代表物件的 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />。</summary>
        <returns>
          <see cref="T:System.Type" /> 的目前執行個體所代表物件的 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#10)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#10)]
 [!code-vb[CustomProxy_Attribute_RealProxy#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStubData">
      <MemberSignature Language="C#" Value="public static object GetStubData (System.Runtime.Remoting.Proxies.RealProxy rp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetStubData(class System.Runtime.Remoting.Proxies.RealProxy rp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStubData (rp As RealProxy) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetStubData(System::Runtime::Remoting::Proxies::RealProxy ^ rp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
      </Parameters>
      <Docs>
        <param name="rp">為之要求 Stub 資料的 Proxy。</param>
        <summary>擷取替指定之 Proxy 儲存的 Stub 資料。</summary>
        <returns>指定 Proxy 的 Stub 資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虛設常式資料是自訂的 proxy 使用者用來決定要如何處理傳入方法呼叫。 例如，stub 資料可能是伺服器的內容，您可以用來判斷是否要執行的呼叫在本機，或將它傳送到遠端基礎結構的相關資訊。  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#9](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#9)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#9](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#9)]
 [!code-vb[CustomProxy_Attribute_RealProxy#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">目前的呼叫端沒有 UnmanagedCode 權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供呼叫 unmanaged 程式碼的能力。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTransparentProxy">
      <MemberSignature Language="C#" Value="public virtual object GetTransparentProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetTransparentProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTransparentProxy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetTransparentProxy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 的目前執行個體的透明 Proxy。</summary>
        <returns>目前 Proxy 執行個體的透明 Proxy。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#8](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#8)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#8](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#8)]
 [!code-vb[CustomProxy_Attribute_RealProxy#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnwrappedServer">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject GetUnwrappedServer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject GetUnwrappedServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUnwrappedServer () As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ GetUnwrappedServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前 Proxy 執行個體所表示的伺服器物件。</summary>
        <returns>目前 Proxy 執行個體所表示的伺服器物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer%2A>方法時，可使用包含外部<xref:System.Runtime.Remoting.Contexts.Context>在同一個<xref:System.AppDomain>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">目前的呼叫端沒有 UnmanagedCode 權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供呼叫 unmanaged 程式碼的能力。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeServerObject">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Activation.IConstructionReturnMessage InitializeServerObject (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.Activation.IConstructionReturnMessage InitializeServerObject(class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeServerObject (ctorMsg As IConstructionCallMessage) As IConstructionReturnMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Activation::IConstructionReturnMessage ^ InitializeServerObject(System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Activation.IConstructionReturnMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctorMsg">建構呼叫訊息，其中包含目前 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 所表示之遠端物件的新執行個體的建構函式參數。 可以是 <see langword="null" />。</param>
        <summary>初始化遠端物件 (<see cref="T:System.Type" /> 的目前執行個體用指定的 <see cref="T:System.Runtime.Remoting.Proxies.RealProxy" /> 來表示) 的物件 <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" /> 的新執行個體。</summary>
        <returns>建構要求的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`ctorMsg`參數是`null`，然後在<xref:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject%2A>方法會呼叫預設建構函式由目前的遠端物件的新執行個體<xref:System.Runtime.Remoting.Proxies.RealProxy>。  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#5)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#5)]
 [!code-vb[CustomProxy_Attribute_RealProxy#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">目前的呼叫端沒有 UnmanagedCode 權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供呼叫 unmanaged 程式碼的能力。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Remoting.Messaging.IMessage Invoke (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage Invoke(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invoke (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Remoting::Messaging::IMessage ^ Invoke(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">
          <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />，其中包含方法呼叫之相關資訊的 <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>在衍生類別中覆寫時，會在目前執行個體所表示之遠端物件上叫用 (Invoke) 提供的 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> 中指定的方法。</summary>
        <returns>受叫用方法傳回的訊息，包含傳回值和任何 <see langword="out" /> 或 <see langword="ref" /> 參數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當透明 proxy，並受到<xref:System.Runtime.Remoting.Proxies.RealProxy>是呼叫，則會將委派以呼叫<xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A>方法。 <xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A>方法轉換中的訊息`msg`參數插入<xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>，並將它傳送至遠端物件的目前執行個體所表示之<xref:System.Runtime.Remoting.Proxies.RealProxy>。  
  
 <xref:System.Runtime.Remoting.Messaging.IMessage>參數可讓您透過字典<xref:System.Runtime.Remoting.Messaging.IMessage.Properties%2A?displayProperty=nameWithType>屬性。 字典包含名稱/值組的方法呼叫，例如呼叫之方法的名稱和其參數的相關資訊。  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#4)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#4)]
 [!code-vb[CustomProxy_Attribute_RealProxy#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCOMIUnknown">
      <MemberSignature Language="C#" Value="public virtual void SetCOMIUnknown (IntPtr i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCOMIUnknown(native int i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCOMIUnknown (i As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCOMIUnknown(IntPtr i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="i">指標，指向目前 Proxy 執行個體所代表物件的 <see langword="IUnknown" /> 介面。</param>
        <summary>存放目前執行個體所代表物件的 Unmanaged Proxy。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當與通用語言執行平台，透過 COM 通訊嘗試未受管理的 proxy 時，執行階段解析由未受管理的 proxy 的遠端物件。 如果遠端物件會受到管理，而且也位於通用的語言環境，然後而不是透過分散式 COM，與它進行通訊的物件傳送至目前的處理序。  
  
 如果遠端物件不衍生自<xref:System.MarshalByRefObject>，則它會序列化並複製到目前的位置。 如果它衍生自<xref:System.MarshalByRefObject>，然後傳回 transparent proxy，而遠端執行功能基礎結構會快取未受管理的 proxy (`IUnknown`介面) 中供日後使用透明的 proxy。  
  
   
  
## Examples  
 [!code-cpp[RealProxy_Sample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RealProxy_Sample/CPP/realproxy_sample.cpp#3)]
 [!code-csharp[RealProxy_Sample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RealProxy_Sample/CS/realproxy_sample.cs#3)]
 [!code-vb[RealProxy_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RealProxy_Sample/VB/realproxy_sample.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStubData">
      <MemberSignature Language="C#" Value="public static void SetStubData (System.Runtime.Remoting.Proxies.RealProxy rp, object stubData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStubData(class System.Runtime.Remoting.Proxies.RealProxy rp, object stubData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetStubData (rp As RealProxy, stubData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetStubData(System::Runtime::Remoting::Proxies::RealProxy ^ rp, System::Object ^ stubData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
        <Parameter Name="stubData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rp">要為之設定 Stub 資料的 Proxy。</param>
        <param name="stubData">新 Stub 資料。</param>
        <summary>設定指定 Proxy 的 Stub 資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虛設常式資料是自訂的 proxy 使用者用來決定要如何處理傳入方法呼叫。 例如，stub 資料可能是伺服器的內容，您可以用來判斷是否要執行的呼叫在本機，或將它傳送到遠端基礎結構的相關資訊。  
  
   
  
## Examples  
 [!code-cpp[CustomProxy_Attribute_RealProxy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CPP/customproxy_sample.cpp#3)]
 [!code-csharp[CustomProxy_Attribute_RealProxy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/CS/customproxy_sample.cs#3)]
 [!code-vb[CustomProxy_Attribute_RealProxy#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy/VB/customproxy_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">目前的呼叫端沒有 UnmanagedCode 權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供呼叫 unmanaged 程式碼的能力。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SupportsInterface">
      <MemberSignature Language="C#" Value="public virtual IntPtr SupportsInterface (ref Guid iid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int SupportsInterface(valuetype System.Guid&amp; iid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportsInterface (ByRef iid As Guid) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr SupportsInterface(Guid % iid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iid" Type="System.Guid&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="iid">受要求介面的參考。</param>
        <summary>要求具有指定 ID 的 COM 介面。</summary>
        <returns>受要求介面的指標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface%2A>方法可讓目前的 proxy 執行個體，來實作代表伺服器物件，代表目前的執行個體的其他 COM 介面。 目前的方法會產生要求的介面，並傳回的指標。 可以由這個方法所產生的 COM 介面的型別取決於 proxy 型別，可能依賴目前 proxy 執行個體代表伺服器物件的類型。  
  
 如需詳細資訊，請參閱<xref:System.Runtime.Remoting.Proxies.ProxyAttribute>。  
  
   
  
## Examples  
 [!code-cpp[RealProxy_Sample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RealProxy_Sample/CPP/realproxy_sample.cpp#1)]
 [!code-csharp[RealProxy_Sample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RealProxy_Sample/CS/realproxy_sample.cs#1)]
 [!code-vb[RealProxy_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RealProxy_Sample/VB/realproxy_sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>