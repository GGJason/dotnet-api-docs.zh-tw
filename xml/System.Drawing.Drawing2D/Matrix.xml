<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b940f-101">封裝代表幾何轉換的 3 乘 3 仿射矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span></span> <span data-ttu-id="b940f-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="b940f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-103">在[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]，您可以儲存在仿射轉換<xref:System.Drawing.Drawing2D.Matrix>物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="b940f-104">因為代表仿射轉換矩陣的第三個資料行一律是 （0，0，1），在建構時，在前兩個資料行中指定的六個數字<xref:System.Drawing.Drawing2D.Matrix>物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="b940f-105">陳述式`Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)`建構，如下圖所示的矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="b940f-106">![轉換](~/add/media/aboutgdip05-art10.gif "轉換")</span><span class="sxs-lookup"><span data-stu-id="b940f-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="b940f-107">複合轉換</span><span class="sxs-lookup"><span data-stu-id="b940f-107">Composite Transformations</span></span>  
 <span data-ttu-id="b940f-108">複合轉換是一串轉換，後面接著另一個。</span><span class="sxs-lookup"><span data-stu-id="b940f-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="b940f-109">請考慮下列清單中的轉換與矩陣：</span><span class="sxs-lookup"><span data-stu-id="b940f-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b940f-110">矩陣 A</span><span class="sxs-lookup"><span data-stu-id="b940f-110">Matrix A</span></span>|<span data-ttu-id="b940f-111">旋轉 90 度</span><span class="sxs-lookup"><span data-stu-id="b940f-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="b940f-112">矩陣 B</span><span class="sxs-lookup"><span data-stu-id="b940f-112">Matrix B</span></span>|<span data-ttu-id="b940f-113">在 x 方向的 2 倍縮放</span><span class="sxs-lookup"><span data-stu-id="b940f-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="b940f-114">矩陣 C</span><span class="sxs-lookup"><span data-stu-id="b940f-114">Matrix C</span></span>|<span data-ttu-id="b940f-115">轉換在 y 方向的 3 個單位</span><span class="sxs-lookup"><span data-stu-id="b940f-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="b940f-116">如果我們開始點 （2，1） — 矩陣 [2 1 1] 表示的 — 乘以 A，然後 B，則 C 中，點 （2，1） 將會進行三種轉換中列出的順序。</span><span class="sxs-lookup"><span data-stu-id="b940f-116">If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="b940f-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="b940f-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="b940f-118">而是比儲存在三個個別的矩陣中的複合轉換的三個部分，您可以將 A、 B 和 C 取得儲存整個複合轉換的單一 3 × 3 矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="b940f-119">假設 ABC = d。然後乘以 D 點會給予發生相同的結果為點乘以 A，然後 B，然後 c。</span><span class="sxs-lookup"><span data-stu-id="b940f-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="b940f-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="b940f-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="b940f-121">下圖顯示矩陣 A、 B、 C 和 d。</span><span class="sxs-lookup"><span data-stu-id="b940f-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="b940f-122">![轉換](~/add/media/aboutgdip05-art12.gif "轉換")</span><span class="sxs-lookup"><span data-stu-id="b940f-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="b940f-123">可以在個別的轉換矩陣乘以格式正確的複合的轉換矩陣的事實表示仿射轉換的任何序列，可以儲存在單一<xref:System.Drawing.Drawing2D.Matrix>物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b940f-124">複合轉換順序很重要。</span><span class="sxs-lookup"><span data-stu-id="b940f-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="b940f-125">一般情況下，旋轉，再調整，然後轉換並不相同為小數位數，然後旋轉、，然後轉換。</span><span class="sxs-lookup"><span data-stu-id="b940f-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="b940f-126">同樣地，矩陣乘法的順序很重要。</span><span class="sxs-lookup"><span data-stu-id="b940f-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="b940f-127">一般情況下，ABC 不是不相同。</span><span class="sxs-lookup"><span data-stu-id="b940f-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="b940f-128"><xref:System.Drawing.Drawing2D.Matrix>類別提供數種方法來建立複合的轉換： <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>， <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>， <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>， <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>， <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>，和<xref:System.Drawing.Drawing2D.Matrix.Translate%2A>。</span><span class="sxs-lookup"><span data-stu-id="b940f-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="b940f-129">下列範例會建立先旋轉 30 度，則 y 方向的 2 倍縮放並再將轉譯 x 方向的 5 個單位的複合轉換的矩陣：</span><span class="sxs-lookup"><span data-stu-id="b940f-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-130">初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="b940f-130">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-131">初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體做為身分識別矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b940f-132"><see cref="T:System.Drawing.Rectangle" /> 結構，代表要轉換的矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-132">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="b940f-133">三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，這個結構表示矩形左上角、右上角和左下角的要轉換平行四邊形的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-133">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="b940f-134">前三個角指示平行四邊形的右下角。</span><span class="sxs-lookup"><span data-stu-id="b940f-134">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="b940f-135">初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體至指定的矩形和點陣列所定義的幾何轉換。</span><span class="sxs-lookup"><span data-stu-id="b940f-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-136">例如，其表示的幾何轉換對應所指定的矩形，這個方法會初始化新矩陣`rect`參數中的三個點所定義的平行四邊形`plgpts`參數。</span><span class="sxs-lookup"><span data-stu-id="b940f-136">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="b940f-137">矩形左上角對應中的第一個點`plgpts`，右上角會對應到第二個點，以及陣列的左下角會對應到第三個點。</span><span class="sxs-lookup"><span data-stu-id="b940f-137">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="b940f-138">前三個部分都會隱含的平行四邊形的右下角端點。</span><span class="sxs-lookup"><span data-stu-id="b940f-138">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b940f-139"><see cref="T:System.Drawing.RectangleF" /> 結構，代表要轉換的矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-139">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="b940f-140">三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個結構表示矩形左上角、右上角和左下角的要轉換平行四邊形的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-140">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="b940f-141">前三個角指示平行四邊形的右下角。</span><span class="sxs-lookup"><span data-stu-id="b940f-141">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="b940f-142">初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體至指定的矩形和點陣列所定義的幾何轉換。</span><span class="sxs-lookup"><span data-stu-id="b940f-142">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-143">這個方法會初始化新<xref:System.Drawing.Drawing2D.Matrix>，它代表對應所指定的矩形的幾何轉換`rect`參數中的三個點所定義的平行四邊形`plgpts`參數。</span><span class="sxs-lookup"><span data-stu-id="b940f-143">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="b940f-144">矩形左上角對應中的第一個點`plgpts`，右上角會對應到第二個點，以及陣列的左下角會對應到第三個點。</span><span class="sxs-lookup"><span data-stu-id="b940f-144">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="b940f-145">前三個部分都會隱含的平行四邊形的右下角端點。</span><span class="sxs-lookup"><span data-stu-id="b940f-145">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="b940f-146">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一列第一欄中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-146">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m12"><span data-ttu-id="b940f-147">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一列第二欄中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-147">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m21"><span data-ttu-id="b940f-148">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二列第一欄中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-148">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m22"><span data-ttu-id="b940f-149">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二列第一欄中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-149">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dx"><span data-ttu-id="b940f-150">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三列第一欄中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-150">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dy"><span data-ttu-id="b940f-151">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三列第二欄中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-151">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="b940f-152">使用指定的項目，初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="b940f-152">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-153">建立這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的完全相同複本。</span><span class="sxs-lookup"><span data-stu-id="b940f-153">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="b940f-154">這個方法建立的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-154">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-155">釋放此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="b940f-155">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-156">呼叫`Dispose`允許所使用的資源<xref:System.Drawing.Drawing2D.Matrix>都重新配置用於其他用途的物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-156">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b940f-157">取得浮點值的陣列，該陣列代表這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="b940f-157">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="b940f-158">浮點值的陣列，代表這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="b940f-158">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-159">項目 m11、 m12、 m21、 m22、 dx 和 dy 的<xref:System.Drawing.Drawing2D.Matrix>都由該順序陣列中的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-159">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b940f-160">要測試的物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-160">The object to test.</span></span></param>
        <summary><span data-ttu-id="b940f-161">測試指定的物件是否為 <see cref="T:System.Drawing.Drawing2D.Matrix" />，並且和這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="b940f-161">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="b940f-162">如果 <paramref name="obj" /> 是與這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相同的指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />，則這個方法會傳回 <see langword="true" />；否則會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-162">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-163">在記憶體回收開始前，允許物件嘗試釋放資源，並執行其他清除作業。</span><span class="sxs-lookup"><span data-stu-id="b940f-163">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-164">傳回雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="b940f-164">Returns a hash code.</span></span></summary>
        <returns><span data-ttu-id="b940f-165">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="b940f-165">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-166">如果可反轉，則反轉這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-166">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-167">下列程式碼範例會建立矩陣，並將它反轉：</span><span class="sxs-lookup"><span data-stu-id="b940f-167">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b940f-168">取得值，指示這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否為身分識別矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-168">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span></span></summary>
        <value><span data-ttu-id="b940f-169">如果這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 為身分識別，則這個屬性為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-169">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b940f-170">取得指出這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否可反轉的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-170">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span></span></summary>
        <value><span data-ttu-id="b940f-171">如果這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 為可反轉的，則這個屬性為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-171">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-172">藉由將指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 附加在前面，將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-172">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b940f-173">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-173">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <summary><span data-ttu-id="b940f-174">藉由將指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 附加在前面，將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以 <paramref name="matrix" /> 參數中所指定的矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-174">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-175">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>。</span><span class="sxs-lookup"><span data-stu-id="b940f-175">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b940f-176">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-176">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <param name="order"><span data-ttu-id="b940f-177">代表乘法順序的 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-177">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="b940f-178">將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以 <paramref name="matrix" /> 參數中所指定的矩陣，並且依據 <paramref name="order" /> 參數中所指定的順序。</span><span class="sxs-lookup"><span data-stu-id="b940f-178">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-179">如果指定的順序是<xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>，這個<xref:System.Drawing.Drawing2D.Matrix>乘以預留的順序指定的矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-179">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="b940f-180">如果指定的順序是<xref:System.Drawing.Drawing2D.MatrixOrder.Append>，這個<xref:System.Drawing.Drawing2D.Matrix>乘以指定的矩陣，以附加的順序。</span><span class="sxs-lookup"><span data-stu-id="b940f-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b940f-181">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-181">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-182">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-182">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-183">建立三個矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-183">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="b940f-184">列出矩陣 1 至螢幕的內容。</span><span class="sxs-lookup"><span data-stu-id="b940f-184">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-185">矩陣 2 矩陣 1 並將結果儲存在矩陣 1。</span><span class="sxs-lookup"><span data-stu-id="b940f-185">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="b940f-186">列出矩陣 1 至螢幕的內容。</span><span class="sxs-lookup"><span data-stu-id="b940f-186">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-187">將結果儲存在矩陣矩陣 3，1，並再次將結果儲存在矩陣 1。</span><span class="sxs-lookup"><span data-stu-id="b940f-187">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="b940f-188">列出矩陣 1 至螢幕的內容。</span><span class="sxs-lookup"><span data-stu-id="b940f-188">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-189">繪製矩形螢幕之前套用矩陣 1 轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-189">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-190">將轉換套用至矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-190">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-191">繪製轉換的矩形螢幕 （紅色矩形），使用相同的座標和先前的矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-191">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="b940f-192">請注意，紅色矩形已調整過大小的兩個水平方向的比例然後旋轉 90 度，，然後再移 y 方向的 （轉換） 250 點 x 方向和 50 的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-192">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b940f-193">取得這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 轉換值 (dx 值或第三列第一欄中的項目)。</span><span class="sxs-lookup"><span data-stu-id="b940f-193">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="b940f-194">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 轉換值。</span><span class="sxs-lookup"><span data-stu-id="b940f-194">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b940f-195">取得這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 轉換值 (dy 值或第三列第二欄中的項目)。</span><span class="sxs-lookup"><span data-stu-id="b940f-195">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="b940f-196">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 轉換值。</span><span class="sxs-lookup"><span data-stu-id="b940f-196">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b940f-197">重設這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 使其具有身分識別矩陣的元素。</span><span class="sxs-lookup"><span data-stu-id="b940f-197">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-198">主要身分識別矩陣的對角線上的項目都是 1。</span><span class="sxs-lookup"><span data-stu-id="b940f-198">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="b940f-199">身分識別矩陣的所有其他項目為 0。</span><span class="sxs-lookup"><span data-stu-id="b940f-199">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b940f-200">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-200">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-201">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-201">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-202">建立縮放矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-202">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="b940f-203">列出矩陣元素至螢幕。</span><span class="sxs-lookup"><span data-stu-id="b940f-203">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-204">重設識別矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-204">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="b940f-205">列出的項目至螢幕。</span><span class="sxs-lookup"><span data-stu-id="b940f-205">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-206">轉換矩陣的 50 點在 x 軸和 y 軸的 40 點。</span><span class="sxs-lookup"><span data-stu-id="b940f-206">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="b940f-207">列出要螢幕的轉譯矩陣的項目。</span><span class="sxs-lookup"><span data-stu-id="b940f-207">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-208">繪製矩形會繪製到螢幕之前套用矩陣轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-208">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-209">將轉換套用至矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-209">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-210">繪製轉換的矩形會繪製到螢幕 （紅色矩形），使用相同的座標和先前的矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-210">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="b940f-211">請注意，紅色矩形不會向外 （因為重設），但已轉譯的 x 軸和 y 軸。</span><span class="sxs-lookup"><span data-stu-id="b940f-211">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-212">將繞著原點之指定角度的順時針旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-212">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="b940f-213">旋轉的角度 (單位為度數)。</span><span class="sxs-lookup"><span data-stu-id="b940f-213">The angle of the rotation, in degrees.</span></span></param>
        <summary><span data-ttu-id="b940f-214">在原點為中心並以指定的角度，將順時針旋轉附加在這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 前面。</span><span class="sxs-lookup"><span data-stu-id="b940f-214">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-215">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>。</span><span class="sxs-lookup"><span data-stu-id="b940f-215">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="b940f-216">旋轉的角度 (範圍)，單位為度數。</span><span class="sxs-lookup"><span data-stu-id="b940f-216">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="b940f-217"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定將旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順序 (附加在後面或附加在前面)。</span><span class="sxs-lookup"><span data-stu-id="b940f-217">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="b940f-218">以這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的原點 (X 座標和 Y 座標都為 0) 為中心，套用 <paramref name="angle" /> 參數中指定的順時針旋轉量。</span><span class="sxs-lookup"><span data-stu-id="b940f-218">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-219">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-220">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-221">繪製矩形螢幕之前套用旋轉轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-221">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-222">建立矩陣，並將它旋轉 45 度。</span><span class="sxs-lookup"><span data-stu-id="b940f-222">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="b940f-223">此矩陣轉換套用至矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-223">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-224">將轉換的矩形繪製至畫面 （紅色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-224">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="b940f-225">請注意，紅色矩形有旋轉著 0，0 螢幕座標。</span><span class="sxs-lookup"><span data-stu-id="b940f-225">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-226">藉由將旋轉附加在前面，將繞著指定點的順時針旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-226">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="b940f-227">旋轉的角度 (範圍)，單位為度數。</span><span class="sxs-lookup"><span data-stu-id="b940f-227">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="b940f-228"><see cref="T:System.Drawing.PointF" />，代表旋轉的中心。</span><span class="sxs-lookup"><span data-stu-id="b940f-228">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <summary><span data-ttu-id="b940f-229">藉由將旋轉附加在前面，繞著 <paramref name="point" /> 參數中所指定的點，將順時針旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-229">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-230">下列程式碼範例示範如何使用<xref:System.Drawing.Drawing2D.Matrix>和<xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A>旋轉字串的方法。</span><span class="sxs-lookup"><span data-stu-id="b940f-230">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="b940f-231">這個範例被為了搭配 Windows Form。</span><span class="sxs-lookup"><span data-stu-id="b940f-231">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b940f-232">建立表單，並貼上下列程式碼。</span><span class="sxs-lookup"><span data-stu-id="b940f-232">Create a form and paste the following code into it.</span></span> <span data-ttu-id="b940f-233">呼叫`DrawVerticalStringFromBottomUp`方法在表單的<xref:System.Windows.Forms.Control.Paint>事件處理常式，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="b940f-233">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="b940f-234">旋轉的角度 (單位為度數)。</span><span class="sxs-lookup"><span data-stu-id="b940f-234">The angle of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="b940f-235"><see cref="T:System.Drawing.PointF" />，代表旋轉的中心。</span><span class="sxs-lookup"><span data-stu-id="b940f-235">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <param name="order"><span data-ttu-id="b940f-236"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定套用旋轉的順序 (附加在後面或附加在前面)。</span><span class="sxs-lookup"><span data-stu-id="b940f-236">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span></span></param>
        <summary><span data-ttu-id="b940f-237">依據指定的順序，將繞著指定點的順時針旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-237">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-238">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-238">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-239">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-239">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-240">繪製矩形螢幕之前套用旋轉轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-240">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-241">建立矩陣，繞著指定點的 45 度旋轉。</span><span class="sxs-lookup"><span data-stu-id="b940f-241">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="b940f-242">適用於此矩陣轉換為矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-242">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-243">將轉換的矩形繪製至畫面 （紅色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-243">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="b940f-244">請注意，紅色矩形旋轉過周圍的矩形左上角 (指定的旋轉點<xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="b940f-244">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-245">藉由將縮放向量附加在前面，將指定的縮放向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-245">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="b940f-246">用來在 X 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-246">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="b940f-247">用來在 Y 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="b940f-248">藉由將縮放向量附加在前面，將指定的縮放向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-248">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-249">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>。</span><span class="sxs-lookup"><span data-stu-id="b940f-249">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="b940f-250">用來在 X 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-250">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="b940f-251">用來在 Y 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="b940f-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="b940f-252"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定將縮放向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順序 (附加在後面或附加在前面)。</span><span class="sxs-lookup"><span data-stu-id="b940f-252">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="b940f-253">使用指定的順序，將指定的縮放向量 (<paramref name="scaleX" /> 與 <paramref name="scaleY" />) 套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-253">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-254">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-254">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-255">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-255">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-256">繪製矩形螢幕之前套用縮放轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-256">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-257">建立矩陣，並且縮放它 3 在 x 軸和 y 軸中的 2。</span><span class="sxs-lookup"><span data-stu-id="b940f-257">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="b940f-258">此矩陣轉換套用至矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-258">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-259">將轉換的矩形繪製至畫面 （紅色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-259">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="b940f-260">請注意，紅色矩形在 x 軸的 3 倍和 y 軸，包括 （矩形的開始點） 的矩形左上角中的 2 比例。</span><span class="sxs-lookup"><span data-stu-id="b940f-260">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-261">藉由將傾斜向量附加在前面，將指定的傾斜向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-261">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="b940f-262">水平傾斜因數。</span><span class="sxs-lookup"><span data-stu-id="b940f-262">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="b940f-263">垂直傾斜因數。</span><span class="sxs-lookup"><span data-stu-id="b940f-263">The vertical shear factor.</span></span></param>
        <summary><span data-ttu-id="b940f-264">藉由將傾斜轉換附加在前面，將指定的傾斜向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-264">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-265">轉換會在這個方法是純粹的傾斜只有其中一個參數是 0。</span><span class="sxs-lookup"><span data-stu-id="b940f-265">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="b940f-266">套用至矩形原點，當`shearY`因素是 0，則轉換藉由水平移動的下邊緣`shearX`倍的矩形的高度。</span><span class="sxs-lookup"><span data-stu-id="b940f-266">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="b940f-267">當`shearX`因素是 0，就會將移右邊緣垂直地`shearY`倍的矩形的寬度。</span><span class="sxs-lookup"><span data-stu-id="b940f-267">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="b940f-268">充分的警告是在順序中，當兩個參數都為非零，因為預測的結果。</span><span class="sxs-lookup"><span data-stu-id="b940f-268">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="b940f-269">例如，如果這兩個因素都是 1，則轉換為單數 (因此逆轉)，並將整個平面成一行。</span><span class="sxs-lookup"><span data-stu-id="b940f-269">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b940f-270">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-270">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-271">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-271">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b940f-272">畫面上，使用綠色畫筆，在套用縮放轉換之前要繪製的矩形。</span><span class="sxs-lookup"><span data-stu-id="b940f-272">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="b940f-273">建立<xref:System.Drawing.Drawing2D.Matrix>並使用它來設定全局座標轉換為<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="b940f-273">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="b940f-274">另一個使用繪製矩形紅色畫筆。</span><span class="sxs-lookup"><span data-stu-id="b940f-274">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="b940f-275">繪製橢圓形使用藍色的畫筆。</span><span class="sxs-lookup"><span data-stu-id="b940f-275">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="b940f-276">結果會是綠色矩形、 紅色的平行四邊形和轉換的藍色橢圓形。</span><span class="sxs-lookup"><span data-stu-id="b940f-276">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="b940f-277">請注意，綠色矩形 （繪製設定轉換之前） 直接使用所提供的座標<xref:System.Drawing.Graphics.DrawRectangle%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="b940f-277">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="b940f-278">在 繪圖之前轉換兩個圖形。</span><span class="sxs-lookup"><span data-stu-id="b940f-278">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="b940f-279">矩形會轉換成 （紅色）、 平行四邊形和橢圓形 （藍色） 會轉換而無法放入已轉換的平行四邊形。</span><span class="sxs-lookup"><span data-stu-id="b940f-279">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="b940f-280">請注意，矩形的底部移動 （分歧） 在 x 軸的兩倍的矩形的高度，因而形成平行四邊形。</span><span class="sxs-lookup"><span data-stu-id="b940f-280">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="b940f-281">水平傾斜因數。</span><span class="sxs-lookup"><span data-stu-id="b940f-281">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="b940f-282">垂直傾斜因數。</span><span class="sxs-lookup"><span data-stu-id="b940f-282">The vertical shear factor.</span></span></param>
        <param name="order"><span data-ttu-id="b940f-283"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定套用切變的順序 (附加在後面或附加在前面)。</span><span class="sxs-lookup"><span data-stu-id="b940f-283">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span></span></param>
        <summary><span data-ttu-id="b940f-284">依據指定的順序，將指定的傾斜向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-284">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b940f-285">轉換會在這個方法是純粹的傾斜只有其中一個參數是 0。</span><span class="sxs-lookup"><span data-stu-id="b940f-285">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="b940f-286">套用至矩形原點，當`shearY`因素是 0，則轉換藉由水平移動的下邊緣`shearX`倍的矩形的高度。</span><span class="sxs-lookup"><span data-stu-id="b940f-286">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="b940f-287">當`shearX`因素是 0，就會將移右邊緣垂直地`shearY`倍的矩形的寬度。</span><span class="sxs-lookup"><span data-stu-id="b940f-287">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="b940f-288">充分的警告是在順序中，當兩個參數都為非零，因為預測的結果。</span><span class="sxs-lookup"><span data-stu-id="b940f-288">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="b940f-289">例如，如果這兩個因素都是 1，則轉換為單數 (因此逆轉)，並將整個平面成一行。</span><span class="sxs-lookup"><span data-stu-id="b940f-289">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b940f-290">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>。</span><span class="sxs-lookup"><span data-stu-id="b940f-290">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-291">將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 表示的幾何轉換套用至點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-291">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b940f-292"><see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-292">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="b940f-293">將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的幾何轉換套用至指定的點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-293">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-294">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-294">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-295">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-295">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-296">建立形成矩形的點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-296">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-297">點陣列 （將繪製至畫面之前套用縮放轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-297">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-298">建立矩陣，並且縮放它 3 在 x 軸和 y 軸中的 2。</span><span class="sxs-lookup"><span data-stu-id="b940f-298">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="b940f-299">此矩陣會轉換套用至點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-299">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="b940f-300">將轉換的陣列繪製到螢幕 （紅色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-300">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="b940f-301">請注意，紅色矩形在 x 軸的 3 倍和 y 軸，包括 （矩形的開始點） 的矩形左上角中的 2 比例。</span><span class="sxs-lookup"><span data-stu-id="b940f-301">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b940f-302"><see cref="T:System.Drawing.PointF" /> 結構的陣列，這個陣列表示要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-302">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="b940f-303">將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的幾何轉換套用至指定的點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-303">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-304">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="b940f-304">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-305">將陣列中的每個向量乘以矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-305">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="b940f-306">這個矩陣的轉換元素 (第三列) 會被忽略。</span><span class="sxs-lookup"><span data-stu-id="b940f-306">The translation elements of this matrix (third row) are ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b940f-307"><see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-307">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="b940f-308">只將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的縮放和旋轉元件套用至指定的點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-308">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-309">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-309">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-310">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-310">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-311">建立形成矩形的點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-311">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="b940f-312">將點陣列繪製到螢幕之前套用縮放轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-312">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-313">建立矩陣和縮放 3 在 x 軸和 y 軸，2，並將它轉換兩個軸的 100。</span><span class="sxs-lookup"><span data-stu-id="b940f-313">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="b940f-314">列出矩陣元素至螢幕。</span><span class="sxs-lookup"><span data-stu-id="b940f-314">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="b940f-315">此矩陣會轉換套用至點陣列。</span><span class="sxs-lookup"><span data-stu-id="b940f-315">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="b940f-316">將轉換的陣列繪製到螢幕 （紅色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-316">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="b940f-317">請注意，紅色矩形在 x 軸的 3 倍和 y 軸，包括 （矩形的開始點） 的矩形左上角中的 2 經過調整，但會忽略的轉譯向量 （矩陣的最後兩個項目）。</span><span class="sxs-lookup"><span data-stu-id="b940f-317">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b940f-318"><see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-318">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="b940f-319">將陣列中的每個向量乘以矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-319">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="b940f-320">這個矩陣的轉換元素 (第三列) 會被忽略。</span><span class="sxs-lookup"><span data-stu-id="b940f-320">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-321">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="b940f-321">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b940f-322">藉由將轉譯向量附加在前面，將指定的轉譯向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-322">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="b940f-323">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 值。</span><span class="sxs-lookup"><span data-stu-id="b940f-323">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="b940f-324">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 值。</span><span class="sxs-lookup"><span data-stu-id="b940f-324">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="b940f-325">藉由將轉譯向量附加在前面，將指定的轉譯向量 (<paramref name="offsetX" /> 與 <paramref name="offsetY" />) 套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-325">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-326">如需範例，請參閱 <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>。</span><span class="sxs-lookup"><span data-stu-id="b940f-326">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="b940f-327">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 值。</span><span class="sxs-lookup"><span data-stu-id="b940f-327">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="b940f-328">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 值。</span><span class="sxs-lookup"><span data-stu-id="b940f-328">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="order"><span data-ttu-id="b940f-329"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定將轉換套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順序 (附加在後面或附加在前面)。</span><span class="sxs-lookup"><span data-stu-id="b940f-329">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="b940f-330">依據指定的順序，將指定的轉譯向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b940f-330">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b940f-331">下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="b940f-331">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="b940f-332">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="b940f-332">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b940f-333">繪製矩形螢幕之前套用轉換轉換 （藍色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-333">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="b940f-334">建立矩陣，並將它轉換兩個軸的 100。</span><span class="sxs-lookup"><span data-stu-id="b940f-334">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="b940f-335">此矩陣轉換套用至矩形中，</span><span class="sxs-lookup"><span data-stu-id="b940f-335">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="b940f-336">將轉換的矩形繪製至畫面 （紅色矩形）。</span><span class="sxs-lookup"><span data-stu-id="b940f-336">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="b940f-337">請注意，紅色矩形的開頭位於 100 點開頭的兩個座標軸中的藍色的三角形。</span><span class="sxs-lookup"><span data-stu-id="b940f-337">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b940f-338"><see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="b940f-338">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="b940f-339">將陣列中的每個向量乘以矩陣。</span><span class="sxs-lookup"><span data-stu-id="b940f-339">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="b940f-340">這個矩陣的轉換元素 (第三列) 會被忽略。</span><span class="sxs-lookup"><span data-stu-id="b940f-340">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>