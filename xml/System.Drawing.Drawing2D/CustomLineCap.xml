<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5c75a608ce54c941da40e7941b926a057ce5265" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409902" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomLineCap&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8e76d-101">封裝自訂的使用者定義線條端點。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e76d-101">Encapsulates a custom user-defined line cap.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-102">線條端點可用來在開頭和結束的線條或曲線 GDI + 中繪製<xref:System.Drawing.Pen>物件。</span><span class="sxs-lookup"><span data-stu-id="8e76d-102">Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <xref:System.Drawing.Pen> objects.</span></span> <span data-ttu-id="8e76d-103">GDI + 支援數個預先定義的端點樣式，並可允許使用者定義自己的端點樣式。</span><span class="sxs-lookup"><span data-stu-id="8e76d-103">GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</span></span> <span data-ttu-id="8e76d-104">這個類別用來建立自訂的端點樣式。</span><span class="sxs-lookup"><span data-stu-id="8e76d-104">This class is used to create custom cap styles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e76d-105">下列範例將示範如何使用 <xref:System.Drawing.Drawing2D.CustomLineCap> 類別。</span><span class="sxs-lookup"><span data-stu-id="8e76d-105">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap> class.</span></span> <span data-ttu-id="8e76d-106">若要執行此範例中貼上]、 [Windows Form 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8e76d-106">To run this example paste, the code into a Windows Form.</span></span> <span data-ttu-id="8e76d-107">處理表單的<xref:System.Windows.Forms.Control.Paint>事件和呼叫`DrawCaps`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理方法，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="8e76d-107">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-108">使用指定的外框和填滿，初始化 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-108">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="8e76d-109">定義自訂端點填滿的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-109">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="8e76d-110">定義自訂端點外框的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-110">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e76d-111">使用指定的外框和填滿，初始化 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-111">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-112"><xref:System.Drawing.Drawing2D.CustomLineCap> 不論作業指定的填滿模式中使用 「 線圈"填滿的模式。</span><span class="sxs-lookup"><span data-stu-id="8e76d-112"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="8e76d-113">`fillPath`和`strokePath`參數不能在相同的時間。</span><span class="sxs-lookup"><span data-stu-id="8e76d-113">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="8e76d-114">一個參數必須傳遞 null 值。</span><span class="sxs-lookup"><span data-stu-id="8e76d-114">One parameter must be passed a null value.</span></span> <span data-ttu-id="8e76d-115">如果上述其中一個參數傳遞 null 值，`fillPath`會被忽略。</span><span class="sxs-lookup"><span data-stu-id="8e76d-115">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="8e76d-116">如果`strokePath`是`null`，`fillPath`應該攔截負 y 軸。</span><span class="sxs-lookup"><span data-stu-id="8e76d-116">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e76d-117">下列範例示範如何使用<xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="8e76d-117">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructor.</span></span> <span data-ttu-id="8e76d-118">若要執行此範例中，貼在 Windows Form 中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8e76d-118">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="8e76d-119">處理表單的<xref:System.Windows.Forms.Control.Paint>事件和呼叫`DrawCaps`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理方法，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="8e76d-119">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="8e76d-120">定義自訂端點填滿的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-120">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="8e76d-121">定義自訂端點外框的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-121">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <param name="baseCap">
          <span data-ttu-id="8e76d-122">要建立自訂帽緣的來源直線帽緣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-122">The line cap from which to create the custom cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e76d-123">使用指定的外框和填滿，從指定的現有 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別初始化 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-124"><xref:System.Drawing.Drawing2D.CustomLineCap> 不論作業指定的填滿模式中使用 「 線圈"填滿的模式。</span><span class="sxs-lookup"><span data-stu-id="8e76d-124"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="8e76d-125">`fillPath`和`strokePath`參數不能在相同的時間。</span><span class="sxs-lookup"><span data-stu-id="8e76d-125">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="8e76d-126">一個參數必須傳遞 null 值。</span><span class="sxs-lookup"><span data-stu-id="8e76d-126">One parameter must be passed a null value.</span></span> <span data-ttu-id="8e76d-127">如果上述其中一個參數傳遞 null 值，`fillPath`會被忽略。</span><span class="sxs-lookup"><span data-stu-id="8e76d-127">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="8e76d-128">如果`strokePath`是`null`，`fillPath`應該攔截負 y 軸。</span><span class="sxs-lookup"><span data-stu-id="8e76d-128">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap, baseInset As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap, float baseInset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="8e76d-129">定義自訂端點填滿的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-129">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="8e76d-130">定義自訂端點外框的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-130">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <param name="baseCap">
          <span data-ttu-id="8e76d-131">要建立自訂帽緣的來源直線帽緣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-131">The line cap from which to create the custom cap.</span>
          </span>
        </param>
        <param name="baseInset">
          <span data-ttu-id="8e76d-132">端點和線條之間的距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-132">The distance between the cap and the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e76d-133">使用指定的外框、填滿和內凹，從指定的現有 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別初始化 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-133">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-134"><xref:System.Drawing.Drawing2D.CustomLineCap> 不論作業指定的填滿模式中使用 「 線圈"填滿的模式。</span><span class="sxs-lookup"><span data-stu-id="8e76d-134"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="8e76d-135">`fillPath`和`strokePath`參數不能在相同的時間。</span><span class="sxs-lookup"><span data-stu-id="8e76d-135">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="8e76d-136">一個參數必須傳遞 null 值。</span><span class="sxs-lookup"><span data-stu-id="8e76d-136">One parameter must be passed a null value.</span></span> <span data-ttu-id="8e76d-137">如果上述其中一個參數傳遞 null 值，`fillPath`會被忽略。</span><span class="sxs-lookup"><span data-stu-id="8e76d-137">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="8e76d-138">如果`strokePath`是`null`，`fillPath`應該攔截負 y 軸。</span><span class="sxs-lookup"><span data-stu-id="8e76d-138">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap BaseCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-139">取得或設定這個 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 所根據的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-139">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e76d-140">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別，這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 所根據的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-140">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BaseInset { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-141">取得或設定端點和線條之間的距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-141">Gets or sets the distance between the cap and the line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e76d-142">端點開端和線條末端之間的距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-142">The distance between the beginning of the cap and the end of the line.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-143">建立這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 的完全相同複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-143">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e76d-144">這個方法所建立的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，其轉型為物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-144">The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e76d-145">下列範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`、<xref:System.Windows.Forms.Control.Paint>事件物件。</span><span class="sxs-lookup"><span data-stu-id="8e76d-145">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="8e76d-146">該程式碼執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="8e76d-146">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="8e76d-147">藉由建立自訂的線條端點<xref:System.Drawing.Drawing2D.GraphicsPath>物件。</span><span class="sxs-lookup"><span data-stu-id="8e76d-147">Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="8e76d-148">建立<xref:System.Drawing.Drawing2D.CustomLineCap>物件`firstCap`，並使用<xref:System.Drawing.Drawing2D.GraphicsPath>剛才建立的物件。</span><span class="sxs-lookup"><span data-stu-id="8e76d-148">Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.</span></span>  
  
-   <span data-ttu-id="8e76d-149">建立的複製品`firstCap`使用<xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8e76d-149">Creates a clone of `firstCap` by using the <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> method.</span></span>  
  
-   <span data-ttu-id="8e76d-150">設定<xref:System.Drawing.Pen.CustomStartCap%2A>和<xref:System.Drawing.Pen.CustomEndCap%2A>屬性<xref:System.Drawing.Pen>物件，並使用該畫筆螢幕上繪製一條線和自訂端點。</span><span class="sxs-lookup"><span data-stu-id="8e76d-150">Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.</span></span>  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-151">釋放這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 物件使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-151">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-152">呼叫<xref:System.IDisposable.Dispose%2A>允許所使用的資源<xref:System.Drawing.Drawing2D.CustomLineCap>都重新配置用於其他用途的物件。</span><span class="sxs-lookup"><span data-stu-id="8e76d-152">Calling <xref:System.IDisposable.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.CustomLineCap> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8e76d-153">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e76d-154">釋放 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-154">Releases the unmanaged resources used by the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CustomLineCap ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-155">在記憶體回收 (GC) 回收 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 前，允許 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 嘗試釋放資源並執行其他清除作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-155">Allows an <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps([out] valuetype System.Drawing.Drawing2D.LineCap&amp; startCap, [out] valuetype System.Drawing.Drawing2D.LineCap&amp; endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetStrokeCaps (ByRef startCap As LineCap, ByRef endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetStrokeCaps([Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % startCap, [Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % endCap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="8e76d-156">用於這個端點中線條開端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-156">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="8e76d-157">用於這個端點中線條末端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-157">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e76d-158">取得用來起始和結束組成這個自訂端點線條的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-158">Gets the caps used to start and end lines that make up this custom cap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e76d-159">下列範例示範如何使用 <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8e76d-159">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> method.</span></span> <span data-ttu-id="8e76d-160">若要執行此範例中，貼在 Windows Form 中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8e76d-160">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="8e76d-161">處理表單的<xref:System.Windows.Forms.Control.Paint>事件和呼叫`DrawCaps`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理方法，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="8e76d-161">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStrokeCaps (startCap As LineCap, endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStrokeCaps(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="8e76d-162">用於這個端點中線條開端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-162">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="8e76d-163">用於這個端點中線條末端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-163">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e76d-164">設定用來起始和結束組成這個自訂端點線條的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-164">Sets the caps used to start and end lines that make up this custom cap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e76d-165">下列範例示範如何使用 <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8e76d-165">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> method.</span></span> <span data-ttu-id="8e76d-166">若要執行此範例中，貼在 Windows Form 中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8e76d-166">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="8e76d-167">處理表單的<xref:System.Windows.Forms.Control.Paint>事件和呼叫`DrawCaps`從表單的<xref:System.Windows.Forms.Control.Paint>事件處理方法，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="8e76d-167">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property StrokeJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin StrokeJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-168">取得或設定判斷組成這個 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 物件的線條如何聯結 (Join) 的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-168">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e76d-169">
            <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 列舉型別，被這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 物件用來聯結線條。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-169">The <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object uses to join lines.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-170">這個屬性會指定<xref:System.Drawing.Drawing2D.LineJoin>用於聯結的直線和曲線的繪製的路徑所組成的列舉型別<xref:System.Drawing.Drawing2D.CustomLineCap>物件。</span><span class="sxs-lookup"><span data-stu-id="8e76d-170">This property specifies a <xref:System.Drawing.Drawing2D.LineJoin> enumeration that is used to join lines and curves that make up the stroked path of this <xref:System.Drawing.Drawing2D.CustomLineCap> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float WidthScale { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e76d-171">取得或設定縮放與 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 物件寬度相關的這個 <see cref="T:System.Drawing.Pen" /> 類別物件的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-171">Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e76d-172">要縮放端點的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e76d-172">The amount by which to scale the cap.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e76d-173">此屬性指定多個要相乘的自訂端點大小的畫筆寬度。</span><span class="sxs-lookup"><span data-stu-id="8e76d-173">This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</span></span> <span data-ttu-id="8e76d-174">例如，如果此屬性值等於 1，自訂端點寬度為 10、 自訂端點高度為 5，而且在寬度為 3 畫筆繪製線條，然後為繪製 30 單位寬度和 15 單位的高度。</span><span class="sxs-lookup"><span data-stu-id="8e76d-174">For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</span></span> <span data-ttu-id="8e76d-175">此屬性設定為 3 會將端點會繪製 90 單位的寬度和 45 單位的高度。</span><span class="sxs-lookup"><span data-stu-id="8e76d-175">Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>