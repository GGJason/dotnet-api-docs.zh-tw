<Type Name="IfElseActivity" FullName="System.Workflow.Activities.IfElseActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fece60a8ffeac13567526c84853eb395ad3882cb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37740892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IfElseActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IfElseActivity extends System.Workflow.ComponentModel.CompositeActivity implements class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.IfElseActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IfElseActivity&#xA;Inherits CompositeActivity&#xA;Implements IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public ref class IfElseActivity sealed : System::Workflow::ComponentModel::CompositeActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type IfElseActivity = class&#xA;    inherit CompositeActivity&#xA;    interface IActivityEventListener&lt;ActivityExecutionStatusChangedEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.CompositeActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.IfElseDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.Activities.IfElseToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.IfElseActivity), "Resources.Decision.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.IfElseValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>條件式執行 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" /> 型別中兩個以上活動的其中一個。 此類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 這個活動提供的語意與兩個 `If-ElseIf` 陳述式提供的語意類似。  
  
 <xref:System.Workflow.Activities.IfElseActivity> 包含 <xref:System.Workflow.Activities.IfElseBranchActivity> 類別的已排序集合，且會在條件評估為 `true` 時執行第一個分支。 最後的分支不需要條件，在此狀況下，條件永遠會評估為 `true`。  
  
 如果未滿足任何條件，則不需執行任何子活動，即可完成 <xref:System.Workflow.Activities.IfElseActivity>。  
  
   
  
## Examples  
 下列程式碼範例顯示如何建立 <xref:System.Workflow.Activities.IfElseActivity> 類別的新執行個體，並在其中加入兩個 <xref:System.Workflow.Activities.IfElseBranchActivity> 類別。 這個程式碼範例是 SequentialWorkflow.cs 檔案中＜SequentialWorkflowWithParameters SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 循序工作流程與參數](http://msdn.microsoft.com/library/17157f2d-8fed-4848-a386-e4efa381b66b)。  
  
 [!code-csharp[wf_samples#194](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#194)]
 [!code-vb[wf_samples#194](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#194)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IfElseActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IfElseActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例顯示如何建立 <xref:System.Workflow.Activities.IfElseActivity> 類別的新執行個體，並在其中加入兩個 <xref:System.Workflow.Activities.IfElseBranchActivity> 類別。 這個程式碼範例是 SequentialWorkflow.cs 檔案中＜SequentialWorkflowWithParameters SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 循序工作流程與參數](http://msdn.microsoft.com/library/17157f2d-8fed-4848-a386-e4efa381b66b)。  
  
 [!code-csharp[wf_samples#296](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#296)]
 [!code-vb[wf_samples#296](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#296)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IfElseActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IfElseActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.IfElseActivity : string -&gt; System.Workflow.Activities.IfElseActivity" Usage="new System.Workflow.Activities.IfElseActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">使用者定義的活動名稱。</param>
        <summary>使用活動的名稱，初始化 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBranch">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將新分支加入至 <see cref="T:System.Workflow.Activities.IfElseActivity" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBranch">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.IfElseBranchActivity AddBranch (System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt; activities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.IfElseBranchActivity AddBranch(class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBranch (activities As ICollection(Of Activity)) As IfElseBranchActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::IfElseBranchActivity ^ AddBranch(System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activities);" />
      <MemberSignature Language="F#" Value="member this.AddBranch : System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; System.Workflow.Activities.IfElseBranchActivity" Usage="ifElseActivity.AddBranch activities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.IfElseBranchActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activities" Type="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activities">要加入至新分支的活動集合。</param>
        <summary>使用要加入至新分支的新活動集合，將新分支加入至 <see cref="T:System.Workflow.Activities.IfElseActivity" />。</summary>
        <returns>具有新分支的已更新 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBranch">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.IfElseBranchActivity AddBranch (System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt; activities, System.Workflow.ComponentModel.ActivityCondition branchCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.IfElseBranchActivity AddBranch(class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activities, class System.Workflow.ComponentModel.ActivityCondition branchCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBranch (activities As ICollection(Of Activity), branchCondition As ActivityCondition) As IfElseBranchActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::IfElseBranchActivity ^ AddBranch(System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activities, System::Workflow::ComponentModel::ActivityCondition ^ branchCondition);" />
      <MemberSignature Language="F#" Value="member this.AddBranch : System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt; * System.Workflow.ComponentModel.ActivityCondition -&gt; System.Workflow.Activities.IfElseBranchActivity" Usage="ifElseActivity.AddBranch (activities, branchCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.IfElseBranchActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activities" Type="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="branchCondition" Type="System.Workflow.ComponentModel.ActivityCondition" />
      </Parameters>
      <Docs>
        <param name="activities">要加入至新分支的活動集合。</param>
        <param name="branchCondition">
          <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />，可判斷是否應執行分支。</param>
        <summary>使用要加入至新分支的新活動集合，將新分支加入至 <see cref="T:System.Workflow.Activities.IfElseActivity" />。</summary>
        <returns>具有新分支的已更新 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="ifElseActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="ifElseActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;ActivityExecutionStatusChangedEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As ActivityExecutionStatusChangedEventArgs) Implements IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引發事件的物件。</param>
        <param name="e">之前輸入的事件引數。</param>
        <summary>定義活動執行狀態發生變更時的處理程序。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>