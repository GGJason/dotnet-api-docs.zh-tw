<Type Name="HasActivatableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasActivatableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ffeadee2b98803676112409762252de088d2749" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36723246" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasActivatableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasActivatableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasActivatableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasActivatableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasActivatableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasActivatableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasActivatableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasActivatableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasActivatableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="09536-101">表示執行個體存放區引發的事件，該事件會通知泛型主機持續性資料庫中具有可啟動的執行個體。</span><span class="sxs-lookup"><span data-stu-id="09536-101">Represents an event that an instance store raises to notify generic hosts about the existence of activatable instances in the persistence database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09536-102">執行個體*可啟動*，如果它不是處於暫停的狀態或已完成的狀態，而且符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="09536-102">An instance is *activatable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="09536-103">執行個體是*可執行*。</span><span class="sxs-lookup"><span data-stu-id="09536-103">The instance is *runnable*.</span></span> <span data-ttu-id="09536-104">如果滿足以下條件，則持續性資料庫中的執行個體會視為是可執行的：</span><span class="sxs-lookup"><span data-stu-id="09536-104">An instance in the persistence database is considered as runnable if it satisfies the following conditions:</span></span>  
  
    -   <span data-ttu-id="09536-105">執行個體已解除鎖定，並具有已過期的暫止計時器。</span><span class="sxs-lookup"><span data-stu-id="09536-105">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
    -   <span data-ttu-id="09536-106">執行個體已解除鎖定，且其狀態為**Executing**。</span><span class="sxs-lookup"><span data-stu-id="09536-106">The instance is unlocked and its status is **Executing**.</span></span>  
  
    -   <span data-ttu-id="09536-107">執行個體上有無效的鎖定。</span><span class="sxs-lookup"><span data-stu-id="09536-107">The instance has an invalid lock on it.</span></span>  
  
-   <span data-ttu-id="09536-108">電腦上沒有可以載入執行個體的工作流程主機。</span><span class="sxs-lookup"><span data-stu-id="09536-108">There is no workflow host capable of loading the instance is running on the computer.</span></span>  
  
 <span data-ttu-id="09536-109">執行個體存放區應定期搜尋可啟動的工作流程執行個體，而這些執行個體隸屬於使用該存放區的工作流程主機。</span><span class="sxs-lookup"><span data-stu-id="09536-109">An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="09536-110">在持續性存放區中找到可啟動的執行個體時，應引發 <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent>。</span><span class="sxs-lookup"><span data-stu-id="09536-110">It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store.</span></span> <span data-ttu-id="09536-111">如果執行個體存放區在持續性存放區中找不到可啟動的執行個體，則應繼續監控持續性存放區，以尋找任何可啟動的執行個體。</span><span class="sxs-lookup"><span data-stu-id="09536-111">If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.</span></span>  
  
 <span data-ttu-id="09536-112">引發 HasActivatableWorkflowEvent 後，執行個體存放區應停止監控持續性存放區中可啟動的執行個體，直到收到和執行 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> 為止。</span><span class="sxs-lookup"><span data-stu-id="09536-112">After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>.</span></span> <span data-ttu-id="09536-113">只有在命令執行未傳回任何可啟動的工作流程執行個體時，監控才會繼續執行。</span><span class="sxs-lookup"><span data-stu-id="09536-113">The monitoring continues only if the command execution does not return any activatable workflow instances.</span></span>  
  
 <span data-ttu-id="09536-114">當泛型主機收到這個事件時，會針對執行個體存放區執行 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>，以取得建立工作流程主機所需的啟動參數。</span><span class="sxs-lookup"><span data-stu-id="09536-114">When a generic host receives this event, it executes the <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> against the instance store to obtain activation parameters required to create a workflow host.</span></span> <span data-ttu-id="09536-115">泛型主機會使用這些啟動參數建立工作流程主機，而後者則會載入和執行服務執行個體。</span><span class="sxs-lookup"><span data-stu-id="09536-115">The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance.</span></span> <span data-ttu-id="09536-116">WAS 啟動型別的啟動參數有：Site Name、Application Path (相對於網站) 和 Service Path (相對於應用程式)。</span><span class="sxs-lookup"><span data-stu-id="09536-116">The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application).</span></span> <span data-ttu-id="09536-117">執行個體存放區可傳回這三個啟動參數的多組組合。</span><span class="sxs-lookup"><span data-stu-id="09536-117">An instance store could return multiple sets of these three activation parameters.</span></span>  
  
 <span data-ttu-id="09536-118">泛型主機是主機具有名為 XName 參數**ActivationType**，應設為執行個體存放區所支援的值。</span><span class="sxs-lookup"><span data-stu-id="09536-118">A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store.</span></span> <span data-ttu-id="09536-119">目前，SQL 工作流程執行個體存放區支援將 ActivationType 參數設定為值的泛型主機： **WAS**。</span><span class="sxs-lookup"><span data-stu-id="09536-119">Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**.</span></span> <span data-ttu-id="09536-120">如果 ActivationType 完全沒有設定，SQL 工作流程執行個體存放區會將主機視為泛型主機。</span><span class="sxs-lookup"><span data-stu-id="09536-120">If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09536-121">Workflow Management Service 隨附的程式碼名為"Dublin"(Application Server Extensions for.NET 4.0) 是泛型主機，已將啟動類型設定為**WAS**。</span><span class="sxs-lookup"><span data-stu-id="09536-121">The Workflow Management Service that ships with the code named "Dublin" (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasActivatableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasActivatableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09536-122">初始化 <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="09536-122">Initializes a new instance of the <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>