<Type Name="HasRunnableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cfd646d1e20d071ee8c664f99f0d0a8ba1ebead" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36655559" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasRunnableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasRunnableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasRunnableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasRunnableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasRunnableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasRunnableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasRunnableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasRunnableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 SQL 工作流程執行個體存放區引發的事件，該事件會通知工作流程主機持續性資料庫中具有可執行的執行個體。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行個體*可執行*，如果它不是處於暫停的狀態或已完成的狀態，而且符合下列條件：  
  
-   執行個體已解除鎖定，並具有已過期的暫止計時器。  
  
-   執行個體已解除鎖定，且其狀態為**Executing**。  
  
-   執行個體上有無效的鎖定。  
  
 執行個體存放區應定期搜尋可執行的執行個體，而這些執行個體隸屬於使用該存放區的工作流程主機。 在符合工作流程主機型別的持續性存放區中，找到可執行的執行個體時，應引發 <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent>。 如果執行個體存放區在持續性存放區中找不到可執行的執行個體，則應繼續監控持續性存放區，以尋找任何可執行的執行個體。  
  
 引發 HasRunnableWorkflowEvent 後，執行個體存放區應停止監控持續性存放區中可執行的執行個體，直到收到和執行 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> 為止。 只有在 TryLoadRunnableWorkflowCommand 執行未傳回任何可執行的執行個體時，監控才會繼續執行。  
  
 當工作流程主機收到 HasRunnableWorkflowEvent 時，會針對執行個體存放區執行 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>，將執行個體載入至記憶體。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasRunnableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasRunnableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> 類別的執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>