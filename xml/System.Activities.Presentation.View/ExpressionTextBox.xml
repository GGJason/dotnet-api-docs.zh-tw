<Type Name="ExpressionTextBox" FullName="System.Activities.Presentation.View.ExpressionTextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c60efc634ee64f2d30ee9026ef63ef9a1a57730" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionTextBox : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionTextBox extends System.Windows.Controls.UserControl implements class System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ExpressionTextBox" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionTextBox&#xA;Inherits UserControl&#xA;Implements IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionTextBox sealed : System::Windows::Controls::UserControl, System::Windows::Markup::IComponentConnector" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IComponentConnector</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="193e6-101">描述可讓使用者在活動設計工具中編輯運算式的控制項。</span>
      <span class="sxs-lookup">
        <span data-stu-id="193e6-101">Describes a control that enables the user to edit an expression in an activity designer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-102">在 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 中，<xref:System.Activities.Presentation.View.ExpressionTextBox> 會在編輯運算式時提供 IntelliSense 等功能。</span><span class="sxs-lookup"><span data-stu-id="193e6-102">In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], the <xref:System.Activities.Presentation.View.ExpressionTextBox> provides features such as IntelliSense when editing an expression.</span></span> <span data-ttu-id="193e6-103">這類功能是由稱為可裝載編輯器的元件所提供。</span><span class="sxs-lookup"><span data-stu-id="193e6-103">Such features are provided by a component called the hostable editor.</span></span> <span data-ttu-id="193e6-104">運算式編輯介面是可擴充的，而且您可以取代用於編輯運算式的編輯器。</span><span class="sxs-lookup"><span data-stu-id="193e6-104">The expression editing interface is extensible and the editor used for editing expressions can be replaced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="193e6-105">這個元件不適用於在 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 外部重新裝載的應用程式。</span><span class="sxs-lookup"><span data-stu-id="193e6-105">This component is not available for use in applications that are being re-hosted outside [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span></span>  
  
 <span data-ttu-id="193e6-106">**ExpressionTextBlock**編輯運算式時，以下列方式運作。</span><span class="sxs-lookup"><span data-stu-id="193e6-106">**ExpressionTextBlock** works in the following manner when you edit an expression.</span></span>  
  
1.  <span data-ttu-id="193e6-107">當您按一下  **ExpressionTextBox**、<xref:System.Activities.Presentation.View.IExpressionEditorInstance>建立物件，並可裝載編輯器工作階段中執行個體化時[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="193e6-107">When you click on an **ExpressionTextBox**, an <xref:System.Activities.Presentation.View.IExpressionEditorInstance> object is created and a hostable editor session is instantiated in [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span></span>  
  
2.  <span data-ttu-id="193e6-108">當您在可裝載編輯器內部輸入時，請注意，這些功能具有兩種可用性。</span><span class="sxs-lookup"><span data-stu-id="193e6-108">When you type inside a hostable editor, note that the features have two sorts of availability.</span></span>  
  
    1.  <span data-ttu-id="193e6-109">IntelliSense、完成和顏色標示支援會立即可用。</span><span class="sxs-lookup"><span data-stu-id="193e6-109">IntelliSense, completion and colorization support is available immediately.</span></span>  
  
    2.  <span data-ttu-id="193e6-110">驗證則是在背景呼叫，而且只有在經過一段短暫的時間間隔之後才能使用。</span><span class="sxs-lookup"><span data-stu-id="193e6-110">Validation is called in the background and is available only after a short interval of time elapses.</span></span> <span data-ttu-id="193e6-111">然後，如果您的運算式無效，裝載的編譯器就會回報錯誤，而且運算式右邊會顯示紅色的錯誤圖示。</span><span class="sxs-lookup"><span data-stu-id="193e6-111">Then, if your expression is invalid, the hosted compiler reports the error and the red error icon displays to the right of your expression.</span></span>  
  
3.  <span data-ttu-id="193e6-112">按**Enter**索引鍵時**ExpressionTextBox**焦點中插入新行<xref:System.Activities.Presentation.View.IExpressionEditorInstance>物件。</span><span class="sxs-lookup"><span data-stu-id="193e6-112">Press the **Enter** key when the **ExpressionTextBox** has the focus to insert new lines in the <xref:System.Activities.Presentation.View.IExpressionEditorInstance> object.</span></span> <span data-ttu-id="193e6-113">這樣做會導致系統在可裝載編輯器內部進行行認可，進而觸發美化排列以及不規則曲線的顯示。</span><span class="sxs-lookup"><span data-stu-id="193e6-113">This causes a line commit to occur inside the hostable editor, which triggers a pretty listing and the display of squiggles.</span></span>  
  
4.  <span data-ttu-id="193e6-114">會終結編輯器執行個體時**ExpressionTextBox**失去焦點，而且顯示會還原成**TextBlock**。</span><span class="sxs-lookup"><span data-stu-id="193e6-114">The editor instance is destroyed when the **ExpressionTextBox** loses the focus, and the display reverts to a **TextBlock**.</span></span> <span data-ttu-id="193e6-115">如果您正在設計工具介面上或在屬性方格中，系統就會認可模型項目的變更，而且顯示相同運算式的所有 <xref:System.Activities.Presentation.View.ExpressionTextBox> 控制項都會進行同步處理。</span><span class="sxs-lookup"><span data-stu-id="193e6-115">If you are on the designer surface or in the property grid, the change to the model item is committed and all <xref:System.Activities.Presentation.View.ExpressionTextBox> controls displaying that same expression are synchronized.</span></span> <span data-ttu-id="193e6-116">不過，如果您正在對話方塊中，系統就會等到您按一下 [確定] 之後，才認可模型項目的變更。</span><span class="sxs-lookup"><span data-stu-id="193e6-116">However, if you are in a dialog box, the change to the model item is not committed until you click OK.</span></span> <span data-ttu-id="193e6-117">認可模型項目時，系統會叫用 <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> 並且驗證整個工作流程。</span><span class="sxs-lookup"><span data-stu-id="193e6-117">When the model item is committed, <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> is invoked and the entire workflow is validated.</span></span>  
  
5.  <span data-ttu-id="193e6-118">當您按一下  **ExpressionTextBox**同樣地，建立新的編輯器執行個體。</span><span class="sxs-lookup"><span data-stu-id="193e6-118">When you click on the **ExpressionTextBox** again, a new editor instance is created.</span></span> <span data-ttu-id="193e6-119">在可裝載編輯器中，美化排列、顏色標示和不規則曲線都會在您開始編輯之前進行。</span><span class="sxs-lookup"><span data-stu-id="193e6-119">In the hostable editor, pretty listing, colorization, and squiggling occurs before you begin editing.</span></span>  
  
 <span data-ttu-id="193e6-120">繫結運算式文字方塊**OwnerActivity**，使用<xref:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter>正確設定資料內容。</span><span class="sxs-lookup"><span data-stu-id="193e6-120">To bind the expression text box to **OwnerActivity**, use <xref:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter> to set the data context correctly.</span></span> <span data-ttu-id="193e6-121">下列程式碼範例將示範如何設定繫結至正確的資料內容**OwnerActivity**。</span><span class="sxs-lookup"><span data-stu-id="193e6-121">The following code sample demonstrates setting the data context correctly for binding to **OwnerActivity**.</span></span>  
  
```  
<sapc:ModelPropertyEntryToModelItemConverter x:Key="ModelPropertyEntryToContainerConverter"/>  
  
    <DataTemplate x:Key="StringInArgumentPropertyValueEditorTemplate" >  
        <Grid Margin="5" Background="LightGreen" DataContext="{Binding Converter={StaticResource ModelPropertyEntryToContainerConverter}}">  
            <sapv:ExpressionTextBox   
            Expression="{Binding Path=ModelItem.MyVal, Mode=TwoWay,   Converter={StaticResource ArgumentToExpressionConverter},  ConverterParameter=In }"  
            ExpressionType="sys:String"  
            OwnerActivity="{Binding Path=ModelItem}"   
                 />  
        </Grid>  
    </DataTemplate>  
```  
  
 <span data-ttu-id="193e6-122">如需詳細資訊，請參閱 <xref:System.Activities.Presentation.View.IExpressionEditorInstance> 與 <xref:System.Activities.Presentation.View.IExpressionEditorService>。</span><span class="sxs-lookup"><span data-stu-id="193e6-122">For more information, see <xref:System.Activities.Presentation.View.IExpressionEditorInstance> and <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span></span> <span data-ttu-id="193e6-123">另請參閱[使用自訂活動設計工具中的 ExpressionTextBox](~/docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md)範例主題。</span><span class="sxs-lookup"><span data-stu-id="193e6-123">Also see the [Using the ExpressionTextBox in a Custom Activity Designer](~/docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md) sample topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="193e6-124"><xref:System.Activities.Presentation.View.ExpressionTextBox> 通常是在建立自訂活動設計工具時以宣告方式使用。</span><span class="sxs-lookup"><span data-stu-id="193e6-124">The <xref:System.Activities.Presentation.View.ExpressionTextBox> is usually used declaratively when creating custom activity designers.</span></span> <span data-ttu-id="193e6-125">範例程式碼，請參閱[ExpressionTextBox101](http://go.microsoft.com/fwlink/?LinkId=193145)部落格。</span><span class="sxs-lookup"><span data-stu-id="193e6-125">For sample code, see the [ExpressionTextBox101](http://go.microsoft.com/fwlink/?LinkId=193145) blog.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="193e6-126">建立 <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-126">Creates a new instance of the <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-127">取得或設定值，這個值表示運算式文字方塊是否接受 Return。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-127">Gets or sets a value that indicates whether the expression text box accepts returns.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-128">如果接受傳回，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-128">
              <see langword="true" /> if returns are accepted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-129">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-129">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-130">取得或設定值，這個值表示運算式文字方塊是否接受 Tab。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-130">Gets or sets a value that indicates whether the expression text box accepts tabs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-131">如果接受索引標籤，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-131">
              <see langword="true" /> if tabs are accepted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-132">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-132">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="193e6-133">開始編輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-133">Begins an edit.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWordCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CompleteWordCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CompleteWordCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.CompleteWordCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompleteWordCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CompleteWordCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-134">用來完成運算式文字方塊中之文字的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-134">The command used to complete words in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevelCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DecreaseFilterLevelCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DecreaseFilterLevelCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.DecreaseFilterLevelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecreaseFilterLevelCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DecreaseFilterLevelCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-135">當您使用 IntelliSense 篩選時，將篩選層級從 [一般] 索引標籤變更為 [全部] 索引標籤所使用的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-135">The command used to change the filter level from the **Common** tab to the **All** tab when you are using IntelliSense filtering.</span>
          </span>
          <span data-ttu-id="193e6-136">這僅適用於編輯運算式時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-136">This is available only when you edit an expression.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-137">取得或設定預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-137">Gets or sets the default value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-138">預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-138">The default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.DefaultValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultValueProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-139">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-139">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorLostLogicalFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditorLostLogicalFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditorLostLogicalFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditorLostLogicalFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditorLostLogicalFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-140">發生於運算式編輯器失去邏輯焦點時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-140">Occurs when the expression editor loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-141">如果使用方法呼叫刻意強制焦點，但上一個鍵盤焦點存在於不同範圍中，則邏輯焦點會與鍵盤焦點不同。</span><span class="sxs-lookup"><span data-stu-id="193e6-141">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorLostLogicalFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditorLostLogicalFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditorLostLogicalFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditorLostLogicalFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditorLostLogicalFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-142">識別 <see cref="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-142">Identifies the <see cref="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommit">
      <MemberSignature Language="C#" Value="public bool ExplicitCommit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExplicitCommit" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" />
      <MemberSignature Language="VB.NET" Value="Public Property ExplicitCommit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExplicitCommit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-143">取得或設定值，這個值會判斷認可是否明確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-143">Gets or sets a value that determines whether a commit is explicit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-144">如果認可明確，傳回 <see langword="true" />，否則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-144">Returns <see langword="true" /> if the commit is explicit; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExplicitCommitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExplicitCommitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExplicitCommitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExplicitCommitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-145">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-145">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Expression { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-146">取得或設定運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-146">Gets or sets the expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-147">傳回包含運算式的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-147">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that contains the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-148"><xref:System.Activities.Presentation.View.ExpressionTextBox.Expression%2A> 一律為必要項。</span><span class="sxs-lookup"><span data-stu-id="193e6-148"><xref:System.Activities.Presentation.View.ExpressionTextBox.Expression%2A> is always required.</span></span> <span data-ttu-id="193e6-149">使用時<xref:System.Activities.Presentation.View.ExpressionTextBox>以宣告方式將繫結至引數，您必須一律使用<xref:System.Activities.Presentation.Converters.ArgumentToExpressionConverter>若要將運算式繫結至引數，設定`ConverterParameter`至`In`或`Out`根據引數的方向。</span><span class="sxs-lookup"><span data-stu-id="193e6-149">When using the <xref:System.Activities.Presentation.View.ExpressionTextBox> declaratively to bind to arguments, you must always use the <xref:System.Activities.Presentation.Converters.ArgumentToExpressionConverter> to bind the expression to the argument, setting the `ConverterParameter` to `In` or `Out` depending on the direction of the argument.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public string ExpressionActivityEditor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionActivityEditor" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionActivityEditor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionActivityEditor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-150">取得或設定運算式活動編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-150">Gets or sets the expression activity editor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-151">運算式活動編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-151">The expression activity editor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditorOptionName">
      <MemberSignature Language="C#" Value="public const string ExpressionActivityEditorOptionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExpressionActivityEditorOptionName" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorOptionName" />
      <MemberSignature Language="VB.NET" Value="Public Const ExpressionActivityEditorOptionName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExpressionActivityEditorOptionName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-152">指定運算式活動編輯器選項的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-152">Specifies a name of the expression activity editor option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionActivityEditorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionActivityEditorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionActivityEditorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionActivityEditorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-153">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-153">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionEditorService">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionEditorService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionEditorService As IExpressionEditorService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::IExpressionEditorService ^ ExpressionEditorService { System::Activities::Presentation::View::IExpressionEditorService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.IExpressionEditorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-154">取得運算式編輯器服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-154">Gets the expression editor service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-155">傳回包含運算式編輯器服務的 <see cref="T:System.Activities.Presentation.View.IExpressionEditorService" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-155">Returns a <see cref="T:System.Activities.Presentation.View.IExpressionEditorService" /> that contains the expression editor service.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-156">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-156">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-157">取得或設定運算式型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-157">Gets or sets the expression type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-158">傳回包含運算式型別的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-158">Returns a <see cref="T:System.Type" /> that contains the expression type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-159">強烈建議您設定此型別。</span><span class="sxs-lookup"><span data-stu-id="193e6-159">Setting the type is strongly recommended.</span></span> <span data-ttu-id="193e6-160">如果您沒有設定 <xref:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType%2A>，就無法使用 <xref:System.Activities.Presentation.View.ExpressionTextBox> 來繫結至委派型別，而且無法向裝載的編譯器取得驗證。</span><span class="sxs-lookup"><span data-stu-id="193e6-160">If you do not set <xref:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType%2A>, you can’t use the <xref:System.Activities.Presentation.View.ExpressionTextBox> to bind to delegate types and you do not get validation from the hosted compiler.</span></span> <span data-ttu-id="193e6-161">這個編譯器驗證會查看所輸入之運算式的類型是否符合預期的類型，並且顯示周圍的紅色方塊**ExpressionTextBox**無效的資料輸入到其中的活動設計工具上時。</span><span class="sxs-lookup"><span data-stu-id="193e6-161">This compiler validation checks to see if the type of the entered expression matches the expected type, and displays a red box around the **ExpressionTextBox** when invalid data is entered into it on an activity designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-162">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-162">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisenseCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand GlobalIntellisenseCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand GlobalIntellisenseCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.GlobalIntellisenseCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlobalIntellisenseCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ GlobalIntellisenseCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-163">用於運算式文字方塊中之全域 IntelliSense 的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-163">The command used for global IntelliSense in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public string HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintText" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" />
      <MemberSignature Language="VB.NET" Value="Public Property HintText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HintText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-164">取得或設定提示文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-164">Gets or sets the hint text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-165">傳回包含提示文字的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-165">Returns a <see cref="T:System.String" /> that contains the hint text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HintTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HintTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.HintTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HintTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HintTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-166">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-166">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-167">取得或設定水平捲軸的可見性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-167">Gets or sets the horizontal scroll bar visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-168">傳回包含水平捲軸可見性的 <see cref="T:System.Windows.Controls.ScrollBarVisibility" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-168">Returns a <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> that contains the horizontal scroll bar visibility.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-169">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-169">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevelCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand IncreaseFilterLevelCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand IncreaseFilterLevelCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IncreaseFilterLevelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IncreaseFilterLevelCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ IncreaseFilterLevelCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-170">當您使用 IntelliSense 篩選時，將篩選層級從 [全部] 索引標籤變更為 [一般] 索引標籤所使用的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-170">The command used to change the filter level from the **All** tab to the **Common** tab when you are using IntelliSense filtering.</span>
          </span>
          <span data-ttu-id="193e6-171">這僅適用於編輯運算式時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-171">This is available only when you edit an expression.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeComponent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.InitializeComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="193e6-172">初始化此表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-172">Initializes this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-173">此方法只供標記編譯器使用。</span><span class="sxs-lookup"><span data-stu-id="193e6-173">This method is intended for use only by the markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-174">取得或設定值，這個值表示運算式文字方塊是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-174">Gets or sets a value that indicates whether the expression textbox is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-175">表示運算式文字方塊是否為唯讀的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-175">A value that indicates whether the expression textbox is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-176">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-176">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpression">
      <MemberSignature Language="C#" Value="public bool IsSupportedExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSupportedExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSupportedExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSupportedExpression { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-177">取得或設定值，這個值會判斷是否支援運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-177">Gets or sets a value that determines whether the expression is supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-178">如果支援運算式，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-178">
              <see langword="true" /> if the expression is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSupportedExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSupportedExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSupportedExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSupportedExpressionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-179">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-179">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-180">取得或設定最大行數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-180">Gets or sets the maximum number of lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-181">傳回包含最大行數的 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-181">Returns an <see cref="T:System.Int32" /> that contains the maximum number of lines.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-182">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-182">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-183">取得或設定最小行數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-183">Gets or sets the minimum number of lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-184">傳回包含最小行數的 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-184">Returns an <see cref="T:System.Int32" /> that contains the minimum number of lines.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-185">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-185">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivity">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem OwnerActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerActivity As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ OwnerActivity { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-186">取得或設定擁有者活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-186">Gets or sets the owner activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-187">傳回包含擁有者活動的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-187">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that contains the owner activity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OwnerActivityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OwnerActivityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OwnerActivityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OwnerActivityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-188">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-188">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ParameterInfoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ParameterInfoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ParameterInfoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterInfoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ParameterInfoCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-189">用於運算式文字方塊中之參數資訊的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-189">The command used for parameter information in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgument">
      <MemberSignature Language="C#" Value="public string PathToArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathToArgument" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property PathToArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathToArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-190">取得或設定引數的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-190">Gets or sets the path to the argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-191">傳回包含引數之路徑的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-191">Returns a <see cref="T:System.String" /> that contains the path to the argument.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgumentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathToArgumentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathToArgumentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.PathToArgumentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathToArgumentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathToArgumentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-192">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-192">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand QuickInfoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand QuickInfoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.QuickInfoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QuickInfoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ QuickInfoCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-193">用於運算式文字方塊中之快速資訊的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-193">The command used for quick information in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static void RegisterExpressionActivityEditor (string name, Type expressionActivityEditorType, System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpressionActivityEditor(string name, class System.Type expressionActivityEditorType, class System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.RegisterExpressionActivityEditor(System.String,System.Type,System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterExpressionActivityEditor (name As String, expressionActivityEditorType As Type, convertFromString As CreateExpressionFromStringCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpressionActivityEditor(System::String ^ name, Type ^ expressionActivityEditorType, System::Activities::Presentation::Expressions::CreateExpressionFromStringCallback ^ convertFromString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expressionActivityEditorType" Type="System.Type" />
        <Parameter Name="convertFromString" Type="System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="193e6-194">運算式編輯器的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-194">The name of the epression editor.</span>
          </span>
        </param>
        <param name="expressionActivityEditorType">
          <span data-ttu-id="193e6-195">運算式活動編輯器的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-195">The type of the expression activity editor.</span>
          </span>
        </param>
        <param name="convertFromString">
          <span data-ttu-id="193e6-196">運算式的字串格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-196">The string format of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="193e6-197">註冊運算式活動編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-197">Registers an expression activity editor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IComponentConnector.Connect">
      <MemberSignature Language="C#" Value="void IComponentConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IComponentConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IComponentConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IComponentConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">
          <span data-ttu-id="193e6-198">連接識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-198">The connection ID.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="193e6-199">目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-199">The target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="193e6-200">附加事件和名稱至編譯內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-200">Attaches events and names to compiled content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-201">此類別只供標記編譯器使用。</span><span class="sxs-lookup"><span data-stu-id="193e6-201">This class is intended for use only by the markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpression">
      <MemberSignature Language="C#" Value="public bool UseLocationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLocationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLocationExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLocationExpression { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-202">取得或設定值，這個值會判斷此執行個體是否使用位置運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-202">Gets or sets a value that determines whether this instance uses the location expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-203">如果此執行個體使用位置運算式，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-203">
              <see langword="true" /> if this instance uses the location expression; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="193e6-204">A*位置運算式*（或左值運算式） 是一種運算式，評估為識別碼，並可以放在指派陳述式左邊。</span><span class="sxs-lookup"><span data-stu-id="193e6-204">A *location expression* (or L-value expression) is a type of expression that evaluates to an identifier and can be placed on the left hand side of an assignment statement.</span></span> <span data-ttu-id="193e6-205">當您要繫結<xref:System.Activities.Presentation.View.ExpressionTextBox>至`Out`引數，您會設定這個屬性為`True`。</span><span class="sxs-lookup"><span data-stu-id="193e6-205">When you are binding the <xref:System.Activities.Presentation.View.ExpressionTextBox> to an `Out` argument, you would set this property to `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLocationExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLocationExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLocationExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLocationExpressionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-206">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-206">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-207">取得或設定垂直捲軸的可見性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-207">Gets or sets the vertical scrollbar visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="193e6-208">傳回包含捲軸可見性的 <see cref="T:System.Windows.Controls.ScrollBarVisibility" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-208">Returns a <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> that contains the scrollbar visibility.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="193e6-209">登錄 <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="193e6-209">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>