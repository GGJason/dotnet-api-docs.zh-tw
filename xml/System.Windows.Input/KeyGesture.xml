<Type Name="KeyGesture" FullName="System.Windows.Input.KeyGesture">
  <TypeSignature Language="C#" Value="public class KeyGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGesture : System::Windows::Input::InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ef22-101">定義可以用來叫用 (Invoke) 命令的鍵盤組合。</span><span class="sxs-lookup"><span data-stu-id="0ef22-101">Defines a keyboard combination that can be used to invoke a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-102">在大部分情況下，<xref:System.Windows.Input.KeyGesture>必須與一個或多個相關聯<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-102">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="0ef22-103">此規則的例外狀況是函式和數字鍵台金鑰，它可以是有效的<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="0ef22-103">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="0ef22-104">例如，您可以建立<xref:System.Windows.Input.KeyGesture>藉由使用 F12 鍵，但使用 X 金鑰<xref:System.Windows.Input.KeyGesture>必須搭配輔助按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-104">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 <span data-ttu-id="0ef22-105">您可以在一般情況下，</span><span class="sxs-lookup"><span data-stu-id="0ef22-105">In general, you can</span></span>  
  
 <span data-ttu-id="0ef22-106">您可以使用<xref:System.Windows.Input.KeyBinding>繫結<xref:System.Windows.Input.KeyGesture>至<xref:System.Windows.Input.ICommand>，如此一來，叫用命令時<xref:System.Windows.Input.KeyGesture>，就會發生。</span><span class="sxs-lookup"><span data-stu-id="0ef22-106">You can use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to an <xref:System.Windows.Input.ICommand>, so that the command is invoked when the <xref:System.Windows.Input.KeyGesture> occurs.</span></span>  
  
 <span data-ttu-id="0ef22-107">如<xref:System.Windows.Input.KeyGesture>[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用方式，通常在中設定的屬性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是<xref:System.Windows.Input.KeyBinding.Gesture%2A>，在其中筆勢代表標準的索引鍵和輔助按鍵的情況下。</span><span class="sxs-lookup"><span data-stu-id="0ef22-107">For <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.KeyBinding.Gesture%2A>, in cases where the gesture represents both a standard key and a modifier key.</span></span> <span data-ttu-id="0ef22-108">您也可以設定<xref:System.Windows.Input.KeyBinding.Gesture%2A>只函式金鑰，或為修飾詞的屬性索引鍵組合。</span><span class="sxs-lookup"><span data-stu-id="0ef22-108">You can also set the <xref:System.Windows.Input.KeyBinding.Gesture%2A> property to be just a function key, or just a modifier key combination.</span></span> <span data-ttu-id="0ef22-109">不過，它是較常見設定<xref:System.Windows.Input.KeyBinding.Key%2A>預定的命令繫結會使用功能鍵以任何修飾詞，如果屬性或<xref:System.Windows.Input.KeyBinding.Modifiers%2A>預定的命令繫結是否僅輔助按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-109">However, it is more common to set the <xref:System.Windows.Input.KeyBinding.Key%2A> property if the intended command binding is a function key with no modifiers, or <xref:System.Windows.Input.KeyBinding.Modifiers%2A> if the intended command binding is for modifier keys only.</span></span>  
  
<a name="xamlAttributeUsage_KeyGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="0ef22-110">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="0ef22-110">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreModifierKeys+key"/>  
- or -  
<object property="functionKey"/>  
```  
  
<a name="xamlValues_KeyGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0ef22-111">XAML 值</span><span class="sxs-lookup"><span data-stu-id="0ef22-111">XAML Values</span></span>  
 `functionKey`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="0ef22-112">單一金鑰值，必須是其中一種功能鍵 (F1-12) 或數字鍵台金鑰。</span><span class="sxs-lookup"><span data-stu-id="0ef22-112">A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="0ef22-113">一或多個所定義的輔助按鍵<xref:System.Windows.Input.ModifierKeys>列舉型別，以"+"字元分隔。</span><span class="sxs-lookup"><span data-stu-id="0ef22-113">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 `key`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="0ef22-114">單一索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="0ef22-114">A single key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ef22-115">下列範例示範如何將繫結<xref:System.Windows.Input.ApplicationCommands.Close%2A>命令<xref:System.Windows.Input.KeyGesture>使用<xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-115">The following example shows how to bind the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command to a <xref:System.Windows.Input.KeyGesture> using a <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 <span data-ttu-id="0ef22-116">下列範例示範如何使用<xref:System.Windows.Input.KeyGesture>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0ef22-116">The following example shows how to use <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="0ef22-117">請注意，[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用量不會直接宣告`<KeyGesture>`項目。</span><span class="sxs-lookup"><span data-stu-id="0ef22-117">Note that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage does not directly declare a `<KeyGesture>` element.</span></span> <span data-ttu-id="0ef22-118">物件項目用法不可能因為<xref:System.Windows.Input.KeyGesture>不會公開公用預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="0ef22-118">That object element usage is not possible because <xref:System.Windows.Input.KeyGesture> does not expose a public default constructor.</span></span> <span data-ttu-id="0ef22-119">相反地，[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用方式使用 typeconverter 行為來宣告整個<xref:System.Windows.Input.KeyGesture>內嵌方式當做`Gesture`屬性值。</span><span class="sxs-lookup"><span data-stu-id="0ef22-119">Instead, the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage uses the typeconverter behavior to declare an entire <xref:System.Windows.Input.KeyGesture> inline as the `Gesture` attribute value.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ef22-120">初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0ef22-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0ef22-121">與這個筆勢關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-121">The key associated with this gesture.</span></span></param>
        <summary><span data-ttu-id="0ef22-122">使用指定的 <see cref="T:System.Windows.Input.KeyGesture" /> 初始化 <see cref="T:System.Windows.Input.Key" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0ef22-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-123">在大部分情況下，<xref:System.Windows.Input.KeyGesture>必須與一個或多個相關聯<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-123">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="0ef22-124">此規則的例外狀況是函式和數字鍵台金鑰，它可以是有效的<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="0ef22-124">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ef22-125">下列範例示範如何使用這個建構函式來建立<xref:System.Windows.Input.KeyGesture>並與<xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-125">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span>  <span data-ttu-id="0ef22-126"><xref:System.Windows.Input.KeyBinding>接著會新增至<xref:System.Windows.Input.InputBindingCollection>的<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-126">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithnomodifier)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithnomodifier)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0ef22-127"><paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.Key" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-127"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ef22-128"><paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.KeyGesture" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-128"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0ef22-129">與筆勢相關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-129">The key associated with the gesture.</span></span></param>
        <param name="modifiers"><span data-ttu-id="0ef22-130">與筆勢相關聯的輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="0ef22-130">The modifier keys associated with the gesture.</span></span></param>
        <summary><span data-ttu-id="0ef22-131">使用指定的 <see cref="T:System.Windows.Input.KeyGesture" /> 和 <see cref="T:System.Windows.Input.Key" />，初始化 <see cref="T:System.Windows.Input.ModifierKeys" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0ef22-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-132">在大部分情況下，<xref:System.Windows.Input.KeyGesture>必須與一個或多個相關聯<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-132">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="0ef22-133">此規則的例外狀況是函式和數字鍵台金鑰，它可以是有效的<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="0ef22-133">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ef22-134">下列範例示範如何使用這個建構函式來建立<xref:System.Windows.Input.KeyGesture>並與<xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-134">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span> <span data-ttu-id="0ef22-135"><xref:System.Windows.Input.KeyBinding>接著會新增至<xref:System.Windows.Input.InputBindingCollection>的<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-135">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0ef22-136"><paramref name="modifiers" /> 不是有效的 <see cref="T:System.Windows.Input.ModifierKeys" /></span><span class="sxs-lookup"><span data-stu-id="0ef22-136"><paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span></span>  
  
 <span data-ttu-id="0ef22-137">-或-</span><span class="sxs-lookup"><span data-stu-id="0ef22-137">-or-</span></span>  
  
 <span data-ttu-id="0ef22-138"><paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.Key" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-138"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ef22-139"><paramref name="key" /> 和 <paramref name="modifiers" /> 不會組成有效的 <see cref="T:System.Windows.Input.KeyGesture" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-139"><paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers, string displayString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers, string displayString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers, System::String ^ displayString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
        <Parameter Name="displayString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0ef22-140">與筆勢相關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-140">The key associated with the gesture.</span></span></param>
        <param name="modifiers"><span data-ttu-id="0ef22-141">與筆勢相關聯的輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="0ef22-141">The modifier keys associated with the gesture.</span></span></param>
        <param name="displayString"><span data-ttu-id="0ef22-142"><see cref="T:System.Windows.Input.KeyGesture" /> 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="0ef22-142">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></param>
        <summary><span data-ttu-id="0ef22-143">使用指定的 <see cref="T:System.Windows.Input.KeyGesture" />, <see cref="T:System.Windows.Input.Key" /> 和顯示字串初始化 <see cref="T:System.Windows.Input.ModifierKeys" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0ef22-143">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-144"><xref:System.Windows.Input.KeyGesture.DisplayString%2A>屬性設定為`displayString`參數。</span><span class="sxs-lookup"><span data-stu-id="0ef22-144">The <xref:System.Windows.Input.KeyGesture.DisplayString%2A> property is set to the `displayString` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0ef22-145"><paramref name="modifiers" /> 不是有效的 <see cref="T:System.Windows.Input.ModifierKeys" /></span><span class="sxs-lookup"><span data-stu-id="0ef22-145"><paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span></span>  
  
 <span data-ttu-id="0ef22-146">-或-</span><span class="sxs-lookup"><span data-stu-id="0ef22-146">-or-</span></span>  
  
 <span data-ttu-id="0ef22-147"><paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.Key" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-147"><paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ef22-148"><paramref name="displayString" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-148"><paramref name="displayString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0ef22-149"><paramref name="key" /> 和 <paramref name="modifiers" /> 不會組成有效的 <see cref="T:System.Windows.Input.KeyGesture" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-149"><paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="DisplayString">
      <MemberSignature Language="C#" Value="public string DisplayString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.DisplayString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ef22-150">取得這個 <see cref="T:System.Windows.Input.KeyGesture" /> 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="0ef22-150">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <value><span data-ttu-id="0ef22-151">這個 <see cref="T:System.Windows.Input.KeyGesture" /> 的顯示字串。</span><span class="sxs-lookup"><span data-stu-id="0ef22-151">The display string for this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span> <span data-ttu-id="0ef22-152">預設值是 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-152">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-153">如果未設定於建構函式顯示字串，則會傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="0ef22-153">If a display string was not set in the constructor, an empty string is returned.</span></span>  
  
 <span data-ttu-id="0ef22-154">如果這個屬性是空的<xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A>方法會傳回字串，建立從<xref:System.Windows.Input.KeyGesture.Key%2A>和<xref:System.Windows.Input.KeyGesture.Modifiers%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-154">If this property is empty, the <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> method returns a string created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStringForCulture">
      <MemberSignature Language="C#" Value="public string GetDisplayStringForCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDisplayStringForCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDisplayStringForCulture (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDisplayStringForCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="0ef22-155">特定文化特性 (Culture) 的資訊。</span><span class="sxs-lookup"><span data-stu-id="0ef22-155">The culture specific information.</span></span></param>
        <summary><span data-ttu-id="0ef22-156">傳回可用來顯示 <see cref="T:System.Windows.Input.KeyGesture" /> 的字串。</span><span class="sxs-lookup"><span data-stu-id="0ef22-156">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <returns><span data-ttu-id="0ef22-157">要顯示的字串</span><span class="sxs-lookup"><span data-stu-id="0ef22-157">The string to display</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-158">如果所設定的顯示字串的建構函式，就會傳回字串。否則，字串會建立從<xref:System.Windows.Input.KeyGesture.Key%2A>和<xref:System.Windows.Input.KeyGesture.Modifiers%2A>與任何必要的轉換所控管指定<xref:System.Globalization.CultureInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="0ef22-158">If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A> with any necessary conversions being governed by the specified <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ef22-159">取得與這個 <see cref="T:System.Windows.Input.KeyGesture" /> 關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-159">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <value><span data-ttu-id="0ef22-160">與筆勢相關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-160">The key associated with the gesture.</span></span>  <span data-ttu-id="0ef22-161">預設值是 <see cref="F:System.Windows.Input.Key.None" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-161">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-162">在大部分情況下，<xref:System.Windows.Input.KeyGesture>必須與一個或多個相關聯<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-162">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="0ef22-163">此規則的例外狀況是函式和數字鍵台金鑰，它可以是有效的<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="0ef22-163">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement"><span data-ttu-id="0ef22-164">目標。</span><span class="sxs-lookup"><span data-stu-id="0ef22-164">The target.</span></span></param>
        <param name="inputEventArgs"><span data-ttu-id="0ef22-165">要和這個筆勢比較的輸入事件資料。</span><span class="sxs-lookup"><span data-stu-id="0ef22-165">The input event data to compare this gesture to.</span></span></param>
        <summary><span data-ttu-id="0ef22-166">判斷這個 <see cref="T:System.Windows.Input.KeyGesture" /> 是否符合與指定 <see cref="T:System.Windows.Input.InputEventArgs" /> 物件關聯的輸入。</span><span class="sxs-lookup"><span data-stu-id="0ef22-166">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="0ef22-167">如果事件資料符合這個 <see cref="T:System.Windows.Input.KeyGesture" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-167"><see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-168">`targetElement` 可用來做出更具體的決策，是否應叫用命令上的特定項目上。</span><span class="sxs-lookup"><span data-stu-id="0ef22-168">`targetElement` can be used to make a more specific decision on whether a command should be invoked on a specific element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ef22-169">下列範例示範如何測試是否<xref:System.Windows.Input.KeyGesture>符合相關聯的執行個體輸入<xref:System.Windows.Input.InputEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-169">The following example shows how to test whether a <xref:System.Windows.Input.KeyGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="0ef22-170">A<xref:System.Windows.UIElement.KeyDown>比較事件資料，以建立事件處理常式<xref:System.Windows.Input.KeyGesture>使用<xref:System.Windows.Input.KeyGesture.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ef22-170">A <xref:System.Windows.UIElement.KeyDown> event handler is created that compares the event data with the <xref:System.Windows.Input.KeyGesture> by using the <xref:System.Windows.Input.KeyGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlerkeygesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlerkeygesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ef22-171">取得與這個 <see cref="T:System.Windows.Input.KeyGesture" /> 關聯的輔助按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-171">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <value><span data-ttu-id="0ef22-172">與筆勢相關聯的輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="0ef22-172">The modifier keys associated with the gesture.</span></span> <span data-ttu-id="0ef22-173">預設值是 <see cref="F:System.Windows.Input.ModifierKeys.None" />。</span><span class="sxs-lookup"><span data-stu-id="0ef22-173">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ef22-174">在大部分情況下，<xref:System.Windows.Input.KeyGesture>必須與一個或多個相關聯<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="0ef22-174">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="0ef22-175">此規則的例外狀況是函式和數字鍵台金鑰，它可以是有效的<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="0ef22-175">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="0ef22-176">例如，您可以建立<xref:System.Windows.Input.KeyGesture>藉由使用 F12 鍵，但使用 X 金鑰<xref:System.Windows.Input.KeyGesture>必須搭配輔助按鍵。</span><span class="sxs-lookup"><span data-stu-id="0ef22-176">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
  </Members>
</Type>