<Type Name="AccessKeyPressedEventHandler" FullName="System.Windows.Input.AccessKeyPressedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void AccessKeyPressedEventHandler(object sender, AccessKeyPressedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AccessKeyPressedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AccessKeyPressedEventHandler(sender As Object, e As AccessKeyPressedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AccessKeyPressedEventHandler(System::Object ^ sender, AccessKeyPressedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.AccessKeyPressedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="149eb-101">附加事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="149eb-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="149eb-102">事件資料。</span><span class="sxs-lookup"><span data-stu-id="149eb-102">The event data.</span></span></param>
    <summary><span data-ttu-id="149eb-103">表示將處理 <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 附加事件的方法。</span><span class="sxs-lookup"><span data-stu-id="149eb-103">Represents the method that will handle the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> attached event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="149eb-104">存取金鑰在[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]管理員類別會有些許類似的服務存取金鑰，並將轉送來存取的按鍵輸入會由[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]輸入系統。</span><span class="sxs-lookup"><span data-stu-id="149eb-104">Access keys in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are handled by a manager class that acts somewhat like a service for access keys, and forwards access key input to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input system.</span></span> <span data-ttu-id="149eb-105">而不是處理特別藉由附加的處理常式，事件已按下便捷鍵<xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>附加事件的特定物件，通常是較好的作法，透過命令繫結，與特定命令的存取金鑰，然後處理透過對應的路由事件的路由的命令。</span><span class="sxs-lookup"><span data-stu-id="149eb-105">Rather than handling access key pressed events specifically by attaching a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event on a specific object, it is generally a better practice to associate the access key with a particular command through a command binding, and then handle the routed commands through the corresponding routed events.</span></span> <span data-ttu-id="149eb-106">這項技術提供統一的事件系統使用者輸入，無論使用何種輸入的模式起始輸入。</span><span class="sxs-lookup"><span data-stu-id="149eb-106">This technique provides a unified event system for user input regardless of what input mode initiated the input.</span></span> <span data-ttu-id="149eb-107">如需詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="149eb-107">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyManager" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventArgs" />
    <altmember cref="P:System.Windows.Controls.AccessText.AccessKey" />
  </Docs>
</Type>