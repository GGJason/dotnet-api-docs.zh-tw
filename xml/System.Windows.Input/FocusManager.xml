<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="44047-101">提供一組靜態方法、附加屬性和事件，以判斷並設定焦點範圍，並在範圍內設定可焦點化的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-102">Windows Presentation Foundation (WPF) 中有關於焦點的兩個概念： 鍵盤焦點時，邏輯焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="44047-103">目前接收鍵盤輸入的項目與鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="44047-104">可以有只有一個項目具有鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="44047-105">這個項目具有鍵盤焦點具有<xref:System.Windows.IInputElement.IsKeyboardFocused%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="44047-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> 傳回具有鍵盤焦點的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="44047-107">邏輯焦點與<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>特定範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="44047-108">焦點領域是容器項目，可追蹤的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>其範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="44047-109">根據預設，<xref:System.Windows.Window>類別是一個焦點領域時<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>類別。</span><span class="sxs-lookup"><span data-stu-id="44047-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="44047-110">項目是焦點範圍有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="44047-111">可以有多個項目具有邏輯焦點，但只能有一個項目具有邏輯焦點單一焦點範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="44047-112">具有邏輯焦點的項目不一定有鍵盤焦點，但具有鍵盤焦點的項目會具有邏輯焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="44047-113">您可定義焦點領域焦點範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="44047-114">在此情況下，可以有父焦點領域和子焦點領域<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="44047-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="44047-115">下列案例說明如何鍵盤焦點時，邏輯焦點變更 WPF 應用程式具有<xref:System.Windows.Window>與<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.Menu>具有<xref:System.Windows.Controls.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="44047-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="44047-116">當從變更鍵盤焦點<xref:System.Windows.Controls.TextBox>至<xref:System.Windows.Controls.MenuItem>、<xref:System.Windows.Controls.TextBox>失去鍵盤焦點，但保留邏輯焦點<xref:System.Windows.Window>焦點領域。</span><span class="sxs-lookup"><span data-stu-id="44047-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="44047-117"><xref:System.Windows.Controls.MenuItem>取得鍵盤焦點，而取得邏輯焦點<xref:System.Windows.Controls.Menu>焦點領域。</span><span class="sxs-lookup"><span data-stu-id="44047-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="44047-118">鍵盤焦點返回根<xref:System.Windows.Window>中的項目<xref:System.Windows.Window>焦點領域，具有邏輯焦點會取得鍵盤焦點，在此情況下是<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="44047-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="44047-119"><xref:System.Windows.Controls.TextBox>現在具有鍵盤焦點，以及邏輯焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="44047-120"><xref:System.Windows.Controls.MenuItem>失去鍵盤焦點，但會保留邏輯焦點<xref:System.Windows.Controls.Menu>焦點領域。</span><span class="sxs-lookup"><span data-stu-id="44047-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="44047-121">預設值<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上<xref:System.Windows.Window>， <xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ToolBar>，和<xref:System.Windows.Controls.ContextMenu>是`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="44047-122">如需有關焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)和[焦點概觀](~/docs/framework/wpf/advanced/focus-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-123">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="44047-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="44047-124">要加入的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-124">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="44047-125">加入 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-126">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="44047-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="44047-127">要加入的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-127">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="44047-128">加入 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44047-129">識別 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 附加屬性。</span><span class="sxs-lookup"><span data-stu-id="44047-129">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-130">指定焦點範圍內擁有邏輯焦點的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-130">The element with logical focus in the specified focus scope.</span></span></param>
        <summary><span data-ttu-id="44047-131">取得指定焦點範圍內擁有邏輯焦點的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-131">Gets the element with logical focus within the specified focus scope.</span></span></summary>
        <returns><span data-ttu-id="44047-132">在具有邏輯焦點之指定焦點範圍內的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-132">The element in the specified focus scope with logical focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-133"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是具有特定範圍內的邏輯焦點的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-133">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="44047-134">這個物件可能會或可能沒有鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-134">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="44047-135">鍵盤焦點是指收到鍵盤輸入的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-135">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="44047-136">焦點、 鍵盤焦點，以及邏輯焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-136">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="44047-137">如果`element`不焦點領域，這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="44047-137">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="44047-138">使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>，以指定項目具有邏輯焦點，在指定的焦點的範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-138">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44047-139">下列範例會設定具有邏輯焦點的項目使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>，它會取得具有邏輯焦點的項目使用<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="44047-139">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44047-140"><paramref name="element" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44047-140"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-141">要取得最接近焦點範圍的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-141">The element to get the closest focus scope for.</span></span></param>
        <summary><span data-ttu-id="44047-142">判斷指定的項目之最接近的祖系，這個項目會將 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 設定為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="44047-142">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="44047-143">指定之項目的焦點範圍。</span><span class="sxs-lookup"><span data-stu-id="44047-143">The focus scope for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-144">預設值<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上<xref:System.Windows.Window>， <xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ToolBar>，<xref:System.Windows.Controls.ContextMenu>是`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-144">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="44047-145">焦點領域是容器項目，可追蹤的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>其範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-145">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="44047-146">根據預設，<xref:System.Windows.Window>類別是一個焦點領域時<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>類別。</span><span class="sxs-lookup"><span data-stu-id="44047-146">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="44047-147">項目是焦點範圍有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-147">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="44047-148">焦點、 鍵盤焦點，以及邏輯焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-148">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44047-149"><paramref name="element" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44047-149"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-150">要從中讀取附加屬性值的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-150">The element from which to read the attached property.</span></span></param>
        <summary><span data-ttu-id="44047-151">判斷指定的 <see cref="T:System.Windows.DependencyObject" /> 是否為焦點範圍。</span><span class="sxs-lookup"><span data-stu-id="44047-151">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span></span></summary>
        <returns>
          <span data-ttu-id="44047-152">如果指定項目的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 設定為 <see langword="true" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44047-152"><see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-153">焦點領域是容器項目，可追蹤的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>其範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-153">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="44047-154">根據預設，<xref:System.Windows.Window>類別是一個焦點領域時<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>類別。</span><span class="sxs-lookup"><span data-stu-id="44047-154">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="44047-155">項目是焦點範圍有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-155">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="44047-156">焦點、 鍵盤焦點，以及邏輯焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-156">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44047-157">識別 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="44047-157">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44047-158">識別 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 附加屬性。</span><span class="sxs-lookup"><span data-stu-id="44047-158">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-159">預設值<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上<xref:System.Windows.Window>， <xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ToolBar>，<xref:System.Windows.Controls.ContextMenu>是`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-159">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="44047-160">焦點領域是容器項目，可追蹤的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>其範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-160">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="44047-161">根據預設，<xref:System.Windows.Window>類別是一個焦點領域時<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>類別。</span><span class="sxs-lookup"><span data-stu-id="44047-161">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="44047-162">項目是焦點範圍有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-162">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="44047-163">焦點、 鍵盤焦點，以及邏輯焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-163">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44047-164">識別 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="44047-164">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-165">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="44047-165">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="44047-166">要移除的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-166">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="44047-167">移除 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-167">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-168">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="44047-168">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="44047-169">要移除的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-169">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="44047-170">移除 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="44047-170">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-171">在焦點範圍內讓指定的項目成為 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />。</span><span class="sxs-lookup"><span data-stu-id="44047-171">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span></span></param>
        <param name="value"><span data-ttu-id="44047-172">要給予邏輯焦點的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-172">The element to give logical focus to.</span></span></param>
        <summary><span data-ttu-id="44047-173">在指定項目上設定邏輯焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-173">Sets logical focus on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-174"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是項目具有邏輯焦點特定焦點領域。</span><span class="sxs-lookup"><span data-stu-id="44047-174">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="44047-175">這個物件可能會或可能沒有鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-175">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="44047-176">鍵盤焦點是指收到鍵盤輸入的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-176">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="44047-177">焦點、 鍵盤焦點，以及邏輯焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-177">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="44047-178">您可指定之上階元素為焦點領域的焦點領域。</span><span class="sxs-lookup"><span data-stu-id="44047-178">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="44047-179">例如，如果<xref:System.Windows.Controls.StackPanel>是焦點領域和其父代<xref:System.Windows.Window>的焦點領域，<xref:System.Windows.Controls.TextBox>的子系<xref:System.Windows.Controls.StackPanel>無法指定<xref:System.Windows.Window>作為呼叫時的焦點領域<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="44047-179">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="44047-180"><xref:System.Windows.Controls.TextBox>接著<xref:System.Windows.Input.FocusManager.FocusedElement%2A>兩者<xref:System.Windows.Window>聚焦領域和<xref:System.Windows.Controls.StackPanel>焦點領域。</span><span class="sxs-lookup"><span data-stu-id="44047-180">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="44047-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 可讓指定的焦點領域中指定的項目邏輯焦點，並且會嘗試提供項目鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="44047-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44047-182">下列範例會設定具有邏輯焦點的項目使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>，它會取得具有邏輯焦點的項目使用<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="44047-182">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="44047-183">要成為焦點範圍的項目。</span><span class="sxs-lookup"><span data-stu-id="44047-183">The element to make a focus scope.</span></span></param>
        <param name="value">
          <span data-ttu-id="44047-184">若 <c>element</c> 為焦點範圍，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44047-184"><see langword="true" /> if <c>element</c> is a focus scope; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="44047-185">將指定的 <see cref="T:System.Windows.DependencyObject" /> 設定為焦點範圍。</span><span class="sxs-lookup"><span data-stu-id="44047-185">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44047-186">焦點領域是容器項目，可追蹤的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>其範圍內。</span><span class="sxs-lookup"><span data-stu-id="44047-186">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="44047-187">根據預設，<xref:System.Windows.Window>類別是一個焦點領域時<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>類別。</span><span class="sxs-lookup"><span data-stu-id="44047-187">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="44047-188">項目是焦點範圍有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>設`true`。</span><span class="sxs-lookup"><span data-stu-id="44047-188">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="44047-189">焦點、 鍵盤焦點，以及邏輯焦點的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44047-189">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44047-190">下列範例建立項目焦點範圍使用<xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="44047-190">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>