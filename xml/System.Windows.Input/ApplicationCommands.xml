<Type Name="ApplicationCommands" FullName="System.Windows.Input.ApplicationCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f44aa3666f85dd8d5534328cb9b88205fbf4671" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39892446" /></Metadata><TypeSignature Language="C#" Value="public static class ApplicationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ApplicationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type ApplicationCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b6300-101">提供一組標準的應用程式相關命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-101">Provides a standard set of application related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-102">中的命令<xref:System.Windows.Input.ApplicationCommands>類別和其他的命令命令程式庫類別，例如<xref:System.Windows.Input.ComponentCommands>和<xref:System.Windows.Input.NavigationCommands>，用來表示一組應用程式的程式設計人員經常遇到的常見命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-102">The commands in the <xref:System.Windows.Input.ApplicationCommands> class and commands in the other command library classes, such as <xref:System.Windows.Input.ComponentCommands> and <xref:System.Windows.Input.NavigationCommands>, are intended to represent a set of common commands that application programmers encounter frequently.</span></span>  <span data-ttu-id="b6300-103">命令只代表執行個體<xref:System.Windows.Input.RoutedCommand>並不是命令的實作邏輯。</span><span class="sxs-lookup"><span data-stu-id="b6300-103">The commands only represent the instance of the <xref:System.Windows.Input.RoutedCommand> and not the implementation logic for the command.</span></span> <span data-ttu-id="b6300-104">實作邏輯繫結至具有命令<xref:System.Windows.Input.CommandBinding>。</span><span class="sxs-lookup"><span data-stu-id="b6300-104">The implementation logic is bound to the command with a <xref:System.Windows.Input.CommandBinding>.</span></span> <span data-ttu-id="b6300-105">例如，如果<xref:System.Windows.Input.ApplicationCommands.Close%2A>控制項，它會執行的邏輯上執行命令<xref:System.Windows.Input.ApplicationCommands.Close%2A>命令可能無法提供控制項，因此應用程式寫入器會負責撰寫決定控制項如何將邏輯處理命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-105">For example, if the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is executed on a control, the logic which performs the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command may not be provided by the control, so the application writer will be responsible for writing the logic that determines how the control will handle the command.</span></span>  
  
 <span data-ttu-id="b6300-106">許多控制項仍提供許多命令程式庫中的命令的實作邏輯。</span><span class="sxs-lookup"><span data-stu-id="b6300-106">Many controls do provide implementation logic for many of the commands in the command library.</span></span>  <span data-ttu-id="b6300-107">例如，<xref:System.Windows.Controls.TextBox>類別會提供邏輯<xref:System.Windows.Input.ApplicationCommands.Paste%2A>， <xref:System.Windows.Input.ApplicationCommands.Cut%2A>， <xref:System.Windows.Input.ApplicationCommands.Copy%2A>， <xref:System.Windows.Input.ApplicationCommands.Undo%2A>，和<xref:System.Windows.Input.ApplicationCommands.Redo%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-107">For example, the <xref:System.Windows.Controls.TextBox> class provides logic for the <xref:System.Windows.Input.ApplicationCommands.Paste%2A>, <xref:System.Windows.Input.ApplicationCommands.Cut%2A>, <xref:System.Windows.Input.ApplicationCommands.Copy%2A>, <xref:System.Windows.Input.ApplicationCommands.Undo%2A>, and <xref:System.Windows.Input.ApplicationCommands.Redo%2A> commands.</span></span>  
  
 <span data-ttu-id="b6300-108">如需有關命令和命令，請參閱[命令概觀](~/docs/framework/wpf/advanced/commanding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b6300-108">For more information on commands and commanding see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <Member MemberName="CancelPrint">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CancelPrint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CancelPrint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CancelPrint As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CancelPrint { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelPrint : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-109">取得表示 Cancel Print 的命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-109">Gets the value that represents the Cancel Print command.</span></span></summary>
        <value><span data-ttu-id="b6300-110">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-110">The command.</span></span>  
  
 <span data-ttu-id="b6300-111"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term><description>未定義動作。</description></item><item><term> UI 文字</term> <description> Zrušit Tisk  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-111"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> No gesture defined.  </description></item><item><term> UI Text  </term><description> Cancel Print  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-112">這個命令表示要取消列印工作。</span><span class="sxs-lookup"><span data-stu-id="b6300-112">This command indicates intention to cancel a print job.</span></span>  
  
 <span data-ttu-id="b6300-113">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-113">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CancelPrint"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-114">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-114">XAML Attribute Usage</span></span>  
  
```  
<object property="CancelPrint"/>>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Close As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Close { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Close : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-115">取得表示 Close 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-115">Gets the value that represents the Close command.</span></span></summary>
        <value><span data-ttu-id="b6300-116">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-116">The command.</span></span>  
  
 <span data-ttu-id="b6300-117"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term><description>未定義動作。</description></item><item><term> UI 文字</term><description>關閉  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-117"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> No gesture defined.  </description></item><item><term> UI Text  </term><description> Close  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-118">這個命令表示要關閉的項目 （一般檔案）。</span><span class="sxs-lookup"><span data-stu-id="b6300-118">This command indicates intention to close an item (typically a file).</span></span>  
  
 <span data-ttu-id="b6300-119">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-119">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Close"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-120">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-120">XAML Attribute Usage</span></span>  
  
```  
<object property="Close"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ContextMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextMenu As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ContextMenu { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-121">取得表示 Context Menu 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-121">Gets the value that represents the Context Menu command.</span></span></summary>
        <value><span data-ttu-id="b6300-122">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-122">The command.</span></span>  
  
 <span data-ttu-id="b6300-123"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Shift + f10 鍵應用程式</description> </item> <item> <term>滑鼠筆勢</term><description>滑鼠筆勢 並未附加至這個命令，但大部分的應用程式都會遵循使用按一下滑鼠右鍵手勢來叫用操作功能表。</description></item><item><term> UI 文字</term><description>操作功能表  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-123"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Shift+F10  Apps  </description></item><item><term> Mouse Gesture  </term><description> A Mouse Gesture is not attached to this command, but most applications follow the convention of using the Right Click gesture to invoke the context menu.  </description></item><item><term> UI Text  </term><description> Context Menu  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-124">這個命令表示要開啟操作功能表。</span><span class="sxs-lookup"><span data-stu-id="b6300-124">This command indicates intention to open the context menu.</span></span>  
  
 <span data-ttu-id="b6300-125">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-125">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ContextMenu"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-126">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-126">XAML Attribute Usage</span></span>  
  
```  
<object property="ContextMenu"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Copy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Copy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Copy As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Copy { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copy : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Copy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-127">取得表示 Copy 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-127">Gets the value that represents the Copy command.</span></span></summary>
        <value><span data-ttu-id="b6300-128">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-128">The command.</span></span>  
  
 <span data-ttu-id="b6300-129"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + C 鍵 Ctrl + Insert </description> </item> <item> <term>UI 文字</term><description>複製  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-129"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+C  Ctrl+Insert  </description></item><item><term> UI Text  </term><description> Copy  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-130">這個命令表示選取範圍複製到剪貼簿。</span><span class="sxs-lookup"><span data-stu-id="b6300-130">This command indicates intention to copy the selection to the clipboard.</span></span>  
  
 <span data-ttu-id="b6300-131">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-131">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Copy"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-132">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-132">XAML Attribute Usage</span></span>  
  
```  
<object property="Copy"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="CorrectionList">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectionList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectionList As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectionList { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectionList : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-133">取得表示 Correction List 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-133">Gets the value that represents the Correction List command.</span></span></summary>
        <value><span data-ttu-id="b6300-134">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-134">The command.</span></span>  
  
 <span data-ttu-id="b6300-135"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term><description>未定義動作。</description></item><item><term> UI 文字</term> <description> seznam Oprav  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-135"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> No gesture defined.  </description></item><item><term> UI Text  </term><description> Correction List  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-136">這個命令表示要開啟 [更正] 清單。</span><span class="sxs-lookup"><span data-stu-id="b6300-136">This command indicates intention to open the correction list.</span></span>  
  
 <span data-ttu-id="b6300-137">更正清單會根據內容而不同。</span><span class="sxs-lookup"><span data-stu-id="b6300-137">The correction list is different depending on the context.</span></span> <span data-ttu-id="b6300-138">例如，使用[!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)]輸入更正清單識別重新轉換會選擇。</span><span class="sxs-lookup"><span data-stu-id="b6300-138">For example, with [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] input the correction list identifies reconversion choices.</span></span>  
  
 <span data-ttu-id="b6300-139">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-139">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectionList"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-140">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-140">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectionList"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Cut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Cut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cut As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Cut { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cut : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Cut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-141">取得代表 Cut 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-141">Gets the value that represents the Cut command.</span></span></summary>
        <value><span data-ttu-id="b6300-142">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-142">The command.</span></span>  
  
 <span data-ttu-id="b6300-143"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + X Shift + Delete </description> </item> <item> <term>UI 文字</term><description>剪下  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-143"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+X  Shift+Delete  </description></item><item><term> UI Text  </term><description> Cut  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-144">這個命令表示要剪下到剪貼簿選取範圍。</span><span class="sxs-lookup"><span data-stu-id="b6300-144">This command indicates intention to cut the selection to the clipboard.</span></span>  
  
 <span data-ttu-id="b6300-145">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-145">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Cut"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-146">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-146">XAML Attribute Usage</span></span>  
  
```  
<object property="Cut"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-147">取得表示 Delete 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-147">Gets the value that represents the Delete command.</span></span></summary>
        <value><span data-ttu-id="b6300-148">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-148">The command.</span></span>  
  
 <span data-ttu-id="b6300-149"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Del </description> </item> <item> <term> UI 文字 </term> <description>刪除  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-149"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Del  </description></item><item><term> UI Text  </term><description> Delete  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-150">這個命令表示要刪除選取項目。</span><span class="sxs-lookup"><span data-stu-id="b6300-150">This command indicates intention to delete the selection.</span></span>  
  
 <span data-ttu-id="b6300-151">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-151">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-152">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-152">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Find" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Find" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Find As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Find { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Find : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-153">取得代表 Find 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-153">Gets the value that represents the Find command.</span></span></summary>
        <value><span data-ttu-id="b6300-154">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-154">The command.</span></span>  
  
 <span data-ttu-id="b6300-155"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + F </description> </item> <item> <term> UI 文字 </term> <description>尋找  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-155"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+F  </description></item><item><term> UI Text  </term><description> Find  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-156">這個命令表示開啟專用的 [尋找] 對話方塊的方法。</span><span class="sxs-lookup"><span data-stu-id="b6300-156">This command indicates intention to open the dedicated Find dialog.</span></span>  
  
 <span data-ttu-id="b6300-157">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-157">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Find"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-158">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-158">XAML Attribute Usage</span></span>  
  
```  
<object property="Find"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Help" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Help As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Help { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-159">取得表示 Help 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-159">Gets the value that represents the Help command.</span></span></summary>
        <value><span data-ttu-id="b6300-160">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-160">The command.</span></span>  
  
 <span data-ttu-id="b6300-161"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> F1 </description> </item> <item> <term> UI 文字</term><description>協助  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-161"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> F1  </description></item><item><term> UI Text  </term><description> Help  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-162">這個命令表示要開啟 [說明] 對話方塊 （視窗）。</span><span class="sxs-lookup"><span data-stu-id="b6300-162">This command indicates intention to open the Help dialog (window).</span></span>  
  
 <span data-ttu-id="b6300-163">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-163">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Help"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-164">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-164">XAML Attribute Usage</span></span>  
  
```  
<object property="Help"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand New { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand New" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.New" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property New As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ New { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.New : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.New" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-165">取得代表 New 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-165">Gets the value that represents the New command.</span></span></summary>
        <value><span data-ttu-id="b6300-166">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-166">The command.</span></span>  
  
 <span data-ttu-id="b6300-167"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + N </description> </item> <item> <term> UI 文字 </term> <description>新  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-167"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+N  </description></item><item><term> UI Text  </term><description> New  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-168">這個命令表示要建立新的項目。</span><span class="sxs-lookup"><span data-stu-id="b6300-168">This command indicates intention to create a new item.</span></span>  
  
 <span data-ttu-id="b6300-169">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-169">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_New"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-170">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-170">XAML Attribute Usage</span></span>  
  
```  
<object property="New"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="NotACommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NotACommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NotACommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotACommand As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NotACommand { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotACommand : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-171">表示通常會被忽略的命令</span><span class="sxs-lookup"><span data-stu-id="b6300-171">Represents a command which is always ignored.</span></span></summary>
        <value><span data-ttu-id="b6300-172">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-172">The command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-173">此命令會被忽略，並不會處理造成它的輸入的事件。</span><span class="sxs-lookup"><span data-stu-id="b6300-173">This command is always ignored and does not handle the input event that caused it.</span></span>  <span data-ttu-id="b6300-174">這可用來關閉現有的控制項內建的輸入繫結。</span><span class="sxs-lookup"><span data-stu-id="b6300-174">This provides a way to turn off an input binding built into an existing control.</span></span>  
  
 <span data-ttu-id="b6300-175">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-175">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_NotACommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-176">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-176">XAML Attribute Usage</span></span>  
  
```  
<object property="NotACommand"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Open" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Open" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Open As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Open { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Open : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Open" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-177">取得表示 Open 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-177">Gets the value that represents the Open command.</span></span></summary>
        <value><span data-ttu-id="b6300-178">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-178">The command.</span></span>  
  
 <span data-ttu-id="b6300-179"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + O </description> </item> <item> <term> UI 文字 </term> <description>開啟  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-179"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+O  </description></item><item><term> UI Text  </term><description> Open  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-180">這個命令表示要開啟項目 （一般檔案）。</span><span class="sxs-lookup"><span data-stu-id="b6300-180">This command indicates intention to open an item (typically a file).</span></span>  
  
 <span data-ttu-id="b6300-181">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-181">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Open"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-182">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-182">XAML Attribute Usage</span></span>  
  
```  
<object property="Open"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Paste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Paste" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Paste As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Paste { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Paste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-183">取得表示 Paste 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-183">Gets the value that represents the Paste command.</span></span></summary>
        <value><span data-ttu-id="b6300-184">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-184">The command.</span></span>  
  
 <span data-ttu-id="b6300-185"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + V 鍵 Shift + Insert </description> </item> <item> <term>UI 文字</term><description>貼上  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-185"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+V  Shift+Insert  </description></item><item><term> UI Text  </term><description> Paste  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-186">這個命令表示要貼上選取範圍至剪貼簿。</span><span class="sxs-lookup"><span data-stu-id="b6300-186">This command indicates intention to paste the selection to the clipboard.</span></span>  
  
 <span data-ttu-id="b6300-187">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-187">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Paste"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-188">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-188">XAML Attribute Usage</span></span>  
  
```  
<object property="Paste"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Print { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Print" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Print" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Print As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Print { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Print : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Print" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-189">取得代表 Print 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-189">Gets the value that represents the Print command.</span></span></summary>
        <value><span data-ttu-id="b6300-190">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-190">The command.</span></span>  
  
 <span data-ttu-id="b6300-191"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + P </description> </item> <item> <term> UI 文字 </term> <description>列印  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-191"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+P  </description></item><item><term> UI Text  </term><description> Print  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-192">這個命令表示要列印目前的項目。</span><span class="sxs-lookup"><span data-stu-id="b6300-192">This command indicates intention to prints the current item.</span></span>  
  
 <span data-ttu-id="b6300-193">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-193">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Print"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-194">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-194">XAML Attribute Usage</span></span>  
  
```  
<object property="Print"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PrintPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PrintPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrintPreview As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PrintPreview { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreview : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-195">取得代表 Print Preview 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-195">Gets the value that represents the Print Preview command.</span></span></summary>
        <value><span data-ttu-id="b6300-196">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-196">The command.</span></span>  
  
 <span data-ttu-id="b6300-197"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + F2 </description> </item> <item> <term> UI 文字 </term> <description>預覽列印  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-197"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+F2  </description></item><item><term> UI Text  </term><description> Print Preview  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-198">這個命令表示要開啟 [預覽列印] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="b6300-198">This command indicates intention to open the Print Preview dialog.</span></span>  
  
 <span data-ttu-id="b6300-199">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-199">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_PrintPreview"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-200">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-200">XAML Attribute Usage</span></span>  
  
```  
<object property="PrintPreview"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Properties { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-201">取得表示 Properties 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-201">Gets the value that represents the Properties command.</span></span></summary>
        <value><span data-ttu-id="b6300-202">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-202">The command.</span></span>  
  
 <span data-ttu-id="b6300-203"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> F4 </description> </item> <item> <term> UI 文字</term><description>屬性  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-203"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> F4  </description></item><item><term> UI Text  </term><description> Properties  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-204">這個命令表示若要開啟 [屬性] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="b6300-204">This command indicates intention to open a properties dialog.</span></span>  
  
 <span data-ttu-id="b6300-205">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-205">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Properties"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-206">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-206">XAML Attribute Usage</span></span>  
  
```  
<object property="Properties"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Redo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Redo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Redo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Redo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Redo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Redo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-207">取得代表 Redo 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-207">Gets the value that represents the Redo command.</span></span></summary>
        <value><span data-ttu-id="b6300-208">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-208">The command.</span></span>  
  
 <span data-ttu-id="b6300-209"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + Y </description> </item> <item> <term> UI 文字 </term> <description>重做  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-209"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+Y  </description></item><item><term> UI Text  </term><description> Redo  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-210">這個命令表示要取消復原上次的動作。</span><span class="sxs-lookup"><span data-stu-id="b6300-210">This command indicates intention to redo the last action.</span></span>  
  
 <span data-ttu-id="b6300-211">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-211">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Redo"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-212">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-212">XAML Attribute Usage</span></span>  
  
```  
<object property="Redo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Replace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Replace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Replace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Replace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Replace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Replace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-213">取得表示 Replace 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-213">Gets the value that represents the Replace command.</span></span></summary>
        <value><span data-ttu-id="b6300-214">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-214">The command.</span></span>  
  
 <span data-ttu-id="b6300-215"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + H </description> </item> <item> <term> UI 文字 </term> <description>取代  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-215"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+H  </description></item><item><term> UI Text  </term><description> Replace  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-216">這個命令表示要開啟 [取代] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="b6300-216">This command indicates intention to open the Replace dialog.</span></span>  
  
 <span data-ttu-id="b6300-217">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-217">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Replace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-218">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-218">XAML Attribute Usage</span></span>  
  
```  
<object property="Replace"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Save { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Save" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Save" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Save As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Save { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Save : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Save" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-219">取得代表 Save 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-219">Gets the value that represents the Save command.</span></span></summary>
        <value><span data-ttu-id="b6300-220">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-220">The command.</span></span>  
  
 <span data-ttu-id="b6300-221"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + S </description> </item> <item> <term> UI 文字 </term> <description>儲存  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-221"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+S  </description></item><item><term> UI Text  </term><description> Save  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-222">這個命令表示要儲存目前的項目。</span><span class="sxs-lookup"><span data-stu-id="b6300-222">This command indicates intention to save the current item.</span></span>  
  
 <span data-ttu-id="b6300-223">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-223">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Save"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-224">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-224">XAML Attribute Usage</span></span>  
  
```  
<object property="Save"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SaveAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SaveAs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveAs As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SaveAs { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SaveAs : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-225">取得代表 Save As 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-225">Gets the value that represents the Save As command.</span></span></summary>
        <value><span data-ttu-id="b6300-226">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-226">The command.</span></span>  
  
 <span data-ttu-id="b6300-227"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term><description>未定義動作。</description></item><item><term> UI 文字</term><description>將儲存為  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-227"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> No gesture defined.  </description></item><item><term> UI Text  </term><description> Save As  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-228">這個命令表示要開啟 [另存新檔] 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="b6300-228">This command indicates intention to open the Save As dialog.</span></span>  
  
 <span data-ttu-id="b6300-229">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-229">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_SaveAs"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-230">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-230">XAML Attribute Usage</span></span>  
  
```  
<object property="SaveAs"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectAll As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectAll { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectAll : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-231">取得表示全選命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-231">Gets the value that represents the Select All command.</span></span></summary>
        <value><span data-ttu-id="b6300-232">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-232">The command.</span></span>  
  
 <span data-ttu-id="b6300-233"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Ctrl + A </description> </item> <item> <term> UI 文字 </term> <description>全選  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-233"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl+A  </description></item><item><term> UI Text  </term><description> Select All  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-234">這個命令表示要選取所有項目。</span><span class="sxs-lookup"><span data-stu-id="b6300-234">This command indicates intention to select all items.</span></span>  
  
 <span data-ttu-id="b6300-235">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-235">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_SelectAll"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-236">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-236">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectAll"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Stop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Stop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-237">取得表示 Stop 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-237">Gets the value that represents the Stop command.</span></span></summary>
        <value><span data-ttu-id="b6300-238">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-238">The command.</span></span>  
  
 <span data-ttu-id="b6300-239"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> Esc </description> </item> <item> <term> UI 文字 </term> <description>停止  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-239"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Esc  </description></item><item><term> UI Text  </term><description> Stop  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-240">這個命令表示要停止處理。</span><span class="sxs-lookup"><span data-stu-id="b6300-240">This command indicates intention to stop processing.</span></span>  
  
 <span data-ttu-id="b6300-241">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-241">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Stop"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-242">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-242">XAML Attribute Usage</span></span>  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Undo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Undo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Undo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Undo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Undo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Undo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6300-243">取得代表 Undo 命令的值。</span><span class="sxs-lookup"><span data-stu-id="b6300-243">Gets the value that represents the Undo command.</span></span></summary>
        <value><span data-ttu-id="b6300-244">命令。</span><span class="sxs-lookup"><span data-stu-id="b6300-244">The command.</span></span>  
  
 <span data-ttu-id="b6300-245"><list type="table"><listheader><term> 預設值</term> <description> </description> </listheader> <item> <term>鍵筆勢</term> <description> CTRL-Z </description> </item> <item> <term> UI 文字 </term> <description>復原  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="b6300-245"><list type="table"><listheader><term> Default Values  </term><description></description></listheader><item><term> Key Gesture  </term><description> Ctrl-Z  </description></item><item><term> UI Text  </term><description> Undo  </description></item></list></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6300-246">這個命令表示要復原的最後一個動作。</span><span class="sxs-lookup"><span data-stu-id="b6300-246">This command indicates intention to undo the last action.</span></span>  
  
 <span data-ttu-id="b6300-247">不一定會在任何指定的物件; 命令的實作在許多情況下的應用程式寫入器的責任是命令的實作。</span><span class="sxs-lookup"><span data-stu-id="b6300-247">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Undo"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b6300-248">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b6300-248">XAML Attribute Usage</span></span>  
  
```  
<object property="Undo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>