<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8f1f515633f5a365ade282cffaa8a645201b847" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36504343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e1aaa-101">提供應用程式層級的服務，這個服務會處理作業系統的多點觸控輸入，以及引發 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1aaa-101">Provides an application-level service that processes multitouch input from the operating system and raises the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aaa-102"><xref:System.Windows.Input.Touch.FrameReported>事件是否包含在[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]以支援使用 Silverlight 的相容性。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="e1aaa-103">如果您不需要確保與 Silverlight 相容性，使用觸控事件，例如<xref:System.Windows.UIElement.TouchDown>並<xref:System.Windows.UIElement.TouchMove>上<xref:System.Windows.UIElement>， <xref:System.Windows.UIElement3D>，或<xref:System.Windows.ContentElement>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="e1aaa-104"><xref:System.Windows.Input.Touch.FrameReported>事件不會使用相同的事件模型與其他 WPF 輸入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-104">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other WPF input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="e1aaa-105">而不是公開為可能的 UI 中，在物件樹狀結構路由傳送的項目特定事件<xref:System.Windows.Input.Touch.FrameReported>事件是單一事件處理應用程式層級。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-105">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="e1aaa-106">因此，您無法使用`sender`來判斷哪些項目都會被接觸到的事件處理常式的參數。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-106">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
 <span data-ttu-id="e1aaa-107">使用<xref:System.Windows.Input.TouchFrameEventArgs>以取得<xref:System.Windows.Input.TouchPoint>觸控事件與相關的值。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-107">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="e1aaa-108">從<xref:System.Windows.Input.TouchPoint>，您可以取得<xref:System.Windows.Input.TouchPoint.Position%2A>觸控的並判斷是否<xref:System.Windows.Input.TouchAction>已<xref:System.Windows.Input.TouchAction.Down>， <xref:System.Windows.Input.TouchAction.Move>，或<xref:System.Windows.Input.TouchAction.Up>動作。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-108">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="e1aaa-109">您也可以使用<xref:System.Windows.Input.TouchPoint>以取得<xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-109">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="e1aaa-110">從<xref:System.Windows.Input.TouchDevice>，您可以判斷裝置<xref:System.Windows.Input.TouchDevice.Id%2A>和取得資訊都會被接觸到的項目。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-110">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1aaa-111">下列範例可讓您建立簡單的模式在<xref:System.Windows.Controls.Canvas>兩隻手指拖曳過觸控式螢幕。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-111">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen.</span></span> <span data-ttu-id="e1aaa-112">表示每個觸控<xref:System.Windows.Input.TouchDevice>。模式會建立由修飾的觸控點之間繪製一條線。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-112">Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches.</span></span> <span data-ttu-id="e1aaa-113">這個範例需要 Windows 相容的觸控式螢幕。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-113">This example requires a Windows Touch–compatible screen.</span></span>  
  
 <span data-ttu-id="e1aaa-114">下列標記會建立使用者介面，其中包含<xref:System.Windows.Controls.Canvas>置中於<xref:System.Windows.Controls.Grid>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-114">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.</span></span>  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="e1aaa-115">下列程式碼的控制代碼<xref:System.Windows.Input.Touch.FrameReported>事件。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-115">The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="e1aaa-116">當在觸控按下<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-116">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="e1aaa-117">當觸控已消除時，<xref:System.Windows.Input.TouchDevice>發行。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-117">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="e1aaa-118">當觸控移過<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-118">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="e1aaa-119">如果移動來自第一個觸控時，會記錄它的位置。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-119">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="e1aaa-120">如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-120">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aaa-121">發生於傳送觸控訊息時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aaa-121">Occurs when a touch message is sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aaa-122">畫面格是一系列的多點觸控訊息或觸控點。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-122">A frame is one in a series of multitouch messages or touch points.</span></span> <span data-ttu-id="e1aaa-123">您可以藉由處理回應的修飾<xref:System.Windows.Input.Touch.FrameReported>事件，以及存取的詳細資料<xref:System.Windows.Input.TouchPoint>從<xref:System.Windows.Input.TouchFrameEventArgs>事件資料。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-123">You can respond to touches by handling the <xref:System.Windows.Input.Touch.FrameReported> event and accessing the details of the <xref:System.Windows.Input.TouchPoint> from the <xref:System.Windows.Input.TouchFrameEventArgs> event data.</span></span>  
  
 <span data-ttu-id="e1aaa-124"><xref:System.Windows.Input.Touch.FrameReported>事件不會與其他使用相同的事件模型[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]輸入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-124">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="e1aaa-125">而不是公開為可能的 UI 中，在物件樹狀結構路由傳送的項目特定事件<xref:System.Windows.Input.Touch.FrameReported>事件是單一事件處理應用程式層級。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-125">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="e1aaa-126">因此，您無法使用`sender`來判斷哪些項目都會被接觸到的事件處理常式的參數。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-126">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1aaa-127">下列範例會處理<xref:System.Windows.Input.Touch.FrameReported>事件。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-127">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="e1aaa-128">當在觸控按下<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-128">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="e1aaa-129">當觸控已消除時，<xref:System.Windows.Input.TouchDevice>發行。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-129">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="e1aaa-130">當觸控移過<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-130">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="e1aaa-131">如果移動來自第一個觸控時，會記錄它的位置。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-131">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="e1aaa-132">如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-132">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="e1aaa-133">這個範例屬於較大的範例中提供的<xref:System.Windows.Input.Touch>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="e1aaa-133">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>