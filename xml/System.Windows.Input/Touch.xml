<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfe044e6246f3488392cc43580452b6a0c27114f" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224029" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供應用程式層級的服務，這個服務會處理作業系統的多點觸控輸入，以及引發 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported>事件是否包含在[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]以支援使用 Silverlight 的相容性。 如果您不需要確保與 Silverlight 相容性，使用觸控事件，例如<xref:System.Windows.UIElement.TouchDown>並<xref:System.Windows.UIElement.TouchMove>上<xref:System.Windows.UIElement>， <xref:System.Windows.UIElement3D>，或<xref:System.Windows.ContentElement>。  
  
 <xref:System.Windows.Input.Touch.FrameReported>事件不會使用相同的事件模型與其他 WPF 輸入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。 而不是公開為可能的 UI 中，在物件樹狀結構路由傳送的項目特定事件<xref:System.Windows.Input.Touch.FrameReported>事件是單一事件處理應用程式層級。 因此，您無法使用`sender`來判斷哪些項目都會被接觸到的事件處理常式的參數。  
  
 使用<xref:System.Windows.Input.TouchFrameEventArgs>以取得<xref:System.Windows.Input.TouchPoint>觸控事件與相關的值。 從<xref:System.Windows.Input.TouchPoint>，您可以取得<xref:System.Windows.Input.TouchPoint.Position%2A>觸控的並判斷是否<xref:System.Windows.Input.TouchAction>已<xref:System.Windows.Input.TouchAction.Down>， <xref:System.Windows.Input.TouchAction.Move>，或<xref:System.Windows.Input.TouchAction.Up>動作。 您也可以使用<xref:System.Windows.Input.TouchPoint>以取得<xref:System.Windows.Input.TouchDevice>。 從<xref:System.Windows.Input.TouchDevice>，您可以判斷裝置<xref:System.Windows.Input.TouchDevice.Id%2A>和取得資訊都會被接觸到的項目。  
  
   
  
## Examples  
 下列範例可讓您建立簡單的模式在<xref:System.Windows.Controls.Canvas>兩隻手指拖曳過觸控式螢幕。 表示每個觸控<xref:System.Windows.Input.TouchDevice>。模式會建立由修飾的觸控點之間繪製一條線。 這個範例需要 Windows 相容的觸控式螢幕。  
  
 下列標記會建立使用者介面，其中包含<xref:System.Windows.Controls.Canvas>置中於<xref:System.Windows.Controls.Grid>。  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 下列程式碼的控制代碼<xref:System.Windows.Input.Touch.FrameReported>事件。 當在觸控按下<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。 當觸控已消除時，<xref:System.Windows.Input.TouchDevice>發行。 當觸控移過<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果移動來自第一個觸控時，會記錄它的位置。 如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於傳送觸控訊息時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 畫面格是一系列的多點觸控訊息或觸控點。 您可以藉由處理回應的修飾<xref:System.Windows.Input.Touch.FrameReported>事件，以及存取的詳細資料<xref:System.Windows.Input.TouchPoint>從<xref:System.Windows.Input.TouchFrameEventArgs>事件資料。  
  
 <xref:System.Windows.Input.Touch.FrameReported>事件不會與其他使用相同的事件模型[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]輸入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。 而不是公開為可能的 UI 中，在物件樹狀結構路由傳送的項目特定事件<xref:System.Windows.Input.Touch.FrameReported>事件是單一事件處理應用程式層級。 因此，您無法使用`sender`來判斷哪些項目都會被接觸到的事件處理常式的參數。  
  
   
  
## Examples  
 下列範例會處理<xref:System.Windows.Input.Touch.FrameReported>事件。 當在觸控按下<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。 當觸控已消除時，<xref:System.Windows.Input.TouchDevice>發行。 當觸控移過<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果移動來自第一個觸控時，會記錄它的位置。 如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。  
  
 這個範例屬於較大的範例中提供的<xref:System.Windows.Input.Touch>類別概觀。  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>