<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8f1f515633f5a365ade282cffaa8a645201b847" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36504343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供應用程式層級的服務，這個服務會處理作業系統的多點觸控輸入，以及引發 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported>事件是否包含在[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]支援與 Silverlight 的相容性。 如果您不需要確保 Silverlight 與相容性，使用觸控事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>上<xref:System.Windows.UIElement>， <xref:System.Windows.UIElement3D>，或<xref:System.Windows.ContentElement>。  
  
 <xref:System.Windows.Input.Touch.FrameReported>事件不會使用相同的事件模型和其他 WPF 輸入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。 而不是公開為物件樹狀結構的 UI 中，可能會路由傳送的項目特定事件<xref:System.Windows.Input.Touch.FrameReported>是單一事件處理應用程式層級。 因此，您無法使用`sender`來判斷哪些項目會接觸到的事件處理常式的參數。  
  
 使用<xref:System.Windows.Input.TouchFrameEventArgs>取得<xref:System.Windows.Input.TouchPoint>與觸控事件的值。 從<xref:System.Windows.Input.TouchPoint>，您可以取得<xref:System.Windows.Input.TouchPoint.Position%2A>觸控的並判斷是否<xref:System.Windows.Input.TouchAction>已<xref:System.Windows.Input.TouchAction.Down>， <xref:System.Windows.Input.TouchAction.Move>，或<xref:System.Windows.Input.TouchAction.Up>動作。 您也可以使用<xref:System.Windows.Input.TouchPoint>取得<xref:System.Windows.Input.TouchDevice>。 從<xref:System.Windows.Input.TouchDevice>，您可以判斷裝置<xref:System.Windows.Input.TouchDevice.Id%2A>並取得有關碰觸的項目資訊。  
  
   
  
## Examples  
 下列範例可讓您建立簡單的模式上<xref:System.Windows.Controls.Canvas>兩隻手指放拖曳觸控螢幕。 每個觸控由<xref:System.Windows.Input.TouchDevice>。藉由提供修飾觸控點之間繪製一條線建立模式。 這個範例需要 Windows 相容的觸控螢幕。  
  
 下列標記會建立使用者介面，其中包含<xref:System.Windows.Controls.Canvas>置中於<xref:System.Windows.Controls.Grid>。  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 下列程式碼的控制代碼<xref:System.Windows.Input.Touch.FrameReported>事件。 當觸控按<xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。 當已消除觸控時，<xref:System.Windows.Input.TouchDevice>釋放。 觸控式移動經過<xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果移動來自第一個觸控，會記錄其位置。 如果移動來自第二個觸控，就會從第一個觸控位置一條線繪製位置的第二個觸控。  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於傳送觸控訊息時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 框架是一個以一系列的 multitouch 訊息或觸控點。 您可以藉由處理回應修飾<xref:System.Windows.Input.Touch.FrameReported>事件及存取的詳細資料<xref:System.Windows.Input.TouchPoint>從<xref:System.Windows.Input.TouchFrameEventArgs>事件資料。  
  
 <xref:System.Windows.Input.Touch.FrameReported>事件不會與其他使用相同的事件模型[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]輸入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。 而不是公開為物件樹狀結構的 UI 中，可能會路由傳送的項目特定事件<xref:System.Windows.Input.Touch.FrameReported>是單一事件處理應用程式層級。 因此，您無法使用`sender`來判斷哪些項目會接觸到的事件處理常式的參數。  
  
   
  
## Examples  
 下列範例會處理<xref:System.Windows.Input.Touch.FrameReported>事件。 當觸控按<xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。 當已消除觸控時，<xref:System.Windows.Input.TouchDevice>釋放。 觸控式移動經過<xref:System.Windows.Controls.Canvas>、<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果移動來自第一個觸控，會記錄其位置。 如果移動來自第二個觸控，就會從第一個觸控位置一條線繪製位置的第二個觸控。  
  
 這個範例是所提供之較大範例的一部分<xref:System.Windows.Input.Touch>類別概觀。  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>