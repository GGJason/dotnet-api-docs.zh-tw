<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Touch.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c303be5b4a301d0fee4df08c2d9b374d0081a934.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c303be5b4a301d0fee4df08c2d9b374d0081a934</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Touch">
          <source>Provides an application-level service that processes multitouch input from the operating system and raises the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Touch.FrameReported" /&gt;</ph> event.</source>
          <target state="translated">提供應用程式層級的服務，這個服務會處理作業系統的多點觸控輸入，以及引發 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Touch.FrameReported" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is included in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> to support compatibility with Silverlight.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>事件是否包含在<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>支援與 Silverlight 的相容性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>If you do not have to ensure compatibility with Silverlight, use the touch events, such as <ph id="ph1">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>, on <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.UIElement3D&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.ContentElement&gt;</ph>.</source>
          <target state="translated">如果您不需要確保 Silverlight 與相容性，使用觸控事件，例如<ph id="ph1">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>上<ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.UIElement3D&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.ContentElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event does not use the same event model as other WPF input events, such as <ph id="ph2">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>事件不會使用相同的事件模型和其他 WPF 輸入事件，例如<ph id="ph2">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is a single event that is handled at the application level.</source>
          <target state="translated">而不是公開為物件樹狀結構的 UI 中，可能會路由傳送的項目特定事件<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>是單一事件處理應用程式層級。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Therefore, you cannot use the <ph id="ph1">`sender`</ph> parameter of the event handler to determine what element is touched.</source>
          <target state="translated">因此，您無法使用<ph id="ph1">`sender`</ph>來判斷哪些項目會接觸到的事件處理常式的參數。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph> to get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> values that are relevant to the touch event.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>取得<ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>與觸控事件的值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>From the <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>, you can get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint.Position%2A&gt;</ph> of the touch and determine whether the <ph id="ph3">&lt;xref:System.Windows.Input.TouchAction&gt;</ph> was a <ph id="ph4">&lt;xref:System.Windows.Input.TouchAction.Down&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.TouchAction.Move&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Input.TouchAction.Up&gt;</ph> action.</source>
          <target state="translated">從<ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>，您可以取得<ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint.Position%2A&gt;</ph>觸控的並判斷是否<ph id="ph3">&lt;xref:System.Windows.Input.TouchAction&gt;</ph>已<ph id="ph4">&lt;xref:System.Windows.Input.TouchAction.Down&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Input.TouchAction.Move&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Input.TouchAction.Up&gt;</ph>動作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> to get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>取得<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>From the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>, you can determine the device <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> and get information about the element that is touched.</source>
          <target state="translated">從<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>，您可以判斷裝置<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph>並取得有關碰觸的項目資訊。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The following example enables you to create simple patterns on a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> by dragging two fingers across a touchscreen.</source>
          <target state="translated">下列範例可讓您建立簡單的模式上<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>兩隻手指放拖曳觸控螢幕。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>Each touch is represented by a <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>.The pattern is created by drawing a line between the touch points provided by the touches.</source>
          <target state="translated">每個觸控由<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>。藉由提供修飾觸控點之間繪製一條線建立模式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>This example requires a Windows Touch–compatible screen.</source>
          <target state="translated">這個範例需要 Windows 相容的觸控螢幕。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The following markup creates the user interface, which consists of a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> that is centered in a <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
          <target state="translated">下列標記會建立使用者介面，其中包含<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>置中於<ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>The following code handles the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event.</source>
          <target state="translated">下列程式碼的控制代碼<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>When a touch presses on the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">當觸控按<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>擷取至<ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>When the touch is lifted, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">當已消除觸控時，<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>釋放。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>When a touch moves across the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">觸控式移動經過<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph>已核取。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>If the move came from the first touch, its location is recorded.</source>
          <target state="translated">如果移動來自第一個觸控，會記錄其位置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Touch">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">如果移動來自第二個觸控，就會從第一個觸控位置一條線繪製位置的第二個觸控。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>Occurs when a touch message is sent.</source>
          <target state="translated">發生於傳送觸控訊息時。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>A frame is one in a series of multitouch messages or touch points.</source>
          <target state="translated">框架是一個以一系列的 multitouch 訊息或觸控點。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>You can respond to touches by handling the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event and accessing the details of the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> from the <ph id="ph3">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph> event data.</source>
          <target state="translated">您可以藉由處理回應修飾<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>事件及存取的詳細資料<ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>從<ph id="ph3">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>事件資料。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event does not use the same event model as other <ph id="ph2">[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]</ph> input events, such as <ph id="ph3">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>事件不會與其他使用相同的事件模型<ph id="ph2">[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]</ph>輸入事件，例如<ph id="ph3">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is a single event that is handled at the application level.</source>
          <target state="translated">而不是公開為物件樹狀結構的 UI 中，可能會路由傳送的項目特定事件<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>是單一事件處理應用程式層級。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>Therefore, you cannot use the <ph id="ph1">`sender`</ph> parameter of the event handler to determine what element is touched.</source>
          <target state="translated">因此，您無法使用<ph id="ph1">`sender`</ph>來判斷哪些項目會接觸到的事件處理常式的參數。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>The following example handles the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event.</source>
          <target state="translated">下列範例會處理<ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>When a touch presses on the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">當觸控按<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>擷取至<ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>When the touch is lifted, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">當已消除觸控時，<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>釋放。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>When a touch moves across the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">觸控式移動經過<ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph>已核取。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>If the move came from the first touch, its location is recorded.</source>
          <target state="translated">如果移動來自第一個觸控，會記錄其位置。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">如果移動來自第二個觸控，就會從第一個觸控位置一條線繪製位置的第二個觸控。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.Touch.FrameReported">
          <source>This example is part of a larger example that is available in the <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> class overview.</source>
          <target state="translated">這個範例是所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph>類別概觀。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>