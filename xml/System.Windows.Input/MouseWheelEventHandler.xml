<Type Name="MouseWheelEventHandler" FullName="System.Windows.Input.MouseWheelEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="111aa0bc5ab2301cb58caf6c31d86267e6d2e017" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36505549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void MouseWheelEventHandler(object sender, MouseWheelEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MouseWheelEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MouseWheelEventHandler(sender As Object, e As MouseWheelEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void MouseWheelEventHandler(System::Object ^ sender, MouseWheelEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type MouseWheelEventHandler = delegate of obj * MouseWheelEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">附加事件處理常式的物件。</param>
    <param name="e">事件資料。</param>
    <summary>代表將處理 <see cref="E:System.Windows.UIElement.MouseWheel" /> 和 <see cref="E:System.Windows.ContentElement.MouseWheel" /> 路由事件，以及相關的附加事件和預覽事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個委派會使用與下列附加事件。  
  
-   <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType>  
  
 這個委派會使用與下列路由事件。 這些路由的事件轉送，使其更容易存取一般項目模型中先前所列的附加的事件[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]。  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
 附加的事件和基底的項目路由事件共用其事件資料，而反昇和通道之路由事件的版本也共用事件資料。 事件路由傳送，這可能會影響事件的處理的特性。 如需詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。  
  
 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>屬性是正數，如果滑鼠滾輪 （遠離使用者） 會向前移動或負數滑鼠滾輪 （朝向使用者） 會向下移動。  
  
   
  
## Examples  
 下列範例會移動<xref:System.Windows.Controls.TextBox>，已連接至<xref:System.Windows.Controls.Canvas>，向上如果滑鼠滾輪<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>是正面的且移動<xref:System.Windows.Controls.TextBox>向下如果滑鼠滾輪<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>是負數。  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
    <altmember cref="E:System.Windows.Input.Mouse.MouseWheel" />
  </Docs>
</Type>