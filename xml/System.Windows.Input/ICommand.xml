<Type Name="ICommand" FullName="System.Windows.Input.ICommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea5eff6a81bd27b0ab5ad70e628f1d59b7ee7f56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommand" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommand" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0813b-101">定義命令。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0813b-101">Defines a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0813b-102"><xref:System.Windows.Input.RoutedCommand> 和<xref:System.Windows.Input.RoutedUICommand>兩種方式實作<xref:System.Windows.Input.ICommand>介面中[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0813b-102"><xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span>  
  
## <a name="icommand-in-windows-runtime-apps"></a><span data-ttu-id="0813b-103">在 Windows 中的 ICommand 執行階段應用程式</span><span class="sxs-lookup"><span data-stu-id="0813b-103">ICommand in Windows Runtime apps</span></span>  
 <span data-ttu-id="0813b-104"><xref:System.Windows.Input.ICommand>介面是.NET 的 Windows 執行階段應用程式中撰寫命令的程式碼合約。</span><span class="sxs-lookup"><span data-stu-id="0813b-104">The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</span></span> <span data-ttu-id="0813b-105">這些命令會將命令的行為提供 UI 項目，例如 Windows 執行階段 XAML`Button`和特別`AppBarButton`。</span><span class="sxs-lookup"><span data-stu-id="0813b-105">These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`.</span></span> <span data-ttu-id="0813b-106">如果您正在定義 Windows 執行階段應用程式的命令，則您基本上是使用相同的技術，您會用來定義.NET 應用程式中的命令。</span><span class="sxs-lookup"><span data-stu-id="0813b-106">If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</span></span> <span data-ttu-id="0813b-107">定義實作的類別來實作命令<xref:System.Windows.Input.ICommand>和特別實作<xref:System.Windows.Input.ICommand.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0813b-107">Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.</span></span>  
  
 <span data-ttu-id="0813b-108">XAML 的 Windows 執行階段不支援 x`:Static`，因此請勿嘗試使用`x:Static`如果命令使用從 Windows 執行階段 XAML 標記延伸。</span><span class="sxs-lookup"><span data-stu-id="0813b-108">XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML.</span></span> <span data-ttu-id="0813b-109">此外，Windows 執行階段沒有任何預先定義的命令程式庫，因此如下所示的 XAML 語法不會真的適用於您正在實作介面並定義 Windows 執行階段使用的命令的情況。</span><span class="sxs-lookup"><span data-stu-id="0813b-109">Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</span></span>  
  
<a name="xamlTextUsage_ICommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="0813b-110">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="0813b-110">XAML Attribute Usage</span></span>  
 <span data-ttu-id="0813b-111">\<*object property*="*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="0813b-111">\<*object property*="*predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="0813b-112">\-或-</span><span class="sxs-lookup"><span data-stu-id="0813b-112">\- or -</span></span>  
  
 <span data-ttu-id="0813b-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="0813b-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span></span>  
  
 <span data-ttu-id="0813b-114">\-或-</span><span class="sxs-lookup"><span data-stu-id="0813b-114">\- or -</span></span>  
  
 <span data-ttu-id="0813b-115">\<*object property*="{ *customClassName.customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="0813b-115">\<*object property*="{ *customClassName.customCommandName*}"/></span></span>  
  
<a name="xamlValues_ICommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0813b-116">XAML 值</span><span class="sxs-lookup"><span data-stu-id="0813b-116">XAML Values</span></span>  
 <span data-ttu-id="0813b-117">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="0813b-117">*predefinedClassName*</span></span>  
 <span data-ttu-id="0813b-118">其中一個預先定義的命令類別。</span><span class="sxs-lookup"><span data-stu-id="0813b-118">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="0813b-119">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="0813b-119">*predefinedCommandName*</span></span>  
 <span data-ttu-id="0813b-120">其中一個預先定義的命令。</span><span class="sxs-lookup"><span data-stu-id="0813b-120">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="0813b-121">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="0813b-121">*customClassName*</span></span>  
 <span data-ttu-id="0813b-122">自訂類別，其中包含自訂的命令。</span><span class="sxs-lookup"><span data-stu-id="0813b-122">A custom class that contains the custom command.</span></span> <span data-ttu-id="0813b-123">自訂類別，通常需要`xlmns`前置詞對應，請參閱 < [XAML 命名空間和 WPF XAML 命名空間對應](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="0813b-123">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="0813b-124">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="0813b-124">*customCommandName*</span></span>  
 <span data-ttu-id="0813b-125">自訂的命令。</span><span class="sxs-lookup"><span data-stu-id="0813b-125">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="0813b-126">命令所用的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-126">Data used by the command.</span>
          </span>
          <span data-ttu-id="0813b-127">如果命令不需要傳遞資料，則這個物件可設為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-127">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0813b-128">定義用來判斷命令是否能以其目前狀態執行的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-128">Defines the method that determines whether the command can execute in its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0813b-129">如果這個命令可執行，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-129">
              <see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0813b-130">通常，命令來源會呼叫<xref:System.Windows.Input.ICommand.CanExecute%2A>方法時<xref:System.Windows.Input.ICommand.CanExecuteChanged>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="0813b-130">Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.ICommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanExecuteChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0813b-131">發生於影響命令是否應執行的變更發生時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-131">Occurs when changes occur that affect whether or not the command should execute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0813b-132">通常，命令來源呼叫<xref:System.Windows.Input.ICommand.CanExecute%2A>命令時就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="0813b-132">Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.</span></span>  
  
 <span data-ttu-id="0813b-133">一般來說，如果無法執行命令，命令來源停用。</span><span class="sxs-lookup"><span data-stu-id="0813b-133">Normally, if the command cannot execute, the command source disables itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="0813b-134">命令所用的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-134">Data used by the command.</span>
          </span>
          <span data-ttu-id="0813b-135">如果命令不需要傳遞資料，則這個物件可設為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-135">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0813b-136">定義叫用命令時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0813b-136">Defines the method to be called when the command is invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>