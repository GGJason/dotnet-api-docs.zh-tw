<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Mouse.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac583e98a291f9d5f6cefe7297d93f8f8195e0f1c0a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83e98a291f9d5f6cefe7297d93f8f8195e0f1c0a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Mouse">
          <source>Represents the mouse device to a specific thread.</source>
          <target state="translated">表示特定執行緒的滑鼠裝置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph>類別提供滑鼠相關的事件、 方法和屬性提供的滑鼠狀態的相關資訊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>Each event that <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> defines as an attached event is also re-exposed by the base element classes <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> as a new routed event.</source>
          <target state="translated">每個事件，<ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph>定義所附加的事件也重新公開由基底項目類別<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph>做為新的路由事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>Generally, it is more convenient to handle mouse events for an application on <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>, rather than using the <ph id="ph3">&lt;xref:System.Windows.Input.Mouse&gt;</ph> events.</source>
          <target state="translated">一般而言，它會比較方便處理滑鼠事件的應用程式上<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>，而不是使用<ph id="ph3">&lt;xref:System.Windows.Input.Mouse&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>For details, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>輸入概觀<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>The static members of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class delegate to the primary <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> of the calling thread's input manager.</source>
          <target state="translated">靜態成員<ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph>類別委派到主要複本<ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph>的呼叫執行緒的輸入管理員。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> attached event.</source>
          <target state="translated">加入 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Mouse">
          <source>Captures mouse input to the specified element.</source>
          <target state="translated">將滑鼠輸入捕捉至指定的項目。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">當項目捕捉到滑鼠游標的框線內接收滑鼠輸入。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>未指定，預設值<ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>是<ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
          <target state="translated">若要放開滑鼠捕捉時，呼叫<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>傳遞<ph id="ph2">`null`</ph>做為要擷取的項目。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
          <target state="translated">如果滑鼠捕捉時<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>就會引發事件和滑鼠，底下的項目不會輸入<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph>先引發。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Mouse">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
          <target state="translated">這可讓所擷取的項目機會釋放之前擷取<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>事件會路由傳送。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>The element to capture the mouse.</source>
          <target state="translated">要捕捉滑鼠的項目。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>Captures mouse input to the specified element.</source>
          <target state="translated">將滑鼠輸入捕捉至指定的項目。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果項目可以捕捉滑鼠，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">當項目捕捉到滑鼠游標的框線內接收滑鼠輸入。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>未指定，預設值<ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph>是<ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
          <target state="translated">若要放開滑鼠捕捉時，呼叫<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>傳遞<ph id="ph2">`null`</ph>做為要擷取的項目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
          <target state="translated">如果滑鼠捕捉時<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>就會引發事件和滑鼠，底下的項目不會輸入<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph>先引發。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
          <target state="translated">這可讓所擷取的項目機會釋放之前擷取<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>事件會路由傳送。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)">
          <source>The following example shows how to capture the mouse to a specific element by using the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何使用來擷取特定項目的滑鼠<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The element to capture the mouse.</source>
          <target state="translated">要捕捉滑鼠的項目。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The capture policy to use.</source>
          <target state="translated">要使用的捕捉原則。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>Captures mouse input to the specified element using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Input.CaptureMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CaptureMode" /&gt;</ph> 將滑鼠輸入捕捉至指定項目。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果項目可以捕捉滑鼠，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</source>
          <target state="translated">當項目捕捉到滑鼠時，資料指標的框線內是否會收到滑鼠輸入。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
          <target state="translated">若要放開滑鼠捕捉時，呼叫<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>傳遞<ph id="ph2">`null`</ph>做為要擷取的項目。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
          <target state="translated">如果滑鼠捕捉時<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>就會引發事件和滑鼠，底下的項目不會輸入<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph>先引發。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
          <target state="translated">這可讓所擷取的項目機會釋放之前擷取<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph>事件會路由傳送。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
          <source>The following example shows how to capture the mouse to a specific element by using the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何使用來擷取特定項目的滑鼠<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.Captured">
          <source>Gets the element that has captured the mouse.</source>
          <target state="translated">取得已捕捉滑鼠的項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>The element captured by the mouse.</source>
          <target state="translated">滑鼠所捕捉的項目。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">當項目捕捉到滑鼠游標的框線內接收滑鼠輸入。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</source>
          <target state="translated">滑鼠通常擷取只會在拖放作業時，這種方式，並保留擷取，直到拖放作業的拖放動作發生。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.Captured">
          <source>The follow example shows how to obtain the element that has mouse capture.</source>
          <target state="translated">下列範例示範如何取得具有滑鼠擷取的項目。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>Gets the element the mouse pointer is directly over.</source>
          <target state="translated">取得滑鼠指標位於其正上方的項目。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>The element the mouse pointer is over.</source>
          <target state="translated">滑鼠指標位於其上方的項目。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>Controls can be composed of multiple elements.</source>
          <target state="translated">控制項可以由多個元素組成。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> reports the specific element in the composite control the mouse pointer is over and not the control itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> 會報告滑鼠指標位於複合控制項不是控制項本身中的特定項目。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>For example, depending on which part of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> the pointer is over, the <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> property could report the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property or the <ph id="ph5">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>.</source>
          <target state="translated">例如，根據哪一個部分<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>指標位於上方，<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph>屬性可能會報告<ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>的<ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>屬性或<ph id="ph5">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph>判斷滑鼠是否包含其視覺化子項目數的項目上，或控制複合項目。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.DirectlyOver">
          <source>If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</source>
          <target state="translated">如果項目具有滑鼠擷取，滑鼠指標會視為直接在元素上方無論是將滑鼠指標。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>The elements <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> are in relation to.</source>
          <target state="translated">與 <bpt id="p1">&lt;c&gt;</bpt>點<ept id="p1">&lt;/c&gt;</ept> 相關的項目。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>An array of objects.</source>
          <target state="translated">物件的陣列。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</source>
          <target state="translated">擷取自上次滑鼠移動事件後，最多 64 個滑鼠指標的先前座標。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])">
          <source>The number of points returned.</source>
          <target state="translated">傳回的點數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The coordinate space in which to calculate the position of the mouse.</source>
          <target state="translated">要在其中計算滑鼠位置的座標空間。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Gets the position of the mouse relative to a specified element.</source>
          <target state="translated">取得相對於指定項目的滑鼠位置。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The position of the mouse relative to the parameter <ph id="ph1">&lt;paramref name="relativeTo" /&gt;</ph>.</source>
          <target state="translated">相對於參數 <ph id="ph1">&lt;paramref name="relativeTo" /&gt;</ph> 的滑鼠位置。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</source>
          <target state="translated">滑鼠指標位置會計算相對於指定的項目與項目原點，0，0 的點的左上角。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>During drag-and-drop operations, the position of the mouse cannot be reliably determined through <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>.</source>
          <target state="translated">拖放作業期間的滑鼠位置無法可靠地判斷透過<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> calls.</source>
          <target state="translated">這是因為 （可能包括擷取），滑鼠的控制由拖曳的原始項目卸除直到完成為止，大部分的控制基礎行為<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Try the following approaches instead:</source>
          <target state="translated">請改嘗試下列方法：</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.DragEventArgs.GetPosition%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.DragEventArgs&gt;</ph> that is passed to the drag events (<ph id="ph3">&lt;xref:System.Windows.ContentElement.DragEnter&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.ContentElement.DragOver&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.ContentElement.DragLeave&gt;</ph>).</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.DragEventArgs.GetPosition%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.DragEventArgs&gt;</ph>傳遞至拖曳事件 (<ph id="ph3">&lt;xref:System.Windows.ContentElement.DragEnter&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.ContentElement.DragOver&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.ContentElement.DragLeave&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>Call <bpt id="p1">[</bpt>GetCursorPos<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)</ept>, using P/Invoke.</source>
          <target state="translated">呼叫<bpt id="p1">[</bpt>GetCursorPos<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)</ept>，使用 P/Invoke。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph> to determine the position of the mouse pointer.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>來判斷滑鼠指標的位置。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The position of the mouse pointer is stored in a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure.</source>
          <target state="translated">滑鼠指標位置會儲存在<ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph>結構。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Point.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Point.Y%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Windows.Point&gt;</ph> object are displayed in a <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Point.X%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Point.Y%2A&gt;</ph>值<ph id="ph3">&lt;xref:System.Windows.Point&gt;</ph>物件會顯示在<ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.GotMouseCaptureEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>Gets the state of the left button of the mouse.</source>
          <target state="translated">取得滑鼠左鍵的狀態。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>The state of the left mouse button.</source>
          <target state="translated">滑鼠左鍵的狀態。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.LeftButton%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">下列範例示範如何判斷是否藉由檢查如果按下滑鼠左鍵的狀態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.LeftButton%2A&gt;</ph>等於<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列舉值<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.LeftButton">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">如果按下按鈕時，方法被呼叫哪些更新範例中顯示項目。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>Gets the state of the middle button of the mouse.</source>
          <target state="translated">取得滑鼠中間鍵的目前狀態。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>The state of the middle mouse button.</source>
          <target state="translated">滑鼠中間鍵的狀態。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MiddleButton%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">下列範例示範如何判斷是否藉由檢查如果按下滑鼠中間鍵的狀態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MiddleButton%2A&gt;</ph>等於<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列舉值<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.MiddleButton">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">如果按下按鈕時，方法被呼叫哪些更新範例中顯示項目。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseDownEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseEnterEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseLeaveEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseMoveEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseUpEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>Represents the number of units the mouse wheel is rotated to scroll one line.</source>
          <target state="translated">表示旋轉滑鼠滾輪以捲動一行的單位數。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>In the current <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, the value of this field is 120.</source>
          <target state="translated">在目前<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>，這個欄位的值為 120。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</source>
          <target state="translated">公開欄位的目的是讓建置解析度更精細的滑鼠滾輪，在未來可能會包含沒有色塊旋轉滾輪的廠商。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</source>
          <target state="translated">預期是這類裝置會在每個訊息中傳送多個訊息，每次旋轉，但使用較小的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>To support this possibility, you should either add the incoming delta values until the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine&gt;</ph> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</source>
          <target state="translated">若要支援這種可能性，您應該加入的內送的差異值，直到<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine&gt;</ph>量為止 （因此進行差異輪替，您會取得相同的回應），或捲動以回應較頻繁的訊息部分行。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine">
          <source>You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</source>
          <target state="translated">您也可以選擇您自己的捲軸資料粒度，並累積自己選擇的差異，直到該差異為止，或可能參考可控制使用者的系統參數的滑鼠敏感度或推斷這些滑鼠滾輪差異臨界值。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.MouseWheelEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>Gets or sets the cursor for the entire application.</source>
          <target state="translated">取得或設定整個應用程式的游標。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>The override cursor or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Input.Mouse.OverrideCursor" /&gt;</ph> is not set.</source>
          <target state="translated">覆寫游標，如果未設定 <ph id="ph2">&lt;see cref="P:System.Windows.Input.Mouse.OverrideCursor" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> that <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to will be applied to the whole application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> ，<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>是設定為將會套用到整個應用程式。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>To clear the override <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>, set <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">若要清除覆寫<ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>，將<ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>至<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph> will force the mouse cursor not to be displayed, but mouse events are still processed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>至<ph id="ph2">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph>會強制滑鼠游標不會顯示，但仍處理滑鼠事件。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>The following example shows an event handler for a <ph id="ph1">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph> that is used to toggle the scope of a cursor change between a single element and the entire application.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>，用來切換資料指標變更單一項目和整個應用程式之間的範圍。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>If the control that raised the event is the <ph id="ph1">`rbScopeElement`</ph><ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>, a flag that denotes the scope of the cursor change is set and <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">引發事件的控制項是否<ph id="ph1">`rbScopeElement`</ph> <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>，設定表示游標變更範圍的旗標和<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>設<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.OverrideCursor">
          <source>If the control that raised the event is the <ph id="ph1">`rbScopeApplication`</ph><ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>, a flag that denotes the scope of the cursor change is set and <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to the <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Controls.Border&gt;</ph> control named <ph id="ph6">`DisplayArea`</ph>.</source>
          <target state="translated">引發事件的控制項是否<ph id="ph1">`rbScopeApplication`</ph> <ph id="ph2">&lt;xref:System.Windows.Controls.RadioButton&gt;</ph>，設定表示游標變更範圍的旗標和<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph>屬性<ph id="ph5">&lt;xref:System.Windows.Controls.Border&gt;</ph>控制項，名為<ph id="ph6">`DisplayArea`</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.PrimaryDevice">
          <source>Gets the primary mouse device.</source>
          <target state="translated">取得主要滑鼠裝置。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.PrimaryDevice">
          <source>The device.</source>
          <target state="translated">裝置。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.PrimaryDevice">
          <source>This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">此屬性支援的 Windows Presentation Foundation 基礎結構，而且不是直接從您的程式碼使用。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> attached event.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> 附加事件。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">當註冊路由的事件，而且結果會儲存為可註冊路由的事件的類別上的欄位時，會建立路由的事件識別項。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">這些識別碼包含識別的名稱、 擁有者類型、 處理常式類型、 路由策略和公用程式方法新增擁有者的事件。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Mouse.QueryCursorEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">您通常使用這些識別項做為事件系統方法的參數來識別特定路由的事件。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseDown" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseEnter" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseLeave" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseMove" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseUp" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.MouseWheel" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">接聽這個事件的 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>The event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> attached event.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="E:System.Windows.Input.Mouse.QueryCursor" /&gt;</ph> 附加事件的處理常式。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>Gets the state of the right button.</source>
          <target state="translated">取得右鍵的狀態。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>The state of the right mouse button.</source>
          <target state="translated">滑鼠右鍵的狀態。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.RightButton%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">下列範例示範如何判斷是否藉由檢查如果按下滑鼠右按鈕的狀態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.RightButton%2A&gt;</ph>等於<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列舉值<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.RightButton">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">如果按下按鈕時，方法被呼叫哪些更新範例中顯示項目。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>The cursor to set the mouse pointer to.</source>
          <target state="translated">要將滑鼠指標設定至這個游標。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>Sets the mouse pointer to the specified <ph id="ph1">&lt;see cref="T:System.Windows.Input.Cursor" /&gt;</ph>.</source>
          <target state="translated">將滑鼠指標設定至指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the cursor was set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已設定游標，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>The cursor being set does not apply to any particular element, but rather it applies to the whole application.</source>
          <target state="translated">正在設定資料指標不會套用至任何特定的項目，但而不是它適用於整個應用程式。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</source>
          <target state="translated">因此之後設定滑鼠指標移到物件設定游標的游標，游標會變更一次。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>To force the mouse pointer to a specific <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> and to force this <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> on all elements, set the <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> property.</source>
          <target state="translated">若要強制滑鼠指標在特定<ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>以及強制這<ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph>所有的項目上設定<ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>To set the cursor on a specific element, use the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property on either <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
          <target state="translated">若要將游標放在特定的項目上，使用<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph>屬性上的<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)">
          <source>For more information on the base elements, see the <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
          <target state="translated">基底的項目上的詳細資訊，請參閱<bpt id="p1">[</bpt>基底的項目概觀<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.Synchronize">
          <source>Forces the mouse to resynchronize.</source>
          <target state="translated">強制滑鼠重新同步處理。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Mouse.UpdateCursor">
          <source>Forces the mouse cursor to be updated.</source>
          <target state="translated">強制更新滑鼠游標。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>Gets the state of the first extended button.</source>
          <target state="translated">取得第一個延伸按鍵的狀態。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>The state of the first extended mouse button.</source>
          <target state="translated">第一個延伸滑鼠按鍵的狀態。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton1%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">下列範例示範如何判斷是否按下所檢查的第一個延伸的滑鼠按鍵的狀態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton1%2A&gt;</ph>等於<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列舉值<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton1">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">如果按下按鈕時，方法被呼叫哪些更新範例中顯示項目。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>Gets the state of the second extended button.</source>
          <target state="translated">取得第二個延伸按鍵的狀態。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>The state of the second extended mouse button.</source>
          <target state="translated">第二個延伸滑鼠按鍵的狀態。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton2%2A&gt;</ph> is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph> enumeration value <ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>.</source>
          <target state="translated">下列範例示範如何判斷是否按下所檢查的第二個延伸的滑鼠按鍵的狀態<ph id="ph1">&lt;xref:System.Windows.Input.Mouse.XButton2%2A&gt;</ph>等於<ph id="ph2">&lt;xref:System.Windows.Input.MouseButtonState&gt;</ph>列舉值<ph id="ph3">&lt;xref:System.Windows.Input.MouseButtonState.Pressed&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Mouse.XButton2">
          <source>If the button is pressed, a method is called which updates display elements in the sample.</source>
          <target state="translated">如果按下按鈕時，方法被呼叫哪些更新範例中顯示項目。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>