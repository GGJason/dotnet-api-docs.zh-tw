<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7ffcff8092d477e75345cd0afc6f0d3c265489e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659732" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>將 <see cref="T:System.Windows.Input.KeyGesture" /> 繫結至 <see cref="T:System.Windows.Input.RoutedCommand" /> (或其他 <see cref="T:System.Windows.Input.ICommand" /> 實作)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Input.KeyBinding>關聯<xref:System.Windows.Input.KeyGesture>與<xref:System.Windows.Input.ICommand>，例如<xref:System.Windows.Input.RoutedCommand>。 <xref:System.Windows.Input.RoutedCommand> 主要的實作，<xref:System.Windows.Input.ICommand>介面[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]指揮系統。  在一般情況下，當<xref:System.Windows.Input.KeyGesture>執行此命令會叫用，雖然命令行為會進一步受特定命令的因素例如<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>值。  如需命令的詳細資訊，請參閱[指揮概觀](~/docs/framework/wpf/advanced/commanding-overview.md)。  
  
 除了函式和數字鍵台的有效金鑰<xref:System.Windows.Input.KeyGesture>必須剛好包含一個<xref:System.Windows.Input.Key>和一或多個<xref:System.Windows.Input.ModifierKeys>。  函式和數字鍵台金鑰不需要輔助按鍵才會生效<xref:System.Windows.Input.KeyGesture>。 您可指定了無效<xref:System.Windows.Input.KeyGesture>和<xref:System.Windows.Input.KeyBinding>無效與相關聯鍵筆勢，透過[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]或程式碼。 比方說，便可防止建立和繫結無法驗證<xref:System.Windows.Input.KeyGesture>，其中包含只找到索引鍵，或只修飾詞而沒有索引鍵。 這類<xref:System.Windows.Input.KeyBinding>永遠不會嘗試叫用其相關聯的命令。  
  
 定義時<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]有兩種方式來指定<xref:System.Windows.Input.KeyGesture>。 第一種方式，來建立<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是定義<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性<xref:System.Windows.Input.KeyBinding>元素，其可讓一語法，可指定以單一字串，例如"CTRL + P"的機碼和修飾詞。 第二個方法是定義<xref:System.Windows.Input.KeyBinding.Key%2A>屬性和<xref:System.Windows.Input.KeyBinding.Modifiers%2A>屬性<xref:System.Windows.Input.KeyBinding>項目。 這兩種設定<xref:System.Windows.Input.KeyGesture>相等並修改相同的基礎物件，但會有衝突，如果兩個可用。  在案例時<xref:System.Windows.Input.KeyBinding.Key%2A>， <xref:System.Windows.Input.KeyBinding.Modifiers%2A>，而<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性都設、 定義的屬性上一次將用於<xref:System.Windows.Input.KeyGesture>。 您可能有的情況下其中例如<xref:System.Windows.Input.KeyBinding.Key%2A>組最後將會覆寫索引鍵元件上述筆勢的但保留筆勢的修飾詞相同。 一般情況下，建議您只使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性從[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; 這將可避免模稜兩可，提供最有效率的語法，並可提供最直接的序列化表示。  
  
 A<xref:System.Windows.Input.KeyBinding>可以藉由註冊定義上的特定物件或類別層級<xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>上<xref:System.Windows.Input.CommandManager>類別。 最常見的方式來定義<xref:System.Windows.Input.KeyBinding>內 [控制項] 範本，設定<xref:System.Windows.UIElement.InputBindings%2A>屬性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]藉由宣告一或多個<xref:System.Windows.Input.MouseBinding>或<xref:System.Windows.Input.KeyBinding>項目。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Input.KeyBinding>並將它加入<xref:System.Windows.Input.InputBindingCollection>的根目錄 視窗。  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.KeyBinding" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.KeyBinding" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">與 <c>gesture</c> 建立關聯的命令。</param>
        <param name="gesture">與 <c>命令</c> 建立關聯的組合鍵。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Input.KeyBinding" /> 和 <see cref="T:System.Windows.Input.ICommand" />，初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> 或 <paramref name="gesture" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">要叫用的命令。</param>
        <param name="key">與 <c>命令</c> 建立關聯的按鍵。</param>
        <param name="modifiers">與 <c>命令</c> 建立關聯的修飾詞。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Input.KeyBinding" />，和指定的 <see cref="T:System.Windows.Input.ICommand" /> 與 <see cref="T:System.Windows.Input.Key" /> (將轉換為 <see cref="T:System.Windows.Input.ModifierKeys" />)，初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Windows.Input.KeyBinding" /> 的執行個體。</summary>
        <returns>新物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個 <see cref="T:System.Windows.Input.KeyBinding" /> 關聯的筆勢。</summary>
        <value>按鍵順序。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 功能鍵和數字鍵台金鑰，除了<xref:System.Windows.Input.KeyGesture>必須包含<xref:System.Windows.Input.Key>和一或多個<xref:System.Windows.Input.ModifierKeys>。  
  
   
  
## Examples  
 下列範例示範如何將繫結<xref:System.Windows.Input.KeyGesture>至<xref:System.Windows.Input.RoutedCommand>使用<xref:System.Windows.Input.KeyBinding>（標記和程式碼範例會指定不同的索引鍵，但會相等）。  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">要設定的 <paramref name="gesture" /> 值不是 <see cref="T:System.Windows.Input.KeyGesture" />。</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個 <see cref="T:System.Windows.Input.Key" /> 關聯 <see cref="T:System.Windows.Input.KeyGesture" /> 的 <see cref="T:System.Windows.Input.KeyBinding" />。</summary>
        <value>
          <see cref="T:System.Windows.Input.KeyGesture" /> 的按鍵部分。 預設值是 <see cref="F:System.Windows.Input.Key.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 功能鍵和數字鍵台金鑰，除了<xref:System.Windows.Input.KeyGesture>必須包含<xref:System.Windows.Input.Key>和一或多個<xref:System.Windows.Input.ModifierKeys>。  
  
 定義時<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]有兩種方式來指定<xref:System.Windows.Input.KeyGesture>。 第一種方式，來建立<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是定義<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性<xref:System.Windows.Input.KeyBinding>元素，其可讓一語法，可指定以單一字串，例如"CTRL + P"的機碼和修飾詞。 第二個方法是定義<xref:System.Windows.Input.KeyBinding.Key%2A>屬性和<xref:System.Windows.Input.KeyBinding.Modifiers%2A>屬性<xref:System.Windows.Input.KeyBinding>項目。 這兩種設定<xref:System.Windows.Input.KeyGesture>相等並修改相同的基礎物件，但會有衝突，如果兩個可用。  在案例時<xref:System.Windows.Input.KeyBinding.Key%2A>， <xref:System.Windows.Input.KeyBinding.Modifiers%2A>，而<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性都設、 定義的屬性上一次將用於<xref:System.Windows.Input.KeyGesture>。 您可能有的情況下其中例如<xref:System.Windows.Input.KeyBinding.Key%2A>組最後將會覆寫索引鍵元件上述筆勢的但保留筆勢的修飾詞相同。 一般情況下，建議您只使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性從[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; 這將可避免模稜兩可，提供最有效率的語法，並可提供最直接的序列化表示。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Input.KeyBinding.Key" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個 <see cref="T:System.Windows.Input.ModifierKeys" /> 關聯 <see cref="T:System.Windows.Input.KeyGesture" /> 的 <see cref="T:System.Windows.Input.KeyBinding" />。</summary>
        <value>
          <see cref="T:System.Windows.Input.KeyGesture" /> 的輔助按鍵。  預設值是 <see cref="F:System.Windows.Input.ModifierKeys.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 功能鍵和數字鍵台金鑰，除了<xref:System.Windows.Input.KeyGesture>必須包含<xref:System.Windows.Input.Key>和一或多個<xref:System.Windows.Input.ModifierKeys>。  
  
 定義時<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]有兩種方式來指定<xref:System.Windows.Input.KeyGesture>。 第一種方式，來建立<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是定義<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性<xref:System.Windows.Input.KeyBinding>元素，其可讓一語法，可指定以單一字串，例如"CTRL + P"的機碼和修飾詞。 第二個方法是定義<xref:System.Windows.Input.KeyBinding.Key%2A>屬性和<xref:System.Windows.Input.KeyBinding.Modifiers%2A>屬性<xref:System.Windows.Input.KeyBinding>項目。 這兩種設定<xref:System.Windows.Input.KeyGesture>相等並修改相同的基礎物件，但會有衝突，如果兩個可用。  在案例時<xref:System.Windows.Input.KeyBinding.Key%2A>， <xref:System.Windows.Input.KeyBinding.Modifiers%2A>，而<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性都設、 定義的屬性上一次將用於<xref:System.Windows.Input.KeyGesture>。 您可能有的情況下其中例如<xref:System.Windows.Input.KeyBinding.Key%2A>組最後將會覆寫索引鍵元件上述筆勢的但保留筆勢的修飾詞相同。 一般情況下，建議您只使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>屬性從[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; 這將可避免模稜兩可，提供最有效率的語法，並可提供最直接的序列化表示。  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>XAML 值  
 *oneOrMoreModifierKeys*  
 一或多個所定義的輔助按鍵<xref:System.Windows.Input.ModifierKeys>列舉型別，以"+"字元分隔。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>