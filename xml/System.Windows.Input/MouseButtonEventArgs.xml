<Type Name="MouseButtonEventArgs" FullName="System.Windows.Input.MouseButtonEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48a09cd060c302b395117c3fcc68d752a57e1e98" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39991866" /></Metadata><TypeSignature Language="C#" Value="public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseButtonEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseButtonEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseButtonEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseButtonEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="60043-101">提供滑鼠按鍵相關事件的資料。</span><span class="sxs-lookup"><span data-stu-id="60043-101">Provides data for mouse button related events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60043-102"><xref:System.Windows.Input.MouseButtonEventArgs> 搭配下列事件： <xref:System.Windows.Input.Mouse.MouseDown>， <xref:System.Windows.Input.Mouse.MouseUp>， <xref:System.Windows.UIElement.MouseLeftButtonDown>， <xref:System.Windows.UIElement.MouseLeftButtonUp>， <xref:System.Windows.UIElement.MouseRightButtonDown>， <xref:System.Windows.UIElement.MouseRightButtonUp>，和對應的通道事件。</span><span class="sxs-lookup"><span data-stu-id="60043-102"><xref:System.Windows.Input.MouseButtonEventArgs> is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events.</span></span>  
  
 <span data-ttu-id="60043-103"><xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</span><span class="sxs-lookup"><span data-stu-id="60043-103">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60043-104">下列範例會建立變更引發事件之物件的色彩的滑鼠按鈕事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="60043-104">The following example creates a mouse button event handler that changes the color of the object that raised the event.</span></span>  <span data-ttu-id="60043-105">選擇的色彩取決於按下滑鼠按鈕。</span><span class="sxs-lookup"><span data-stu-id="60043-105">The color chosen depends on the mouse button which was pressed.</span></span>  <span data-ttu-id="60043-106"><xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A>屬性會檢查以判斷哪一個按鈕已按下。</span><span class="sxs-lookup"><span data-stu-id="60043-106">The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="T:System.Windows.Input.MouseAction" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60043-107">初始化 <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="60043-107">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="60043-108">與這個事件關聯的邏輯滑鼠裝置。</span><span class="sxs-lookup"><span data-stu-id="60043-108">The logical Mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="60043-109">輸入的時間。</span><span class="sxs-lookup"><span data-stu-id="60043-109">The time when the input occurred.</span></span></param>
        <param name="button"><span data-ttu-id="60043-110">描述其狀態的滑鼠按鍵。</span><span class="sxs-lookup"><span data-stu-id="60043-110">The mouse button whose state is being described.</span></span></param>
        <summary><span data-ttu-id="60043-111">使用指定的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />、時間戳記和 <see cref="T:System.Windows.Input.MouseDevice" />，初始化 <see cref="T:System.Windows.Input.MouseButton" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="60043-111">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class by using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, and <see cref="T:System.Windows.Input.MouseButton" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button, System::Windows::Input::StylusDevice ^ stylusDevice);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton * System.Windows.Input.StylusDevice -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button, stylusDevice)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="60043-112">與這個事件關聯的邏輯滑鼠裝置。</span><span class="sxs-lookup"><span data-stu-id="60043-112">The logical mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="60043-113">事件發生的時間。</span><span class="sxs-lookup"><span data-stu-id="60043-113">The time the event occurred.</span></span></param>
        <param name="button"><span data-ttu-id="60043-114">與這個事件關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="60043-114">The button associated with this event.</span></span></param>
        <param name="stylusDevice"><span data-ttu-id="60043-115">與這個事件關聯的手寫筆裝置。</span><span class="sxs-lookup"><span data-stu-id="60043-115">The stylus device associated with this event.</span></span></param>
        <summary><span data-ttu-id="60043-116">使用指定的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />、時間戳記、<see cref="T:System.Windows.Input.MouseDevice" /> 和 <see cref="T:System.Windows.Input.MouseButton" />，初始化 <see cref="T:System.Windows.Input.StylusDevice" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="60043-116">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class by using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, <see cref="T:System.Windows.Input.MouseButton" />, and <see cref="T:System.Windows.Input.StylusDevice" />.</span></span>  <span data-ttu-id="60043-117">。</span><span class="sxs-lookup"><span data-stu-id="60043-117">.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonState As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState ButtonState { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.ButtonState : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60043-118">取得與事件關聯的按鍵狀態。</span><span class="sxs-lookup"><span data-stu-id="60043-118">Gets the state of the button associated with the event.</span></span></summary>
        <value><span data-ttu-id="60043-119">按鍵的狀態。</span><span class="sxs-lookup"><span data-stu-id="60043-119">The state the button is in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60043-120"><xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</span><span class="sxs-lookup"><span data-stu-id="60043-120">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60043-121">下列範例會建立處理事件之物件的色彩會變更滑鼠按鈕事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="60043-121">The following example creates a mouse button event handler that changes the color of the object that handles the event.</span></span>  <span data-ttu-id="60043-122">選擇的色彩取決於是否滑鼠按鈕已按下或放開。</span><span class="sxs-lookup"><span data-stu-id="60043-122">The color that is chosen depends on whether the mouse button was pressed or released.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]
 [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsbuttonstatepressed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ChangedButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButton ChangedButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButton ChangedButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangedButton As MouseButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButton ChangedButton { System::Windows::Input::MouseButton get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangedButton : System.Windows.Input.MouseButton" Usage="System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60043-123">取得與事件關聯的按鍵。</span><span class="sxs-lookup"><span data-stu-id="60043-123">Gets the button associated with the event.</span></span></summary>
        <value><span data-ttu-id="60043-124">按下的滑鼠按鍵。</span><span class="sxs-lookup"><span data-stu-id="60043-124">The button which was pressed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60043-125"><xref:System.Windows.Input.Mouse>類別會提供額外的屬性和方法來判斷滑鼠的狀態。</span><span class="sxs-lookup"><span data-stu-id="60043-125">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60043-126">下列範例會建立物件，根據按下滑鼠按鈕的色彩變更滑鼠按鈕事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="60043-126">The following example creates a mouse button event handler that changes the color of an object depending on the mouse button which was pressed.</span></span>  <span data-ttu-id="60043-127"><xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A>屬性會檢查以判斷哪一個按鈕已按下。</span><span class="sxs-lookup"><span data-stu-id="60043-127">The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ClickCount">
      <MemberSignature Language="C#" Value="public int ClickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClickCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClickCount : int" Usage="System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60043-128">取得按鍵被按一下的次數。</span><span class="sxs-lookup"><span data-stu-id="60043-128">Gets the number of times the button was clicked.</span></span></summary>
        <value><span data-ttu-id="60043-129">滑鼠按鍵被按一下的次數。</span><span class="sxs-lookup"><span data-stu-id="60043-129">The number of times the mouse button was clicked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60043-130">其中一種用法<xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A>是要判斷是否已發生的雙精度浮點滑鼠點擊。</span><span class="sxs-lookup"><span data-stu-id="60043-130">One use of <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is to determine whether a double mouse click has occurred.</span></span>  <span data-ttu-id="60043-131">某些類別會公開事件按兩下，像是<xref:System.Windows.Controls.Control.MouseDoubleClick>上的事件<xref:System.Windows.Controls.Control>類別。</span><span class="sxs-lookup"><span data-stu-id="60043-131">Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class.</span></span> <span data-ttu-id="60043-132">按兩下 當按兩下事件不類別上公開時，可以偵測到使用<xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A>事件資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="60043-132">When a double click event is not exposed on a class, a double click can be detected by using the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property on the event data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60043-133">下列範例會建立<xref:System.Windows.Input.MouseButtonEventHandler>以決定是否在發生單一、 雙線或三重的按一下。</span><span class="sxs-lookup"><span data-stu-id="60043-133">The following example creates a <xref:System.Windows.Input.MouseButtonEventHandler> which determines if a single, double, or triple click occurred.</span></span>  <span data-ttu-id="60043-134"><xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 屬性用來判斷點擊次數。</span><span class="sxs-lookup"><span data-stu-id="60043-134"><xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property is used to determine the number of clicks.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseclickcountdoubleclick)]
 [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseclickcountdoubleclick)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseButtonEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="60043-135">以特定型別的方式呼叫的泛型處理常式。</span><span class="sxs-lookup"><span data-stu-id="60043-135">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="60043-136">對其呼叫處理常式的目標。</span><span class="sxs-lookup"><span data-stu-id="60043-136">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="60043-137">以型別專屬的方式叫用事件處理常式，這樣做能夠提升事件系統的效率。</span><span class="sxs-lookup"><span data-stu-id="60043-137">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60043-138">此實作會轉換為泛型處理常式<xref:System.Windows.Input.MouseEventHandler>然後再叫用。</span><span class="sxs-lookup"><span data-stu-id="60043-138">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it.</span></span> <span data-ttu-id="60043-139">如需這個實作模式和它的原因的詳細資訊，請參閱 <<c0> <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 並[路由事件概觀](~/docs/framework/wpf/advanced/routed-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="60043-139">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
  </Members>
</Type>