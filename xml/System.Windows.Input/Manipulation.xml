<Type Name="Manipulation" FullName="System.Windows.Input.Manipulation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f59d0f62945136c7903ad5ee7ba5cce7752e246" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Manipulation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Manipulation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulation" />
  <TypeSignature Language="VB.NET" Value="Public Class Manipulation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Manipulation abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ce43f-101">包含用於取得和更新操作相關資訊的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce43f-101">Contains methods to get and update information about a manipulation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce43f-102">觸控會解譯為套用至物件的實體動作時，就會發生的操作。</span><span class="sxs-lookup"><span data-stu-id="ce43f-102">A manipulation occurs when touch is interpreted as a physical action that is applied to an object.</span></span> <span data-ttu-id="ce43f-103">在 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 中，操作事件會將輸入解譯為平移、擴充或旋轉操作。</span><span class="sxs-lookup"><span data-stu-id="ce43f-103">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation.</span></span> <span data-ttu-id="ce43f-104">您通常互動所定義的操作事件透過操作<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="ce43f-104">You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="ce43f-105">不過，<xref:System.Windows.Input.Manipulation>類別會定義可讓您操作與互動的靜態方法。</span><span class="sxs-lookup"><span data-stu-id="ce43f-105">However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.</span></span>  
  
 <span data-ttu-id="ce43f-106">如需操作的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ce43f-106">For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span> <span data-ttu-id="ce43f-107">如需操作回應的應用程式的範例，請參閱[逐步解說： 建立您第一個接觸的應用程式](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="ce43f-107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddManipulator">
      <MemberSignature Language="C#" Value="public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-108">要與操作產生關聯的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-108">The element to associate the manipulator with.</span>
          </span>
        </param>
        <param name="manipulator">
          <span data-ttu-id="ce43f-109">物件，這個物件提供會建立操作或加入至操作之輸入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-109">The object that provides the position of the input that creates or is added to a manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-110">將 <see cref="T:System.Windows.Input.IManipulator" /> 物件與指定的項目產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-110">Associates a <see cref="T:System.Windows.Input.IManipulator" /> object with the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce43f-111">如果`element`已經有與它相關聯的操作`manipulator`加入至現有的操作。</span><span class="sxs-lookup"><span data-stu-id="ce43f-111">If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation.</span></span> <span data-ttu-id="ce43f-112">否則，會建立新的操作。</span><span class="sxs-lookup"><span data-stu-id="ce43f-112">Otherwise, a new manipulation is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ce43f-113">
            <paramref name="element" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-113">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ce43f-114">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-114">-or-</span>
          </span>
          <span data-ttu-id="ce43f-115">
            <paramref name="manipulator" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-115">
              <paramref name="manipulator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce43f-116">項目上的 <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> 屬性為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-116">The <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> property on element is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public static void CompleteManipulation (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteManipulation(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompleteManipulation (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompleteManipulation(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-117">要完成操作的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-117">The element on which to complete manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-118">完成所指定項目上的作用中操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-118">Completes the active manipulation on the specified element.</span>
          </span>
          <span data-ttu-id="ce43f-119">呼叫時，不會再追蹤操作輸入，而且所指定項目上的慣性會停止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-119">When called, manipulation input is no longer tracked and inertia on the specified element stops.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce43f-120">當<xref:System.Windows.Input.Manipulation.CompleteManipulation%2A>呼叫方法時，<xref:System.Windows.UIElement.ManipulationCompleted>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="ce43f-120">When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetManipulationContainer(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationContainer (element As UIElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetManipulationContainer(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-121">具有作用中操作的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-121">The element on which there is an active manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-122">取得容器，這個容器會定義操作的座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-122">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce43f-123">用於定義座標空間的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-123">The container that defines the coordinate space.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ManipulationModes GetManipulationMode(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationMode (element As UIElement) As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationModes GetManipulationMode(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-124">要取得其操作模式的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-124">The element for which to get the manipulation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-125">取得所指定項目的 <see cref="T:System.Windows.Input.ManipulationModes" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-125">Gets the <see cref="T:System.Windows.Input.ManipulationModes" /> for the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce43f-126">其中一個列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-126">One of the enumeration values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationPivot">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.ManipulationPivot GetManipulationPivot(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationPivot (element As UIElement) As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationPivot ^ GetManipulationPivot(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-127">具有操作的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-127">The element on which there is a manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-128">傳回物件，描述如何在使用者輸入的一個點上發生旋轉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-128">Returns an object that describes how a rotation occurs with one point of user input.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce43f-129">物件 that describes how a rotation occurs with one point of 使用者 input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-129">An object that describes how a rotation occurs with one point of user input.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationActive">
      <MemberSignature Language="C#" Value="public static bool IsManipulationActive (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsManipulationActive(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsManipulationActive (element As UIElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsManipulationActive(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-130">要檢查的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-130">The element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-131">取得值，表示某個處理是否與指定的元素相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-131">Gets a value that indicates whether a manipulation is associated with the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce43f-132">如果操作與指定的項目相關聯則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-132">
              <see langword="true" /> if a manipulation is associated with the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveManipulator">
      <MemberSignature Language="C#" Value="public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-133">要移除相關聯操作工具的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-133">The element to remove the associated manipulator from.</span>
          </span>
        </param>
        <param name="manipulator">
          <span data-ttu-id="ce43f-134">提供輸入位置的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-134">The object that provides the position of the input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-135">移除指定的 <see cref="T:System.Windows.Input.IManipulator" /> 物件和此項目之間的關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-135">Removes the association between the specified <see cref="T:System.Windows.Input.IManipulator" /> object and the element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationContainer">
      <MemberSignature Language="C#" Value="public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationContainer(class System.Windows.UIElement element, class System.Windows.IInputElement container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationContainer (element As UIElement, container As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationContainer(System::Windows::UIElement ^ element, System::Windows::IInputElement ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="container" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-136">與操作產生關聯的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-136">The element with which the manipulation is associated.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="ce43f-137">用於定義座標空間的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-137">The container that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-138">設定項目，定義所指定項目的操作座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-138">Sets the element that defines the coordinates for the manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationMode">
      <MemberSignature Language="C#" Value="public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationMode(class System.Windows.UIElement element, valuetype System.Windows.Input.ManipulationModes mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationMode (element As UIElement, mode As ManipulationModes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationMode(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationModes mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="mode" Type="System.Windows.Input.ManipulationModes" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-139">要設定操作模式的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-139">The element on which to set the manipulation mode.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="ce43f-140">新的操作模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-140">The new manipulation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-141">設定所指定項目的操作模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-141">Sets the mode of manipulation for the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationParameter(class System.Windows.UIElement element, class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationParameter (element As UIElement, parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationParameter(System::Windows::UIElement ^ element, System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-142">加入參數的操作所作用的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-142">The element that has the manipulation that the parameter is added to.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="ce43f-143">要加入的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-143">The parameter to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-144">將參數加入至所指定項目的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-144">Adds parameters to the manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationPivot">
      <MemberSignature Language="C#" Value="public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationPivot(class System.Windows.UIElement element, class System.Windows.Input.ManipulationPivot pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationPivot (element As UIElement, pivot As ManipulationPivot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationPivot(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationPivot ^ pivot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="pivot" Type="System.Windows.Input.ManipulationPivot" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-145">具有作用中操作的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-145">The element that has an active manipulation.</span>
          </span>
        </param>
        <param name="pivot">
          <span data-ttu-id="ce43f-146">描述樞紐的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-146">An object that describes the pivot.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-147">設定所指定項目的單點操作樞紐。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-147">Sets the pivot of the single-point manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public static void StartInertia (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartInertia(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartInertia (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartInertia(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce43f-148">要啟動慣性的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-148">The element on which to begin inertia.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce43f-149">在指定的項目上停止操作並啟動慣性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce43f-149">Stops the manipulation and begins inertia on the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>