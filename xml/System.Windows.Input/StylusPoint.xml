<Type Name="StylusPoint" FullName="System.Windows.Input.StylusPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae2862ecd8538c717037dbc82e79917ae68a5dbe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct StylusPoint : IEquatable&lt;System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StylusPoint extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusPoint" />
  <TypeSignature Language="VB.NET" Value="Public Structure StylusPoint&#xA;Implements IEquatable(Of StylusPoint)" />
  <TypeSignature Language="C++ CLI" Value="public value class StylusPoint : IEquatable&lt;System::Windows::Input::StylusPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Input.StylusPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示從數位板和手寫筆收集的單一資料點 (Data Point)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Input.StylusPoint>收集資料，當使用者輸入使用數位板的筆墨。 因為數位板報告的資訊而異的製造商內屬性<xref:System.Windows.Input.StylusPoint>而有所不同。 若要判斷屬性是否在<xref:System.Windows.Input.StylusPoint>，呼叫<xref:System.Windows.Input.StylusPoint.HasProperty%2A>方法。 <xref:System.Windows.Input.StylusPoint.Description%2A>屬性包含<xref:System.Windows.Input.StylusPointDescription>所指定的屬性是位在<xref:System.Windows.Input.StylusPoint>。 所有<xref:System.Windows.Input.StylusPoint>物件包含指定的屬性 （x，y） 座標，以及在壓力。  
  
   
  
## Examples  
 下列範例會取得屬性名稱和值為每個<xref:System.Windows.Input.StylusPoint>中<xref:System.Windows.Input.StylusPointCollection>。 這個範例假設有<xref:System.Windows.Controls.TextBlock>呼叫`packetOutput`。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.StylusPoint" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 X 座標。</param>
        <param name="y">
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 Y 座標。</param>
        <summary>使用指定的 (x, y) 座標，初始化 <see cref="T:System.Windows.Input.StylusPoint" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Input.StylusPoint>。  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, pressureFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 X 座標。</param>
        <param name="y">
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 Y 座標。</param>
        <param name="pressureFactor">套用至 <see cref="T:System.Windows.Input.StylusPoint" /> 的壓力量。</param>
        <summary>使用指定的 (x, y) 座標和壓力，初始化 <see cref="T:System.Windows.Input.StylusPoint" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pressureFactor` 值必須是介於 0 和 1 (含) 之間。 值為 0 表示套用任何不足的壓力，而值為 1 表示已套用的最大數量不足的壓力。 值為 0.5 表示 50%的最大的壓力套用，並且等等。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Input.StylusPoint>。  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pressureFactor" /> 小於 0 或大於 1。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor, System.Windows.Input.StylusPointDescription stylusPointDescription, int[] additionalValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor, class System.Windows.Input.StylusPointDescription stylusPointDescription, int32[] additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Input.StylusPointDescription,System.Int32[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor, System::Windows::Input::StylusPointDescription ^ stylusPointDescription, cli::array &lt;int&gt; ^ additionalValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="additionalValues" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="x">
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 X 座標。</param>
        <param name="y">
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 Y 座標。</param>
        <param name="pressureFactor">套用至 <see cref="T:System.Windows.Input.StylusPoint" /> 的壓力量。</param>
        <param name="stylusPointDescription">
          <see cref="T:System.Windows.Input.StylusPointDescription" />，指定儲存於 <see cref="T:System.Windows.Input.StylusPoint" /> 中的其他屬性。</param>
        <param name="additionalValues">32 位元帶正負號整數的陣列，其中包含 <c>stylusPointDescription</c> 中定義的屬性值。</param>
        <summary>使用指定的 (x, y) 座標、<paramref name="pressureFactor" />，和 <see cref="T:System.Windows.Input.StylusPointDescription" /> 中指定的其他參數，初始化 <see cref="T:System.Windows.Input.StylusPoint" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Input.StylusPoint>。  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pressureFactor" /> 小於 0 或大於 1。  
  
 -或-  
  
 <paramref name="additionalValues" /> 中對應到按鈕屬性的值不是 0 或 1。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="additionalValues" /> 中的值數目不符合 <paramref name="stylusPointDescription" /> 中的屬性數目減去 3。</exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ Description { System::Windows::Input::StylusPointDescription ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Input.StylusPointDescription" />，它指定儲存在 <see cref="T:System.Windows.Input.StylusPoint" /> 中的屬性。</summary>
        <value>
          <see cref="T:System.Windows.Input.StylusPointDescription" />，指定儲存在 <see cref="T:System.Windows.Input.StylusPoint" /> 中的屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會使用<xref:System.Windows.Input.StylusPoint.Description%2A>屬性，即可取得屬性值從<xref:System.Windows.Input.StylusPoint>中<xref:System.Windows.Input.StylusPointCollection>。 這個範例假設有<xref:System.Windows.Controls.TextBlock>呼叫`packetOutput`。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>比較兩個 <see cref="T:System.Windows.Input.StylusPoint" /> 物件是否相等。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要與目前 <see cref="T:System.Windows.Input.StylusPoint" /> 比較的 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>傳回值，這個值表示指定的物件是否等於 <see cref="T:System.Windows.Input.StylusPoint" />。</summary>
        <returns>
          如果物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會檢查兩個<xref:System.Windows.Input.StylusPoint>物件是否相等。 因為<xref:System.Windows.Input.StylusPoint.X%2A>， <xref:System.Windows.Input.StylusPoint.Y%2A>，和<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性`point1`和`point2`設為相同值，"兩個 StylusPoint 物件是否相等。 」 會出現訊息。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Input.StylusPoint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Input.StylusPoint value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Input::StylusPoint value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="value">要與目前 <see cref="T:System.Windows.Input.StylusPoint" /> 比較的 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>傳回布林值，這個值表示指定的 <see cref="T:System.Windows.Input.StylusPoint" /> 是否等於目前的 <see cref="T:System.Windows.Input.StylusPoint" />。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Input.StylusPoint" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會檢查兩個<xref:System.Windows.Input.StylusPoint>物件是否相等。 因為<xref:System.Windows.Input.StylusPoint.X%2A>， <xref:System.Windows.Input.StylusPoint.Y%2A>，和<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性`point1`和`point2`設為相同值，"兩個 StylusPoint 物件是否相等。 」 會出現訊息。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">要比較的第一個 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">要比較的第二個 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>傳回布林值，這個值表示兩個指定的 <see cref="T:System.Windows.Input.StylusPoint" /> 物件是否相等。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Input.StylusPoint" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會檢查兩個<xref:System.Windows.Input.StylusPoint>物件是否相等。 因為<xref:System.Windows.Input.StylusPoint.X%2A>， <xref:System.Windows.Input.StylusPoint.Y%2A>，和<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性`point1`和`point2`設為相同值，"兩個 StylusPoint 物件是否相等。 」 會出現訊息。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#8](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#8)]
[!code-vb[PacketSpy#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個執行個體的雜湊碼。</summary>
        <returns>32 位元帶正負號的整數，其為這個執行個體的雜湊碼。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public int GetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">
          <see cref="T:System.Windows.Input.StylusPointProperty" />，指定要取得哪個屬性值。</param>
        <summary>傳回指定之屬性的值。</summary>
        <returns>指定之 <see cref="T:System.Windows.Input.StylusPointProperty" /> 的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要檢查是否<xref:System.Windows.Input.StylusPoint>包含指定的屬性，呼叫<xref:System.Windows.Input.StylusPoint.HasProperty%2A>之前呼叫<xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A>方法或<xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A>方法。  
  
   
  
## Examples  
 下列範例會檢查存在手寫筆點屬性，再取得屬性的值。 這個範例假設有<xref:System.Windows.Input.StylusPoint>呼叫`point`。  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stylusPointProperty" /> 不是 <see cref="P:System.Windows.Input.StylusPoint.Description" /> 中的一個屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">要在 <see cref="T:System.Windows.Input.StylusPointProperty" /> 中檢查的 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>傳回目前的 <see cref="T:System.Windows.Input.StylusPoint" /> 是否內含指定的屬性。</summary>
        <returns>
          如果指定的 <see cref="T:System.Windows.Input.StylusPointProperty" /> 在目前的 <see cref="T:System.Windows.Input.StylusPoint" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要檢查是否<xref:System.Windows.Input.StylusPoint>包含指定的屬性，呼叫<xref:System.Windows.Input.StylusPoint.HasProperty%2A>之前呼叫<xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A>方法或<xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A>方法。  
  
   
  
## Examples  
 下列範例會檢查存在手寫筆點屬性，再取得屬性的值。 這個範例假設有<xref:System.Windows.Input.StylusPoint>呼叫`point`。  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxXY">
      <MemberSignature Language="C#" Value="public static readonly double MaxXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MaxXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxXY;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定一對 (x, y) 座標的最大有效值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例可確保<xref:System.Windows.Input.StylusPoint.X%2A>屬性<xref:System.Windows.Input.StylusPoint>設為合法的值。  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinXY">
      <MemberSignature Language="C#" Value="public static readonly double MinXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MinXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinXY;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定一對 (x, y) 座標的最小有效值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例可確保<xref:System.Windows.Input.StylusPoint.X%2A>屬性<xref:System.Windows.Input.StylusPoint>設為合法的值。  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Equality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">要比較的第一個 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">要比較的第二個 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>比較兩個指定的 <see cref="T:System.Windows.Input.StylusPoint" /> 物件並判斷它們是否相等。</summary>
        <returns>
          如果 <see cref="T:System.Windows.Input.StylusPoint" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[這個運算子的對等方法是 <xref:System.Windows.Input.StylusPoint.Equals%28System.Windows.Input.StylusPoint%2CSystem.Windows.Input.StylusPoint%29?displayProperty=nameWithType>  
  
## Examples  
 下列範例會檢查兩個<xref:System.Windows.Input.StylusPoint>物件是否相等。 因為<xref:System.Windows.Input.StylusPoint.X%2A>， <xref:System.Windows.Input.StylusPoint.Y%2A>，和<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性`point1`和`point2`設為相同值，"兩個 StylusPoint 物件是否相等。 」 會出現訊息。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#9](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#9)]
[!code-vb[PacketSpy#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Point (System.Windows.Input.StylusPoint stylusPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Explicit(valuetype System.Windows.Input.StylusPoint stylusPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Explicit(System.Windows.Input.StylusPoint)~System.Windows.Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Point(System::Windows::Input::StylusPoint stylusPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint">要轉型為 <see cref="T:System.Windows.Input.StylusPoint" /> 的 <see cref="T:System.Windows.Point" />。</param>
        <summary>將指定的 <see cref="T:System.Windows.Input.StylusPoint" /> 轉型為 <see cref="T:System.Windows.Point" />。</summary>
        <returns>
          <see cref="T:System.Windows.Point" />，包含與 <paramref name="stylusPoint" /> 相同的 (x, y) 座標。 </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[下列範例示範如何轉換<xref:System.Windows.Input.StylusPoint>至<xref:System.Windows.Point>繪製圓形的每個筆劃開頭的物件。 這個範例假設有<xref:System.Windows.Controls.InkCanvas>呼叫物件`inkcanvas1`而且<xref:System.Windows.UIElement.StylusDown>事件已連線到在範例中的事件處理常式。

           [!code-csharp[PacketSpy#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#13)]
           [!code-vb[PacketSpy#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#13)]  

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Inequality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">要比較的第一個 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">要比較的第二個 <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>傳回布林值，這個值表示指定的 <see cref="T:System.Windows.Input.StylusPoint" /> 物件是否不相等。</summary>
        <returns>
          如果指定的 <see cref="T:System.Windows.Input.StylusPoint" /> 物件不相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[這個運算子的對等方法是否定 <xref:System.Windows.Input.StylusPoint.Equals%2A>  
  
## Examples  
 下列範例示範如何檢查兩個<xref:System.Windows.Input.StylusPoint>物件是否不相等。 因為<xref:System.Windows.Input.StylusPoint.X%2A>， <xref:System.Windows.Input.StylusPoint.Y%2A>，和<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性`point1`和`point2`設為相同值，"兩個 StylusPoint 物件是否相等。 」 會出現訊息。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#10](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#10)]
[!code-vb[PacketSpy#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureFactor">
      <MemberSignature Language="C#" Value="public float PressureFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PressureFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property PressureFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PressureFactor { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定一個介於 0 和 1 之間的值，這個值反映在建立 <see cref="T:System.Windows.Input.StylusPoint" /> 時手寫筆套用到數位板介面的壓力總量。</summary>
        <value>介於 0 和 1 之間的值，表示建立 <see cref="T:System.Windows.Input.StylusPoint" /> 時手寫筆套用到數位板介面的壓力總量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性以介於 0 和 1 之間的值。 值為 0 表示套用任何不足的壓力，而值為 1 表示已套用的最大數量不足的壓力。 值為 0.5 表示 50%的最大的壓力套用，並且等等。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Windows.Input.StylusPoint.PressureFactor%2A>屬性擷取並顯示每個不足的壓力值<xref:System.Windows.Input.StylusPoint>中<xref:System.Windows.Input.StylusPointCollection>呼叫`points`。 這個範例假設有<xref:System.Windows.Controls.TextBlock>呼叫`packetOutput`。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> 屬性已設定為小於 0 或大於 1 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">
          <see cref="T:System.Windows.Input.StylusPointProperty" />，指定要設定哪個屬性值。</param>
        <param name="value">屬性的值。</param>
        <summary>將指定的屬性設為指定的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要檢查是否<xref:System.Windows.Input.StylusPoint>包含指定的屬性，呼叫<xref:System.Windows.Input.StylusPoint.HasProperty%2A>之前呼叫<xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A>方法或<xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A>方法。  
  
   
  
## Examples  
 下列範例會檢查存在手寫筆點屬性，才能設定屬性的值。 這個範例假設有<xref:System.Windows.Input.StylusPoint>呼叫`point`。  
  
 [!code-csharp[PacketSpy#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#12)]
 [!code-vb[PacketSpy#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stylusPointProperty" /> 不是 <see cref="P:System.Windows.Input.StylusPoint.Description" /> 中的一個屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point ToPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point ToPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.ToPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point ToPoint();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Windows.Input.StylusPoint" /> 轉換成 <see cref="T:System.Windows.Point" />。</summary>
        <returns>
          <see cref="T:System.Windows.Point" /> 結構。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Input.StylusPoint" /> 的 X 座標值。</summary>
        <value>
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 X 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會取得<xref:System.Windows.Input.StylusPoint.X%2A>每個屬性<xref:System.Windows.Input.StylusPoint>中<xref:System.Windows.Input.StylusPointCollection>。 這個範例假設有<xref:System.Windows.Controls.TextBlock>呼叫`packetOutput`。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Input.StylusPoint" /> 的 Y 座標。</summary>
        <value>
          <see cref="T:System.Windows.Input.StylusPoint" /> 的 Y 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會取得<xref:System.Windows.Input.StylusPoint.Y%2A>每個屬性<xref:System.Windows.Input.StylusPoint>中<xref:System.Windows.Input.StylusPointCollection>。 這個範例假設有<xref:System.Windows.Controls.TextBlock>呼叫`packetOutput`。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>