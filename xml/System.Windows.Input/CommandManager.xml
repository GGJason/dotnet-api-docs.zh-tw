<Type Name="CommandManager" FullName="System.Windows.Input.CommandManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dddd5282be380bb2378313aa2ec0824a2f1d603" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39877147" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CommandManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandManager sealed" />
  <TypeSignature Language="F#" Value="type CommandManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0caab-101">提供與命令相關的公用程式方法，這些方法會註冊類別擁有人和命令的 <see cref="T:System.Windows.Input.CommandBinding" /> 和 <see cref="T:System.Windows.Input.InputBinding" /> 物件、新增與移除命令事件處理常式，並提供查詢命令狀態的服務。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0caab-101">Provides command related utility methods that register <see cref="T:System.Windows.Input.CommandBinding" /> and <see cref="T:System.Windows.Input.InputBinding" /> objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0caab-102"><xref:System.Windows.Input.CommandManager>負責管理路由的命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-102">The <xref:System.Windows.Input.CommandManager> is responsible for managing routed commands.</span></span>  <span data-ttu-id="0caab-103">如需有關命令的詳細資訊，請參閱 <<c0> [ 命令概觀](~/docs/framework/wpf/advanced/commanding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0caab-103">For more information about commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="0caab-104">使用<xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A>註冊<xref:System.Windows.Input.CommandBinding>而不是執行個體的類別。</span><span class="sxs-lookup"><span data-stu-id="0caab-104">Use <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A> to register a <xref:System.Windows.Input.CommandBinding> to a class as opposed to an instance.</span></span>  
  
 <span data-ttu-id="0caab-105">使用<xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>註冊<xref:System.Windows.Input.InputBinding>而不是執行個體的類別。</span><span class="sxs-lookup"><span data-stu-id="0caab-105">Use <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> to register an <xref:System.Windows.Input.InputBinding> to a class as opposed to an instance.</span></span>  
  
 <span data-ttu-id="0caab-106"><xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> 方法會強制 <xref:System.Windows.Input.CommandManager> 引發 <xref:System.Windows.Input.CommandManager.RequerySuggested> 事件。</span><span class="sxs-lookup"><span data-stu-id="0caab-106">The <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method forces the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.</span></span>  <span data-ttu-id="0caab-107"><xref:System.Windows.Input.CommandManager.RequerySuggested>事件會通知命令來源查詢來判斷是否可以執行此命令相關聯的命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-107">The <xref:System.Windows.Input.CommandManager.RequerySuggested> event informs a command source to query the command it is associated with to determine whether or not the command can execute.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ICommandSource" />
    <altmember cref="T:System.Windows.Input.ICommand" />
  </Docs>
  <Members>
    <Member MemberName="AddCanExecuteHandler">
      <MemberSignature Language="C#" Value="public static void AddCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCanExecuteHandler(class System.Windows.UIElement element, class System.Windows.Input.CanExecuteRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddCanExecuteHandler (element As UIElement, handler As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddCanExecuteHandler(System::Windows::UIElement ^ element, System::Windows::Input::CanExecuteRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddCanExecuteHandler : System.Windows.UIElement * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.AddCanExecuteHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-108">要附加 <c>handler</c> 的目標元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-108">The element to attach <c>handler</c> to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-109">為可以執行處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-109">The can execute handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-110">將指定的 <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> 附加至指定的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-110">Attaches the specified <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-111">下列範例會建立<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>並將其以附加<xref:System.Windows.Controls.Button>即為命令來源<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-111">The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 <span data-ttu-id="0caab-112">首先，<xref:System.Windows.Controls.Button>建立並與相關聯<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-112">First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  
  
 <span data-ttu-id="0caab-113">接下來，會建立 <xref:System.Windows.Input.CanExecuteRoutedEventHandler> 和 <xref:System.Windows.Input.ExecutedRoutedEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="0caab-113">Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  
  
 <span data-ttu-id="0caab-114">最後，將處理常式附加到<xref:System.Windows.Controls.Button>使用<xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A>和<xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="0caab-114">And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-115">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-115">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="AddExecutedHandler">
      <MemberSignature Language="C#" Value="public static void AddExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddExecutedHandler(class System.Windows.UIElement element, class System.Windows.Input.ExecutedRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddExecutedHandler (element As UIElement, handler As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddExecutedHandler(System::Windows::UIElement ^ element, System::Windows::Input::ExecutedRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddExecutedHandler : System.Windows.UIElement * System.Windows.Input.ExecutedRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.AddExecutedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-116">要附加 <c>handler</c> 的目標元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-116">The element to attach <c>handler</c> to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-117">已執行的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-117">The executed handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-118">將指定的 <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> 附加至指定的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-118">Attaches the specified <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-119">下列範例會建立<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>並將其以附加<xref:System.Windows.Controls.Button>即為命令來源<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-119">The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 <span data-ttu-id="0caab-120">首先，<xref:System.Windows.Controls.Button>建立並與相關聯<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-120">First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  
  
 <span data-ttu-id="0caab-121">接下來，會建立 <xref:System.Windows.Input.CanExecuteRoutedEventHandler> 和 <xref:System.Windows.Input.ExecutedRoutedEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="0caab-121">Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  
  
 <span data-ttu-id="0caab-122">最後，將處理常式附加到<xref:System.Windows.Controls.Button>使用<xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A>和<xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="0caab-122">And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-123">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-123">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewCanExecuteHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewCanExecuteHandler(class System.Windows.UIElement element, class System.Windows.Input.CanExecuteRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewCanExecuteHandler (element As UIElement, handler As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewCanExecuteHandler(System::Windows::UIElement ^ element, System::Windows::Input::CanExecuteRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewCanExecuteHandler : System.Windows.UIElement * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-124">要附加 <c>handler</c> 的目標元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-124">The element to attach <c>handler</c> to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-125">為可以執行處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-125">The can execute handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-126">將指定的 <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> 附加至指定的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-126">Attaches the specified <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-127">下列範例會建立<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>並將其以附加<xref:System.Windows.Controls.Button>即為命令來源<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-127">The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 <span data-ttu-id="0caab-128">首先，<xref:System.Windows.Controls.Button>建立並與相關聯<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-128">First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  
  
 <span data-ttu-id="0caab-129">接下來，會建立 <xref:System.Windows.Input.CanExecuteRoutedEventHandler> 和 <xref:System.Windows.Input.ExecutedRoutedEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="0caab-129">Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  
  
 <span data-ttu-id="0caab-130">最後，將處理常式附加至<xref:System.Windows.Controls.Button>使用<xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A>和<xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="0caab-130">Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-131">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-131">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="AddPreviewExecutedHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewExecutedHandler(class System.Windows.UIElement element, class System.Windows.Input.ExecutedRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewExecutedHandler (element As UIElement, handler As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewExecutedHandler(System::Windows::UIElement ^ element, System::Windows::Input::ExecutedRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewExecutedHandler : System.Windows.UIElement * System.Windows.Input.ExecutedRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.AddPreviewExecutedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-132">要附加 <c>handler</c> 的目標元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-132">The element to attach <c>handler</c> to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-133">為可以執行處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-133">The can execute handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-134">將指定的 <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> 附加至指定的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-134">Attaches the specified <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-135">下列範例會建立<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>並將其以附加<xref:System.Windows.Controls.Button>即為命令來源<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-135">The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 <span data-ttu-id="0caab-136">首先，<xref:System.Windows.Controls.Button>建立並與相關聯<xref:System.Windows.Input.ApplicationCommands.Help%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="0caab-136">First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  
  
 <span data-ttu-id="0caab-137">接下來，會建立 <xref:System.Windows.Input.CanExecuteRoutedEventHandler> 和 <xref:System.Windows.Input.ExecutedRoutedEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="0caab-137">Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  
  
 <span data-ttu-id="0caab-138">最後，將處理常式附加至<xref:System.Windows.Controls.Button>使用<xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A>和<xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="0caab-138">Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-139">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-139">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="see AddCanExecuteHandler, and RemoveCanExecuteHandler" />
      <MemberSignature Language="ILAsm" Value="see AddCanExecuteHandler, and RemoveCanExecuteHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandManager.CanExecute" />
      <MemberSignature Language="VB.NET" Value="see AddCanExecuteHandler, and RemoveCanExecuteHandler" />
      <MemberSignature Language="F#" Value="see AddCanExecuteHandler, and RemoveCanExecuteHandler" Usage="see AddCanExecuteHandler, and RemoveCanExecuteHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-140">發生於呼叫 <see cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 方法，且尚未處理 <see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /> 事件時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-140">Occurs when the <see cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" /> method on the <see cref="T:System.Windows.Input.RoutedCommand" /> is called and the <see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /> event was not handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_CanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="0caab-141">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="0caab-141">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0caab-142">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0caab-142">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.CanExecuteEvent>|  
|<span data-ttu-id="0caab-143">路由策略</span><span class="sxs-lookup"><span data-stu-id="0caab-143">Routing strategy</span></span>|<span data-ttu-id="0caab-144">事件反昇</span><span class="sxs-lookup"><span data-stu-id="0caab-144">Bubbling</span></span>|  
|<span data-ttu-id="0caab-145">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="0caab-145">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CanExecuteEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CanExecuteEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.CommandManager.CanExecuteEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanExecuteEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CanExecuteEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanExecuteEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.CommandManager.CanExecuteEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-146">識別 <see cref="E:System.Windows.Input.CommandManager.CanExecute" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-146">Identifies the <see cref="E:System.Windows.Input.CommandManager.CanExecute" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executed">
      <MemberSignature Language="C#" Value="see AddExecutedHandler, and RemoveExecutedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddExecutedHandler, and RemoveExecutedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandManager.Executed" />
      <MemberSignature Language="VB.NET" Value="see AddExecutedHandler, and RemoveExecutedHandler" />
      <MemberSignature Language="F#" Value="see AddExecutedHandler, and RemoveExecutedHandler" Usage="see AddExecutedHandler, and RemoveExecutedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-147">發生於呼叫 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 方法，且尚未處理 <see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /> 事件時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-147">Occurs when the <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> method on the <see cref="T:System.Windows.Input.RoutedCommand" /> is called and the <see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /> event was not handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Executed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="0caab-148">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="0caab-148">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0caab-149">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0caab-149">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.ExecutedEvent>|  
|<span data-ttu-id="0caab-150">路由策略</span><span class="sxs-lookup"><span data-stu-id="0caab-150">Routing strategy</span></span>|<span data-ttu-id="0caab-151">事件反昇</span><span class="sxs-lookup"><span data-stu-id="0caab-151">Bubbling</span></span>|  
|<span data-ttu-id="0caab-152">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="0caab-152">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Input.CommandManager.PreviewExecuted" />
      </Docs>
    </Member>
    <Member MemberName="ExecutedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ExecutedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ExecutedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.CommandManager.ExecutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExecutedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ExecutedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExecutedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.CommandManager.ExecutedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-153">識別 <see cref="E:System.Windows.Input.CommandManager.Executed" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-153">Identifies the <see cref="E:System.Windows.Input.CommandManager.Executed" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRequerySuggested">
      <MemberSignature Language="C#" Value="public static void InvalidateRequerySuggested ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvalidateRequerySuggested() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.InvalidateRequerySuggested" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvalidateRequerySuggested ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvalidateRequerySuggested();" />
      <MemberSignature Language="F#" Value="static member InvalidateRequerySuggested : unit -&gt; unit" Usage="System.Windows.Input.CommandManager.InvalidateRequerySuggested " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0caab-154">強制 <see cref="T:System.Windows.Input.CommandManager" /> 引發 <see cref="E:System.Windows.Input.CommandManager.RequerySuggested" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-154">Forces the <see cref="T:System.Windows.Input.CommandManager" /> to raise the <see cref="E:System.Windows.Input.CommandManager.RequerySuggested" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0caab-155"><xref:System.Windows.Input.CommandManager>只支付注意特定的條件，判斷命令目標已變更時，例如鍵盤焦點的變更。</span><span class="sxs-lookup"><span data-stu-id="0caab-155">The <xref:System.Windows.Input.CommandManager> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.</span></span>  <span data-ttu-id="0caab-156">在情況下所在<xref:System.Windows.Input.CommandManager>無法充分判斷會造成無法執行，命令的條件的變更<xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>可以呼叫強制<xref:System.Windows.Input.CommandManager>引發<xref:System.Windows.Input.CommandManager.RequerySuggested>事件。</span><span class="sxs-lookup"><span data-stu-id="0caab-156">In situations where the <xref:System.Windows.Input.CommandManager> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> can be called to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0caab-157">下列範例會使用<xref:System.Windows.Threading.DispatcherTimer>定期呼叫<xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>強制<xref:System.Windows.Input.CommandManager>引發<xref:System.Windows.Input.CommandManager.RequerySuggested>事件。</span><span class="sxs-lookup"><span data-stu-id="0caab-157">The following example uses a <xref:System.Windows.Threading.DispatcherTimer> to periodically call <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.</span></span>  
  
 [!code-csharp[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewCanExecute">
      <MemberSignature Language="C#" Value="see AddPreviewCanExecuteHandler, and RemovePreviewCanExecuteHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewCanExecuteHandler, and RemovePreviewCanExecuteHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandManager.PreviewCanExecute" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewCanExecuteHandler, and RemovePreviewCanExecuteHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewCanExecuteHandler, and RemovePreviewCanExecuteHandler" Usage="see AddPreviewCanExecuteHandler, and RemovePreviewCanExecuteHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-158">發生於呼叫 <see cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 方法時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-158">Occurs when the <see cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" /> method on the <see cref="T:System.Windows.Input.RoutedCommand" /> is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewCanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="0caab-159">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="0caab-159">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0caab-160">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0caab-160">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|  
|<span data-ttu-id="0caab-161">路由策略</span><span class="sxs-lookup"><span data-stu-id="0caab-161">Routing strategy</span></span>|<span data-ttu-id="0caab-162">通道</span><span class="sxs-lookup"><span data-stu-id="0caab-162">Tunneling</span></span>|  
|<span data-ttu-id="0caab-163">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="0caab-163">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Input.CommandManager.CanExecute" />
      </Docs>
    </Member>
    <Member MemberName="PreviewCanExecuteEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewCanExecuteEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewCanExecuteEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.CommandManager.PreviewCanExecuteEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewCanExecuteEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewCanExecuteEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewCanExecuteEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.CommandManager.PreviewCanExecuteEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-164">識別 <see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-164">Identifies the <see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewExecuted">
      <MemberSignature Language="C#" Value="see AddPreviewExecutedHandler, and RemovePreviewExecutedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewExecutedHandler, and RemovePreviewExecutedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandManager.PreviewExecuted" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewExecutedHandler, and RemovePreviewExecutedHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewExecutedHandler, and RemovePreviewExecutedHandler" Usage="see AddPreviewExecutedHandler, and RemovePreviewExecutedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-165">發生於呼叫 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 方法時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-165">Occurs when the <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> method on the <see cref="T:System.Windows.Input.RoutedCommand" /> is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewExecuted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="0caab-166">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="0caab-166">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0caab-167">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0caab-167">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|  
|<span data-ttu-id="0caab-168">路由策略</span><span class="sxs-lookup"><span data-stu-id="0caab-168">Routing strategy</span></span>|<span data-ttu-id="0caab-169">通道</span><span class="sxs-lookup"><span data-stu-id="0caab-169">Tunneling</span></span>|  
|<span data-ttu-id="0caab-170">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="0caab-170">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Input.CommandManager.Executed" />
      </Docs>
    </Member>
    <Member MemberName="PreviewExecutedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewExecutedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewExecutedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.CommandManager.PreviewExecutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewExecutedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewExecutedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewExecutedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.CommandManager.PreviewExecutedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-171">識別 <see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-171">Identifies the <see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassCommandBinding">
      <MemberSignature Language="C#" Value="public static void RegisterClassCommandBinding (Type type, System.Windows.Input.CommandBinding commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassCommandBinding(class System.Type type, class System.Windows.Input.CommandBinding commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassCommandBinding(Type ^ type, System::Windows::Input::CommandBinding ^ commandBinding);" />
      <MemberSignature Language="F#" Value="static member RegisterClassCommandBinding : Type * System.Windows.Input.CommandBinding -&gt; unit" Usage="System.Windows.Input.CommandManager.RegisterClassCommandBinding (type, commandBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="commandBinding" Type="System.Windows.Input.CommandBinding" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0caab-172">用來註冊 <c>commandBinding</c> 的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-172">The class with which to register <c>commandBinding</c>.</span>
          </span>
        </param>
        <param name="commandBinding">
          <span data-ttu-id="0caab-173">要註冊的命令繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-173">The command binding to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-174">以指定的型別註冊 <see cref="T:System.Windows.Input.CommandBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-174">Registers a <see cref="T:System.Windows.Input.CommandBinding" /> with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0caab-175">這個方法可讓<xref:System.Windows.Input.CommandBinding>要與相關聯的類別而非類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0caab-175">This method enables a <xref:System.Windows.Input.CommandBinding> to be associated with a class instead than an instance of a class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-176">
            <paramref name="type" /> 或 <paramref name="commandBinding" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-176">
              <paramref name="type" /> or <paramref name="commandBinding" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassInputBinding">
      <MemberSignature Language="C#" Value="public static void RegisterClassInputBinding (Type type, System.Windows.Input.InputBinding inputBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassInputBinding(class System.Type type, class System.Windows.Input.InputBinding inputBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassInputBinding(Type ^ type, System::Windows::Input::InputBinding ^ inputBinding);" />
      <MemberSignature Language="F#" Value="static member RegisterClassInputBinding : Type * System.Windows.Input.InputBinding -&gt; unit" Usage="System.Windows.Input.CommandManager.RegisterClassInputBinding (type, inputBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inputBinding" Type="System.Windows.Input.InputBinding" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0caab-177">用來註冊的 <c>inputBinding</c> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-177">The type to register <c>inputBinding</c> with.</span>
          </span>
        </param>
        <param name="inputBinding">
          <span data-ttu-id="0caab-178">要註冊的輸入繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-178">The input binding to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-179">以指定的型別註冊指定的 <see cref="T:System.Windows.Input.InputBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-179">Registers the specified <see cref="T:System.Windows.Input.InputBinding" /> with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0caab-180">這個方法可讓<xref:System.Windows.Input.InputBinding>與型別，而不是類別的執行個體相關聯。</span><span class="sxs-lookup"><span data-stu-id="0caab-180">This method enables an <xref:System.Windows.Input.InputBinding> to be associated with a type instead of an instance of a class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-181">
            <paramref name="type" /> 或 <paramref name="inputBinding" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-181">
              <paramref name="type" /> or <paramref name="inputBinding" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCanExecuteHandler">
      <MemberSignature Language="C#" Value="public static void RemoveCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveCanExecuteHandler(class System.Windows.UIElement element, class System.Windows.Input.CanExecuteRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveCanExecuteHandler (element As UIElement, handler As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveCanExecuteHandler(System::Windows::UIElement ^ element, System::Windows::Input::CanExecuteRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveCanExecuteHandler : System.Windows.UIElement * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.RemoveCanExecuteHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-182">要從中移除 <c>handler</c> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-182">The element to remove <c>handler</c> from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-183">為可以執行處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-183">The can execute handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-184">將指定的 <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> 從指定的項目中斷連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-184">Detaches the specified <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> from the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-185">下列範例會卸離<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>其先前必須已附加至<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="0caab-185">The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-186">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-186">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveExecutedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveExecutedHandler(class System.Windows.UIElement element, class System.Windows.Input.ExecutedRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveExecutedHandler (element As UIElement, handler As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveExecutedHandler(System::Windows::UIElement ^ element, System::Windows::Input::ExecutedRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveExecutedHandler : System.Windows.UIElement * System.Windows.Input.ExecutedRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.RemoveExecutedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-187">要從中移除 <c>handler</c> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-187">The element to remove <c>handler</c> from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-188">已執行的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-188">The executed handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-189">將指定的 <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> 從指定的項目中斷連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-189">Detaches the specified <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> from the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-190">下列範例會卸離<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>其先前必須已附加至<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="0caab-190">The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-191">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-191">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewCanExecuteHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewCanExecuteHandler(class System.Windows.UIElement element, class System.Windows.Input.CanExecuteRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewCanExecuteHandler (element As UIElement, handler As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewCanExecuteHandler(System::Windows::UIElement ^ element, System::Windows::Input::CanExecuteRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewCanExecuteHandler : System.Windows.UIElement * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-192">要從中移除 <c>handler</c> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-192">The element to remove <c>handler</c> from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-193">為可以執行處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-193">The can execute handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-194">將指定的 <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> 從指定的項目中斷連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-194">Detaches the specified <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler" /> from the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-195">下列範例會卸離<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>其先前必須已附加至<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="0caab-195">The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-196">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-196">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewExecutedHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewExecutedHandler(class System.Windows.UIElement element, class System.Windows.Input.ExecutedRoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewExecutedHandler (element As UIElement, handler As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewExecutedHandler(System::Windows::UIElement ^ element, System::Windows::Input::ExecutedRoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewExecutedHandler : System.Windows.UIElement * System.Windows.Input.ExecutedRoutedEventHandler -&gt; unit" Usage="System.Windows.Input.CommandManager.RemovePreviewExecutedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="handler" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="0caab-197">要從中移除 <c>handler</c> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-197">The element to remove <c>handler</c> from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0caab-198">已執行的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-198">The executed handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0caab-199">將指定的 <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> 從指定的項目中斷連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-199">Detaches the specified <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler" /> from the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0caab-200">下列範例會卸離<xref:System.Windows.Input.CanExecuteRoutedEventHandler>並<xref:System.Windows.Input.ExecutedRoutedEventHandler>其先前必須已附加至<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="0caab-200">The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0caab-201">
            <paramref name="element" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-201">
              <paramref name="element" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="RequerySuggested">
      <MemberSignature Language="C#" Value="public static event EventHandler RequerySuggested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RequerySuggested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandManager.RequerySuggested" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event RequerySuggested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ RequerySuggested;" />
      <MemberSignature Language="F#" Value="member this.RequerySuggested : EventHandler " Usage="member this.RequerySuggested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0caab-202">發生於 <see cref="T:System.Windows.Input.CommandManager" /> 偵測到會變更執行命令能力的條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0caab-202">Occurs when the <see cref="T:System.Windows.Input.CommandManager" /> detects conditions that might change the ability of a command to execute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0caab-203">此事件會佔用做為弱式參考的處理常式。</span><span class="sxs-lookup"><span data-stu-id="0caab-203">This event holds onto the handler as a weak reference.</span></span> <span data-ttu-id="0caab-204">接聽這個事件的物件應該保持其事件處理常式，以避免被回收的強式參考。</span><span class="sxs-lookup"><span data-stu-id="0caab-204">Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected.</span></span> <span data-ttu-id="0caab-205">這可以完成具有私用欄位，並指派給處理常式的值之前或之後附加至這個事件。</span><span class="sxs-lookup"><span data-stu-id="0caab-205">This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>