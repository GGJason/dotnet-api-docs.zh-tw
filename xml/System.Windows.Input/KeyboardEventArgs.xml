<Type Name="KeyboardEventArgs" FullName="System.Windows.Input.KeyboardEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="370f0f14714045072eb10ccdff5026e3654bc91a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyboardEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyboardEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyboardEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyboardEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyboardEventArgs : System::Windows::Input::InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9feb2-101">提供鍵盤相關事件的資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9feb2-101">Provides data for keyboard-related events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9feb2-102">中沒有現有的鍵盤事件[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用<xref:System.Windows.Input.KeyboardEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="9feb2-102">No existing keyboard event in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uses the <xref:System.Windows.Input.KeyboardEventArgs>.</span></span> <span data-ttu-id="9feb2-103"><xref:System.Windows.Input.KeyboardEventArgs> 做為更特定的基底類別<xref:System.Windows.Input.KeyEventArgs>和<xref:System.Windows.Input.KeyboardFocusChangedEventArgs>事件資料類別所使用的現有[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]事件，例如<xref:System.Windows.UIElement.KeyDown?displayProperty=nameWithType>和<xref:System.Windows.UIElement.LostKeyboardFocus?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9feb2-103"><xref:System.Windows.Input.KeyboardEventArgs> serves as the base class for the more specific <xref:System.Windows.Input.KeyEventArgs> and <xref:System.Windows.Input.KeyboardFocusChangedEventArgs> event data classes, which are used by existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] events such as <xref:System.Windows.UIElement.KeyDown?displayProperty=nameWithType> and <xref:System.Windows.UIElement.LostKeyboardFocus?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyboardEventArgs (System.Windows.Input.KeyboardDevice keyboard, int timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.KeyboardDevice keyboard, int32 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyboard As KeyboardDevice, timestamp As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyboardEventArgs(System::Windows::Input::KeyboardDevice ^ keyboard, int timestamp);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyboard" Type="System.Windows.Input.KeyboardDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keyboard">
          <span data-ttu-id="9feb2-104">與這個事件相關聯的邏輯鍵盤裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-104">The logical keyboard device associated with this event.</span>
          </span>
        </param>
        <param name="timestamp">
          <span data-ttu-id="9feb2-105">輸入的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-105">The time when the input occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9feb2-106">初始化 <see cref="T:System.Windows.Input.KeyboardEventArgs" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-106">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyboardEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="9feb2-107">以特定型別的方式呼叫的泛型處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-107">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="9feb2-108">對其呼叫處理常式的目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-108">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9feb2-109">以型別專屬的方式叫用事件處理常式，這樣做能夠提升事件系統的效率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-109">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9feb2-110">此實作會轉換為一般處理常式時為<xref:System.Windows.Input.KeyboardEventHandler>然後再叫用。</span><span class="sxs-lookup"><span data-stu-id="9feb2-110">This implementation casts the generic handler as a <xref:System.Windows.Input.KeyboardEventHandler> and then invokes it.</span></span> <span data-ttu-id="9feb2-111">如需這項實作模式及它的理由的詳細資訊，請參閱<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由傳送事件概觀](~/docs/framework/wpf/advanced/routed-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9feb2-111">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.KeyboardDevice KeyboardDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.KeyboardDevice KeyboardDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardEventArgs.KeyboardDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyboardDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::KeyboardDevice ^ KeyboardDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9feb2-112">取得與輸入事件相關聯的鍵盤裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-112">Gets the keyboard device associated with the input event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9feb2-113">與事件相關聯的邏輯鍵盤裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9feb2-113">The logical keyboard device associated with the event.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
      </Docs>
    </Member>
  </Members>
</Type>