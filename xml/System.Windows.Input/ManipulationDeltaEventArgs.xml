<Type Name="ManipulationDeltaEventArgs" FullName="System.Windows.Input.ManipulationDeltaEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="713dd53a38b5e024df254f8d309b3b03b7ea2d1a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36506313" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationDeltaEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDeltaEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationDeltaEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDeltaEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationDeltaEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e0394-101">提供 <see cref="E:System.Windows.UIElement.ManipulationDelta" /> 事件的資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0394-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-102"><xref:System.Windows.Input.ManipulationDeltaEventArgs>類別包含操作的位置變更的相關資料。</span><span class="sxs-lookup"><span data-stu-id="e0394-102">The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class contains data about changes in the position of a manipulation.</span></span> <span data-ttu-id="e0394-103"><xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A>屬性包含自上次發生的變更<xref:System.Windows.UIElement.ManipulationDelta>發生事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-103">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="e0394-104"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>屬性包含目前的操作時發生的總變更。</span><span class="sxs-lookup"><span data-stu-id="e0394-104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="e0394-105">您可以使用其中一個屬性來轉換操作的物件。</span><span class="sxs-lookup"><span data-stu-id="e0394-105">You use one of those properties to transform the manipulated object.</span></span>  
  
 <span data-ttu-id="e0394-106">您可以藉由呼叫來結束操作<xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A>方法或強制成藉由呼叫慣性操作<xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e0394-106">You can end a manipulation by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method or force the manipulation into inertia by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0394-107">下列範例顯示的事件處理常式<xref:System.Windows.UIElement.ManipulationDelta>事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-107">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e0394-108">此範例會使用<xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A>屬性來移動、 調整大小，和旋轉<xref:System.Windows.Shapes.Rectangle>。</span><span class="sxs-lookup"><span data-stu-id="e0394-108">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="e0394-109">此範例也會檢查是否<xref:System.Windows.UIElement.ManipulationDelta>慣性和矩形是否接觸視窗邊緣期間發生的事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-109">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="e0394-110">如果這種情況下，應用程式會停止操作，若要防止將應用程式的可見區域的矩形。</span><span class="sxs-lookup"><span data-stu-id="e0394-110">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="e0394-111">這個範例是在較大範例的一部分[逐步解說： 建立您第一個接觸的應用程式](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="e0394-111">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationDeltaEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0394-112">取消操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-112">Cancels the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0394-113">如果成功取消操作，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-113">
              <see langword="true" /> if the manipulation was successfully canceled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-114">如果此方法成功，預設值<xref:System.Windows.Input.TouchDevice>先前傳送為滑鼠的事件觸碰滑鼠移動事件的項目或未來的操作事件，並不會。</span><span class="sxs-lookup"><span data-stu-id="e0394-114">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur.</span></span> <span data-ttu-id="e0394-115">觸控不可提升為滑鼠事件，如果<xref:System.Windows.UIElement.ManipulationCompleted>慣性期間發生的事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-115">Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="manipulationDeltaEventArgs.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0394-116">完成操作但不使用慣性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-116">Completes the manipulation without inertia.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-117">您可以呼叫<xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A>方法來中止操作。</span><span class="sxs-lookup"><span data-stu-id="e0394-117">You can call the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method to end the manipulation.</span></span> <span data-ttu-id="e0394-118">例如，當物件達到視窗邊緣時，您可以呼叫<xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A>防止物件移出螢幕。</span><span class="sxs-lookup"><span data-stu-id="e0394-118">For example, when an object reaches the edge of a window, you can call <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> to prevent the object from going off the screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0394-119">下列範例顯示的事件處理常式<xref:System.Windows.UIElement.ManipulationDelta>事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-119">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e0394-120">這個範例會檢查是否<xref:System.Windows.UIElement.ManipulationDelta>慣性和矩形是否接觸視窗邊緣期間發生的事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-120">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="e0394-121">如果這種情況下，應用程式會停止操作，若要防止將應用程式的可見區域的矩形。</span><span class="sxs-lookup"><span data-stu-id="e0394-121">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="e0394-122">這個範例是在較大範例的一部分[逐步解說： 建立您第一個接觸的應用程式](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="e0394-122">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CumulativeManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta CumulativeManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CumulativeManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ CumulativeManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CumulativeManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-123">取得目前操作的累計變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-123">Gets the cumulated changes of the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-124">目前操作的累計變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-124">The cumulated changes of the current manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-125"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>屬性包含目前的操作時發生的總變更。</span><span class="sxs-lookup"><span data-stu-id="e0394-125">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="e0394-126">您可以使用<xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>轉換操作的物件。</span><span class="sxs-lookup"><span data-stu-id="e0394-126">You can use <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> to transform the manipulated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta DeltaManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeltaManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ DeltaManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeltaManipulation : System.Windows.Input.ManipulationDelta" Usage="System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-127">取得目前操作最近一次的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-127">Gets the most recent changes of the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-128">目前操作最近一次的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-128">The most recent changes of the current manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-129"><xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A>屬性包含自上次發生的變更<xref:System.Windows.UIElement.ManipulationDelta>發生事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-129">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="e0394-130">您可以使用這個屬性來操作的物件的轉換。</span><span class="sxs-lookup"><span data-stu-id="e0394-130">You can use this property to transform the manipulated object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0394-131">下列範例顯示的事件處理常式<xref:System.Windows.UIElement.ManipulationDelta>事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-131">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e0394-132">此範例會使用<xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A>屬性來移動、 調整大小，和旋轉<xref:System.Windows.Shapes.Rectangle>。</span><span class="sxs-lookup"><span data-stu-id="e0394-132">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="e0394-133">這個範例是在較大範例的一部分[逐步解說： 建立您第一個接觸的應用程式](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="e0394-133">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationDeltaEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInertial">
      <MemberSignature Language="C#" Value="public bool IsInertial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInertial" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInertial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInertial { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInertial : bool" Usage="System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-134">取得值，這個值表示是否在慣性作用期間發生 <see cref="E:System.Windows.UIElement.ManipulationDelta" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-134">Gets a value that indicates whether the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-135">如果 <see cref="E:System.Windows.UIElement.ManipulationDelta" /> 事件是在慣性期間發生，則為 <see langword="true" />，如果事件是在使用者觸碰 <see cref="T:System.Windows.UIElement" /> 時發生，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-135">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia; <see langword="false" /> if the event occurs while the user has contact with the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-136">您可以使用這個方法來判斷是否<xref:System.Windows.UIElement.ManipulationDelta>慣性期間，或當使用者擁有與收到的項目，就會發生事件<xref:System.Windows.UIElement.ManipulationDelta>事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-136">You can use this method to determine whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurs during inertia or while the user has contact with the element that receives the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0394-137">下列範例顯示的事件處理常式<xref:System.Windows.UIElement.ManipulationDelta>事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-137">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="e0394-138">這個範例會檢查是否<xref:System.Windows.UIElement.ManipulationDelta>慣性和矩形是否接觸視窗邊緣期間發生的事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-138">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="e0394-139">如果這種情況下，應用程式會停止操作，若要防止將應用程式的可見區域的矩形。</span><span class="sxs-lookup"><span data-stu-id="e0394-139">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="e0394-140">這個範例是在較大範例的一部分[逐步解說： 建立您第一個接觸的應用程式](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="e0394-140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement" Usage="System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-141">取得容器，這個容器會定義操作的座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-141">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-142">容器，定義操作的座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-142">The container that defines the coordinates for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationOrigin : System.Windows.Point" Usage="System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-143">取得操作起源的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-143">Gets the point from which the manipulation originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-144">操作起源的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-144">The point from which the manipulation originated.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-145">取得物件的集合，表示用於操作的觸控接點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-145">Gets a collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-146">物件的集合，表示用於操作的觸控接點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-146">A collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportBoundaryFeedback">
      <MemberSignature Language="C#" Value="public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportBoundaryFeedback(class System.Windows.Input.ManipulationDelta unusedManipulation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportBoundaryFeedback (unusedManipulation As ManipulationDelta)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportBoundaryFeedback(System::Windows::Input::ManipulationDelta ^ unusedManipulation);" />
      <MemberSignature Language="F#" Value="member this.ReportBoundaryFeedback : System.Windows.Input.ManipulationDelta -&gt; unit" Usage="manipulationDeltaEventArgs.ReportBoundaryFeedback unusedManipulation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unusedManipulation" Type="System.Windows.Input.ManipulationDelta" />
      </Parameters>
      <Docs>
        <param name="unusedManipulation">
          <span data-ttu-id="e0394-147">代表超出界限的操作部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-147">The portion of the manipulation that represents moving beyond the boundary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0394-148">指定操作已經超出特定界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-148">Specifies that the manipulation has gone beyond certain boundaries.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0394-149">使用<xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>方法，指出項目已移到特定的界限之外。</span><span class="sxs-lookup"><span data-stu-id="e0394-149">Use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method to indicate that an element has moved beyond a certain boundary.</span></span>  <span data-ttu-id="e0394-150">例如，如果使用者移的界限之外的項目<xref:System.Windows.Window>，您可以呼叫這個方法，以在視窗中的報告。</span><span class="sxs-lookup"><span data-stu-id="e0394-150">For example, if a user moves an element outside of the bounds of a <xref:System.Windows.Window>, you can call this method to report that to the window.</span></span>  <span data-ttu-id="e0394-151">當您呼叫<xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>、<xref:System.Windows.UIElement.ManipulationBoundaryFeedback>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="e0394-151">When you call <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event occurs.</span></span>  <span data-ttu-id="e0394-152">根據預設，<xref:System.Windows.Window>訂閱<xref:System.Windows.UIElement.ManipulationBoundaryFeedback>事件以提供的視覺化回饋給使用者，已達到界限。</span><span class="sxs-lookup"><span data-stu-id="e0394-152">By default, the <xref:System.Windows.Window> subscribes to the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event to provide visual feedback to the user that a boundary has been reached.</span></span>  <span data-ttu-id="e0394-153">您可以訂閱<xref:System.Windows.UIElement.ManipulationBoundaryFeedback>來實作自訂行為。</span><span class="sxs-lookup"><span data-stu-id="e0394-153">You can subscribe to <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> to implement custom behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0394-154">下列範例顯示的事件處理常式<xref:System.Windows.UIElement.ManipulationDelta>呼叫的事件<xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>方法，當使用者將其容器的邊緣上方的項目。</span><span class="sxs-lookup"><span data-stu-id="e0394-154">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event that calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method when the user moves the element over the edge of its container.</span></span>  <span data-ttu-id="e0394-155">若要測試此範例，請遵循[逐步解說： 建立您第一個接觸的應用程式](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)和在步驟 5 中的程式碼取代這段程式碼。</span><span class="sxs-lookup"><span data-stu-id="e0394-155">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 5 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#reportboundaryfeedback)]
 [!code-vb[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#reportboundaryfeedback)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e0394-156">
            <paramref name="unusedManipulation" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-156">
              <paramref name="unusedManipulation" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public void StartInertia ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartInertia() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartInertia ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartInertia();" />
      <MemberSignature Language="F#" Value="member this.StartInertia : unit -&gt; unit" Usage="manipulationDeltaEventArgs.StartInertia " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0394-157">藉由忽略後續接觸移動並引發 <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> 事件，在操作上啟動慣性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-157">Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Velocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities Velocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities Velocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Velocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ Velocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Velocities : System.Windows.Input.ManipulationVelocities" Usage="System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0394-158">取得操作最近一次變更的速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-158">Gets the rates of the most recent changes to the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0394-159">操作最近一次變更的速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0394-159">The rates of the most recent changes to the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>