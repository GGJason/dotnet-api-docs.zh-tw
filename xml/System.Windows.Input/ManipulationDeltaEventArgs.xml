<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ManipulationDeltaEventArgs.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac514e330c730054f8a6441ee6306a12db68536d587.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14e330c730054f8a6441ee6306a12db68536d587</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> event.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> 事件的資料。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;</ph> class contains data about changes in the position of a manipulation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;</ph>類別包含操作的位置變更的相關資料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> property contains the changes that occurred since the last <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph>屬性包含自上次發生的變更<ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>發生事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph> property contains the total changes that occurred for the current manipulation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph>屬性包含目前的操作時發生的總變更。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>You use one of those properties to transform the manipulated object.</source>
          <target state="translated">您可以使用其中一個屬性來轉換操作的物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>You can end a manipulation by calling the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A&gt;</ph> method or force the manipulation into inertia by calling the <ph id="ph2">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A&gt;</ph> method.</source>
          <target state="translated">您可以藉由呼叫來結束操作<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A&gt;</ph>方法或強制成藉由呼叫慣性操作<ph id="ph2">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> property to move, resize, and rotate a <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph>屬性來移動、 調整大小，和旋轉<ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>The example also checks whether the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurred during inertia and whether the rectangle is touching the edge of a window.</source>
          <target state="translated">此範例也會檢查是否<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>慣性和矩形是否接觸視窗邊緣期間發生的事件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</source>
          <target state="translated">如果這種情況下，應用程式會停止操作，若要防止將應用程式的可見區域的矩形。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ManipulationDeltaEventArgs">
          <source>This example is part of a larger example in <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.</source>
          <target state="translated">這個範例是在較大範例的一部分<bpt id="p1">[</bpt>逐步解說： 建立您第一個接觸的應用程式<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel">
          <source>Cancels the manipulation.</source>
          <target state="translated">取消操作。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the manipulation was successfully canceled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功取消操作，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel">
          <source>If the method succeeds, the default <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur.</source>
          <target state="translated">如果此方法成功，預設值<ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>先前傳送為滑鼠的事件觸碰滑鼠移動事件的項目或未來的操作事件，並不會。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel">
          <source>Touch cannot be promoted to mouse events if the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;</ph> event occurs during inertia.</source>
          <target state="translated">觸控不可提升為滑鼠事件，如果<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;</ph>慣性期間發生的事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>Completes the manipulation without inertia.</source>
          <target state="translated">完成操作但不使用慣性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A&gt;</ph> method to end the manipulation.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A&gt;</ph>方法來中止操作。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>For example, when an object reaches the edge of a window, you can call <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A&gt;</ph> to prevent the object from going off the screen.</source>
          <target state="translated">例如，當物件達到視窗邊緣時，您可以呼叫<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A&gt;</ph>防止物件移出螢幕。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>The example checks whether the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurred during inertia and whether the rectangle is touching the edge of a window.</source>
          <target state="translated">這個範例會檢查是否<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>慣性和矩形是否接觸視窗邊緣期間發生的事件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</source>
          <target state="translated">如果這種情況下，應用程式會停止操作，若要防止將應用程式的可見區域的矩形。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
          <source>This example is part of a larger example in <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.</source>
          <target state="translated">這個範例是在較大範例的一部分<bpt id="p1">[</bpt>逐步解說： 建立您第一個接觸的應用程式<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
          <source>Gets the cumulated changes of the current manipulation.</source>
          <target state="translated">取得目前操作的累計變更。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
          <source>The cumulated changes of the current manipulation.</source>
          <target state="translated">目前操作的累計變更。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph> property contains the total changes that occurred for the current manipulation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph>屬性包含目前的操作時發生的總變更。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph> to transform the manipulated object.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph>轉換操作的物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>Gets the most recent changes of the current manipulation.</source>
          <target state="translated">取得目前操作最近一次的變更。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>The most recent changes of the current manipulation.</source>
          <target state="translated">目前操作最近一次的變更。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> property contains the changes that occurred since the last <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph>屬性包含自上次發生的變更<ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>發生事件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>You can use this property to transform the manipulated object.</source>
          <target state="translated">您可以使用這個屬性來操作的物件的轉換。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> property to move, resize, and rotate a <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph>屬性來移動、 調整大小，和旋轉<ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
          <source>This example is part of a larger example in <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.</source>
          <target state="translated">這個範例是在較大範例的一部分<bpt id="p1">[</bpt>逐步解說： 建立您第一個接觸的應用程式<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> event occurs during inertia.</source>
          <target state="translated">取得值，這個值表示是否在慣性作用期間發生 <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> event occurs during inertia; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the event occurs while the user has contact with the <ph id="ph4">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> 事件是在慣性期間發生，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果事件是在使用者觸碰 <ph id="ph4">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 時發生，則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source>You can use this method to determine whether the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurs during inertia or while the user has contact with the element that receives the <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event.</source>
          <target state="translated">您可以使用這個方法來判斷是否<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>慣性期間，或當使用者擁有與收到的項目，就會發生事件<ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source>The example checks whether the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurred during inertia and whether the rectangle is touching the edge of a window.</source>
          <target state="translated">這個範例會檢查是否<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>慣性和矩形是否接觸視窗邊緣期間發生的事件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source>If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</source>
          <target state="translated">如果這種情況下，應用程式會停止操作，若要防止將應用程式的可見區域的矩形。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
          <source>This example is part of a larger example in <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.</source>
          <target state="translated">這個範例是在較大範例的一部分<bpt id="p1">[</bpt>逐步解說： 建立您第一個接觸的應用程式<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer">
          <source>Gets the container that defines the coordinates for the manipulation.</source>
          <target state="translated">取得容器，這個容器會定義操作的座標。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer">
          <source>The container that defines the coordinates for the manipulation.</source>
          <target state="translated">容器，定義操作的座標。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin">
          <source>Gets the point from which the manipulation originated.</source>
          <target state="translated">取得操作起源的點。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin">
          <source>The point from which the manipulation originated.</source>
          <target state="translated">操作起源的點。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators">
          <source>Gets a collection of objects that represents the touch contacts for the manipulation.</source>
          <target state="translated">取得物件的集合，表示用於操作的觸控接點。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators">
          <source>A collection of objects that represents the touch contacts for the manipulation.</source>
          <target state="translated">物件的集合，表示用於操作的觸控接點。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>The portion of the manipulation that represents moving beyond the boundary.</source>
          <target state="translated">代表超出界限的操作部分。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>Specifies that the manipulation has gone beyond certain boundaries.</source>
          <target state="translated">指定操作已經超出特定界限。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A&gt;</ph> method to indicate that an element has moved beyond a certain boundary.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A&gt;</ph>方法，指出項目已移到特定的界限之外。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>For example, if a user moves an element outside of the bounds of a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, you can call this method to report that to the window.</source>
          <target state="translated">例如，如果使用者移的界限之外的項目<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>，您可以呼叫這個方法，以在視窗中的報告。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>When you call <ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph> event occurs.</source>
          <target state="translated">當您呼叫<ph id="ph1">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph>就會發生事件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> subscribes to the <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph> event to provide visual feedback to the user that a boundary has been reached.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>訂閱<ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph>事件以提供的視覺化回饋給使用者，已達到界限。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>You can subscribe to <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph> to implement custom behavior.</source>
          <target state="translated">您可以訂閱<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph>來實作自訂行為。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event that calls the <ph id="ph2">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A&gt;</ph> method when the user moves the element over the edge of its container.</source>
          <target state="translated">下列範例顯示的事件處理常式<ph id="ph1">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph>呼叫的事件<ph id="ph2">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A&gt;</ph>方法，當使用者將其容器的邊緣上方的項目。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source>To test this example, follow the steps in <bpt id="p1">[</bpt>Walkthrough: Creating Your First Touch Application<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept> and replace the code in step 5 with this code.</source>
          <target state="translated">若要測試此範例，請遵循<bpt id="p1">[</bpt>逐步解說： 建立您第一個接觸的應用程式<ept id="p1">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>和在步驟 5 中的程式碼取代這段程式碼。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)">
          <source><ph id="ph1">&lt;paramref name="unusedManipulation" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unusedManipulation" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia">
          <source>Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /&gt;</ph> event.</source>
          <target state="translated">藉由忽略後續接觸移動並引發 <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /&gt;</ph> 事件，在操作上啟動慣性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities">
          <source>Gets the rates of the most recent changes to the manipulation.</source>
          <target state="translated">取得操作最近一次變更的速率。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities">
          <source>The rates of the most recent changes to the manipulation.</source>
          <target state="translated">操作最近一次變更的速率。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>