<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30f87b6247b094010302d8c5f86db873bb00fa53" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52226724" /></Metadata><TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported>事件是否包含在[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]以支援使用 Silverlight 的相容性。 如果您不需要確保與 Silverlight 相容性，使用觸控事件，例如<xref:System.Windows.UIElement.TouchDown>並<xref:System.Windows.UIElement.TouchMove>上<xref:System.Windows.UIElement>， <xref:System.Windows.UIElement3D>，或<xref:System.Windows.ContentElement>。  
  
 使用<xref:System.Windows.Input.TouchFrameEventArgs>以取得<xref:System.Windows.Input.TouchPoint>觸控事件與相關的值。 從<xref:System.Windows.Input.TouchPoint>，您可以取得<xref:System.Windows.Input.TouchPoint.Position%2A>觸控的並判斷是否<xref:System.Windows.Input.TouchAction>已<xref:System.Windows.Input.TouchAction.Down>， <xref:System.Windows.Input.TouchAction.Move>，或<xref:System.Windows.Input.TouchAction.Up>動作。 您也可以使用<xref:System.Windows.Input.TouchPoint>以取得<xref:System.Windows.Input.TouchDevice>。 從<xref:System.Windows.Input.TouchDevice>，您可以判斷裝置<xref:System.Windows.Input.TouchDevice.Id%2A>和取得資訊都會被接觸到的項目。  
  
   
  
## Examples  
 下列範例會處理<xref:System.Windows.Input.Touch.FrameReported>事件，以及存取中的觸控資料<xref:System.Windows.Input.TouchFrameEventArgs>。 當按下觸控<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。 當觸控已消除時，<xref:System.Windows.Input.TouchDevice>發行。 當觸控移過<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果移動來自第一個觸控時，會記錄它的位置。 如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。  
  
 這個範例屬於較大的範例中提供的<xref:System.Windows.Input.Touch>類別概觀。  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">會定義座標空間的項目。 若要使用 WPF 絕對座標，請將 <paramref name="relativeTo" /> 指定為 <see langword="null" />。</param>
        <summary>傳回主要觸控裝置目前相對於指定之項目的觸控點。</summary>
        <returns>主要 <see cref="T:System.Windows.Input.TouchDevice" /> 目前相對於指定項目的位置，如果主要 <see cref="T:System.Windows.Input.TouchDevice" /> 不在作用中，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在一對作用中的觸控裝置，第一個裝置<xref:System.Windows.Input.TouchDevice.Activated>是主要觸控裝置。 比方說，如果兩個手指接觸畫面，已關閉的第一個手指被以主要觸控裝置。 如果第一個手指已消除還是向下第二個手指時，就會變成主要觸控裝置`null`。  
  
   
  
## Examples  
 下列程式碼處理會從擷取的觸控點<xref:System.Windows.Input.TouchFrameEventArgs>。 當按下觸控<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice>擷取至<xref:System.Windows.Controls.Canvas>。 當觸控已消除時，<xref:System.Windows.Input.TouchDevice>發行。 當觸控移過<xref:System.Windows.Controls.Canvas>，則<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果<xref:System.Windows.Input.TouchDevice.Id%2A>符合<xref:System.Windows.Input.TouchDevice.Id%2A>的主要觸控點，這表示第一個觸控，會記錄它的位置。 如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。  
  
 這個範例屬於較大的範例中提供的<xref:System.Windows.Input.Touch>類別概觀。  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">會定義座標空間的項目。 若要使用 WPF 絕對座標，請將 <paramref name="relativeTo" /> 指定為 <see langword="null" />。</param>
        <summary>傳回集合，其中包含每個作用中觸控裝置目前相對於指定之項目的觸控點。</summary>
        <returns>集合，其中包含每個作用中 <see cref="T:System.Windows.Input.TouchPoint" /> 之目前的 <see cref="T:System.Windows.Input.TouchDevice" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼會從擷取的觸控點的程序<xref:System.Windows.Input.TouchFrameEventArgs>。 在畫布上，按下觸控時<xref:System.Windows.Input.TouchDevice>擷取至畫布。 當引發觸控時，<xref:System.Windows.Input.TouchDevice>發行。 觸控式移動在畫布上，<xref:System.Windows.Input.TouchDevice.Id%2A>已核取。 如果<xref:System.Windows.Input.TouchDevice.Id%2A>符合<xref:System.Windows.Input.TouchDevice.Id%2A>的主要觸控點，這表示第一個觸控，會記錄它的位置。 如果移動來自第二個觸控時，會一條線繪製的第一個觸控位置的第二個觸控位置。  
  
 這個範例屬於較大的範例中提供的<xref:System.Windows.Input.Touch>類別概觀。  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個成員尚未實作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法被提供 Silverlight 相容性。 裝置實作差異，因為它不是在 WPF 中實作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得此事件的時間戳記。</summary>
        <value>此事件的時間戳記。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>