<Type Name="InputEventArgs" FullName="System.Windows.Input.InputEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4daa2f90d59952eb2458046d509e9451d697ff7b" />
    <Meta Name="ms.sourcegitcommit" Value="af562076243cb1c2c1d8518e9f1b489f858cc658" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/15/2018" />
    <Meta Name="ms.locfileid" Value="35652285" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InputEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class InputEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供輸入相關事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.InputEventArgs> 引數類別是 Windows Presentation Foundation 輸入事件的基底類別。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.InputEventHandler" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputEventArgs (System.Windows.Input.InputDevice inputDevice, int timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.InputDevice inputDevice, int32 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputEventArgs.#ctor(System.Windows.Input.InputDevice,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputEventArgs(System::Windows::Input::InputDevice ^ inputDevice, int timestamp);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputDevice" Type="System.Windows.Input.InputDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputDevice">與這個事件關聯的輸入裝置。</param>
        <param name="timestamp">輸入的時間。</param>
        <summary>初始化 <see cref="T:System.Windows.Input.InputEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Device">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputDevice Device { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputDevice Device" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputEventArgs.Device" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Device As InputDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputDevice ^ Device { System::Windows::Input::InputDevice ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得初始化這個事件的輸入裝置。</summary>
        <value>與這個事件關聯的輸入裝置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Input.KeyboardDevice>  
  
 <xref:System.Windows.Input.MouseDevice>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">以特定型別的方式呼叫的泛型處理常式。</param>
        <param name="genericTarget">對其呼叫處理常式的目標。</param>
        <summary>以型別專屬的方式叫用事件處理常式，這樣做能夠提升事件系統的效率。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此實作會轉換為一般處理常式時為<xref:System.Windows.Input.InputEventHandler>然後再叫用。 如需這項實作模式及它的理由的詳細資訊，請參閱<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由傳送事件概觀](~/docs/framework/wpf/advanced/routed-events-overview.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個事件發生的時間。</summary>
        <value>自上次重新開機後經過的毫秒數。 此值會在大約 24.9 天後達到<see cref="F:System.Int32.MaxValue" />並重新啟動 （負） 在<see cref="F:System.Int32.MinValue" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>