<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cb12a2cc5ed353d695ecbf78462a4227628d38d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37505193" /></Metadata><TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="44cd1-101">附加事件處理常式的物件。</span><span class="sxs-lookup"><span data-stu-id="44cd1-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="44cd1-102">事件資料。</span><span class="sxs-lookup"><span data-stu-id="44cd1-102">The event data.</span></span></param>
    <summary><span data-ttu-id="44cd1-103">代表能處理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 和 <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> 路由事件，以及相關附加事件的方法。</span><span class="sxs-lookup"><span data-stu-id="44cd1-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44cd1-104">這個委派包含實作邏輯<xref:System.Windows.Input.RoutedCommand>。</span><span class="sxs-lookup"><span data-stu-id="44cd1-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="44cd1-105">實作邏輯區分開來命令可讓從不同來源和類型，叫用命令，並可讓命令邏輯集中。</span><span class="sxs-lookup"><span data-stu-id="44cd1-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="44cd1-106">這個委派也可用於<xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType>並<xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>，這是在附加事件<xref:System.Windows.Input.CommandManager>實作命令的基礎結構的大部分類別。</span><span class="sxs-lookup"><span data-stu-id="44cd1-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="44cd1-107">但是大部分的實際的處理常式會處理<xref:System.Windows.Input.CommandBinding.Executed>從特定的事件<xref:System.Windows.Input.CommandBinding>，而不是在工作比<xref:System.Windows.Input.CommandManager>層級。</span><span class="sxs-lookup"><span data-stu-id="44cd1-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="44cd1-108">內<xref:System.Windows.Input.ExecutedRoutedEventArgs>，下列的屬性時，通常會感興趣的寫入路由事件所執行的命令產生的事件處理常式：</span><span class="sxs-lookup"><span data-stu-id="44cd1-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="44cd1-109"><xref:System.Windows.RoutedEventArgs.Source%2A> 報告命令執行所在的目標。</span><span class="sxs-lookup"><span data-stu-id="44cd1-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="44cd1-110">一旦執行命令之後，您也可以將<xref:System.Windows.RoutedEventArgs.Source%2A>多通常在路由事件的詞彙，以引發路由的事件的物件。</span><span class="sxs-lookup"><span data-stu-id="44cd1-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="44cd1-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> 報告執行的命令。</span><span class="sxs-lookup"><span data-stu-id="44cd1-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="44cd1-112">如果您使用命令繫結，而且如果您撰寫處理常式會處理多個命令，此屬性相當實用。</span><span class="sxs-lookup"><span data-stu-id="44cd1-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="44cd1-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> 報告執行的命令所傳送的任何命令特有參數。</span><span class="sxs-lookup"><span data-stu-id="44cd1-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="44cd1-114">並非所有命令使用，或要求特定命令的參數。</span><span class="sxs-lookup"><span data-stu-id="44cd1-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="44cd1-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> 報告是否導致執行的命令路由的事件已處理狀況路由中的不同項目。</span><span class="sxs-lookup"><span data-stu-id="44cd1-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="44cd1-116">路由的事件處理常式，它是建議的作法是已處理事件設定時，請執行有意義的工作的處理常式<xref:System.Windows.RoutedEventArgs.Handled%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="44cd1-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="44cd1-117">這可防止事件再次進一步路由的處理事件的一般處理常式。</span><span class="sxs-lookup"><span data-stu-id="44cd1-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="44cd1-118">如需有關如何處理路由的事件的詳細資訊，請參閱 <<c0> [ 路由事件標記為已處理以及類別處理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)。</span><span class="sxs-lookup"><span data-stu-id="44cd1-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="44cd1-119">這個委派也代表處理常式<xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType>並<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>，這是在附加事件<xref:System.Windows.Input.CommandManager>實作命令的基礎結構的大部分類別。</span><span class="sxs-lookup"><span data-stu-id="44cd1-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="44cd1-120">但是大部分的實際的處理常式會處理<xref:System.Windows.Input.CommandBinding.Executed>從特定的事件<xref:System.Windows.Input.CommandBinding>，而不是在工作比<xref:System.Windows.Input.CommandManager>層級。</span><span class="sxs-lookup"><span data-stu-id="44cd1-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="44cd1-121">如需命令的詳細資訊，請參閱[命令概觀](~/docs/framework/wpf/advanced/commanding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44cd1-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44cd1-122">這個範例會建立<xref:System.Windows.Input.ExecutedRoutedEventHandler>，設定視覺屬性目標上執行命令時。</span><span class="sxs-lookup"><span data-stu-id="44cd1-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="44cd1-123">此範例也包括<xref:System.Windows.Input.CanExecuteRoutedEventHandler>相同的命令。</span><span class="sxs-lookup"><span data-stu-id="44cd1-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>