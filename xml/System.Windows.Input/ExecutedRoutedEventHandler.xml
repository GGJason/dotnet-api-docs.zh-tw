<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e7060feb6bd9cc789b91cd51b75c1f71d708b5f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647812" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">附加事件處理常式的物件。</param>
    <param name="e">事件資料。</param>
    <summary>代表能處理 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 和 <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> 路由事件，以及相關附加事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個委派包含的實作邏輯<xref:System.Windows.Input.RoutedCommand>。  實作邏輯分離命令可從不同來源和類型，叫用命令，並且讓命令邏輯的集中化。  
  
 此委派也可用於<xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType>和<xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>，它們是附加事件上<xref:System.Windows.Input.CommandManager>類別可實作大部分命令的基礎結構。 但是大部分的實際的處理常式會處理<xref:System.Windows.Input.CommandBinding.Executed>從特定事件<xref:System.Windows.Input.CommandBinding>，而不是在工作比<xref:System.Windows.Input.CommandManager>層級。  
  
 內<xref:System.Windows.Input.ExecutedRoutedEventArgs>，下列屬性通常是感興趣的當您撰寫路由的事件所執行的命令產生的事件處理常式：  
  
-   <xref:System.Windows.RoutedEventArgs.Source%2A> 報告執行命令的目標。 一旦執行命令之後，您也可以將<xref:System.Windows.RoutedEventArgs.Source%2A>多通常在路由事件的詞彙，以引發路由的事件的物件。  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> 報告執行的命令。 如果您使用命令繫結，而且如果您撰寫處理常式，可能會處理多個命令，此屬性相當實用。  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> 報告執行的命令所傳送的任何特定命令的參數。 並非所有命令使用，或會預期特定命令的參數。  
  
-   <xref:System.Windows.RoutedEventArgs.Handled%2A> 報告執行的命令所產生的路由的事件是否已經過處理由不同的項目路徑。 路由的事件處理常式，對於有處理常式處理事件，以設定執行有意義的工作之建議的作法是<xref:System.Windows.RoutedEventArgs.Handled%2A>至`true`。 這可防止路由再次進一步事件的處理事件的一般處理常式。 如需有關處理路由的事件的詳細資訊，請參閱[標示路由傳送事件中當做 Handled，和類別處理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)。  
  
 此委派也表示處理常式<xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType>和<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>，它們是附加事件上<xref:System.Windows.Input.CommandManager>類別可實作大部分命令的基礎結構。 但是大部分的實際的處理常式會處理<xref:System.Windows.Input.CommandBinding.Executed>從特定事件<xref:System.Windows.Input.CommandBinding>，而不是在工作比<xref:System.Windows.Input.CommandManager>層級。  
  
 如需命令的詳細資訊，請參閱[命令概觀](~/docs/framework/wpf/advanced/commanding-overview.md)。  
  
   
  
## Examples  
 這個範例會建立<xref:System.Windows.Input.ExecutedRoutedEventHandler>設定視覺化屬性在目標上執行命令時。 此範例也會包含<xref:System.Windows.Input.CanExecuteRoutedEventHandler>相同的命令。  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>