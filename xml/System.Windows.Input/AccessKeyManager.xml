<Type Name="AccessKeyManager" FullName="System.Windows.Input.AccessKeyManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f76e1792434031eaad62428e9f464b00b4f4c589" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52231613" /></Metadata><TypeSignature Language="C#" Value="public sealed class AccessKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AccessKeyManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AccessKeyManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessKeyManager sealed" />
  <TypeSignature Language="F#" Value="type AccessKeyManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>維護所有便捷鍵的註冊，以及 Windows Forms、Win32 與 Windows Presentation Foundation (WPF) 之間 Interop 鍵盤命令的處理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.AccessKeyManager>上的每一個要求建立物件<xref:System.Windows.Threading.Dispatcher>。  
  
 <xref:System.Windows.Input.AccessKeyManager>做為事件處理常式會附加<xref:System.Windows.Input.InputManager.PostProcessInput>，並公開方法，以<xref:System.Windows.Input.AccessKeyManager.Register%2A>和<xref:System.Windows.Input.AccessKeyManager.Unregister%2A>存取金鑰。  
  
 按下的已註冊的存取金鑰時，<xref:System.Windows.Input.AccessKeyManager>呼叫<xref:System.Windows.UIElement.OnAccessKey%2A>目標項目上的方法。  
  
 項目可以與任意數目的存取金鑰相關聯。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="AccessKeyPressed">
      <MemberSignature Language="C#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />
      <MemberSignature Language="VB.NET" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="F#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" Usage="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>按下便捷鍵時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件用來識別定義範圍的存取金鑰，例如功能表鍵和快顯的索引鍵的項目。  
  
 指定的事件由<xref:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent>欄位將永遠不會引發; 它用來識別類別，定義新的範圍。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyPressedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent AccessKeyPressedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyPressedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ AccessKeyPressedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyPressedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddAccessKeyPressedHandler : System.Windows.DependencyObject * System.Windows.Input.AccessKeyPressedEventHandler -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
        <param name="handler">要加入的事件處理常式。</param>
        <summary>加入 <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 附加事件的處理常式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyRegistered">
      <MemberSignature Language="C#" Value="public static bool IsKeyRegistered (object scope, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyRegistered(object scope, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyRegistered (scope As Object, key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyRegistered(System::Object ^ scope, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member IsKeyRegistered : obj * string -&gt; bool" Usage="System.Windows.Input.AccessKeyManager.IsKeyRegistered (scope, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">要從中查詢 <paramref name="key" /> 的呈現來源。</param>
        <param name="key">要查詢的按鍵。</param>
        <summary>表示指定的按鍵是否已註冊為指定範圍內的便捷鍵。</summary>
        <returns>如果已註冊按鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public static bool ProcessKey (object scope, string key, bool isMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ProcessKey(object scope, string key, bool isMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ProcessKey (scope As Object, key As String, isMultiple As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ProcessKey(System::Object ^ scope, System::String ^ key, bool isMultiple);" />
      <MemberSignature Language="F#" Value="static member ProcessKey : obj * string * bool -&gt; bool" Usage="System.Windows.Input.AccessKeyManager.ProcessKey (scope, key, isMultiple)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scope">便捷鍵的範圍。</param>
        <param name="key">便捷鍵。</param>
        <param name="isMultiple">指出 <paramref name="key" /> 是否有多個相符項目。</param>
        <summary>處理指定的便捷鍵，就像已將索引鍵的 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件傳遞給 <see cref="T:System.Windows.Input.AccessKeyManager" /> 一樣。</summary>
        <returns>如果有多個相符的索引鍵，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Register : string * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.Register (key, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">便捷鍵。</param>
        <param name="element">要與 <paramref name="key" /> 相關聯的項目。</param>
        <summary>將指定的存取金鑰與指定的項目建立關聯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按下便捷鍵時，<xref:System.Windows.UIElement.OnAccessKey%2A>方法的`element`呼叫。  
  
 項目可以與任意數目的存取金鑰相關聯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveAccessKeyPressedHandler : System.Windows.DependencyObject * System.Windows.Input.AccessKeyPressedEventHandler -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
        <param name="handler">要移除的事件處理常式。</param>
        <summary>從指定的物件中移除指定的 <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件處理常式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Unregister : string * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.AccessKeyManager.Unregister (key, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">便捷鍵。</param>
        <param name="element">要取消 <paramref name="key" /> 關聯的項目。</param>
        <summary>取消指定的存取金鑰與指定的項目之間的關聯。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>