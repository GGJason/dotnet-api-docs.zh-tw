<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XContainer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5975ff3e595a7e42b32687e50bd64d6eefc73e39b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">975ff3e595a7e42b32687e50bd64d6eefc73e39b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Represents a node that can contain other nodes.</source>
          <target state="translated">代表可包含其他節點的節點。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This class provides functionality such as finding the next or previous sibling node, or enumerating the direct children of a node.</source>
          <target state="translated">這個類別會提供功能，例如尋找一個或下一個同層級節點，或列舉節點的直接子系。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The two classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph> are <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">這兩個類別衍生自<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>是<ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>和<ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Adds the specified content as children to this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">將指定的內容當做子系加入至這個 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">此方法會將新內容的現有內容之後<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to add the results of a query to one of them.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，並接著會使用此方法將查詢的結果加入至其中一個。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>A content object containing simple content or a collection of content objects to be added.</source>
          <target state="translated">要加入的包含簡單內容或內容物件集合的內容物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>Adds the specified content as children of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">加入指定的內容做為此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的子系。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">此方法會將新內容的現有內容之後<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>The following example creates two XML trees, and then uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to one of them.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，並接著會使用此方法加入<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>至其中的物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">它也會加入結果<ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>查詢 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">內容物件的參數清單。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>Adds the specified content as children of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">加入指定的內容做為此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的子系。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">此方法會將新內容的現有內容之後<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>The following example creates two XML trees, uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to one of them.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，然後使用此方法將<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>至其中的物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">它也會加入結果<ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>查詢 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">加入指定的內容，以當做此文件或項目的第一個子系。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">此方法會將新內容的現有內容之前<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to add the results of a query to one of them.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，並接著會使用此方法將查詢的結果加入至其中一個。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>A content object containing simple content or a collection of content objects to be added.</source>
          <target state="translated">要加入的包含簡單內容或內容物件集合的內容物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">加入指定的內容，以當做此文件或項目的第一個子系。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">此方法會將新內容的現有內容之前<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>The following example creates two XML trees, uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first element to one of them.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，然後使用此方法將<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>物件做為其中一個方法的第一個元素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">它也會加入結果<ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>查詢 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">內容物件的參數清單。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">加入指定的內容，以當做此文件或項目的第一個子系。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">此方法會將新內容的現有內容之前<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>The following example creates two XML trees, and uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first element to one of them.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，並使用此方法將<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>物件做為其中一個方法的第一個元素。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">它也會加入結果<ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>查詢 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>The parent is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">該父代為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that can be used to add nodes to the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">建立可以用來將節點加入到 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that is ready to have content written to it.</source>
          <target state="translated">準備寫入內容的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>While serializing, namespace prefixes are inferred from the namespace attributes in the XML tree.</source>
          <target state="translated">序列化時，會推斷 XML 樹狀結構中的命名空間屬性的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>You can use this method to perform an XSLT transformation.</source>
          <target state="translated">您可以使用這個方法來執行 XSLT 轉換。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>You can create an XML tree, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, create a new document, and create a <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.</source>
          <target state="translated">您可以建立 XML 樹狀結構、 建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>從 XML 樹狀結構中，建立新的文件，並建立<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>將寫入新文件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>Then, you can invoke the XSLT transformation, passing the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transform.</source>
          <target state="translated">接著，您可以叫用 XSLT 轉換，以傳遞<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>的轉換。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</source>
          <target state="translated">轉換成功完成後，系統會使用轉換的結果填入新的 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>Returns a collection of the descendant nodes for this document or element, in document order.</source>
          <target state="translated">依照文件順序，傳回這個文件或項目之子代節點的集合。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the descendant nodes of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，包含 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的子代節點 (依照文件順序)。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>Note that attributes are not considered to be nodes in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, so they will not be part of the collection that is returned by this method.</source>
          <target state="translated">請注意，屬性不會被視為是中的節點<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>，因此它們不會由這個方法會傳回集合的一部分。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>The following example creates an XML tree, and then iterates through the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.DescendantNodes%2A&gt;</ph> axis.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，並接著逐一<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.DescendantNodes%2A&gt;</ph>軸。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Returns a collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">依照文件順序，傳回這個項目或文件之子代項目的集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>Returns a collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">依照文件順序，傳回這個項目或文件之子代項目的集合。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the descendant elements of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的子代項目。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>Note that this method will not return itself in the resulting <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">請注意，這個方法不會傳回本身在產生<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>See <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A&gt;</ph> if you need to include the current <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in the results.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A&gt;</ph>如果您需要包含目前<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>結果中。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>The following example creates an XML tree, and then uses this axis method to retrieve the descendants.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，並接著會使用此座標軸方法擷取子代。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">依照文件順序，傳回這個文件或項目之已篩選子代項目的集合。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the descendant elements of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that match the specified <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含符合指定 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 之 <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的子代項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The following example prints all descendants of an element.</source>
          <target state="translated">下列範例會列印所有項目的子代。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Gets the first (in document order) child element with the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">取得具有指定之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的第一個 (依據文件順序) 子項目。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that matches the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">符合指定之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>，或者 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Returns <ph id="ph1">`null`</ph> if there is no element with the specified name.</source>
          <target state="translated">傳回<ph id="ph1">`null`</ph>如果沒有具有指定名稱的項目。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Some axis methods return collections of elements or attributes.</source>
          <target state="translated">某些軸方法傳回項目或屬性的集合。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This method returns only a single element.</source>
          <target state="translated">這個方法會傳回單一項目。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This method returns <ph id="ph1">`null`</ph> if the element with the specified name is not found.</source>
          <target state="translated">這個方法會傳回<ph id="ph1">`null`</ph>如果找不到具有指定名稱的項目。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>All of the methods that allow you to construct elements (the constructor of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph>, and so on) accept <ph id="ph3">`null`</ph> as a valid argument.</source>
          <target state="translated">所有的方法可讓您建構元素 (的建構函式<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，<ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph>等等) 接受<ph id="ph3">`null`</ph>做為有效引數。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This allows you to use a convenient idiom: you can call this method as part of functional construction, and the element is added to the XML tree being constructed if and only if the element exists in the source tree.</source>
          <target state="translated">這可讓您使用方便慣用語： 您可以呼叫這個方法之功能的結構的一部分，並僅有的項目存在於來源樹狀結構建構 XML 樹狀結構以新增的項目。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following example shows this idiom.</source>
          <target state="translated">下列範例示範此慣用句。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In contrast to <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>, this method is not an axis method.</source>
          <target state="translated">相對於<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>，這個方法不是座標軸方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>It does not use deferred execution; it simply returns an element when called.</source>
          <target state="translated">不會使用延後的執行。它只會傳回在項目時呼叫。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">下列範例會示範這個方法的兩種用法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In one case, the method finds the element in <ph id="ph1">`srcTree`</ph>.</source>
          <target state="translated">在其中一個案例，此方法會尋找中的項目<ph id="ph1">`srcTree`</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In the second case, the method does not find the element in the source tree, no element is added to <ph id="ph1">`xmlTree`</ph>, and no exception is thrown.</source>
          <target state="translated">在第二個情況下，此方法找不到項目來源樹狀目錄中沒有任何項目加入至<ph id="ph1">`xmlTree`</ph>，而且會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Note that the Visual Basic example uses the child XML property.</source>
          <target state="translated">請注意，Visual Basic 範例會使用 XML 屬性的子系。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>It is also allowable to use the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> method directly in Visual Basic.</source>
          <target state="translated">它也是允許使用<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph>直接在 Visual Basic 中的方法。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Returns a collection of the child elements of this element or document, in document order.</source>
          <target state="translated">依照文件順序，傳回這個項目或文件之子代項目的集合。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>Returns a collection of the child elements of this element or document, in document order.</source>
          <target state="translated">依照文件順序，傳回這個項目或文件之子代項目的集合。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the child elements of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的子項目 (依據文件順序)。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>The following example creates an XML tree, and then selects some elements using this axis method.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，然後選取 使用此座標軸方法的某些項目。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the child elements of this element or document, in document order.</source>
          <target state="translated">依照文件順序，傳回這個項目或文件之已篩選子代項目的集合。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the children of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that have a matching <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, in document order.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含具有符合 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 之 <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的子項目 (依據文件順序)。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The following example creates an XML tree, and then selects several child elements using this axis method.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，然後選取 使用此座標軸方法的數個子項目。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>Get the first child node of this node.</source>
          <target state="translated">取得此節點的第一個子節點。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the first child node of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> 包含 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的第一個節點。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>The following example creates an element that contains child elements.</source>
          <target state="translated">下列範例會建立此項目包含子項目。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>It then gets the first child node of the parent element.</source>
          <target state="translated">然後，它會取得第一個子節點的父項目。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>Get the last child node of this node.</source>
          <target state="translated">取得此節點的最後一個子節點。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the last child node of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> 包含 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的最後一個節點。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>The following example creates an element that contains child elements.</source>
          <target state="translated">下列範例會建立此項目包含子項目。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>It then gets the last child node of the parent element.</source>
          <target state="translated">然後，它會取得最後一個子節點的父項目。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>Returns a collection of the child nodes of this element or document, in document order.</source>
          <target state="translated">依照文件順序，傳回這個項目或文件之子代節點的集合。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the contents of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> 的內容 (根據文件順序)。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>Note that the content does not include attributes.</source>
          <target state="translated">請注意，內容不包含屬性。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, attributes are not considered to be nodes of the tree.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>，屬性不會被視為是樹狀結構節點。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>They are name/value pairs associated with an element.</source>
          <target state="translated">它們是項目相關聯的名稱/值組。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>The following example creates an XML tree with a variety of types of nodes.</source>
          <target state="translated">下列範例會建立與各種不同的節點類型的 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>It then queries this axis method to enumerate and print the nodes.</source>
          <target state="translated">然後，它會查詢此座標軸方法，以列舉和列印節點。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>The following example creates an XML tree that contains a variety of types of nodes.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，其中包含各種類型的節點。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>It then enumerates through portions of the tree, printing the node types.</source>
          <target state="translated">然後列舉部分樹狀目錄中，列印的節點型別。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>Removes the child nodes from this document or element.</source>
          <target state="translated">從此文件或項目中移除子節點。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>If you call this method on an element that contains attributes, this method will not remove the attributes.</source>
          <target state="translated">如果您在包含屬性的項目上呼叫這個方法，這個方法不會移除屬性。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>To remove the attributes of an element, use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAttributes%2A&gt;</ph>.</source>
          <target state="translated">若要移除的項目屬性，請使用<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAttributes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> method has related functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph>方法都有相關功能。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>It removes the child nodes of every node in a collection.</source>
          <target state="translated">它會在集合中移除每個節點的子節點。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>The following example creates an XML tree that contains some child nodes.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，其中包含一些子節點。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>It then calls this method to remove the child nodes.</source>
          <target state="translated">然後，它會呼叫此方法來移除子節點。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">以指定的內容取代這個文件或項目的子節點。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method has snapshot semantics.</source>
          <target state="translated">這個方法具有快照的語意。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">它會先建立一份新的內容。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">然後，它會移除這個節點的所有子節點。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">最後，它會加入新的內容做為子系節點。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">這表示您可以取代子節點本身的子節點上使用查詢。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to replace the contents of one of them with the results of a query.</source>
          <target state="translated">下列範例會建立兩個 XML 樹狀結構，並接著會使用此方法的其中一個內容取代為查詢的結果。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>A content object containing simple content or a collection of content objects that replace the children nodes.</source>
          <target state="translated">包含簡單內容或內容物件 (取代自節點) 集合的內容物件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">以指定的內容取代這個文件或項目的子節點。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This method has snapshot semantics.</source>
          <target state="translated">這個方法具有快照的語意。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">它會先建立一份新的內容。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">然後，它會移除這個節點的所有子節點。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">最後，它會加入新的內容做為子系節點。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">這表示您可以取代子節點本身的子節點上使用查詢。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>The following example creates an XML tree that contains children nodes.</source>
          <target state="translated">下列範例會建立 XML 樹狀結構，其中包含子節點。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It then replaces all of the children nodes with a single element.</source>
          <target state="translated">它然後取代所有子系節點的單一項目。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>To see an example of replacing the children nodes with the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query, see <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.ReplaceNodes%2A&gt;</ph>.</source>
          <target state="translated">若要查看的結果來取代子節點的範例<ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>查詢，請參閱<ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.ReplaceNodes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">內容物件的參數清單。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">以指定的內容取代這個文件或項目的子節點。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">如需可以傳遞至這個函式的有效內容的詳細資訊，請參閱<bpt id="p1">[</bpt>有效內容的 XElement 和 XDocument 物件<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">這個方法會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This method has snapshot semantics.</source>
          <target state="translated">這個方法具有快照的語意。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">它會先建立一份新的內容。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">然後，它會移除這個節點的所有子節點。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">最後，它會加入新的內容做為子系節點。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">這表示您可以取代子節點本身的子節點上使用查詢。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>The following example creates a dictionary and an XML tree.</source>
          <target state="translated">下列範例會建立字典與 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It then queries the dictionary, projects the results to an <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, and replaces the contents of the XML tree with the results of the query.</source>
          <target state="translated">接著查詢字典，若要將結果投射<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，並取代 XML 樹狀結構的內容與查詢的結果。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>