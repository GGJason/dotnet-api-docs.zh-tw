<Type Name="XProcessingInstruction" FullName="System.Xml.Linq.XProcessingInstruction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="45a877da319c315c2b00c27eee097e2dc5ddd060" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37733944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XProcessingInstruction : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XProcessingInstruction extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XProcessingInstruction" />
  <TypeSignature Language="VB.NET" Value="Public Class XProcessingInstruction&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XProcessingInstruction : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XProcessingInstruction = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ac142-101">代表 XML 處理指示。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac142-101">Represents an XML processing instruction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac142-102">您可以使用在 XML 中的處理指示，以指出某些處理器，例如 XSLT 可以處理 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ac142-102">You can use processing instructions in XML to indicate that an XML document can be processed by some processor, such as XSLT.</span></span>  
  
 <span data-ttu-id="ac142-103">處理指示是 XML 樹狀結構中的節點。</span><span class="sxs-lookup"><span data-stu-id="ac142-103">Processing instructions are nodes in the XML tree.</span></span> <span data-ttu-id="ac142-104">正在剖析的 XML 中找到的處理指示時[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]建立<xref:System.Xml.Linq.XProcessingInstruction>節點。</span><span class="sxs-lookup"><span data-stu-id="ac142-104">When a processing instruction is found in the XML being parsed, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] creates an <xref:System.Xml.Linq.XProcessingInstruction> node.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ac142-105">初始化 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-105">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XProcessingInstruction (System.Xml.Linq.XProcessingInstruction other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XProcessingInstruction other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XProcessingInstruction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XProcessingInstruction(System::Xml::Linq::XProcessingInstruction ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XProcessingInstruction : System.Xml.Linq.XProcessingInstruction -&gt; System.Xml.Linq.XProcessingInstruction" Usage="new System.Xml.Linq.XProcessingInstruction other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XProcessingInstruction" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ac142-106">要從中複製的 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-106">The <see cref="T:System.Xml.Linq.XProcessingInstruction" /> node to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac142-107">初始化 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-107">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac142-108">這個建構函式主要在內部用來建立 XML 樹狀結構的深層複本。</span><span class="sxs-lookup"><span data-stu-id="ac142-108">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XProcessingInstruction : string * string -&gt; System.Xml.Linq.XProcessingInstruction" Usage="new System.Xml.Linq.XProcessingInstruction (target, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ac142-109">
            <see cref="T:System.String" />，其中包含這個 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 的目標應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-109">A <see cref="T:System.String" /> containing the target application for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="ac142-110">這個 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 的字串資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-110">The string data for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac142-111">初始化 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-111">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac142-112">下列範例會建立<xref:System.Xml.Linq.XProcessingInstruction>，並指定目標和處理指示的字串資料。</span><span class="sxs-lookup"><span data-stu-id="ac142-112">The following example creates an <xref:System.Xml.Linq.XProcessingInstruction>, and specifies a target and the string data for the processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi = new XProcessingInstruction("xml-stylesheet", "type='text/xsl' href='hello.xsl'");  
Console.WriteLine(pi);  
```  
  
```vb  
Dim pi As XProcessingInstruction = <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
Console.WriteLine(pi)  
```  
  
 <span data-ttu-id="ac142-113">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="ac142-113">This example produces the following output:</span></span>  
  
```  
<?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ac142-114">
            <paramref name="target" /> 或 <paramref name="data" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-114">The <paramref name="target" /> or <paramref name="data" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac142-115">
            <paramref name="target" /> 未遵循 XML 名稱的條件約束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-115">The <paramref name="target" /> does not follow the constraints of an XML name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : string with get, set" Usage="System.Xml.Linq.XProcessingInstruction.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac142-116">取得或設定這個處理指示的字串值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-116">Gets or sets the string value of this processing instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac142-117">
            <see cref="T:System.String" />，其中包含這個處理指示的字串值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-117">A <see cref="T:System.String" /> that contains the string value of this processing instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac142-118">您可以使用這個屬性來修改 XML 樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="ac142-118">You can use this property to modify an XML tree.</span></span> <span data-ttu-id="ac142-119">這個屬性會導致發生的事件。</span><span class="sxs-lookup"><span data-stu-id="ac142-119">This property will cause events to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac142-120">下列範例會使用<xref:System.Xml.Linq.XProcessingInstruction.Data%2A>屬性來擷取處理指示的字串值。</span><span class="sxs-lookup"><span data-stu-id="ac142-120">The following example uses the <xref:System.Xml.Linq.XProcessingInstruction.Data%2A> property to retrieve the string value of a processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type='text/xsl' href='hello.xsl'");  
Console.WriteLine(pi.Data);  
pi.Data = "type='text/xsl' href='xform.xsl'";  
Console.WriteLine(pi.Data);  
```  
  
```vb  
Dim pi As XProcessingInstruction = <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
Console.WriteLine(pi.Data)  
pi.Data = "type='text/xsl' href='xform.xsl'"  
Console.WriteLine(pi.Data)  
```  
  
 <span data-ttu-id="ac142-121">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="ac142-121">This example produces the following output:</span></span>  
  
```  
type='text/xsl' href='hello.xsl'  
type='text/xsl' href='xform.xsl'  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ac142-122">字串 <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-122">The string <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XProcessingInstruction.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac142-123">取得此節點的節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-123">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac142-124">節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-124">The node type.</span>
          </span>
          <span data-ttu-id="ac142-125">對於 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-125">For <see cref="T:System.Xml.Linq.XProcessingInstruction" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac142-126">因為所有的類別，衍生自<xref:System.Xml.Linq.XObject>包含<xref:System.Xml.Linq.XObject.NodeType%2A>屬性，您可以撰寫程式碼的運作方式的具體子類別集合<xref:System.Xml.Linq.XObject>。</span><span class="sxs-lookup"><span data-stu-id="ac142-126">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="ac142-127">集合中每個節點的節點類型可以然後測試您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="ac142-127">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac142-128">下列範例會建立處理指示，，，然後列印它的節點型別。</span><span class="sxs-lookup"><span data-stu-id="ac142-128">The following example creates a processing instruction, and then prints its node type.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\"");  
Console.WriteLine(pi.NodeType);  
```  
  
```vb  
Dim pi As XProcessingInstruction = _  
    <?xml-stylesheet type="text/xsl" href="hello.xsl"?>  
Console.WriteLine(pi.NodeType.ToString)  
```  
  
 <span data-ttu-id="ac142-129">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="ac142-129">This example produces the following output:</span></span>  
  
```  
ProcessingInstruction  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Xml.Linq.XProcessingInstruction.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ac142-130">取得或設定字串，這個字串包含這個處理指示的目標應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-130">Gets or sets a string containing the target application for this processing instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ac142-131">
            <see cref="T:System.String" />，其中包含這個處理指示的目標應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-131">A <see cref="T:System.String" /> containing the target application for this processing instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac142-132">下列範例會使用<xref:System.Xml.Linq.XProcessingInstruction.Target%2A>屬性來擷取處理指示的目標應用程式。</span><span class="sxs-lookup"><span data-stu-id="ac142-132">The following example uses the <xref:System.Xml.Linq.XProcessingInstruction.Target%2A> property to retrieve the target application for a processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\"");  
Console.WriteLine(pi.Target);  
```  
  
```vb  
Dim pi As XProcessingInstruction = _  
    <?xml-stylesheet type="text/xsl" href="hello.xsl"?>  
Console.WriteLine(pi.Target)  
```  
  
 <span data-ttu-id="ac142-133">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="ac142-133">This example produces the following output:</span></span>  
  
```  
xml-stylesheet  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ac142-134">字串 <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-134">The string <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac142-135">
            <paramref name="target" /> 未遵循 XML 名稱的條件約束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-135">The <paramref name="target" /> does not follow the constraints of an XML name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xProcessingInstruction.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="ac142-136">向其中寫入這個處理指示的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-136">The <see cref="T:System.Xml.XmlWriter" /> to write this processing instruction to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac142-137">將這個處理指示寫入 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac142-137">Writes this processing instruction to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac142-138">這個方法主要是在內部由寫入至 XML 樹狀結構的方法<xref:System.Xml.XmlWriter>。</span><span class="sxs-lookup"><span data-stu-id="ac142-138">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xProcessingInstruction.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>