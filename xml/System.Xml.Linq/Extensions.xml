<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Extensions.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c878700efec059064bc64b4562927d67358dfeb2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c878700efec059064bc64b4562927d67358dfeb2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Contains the LINQ to XML extension methods.</source>
          <target state="translated">包含 LINQ to XML 擴充方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>Most of the <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> extension methods are axis methods that are used in <ph id="ph2">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> queries.</source>
          <target state="translated">大部分的<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>擴充方法是使用中的座標軸方法<ph id="ph2">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>查詢。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>The methods in this class operate on collections and return collections.</source>
          <target state="translated">這個類別中的方法的集合上運算，然後傳回集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>These methods enumerate the source collection, call the appropriate axis method on each item in the collection, and concatenate the results.</source>
          <target state="translated">這些方法會列舉來源集合、 在集合中，每個項目上呼叫適當的座標軸方法，並將結果串連。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>The two <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> extension methods are not axis methods, however.</source>
          <target state="translated">這兩個<ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph>擴充方法不是座標軸方法，但是。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>These methods remove attributes or nodes from the XML tree.</source>
          <target state="translated">這些方法會移除屬性或節點從 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>Note that there is another category of axis methods, implemented in the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph> classes.</source>
          <target state="translated">請注意，有另一個類別中實作的座標軸方法的<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>，和<ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>These other axis methods operate on a single object, and return a collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph> objects.</source>
          <target state="translated">這類其他座標軸方法處理單一物件，並傳回集合<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，或<ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>All of the axis extension methods use deferred execution.</source>
          <target state="translated">所有座標軸擴充方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Returns a collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個節點祖系的項目集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>If multiple nodes in the source collection have the same ancestor, the ancestor will be included multiple times in the result collection.</source>
          <target state="translated">如果來源集合中的多個節點有相同的上階，祖系將會包含多次結果集合中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>To avoid this, use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph> method.</source>
          <target state="translated">若要避免這個問題，請使用<ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個節點祖系的項目集合。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the ancestors of every node in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合中每個節點的祖系。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>If multiple nodes in the source collection have the same ancestor, the ancestor will be included multiple times in the result collection.</source>
          <target state="translated">如果來源集合中的多個節點有相同的上階，祖系將會包含多次結果集合中。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>To avoid this, use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph> method.</source>
          <target state="translated">若要避免這個問題，請使用<ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example retrieves a collection of the great grandchildren elements.</source>
          <target state="translated">下列範例會擷取絕佳的孫系項目的集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>It then uses this axis method to retrieve all ancestors of all elements in the collection.</source>
          <target state="translated">然後，它會使用此座標軸方法來擷取所有上階的集合中的所有項目。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個節點祖系的已篩選項目集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the ancestors of every node in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合中每個節點的祖系。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>If multiple nodes in the source collection have the same ancestor with a matching <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, the ancestor will be included multiple times in the result collection.</source>
          <target state="translated">如果來源集合中的多個節點有相同的上階符合<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>，祖系將結果集合中包含多次。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The following example retrieves a collection of the great grandchildren elements.</source>
          <target state="translated">下列範例會擷取絕佳的孫系項目的集合。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>It then uses this axis method to retrieve all ancestors of all elements in the collection that match a specified <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">它接著會使用此座標軸方法來擷取所有上階的集合中所有符合指定的項目<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目的項目集合，以及來源集合中每個項目的祖系。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>If multiple nodes in the source collection have the same ancestor, the ancestor will be included multiple times in the result collection.</source>
          <target state="translated">如果來源集合中的多個節點有相同的上階，祖系將會包含多次結果集合中。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>To avoid this, use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph> method.</source>
          <target state="translated">若要避免這個問題，請使用<ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目的項目集合，以及來源集合中每個項目的祖系。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含來源集合中的每個項目，以及來源集合中每個項目的祖系。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>If multiple nodes in the source collection have the same ancestor, the ancestor will be included multiple times in the result collection.</source>
          <target state="translated">如果來源集合中的多個節點有相同的上階，祖系將會包含多次結果集合中。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>To avoid this, use the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph> method.</source>
          <target state="translated">若要避免這個問題，請使用<ph id="ph1">&lt;xref:System.Linq.Enumerable.Distinct%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>The following example retrieves a collection of the great grandchildren elements.</source>
          <target state="translated">下列範例會擷取絕佳的孫系項目的集合。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>It then uses this axis method to retrieve all ancestors and self of all elements in the collection.</source>
          <target state="translated">然後，它會使用此座標軸方法來擷取所有上階和自我集合中的所有項目。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目的已篩選項目集合，以及來源集合中每個項目的祖系。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含來源集合中的每個項目，以及來源集合中每個項目的祖系。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>If multiple nodes in the source collection have the same ancestor with a matching <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, the ancestor will be included multiple times in the result collection.</source>
          <target state="translated">如果來源集合中的多個節點有相同的上階符合<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>，祖系將結果集合中包含多次。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The following example retrieves a collection of the great grandchildren elements.</source>
          <target state="translated">下列範例會擷取絕佳的孫系項目的集合。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>It then uses this axis method to retrieve all self and ancestors of all elements in the collection that match a specified <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">它接著會使用此座標軸方法來擷取所有自我以及集合中所有符合指定的項目上階<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Returns a collection of the attributes of every element in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目的屬性集合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>Visual Basic users can use the integrated attribute axis to retrieve attributes with a particular name from a collection of elements.</source>
          <target state="translated">Visual Basic 使用者可以使用整合式的屬性軸擷取具有特定名稱的屬性集合中的項目。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of the attributes of every element in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目的屬性集合。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the attributes of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>，其中包含來源集合中每個項目的屬性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Note that unlike some other XML programming interfaces, in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, namespaces are surfaced as attributes.</source>
          <target state="translated">請注意，不同於某些其他的 XML 程式設計介面，在<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>，命名空間當成屬性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Although Visual Basic users can use the integrated attribute axis to retrieve attributes with a specified name from a collection of elements, there is no integrated Visual Basic axis to retrieve all attributes of all elements in a collection.</source>
          <target state="translated">Visual Basic 使用者可以使用整合式的屬性軸，以擷取具有指定名稱的屬性集合中的項目，但是沒有任何整合的 Visual Basic 軸來擷取集合中的所有項目的所有屬性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>The following example retrieves a collection of elements, and then retrieves a collection of all attributes of all elements in the collection.</source>
          <target state="translated">下列範例會擷取項目集合，並接著會擷取所有集合中的所有項目之屬性的集合。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Note that the resulting collection includes only the attributes of the <ph id="ph1">`Child1`</ph> and <ph id="ph2">`Child2`</ph> elements, and not the attributes of the <ph id="ph3">`Root`</ph> element.</source>
          <target state="translated">請注意，產生的集合包含的屬性<ph id="ph1">`Child1`</ph>和<ph id="ph2">`Child2`</ph>項目和不屬性<ph id="ph3">`Root`</ph>項目。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Note that the namespace attribute is returned by this method.</source>
          <target state="translated">請注意，這個方法所傳回的命名空間屬性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Note that the namespace attribute is included in the returned collection.</source>
          <target state="translated">請注意，命名空間屬性會包含在傳回的集合。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the attributes of every element in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目之屬性的已篩選集合。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains a filtered collection of the attributes of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>，其中包含來源集合中每個項目之屬性的已篩選集合。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Note that unlike some other XML programming interfaces, in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, namespaces are surfaced as attributes.</source>
          <target state="translated">請注意，不同於某些其他的 XML 程式設計介面，在<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>，命名空間當成屬性。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The following example retrieves a collection of elements, which in this case includes the <ph id="ph1">`Child1`</ph> and <ph id="ph2">`Child2`</ph> elements.</source>
          <target state="translated">下列範例會擷取在此情況下包含項目集合<ph id="ph1">`Child1`</ph>和<ph id="ph2">`Child2`</ph>項目。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>It then retrieves all attributes of that child collection with a name of <ph id="ph1">`Att1`</ph>.</source>
          <target state="translated">接著會擷取所有屬性的子集合的名稱為<ph id="ph1">`Att1`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the descendant nodes of every document and element in the source collection.</source>
          <target state="translated">傳回來源集合中每個文件和項目之子代節點的集合。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> of the descendant nodes of every document and element in the source collection.</source>
          <target state="translated">來源集合中每個文件和項目的子代節點之 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This axis extension method is used on <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.</source>
          <target state="translated">這個座標軸擴充方法適用於<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Both of these types derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>, so this method operates on an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id="ph3">&lt;xref:System.Xml.Linq.XContainer&gt;</ph> that contains the source collection.</source>
          <target state="translated">這兩種類型衍生自<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>，所以此方法操作所在<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>的<ph id="ph3">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Although Visual Basic has an integrated XML axis for descendant elements, there is no integrated axis for descendant nodes, so Visual Basic users must use this axis method explicitly.</source>
          <target state="translated">雖然 Visual Basic 具有整合式的 XML 座標軸的子代項目，但沒有整合的軸的子系的節點，因此 Visual Basic 使用者必須明確地使用此座標軸方法。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example retrieves a collection of two elements, and then retrieves a collection of all descendant nodes for every element in the source collection.</source>
          <target state="translated">下列範例會擷取兩個元素集合，並接著會擷取每個項目的來源集合中的所有子系節點的集合。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Note that the attribute of the <ph id="ph1">`GrandChild`</ph> element is not surfaced as a node.</source>
          <target state="translated">請注意，屬性<ph id="ph1">`GrandChild`</ph>項目不會顯示為節點。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目的節點集合，以及來源集合中每個項目的子代節點。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains every element in the source collection, and the descendant nodes of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，包含來源集合中的每個項目，以及來源集合中每個項目的子代節點。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Although Visual Basic has an integrated XML axis for descendant elements, there is no integrated axis for descendant nodes, so Visual Basic users must use this axis method explicitly.</source>
          <target state="translated">雖然 Visual Basic 具有整合式的 XML 座標軸的子代項目，但沒有整合的軸的子系的節點，因此 Visual Basic 使用者必須明確地使用此座標軸方法。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Returns a collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目和文件之子代項目的項目集合。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>Visual Basic users can use the integrated XML descendant axis to retrieve the descendant elements of a collection.</source>
          <target state="translated">Visual Basic 使用者可以使用整合式的 XML 子代軸來擷取集合的子系項目。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>However, the integrated axis only retrieves descendants with a specified name.</source>
          <target state="translated">不過，在整合式的軸只會擷取具有指定名稱的子代。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>If Visual Basic users want to retrieve all descendants, then they must use this axis method explicitly.</source>
          <target state="translated">如果 Visual Basic 使用者想要擷取所有子系，然後他們必須使用此座標軸方法明確。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目和文件之子代項目的項目集合。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合中每個項目和文件的子代項目。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Visual Basic users can use the integrated XML descendant axis to retrieve the descendant elements of a collection.</source>
          <target state="translated">Visual Basic 使用者可以使用整合式的 XML 子代軸來擷取集合的子系項目。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>However, the integrated axis only retrieves descendants with a specified name.</source>
          <target state="translated">不過，在整合式的軸只會擷取具有指定名稱的子代。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>If Visual Basic users want to retrieve all descendants, then they must use this axis method explicitly.</source>
          <target state="translated">如果 Visual Basic 使用者想要擷取所有子系，然後他們必須使用此座標軸方法明確。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example retrieves a collection of elements, and then uses this axis method to retrieve all descendent elements of every item in the collection of elements.</source>
          <target state="translated">下列範例會擷取項目集合，並接著會使用此座標軸方法擷取的項目集合中每個項目的所有子代項目。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">傳回已篩選的項目集合，其中包含來源集合中每個項目和文件的子代項目。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合中每個項目和文件的子代項目。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Visual Basic users can use the <bpt id="p1">[</bpt>Language-Integrated Axes in Visual Basic (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/4143c385-eb50-4286-a7fd-a50f466c7af0)</ept> instead of using this axis method explicitly.</source>
          <target state="translated">Visual Basic 使用者可以使用<bpt id="p1">[</bpt>在 Visual Basic (LINQ to XML) 中的 Language-Integrated 座標軸<ept id="p1">](http://msdn.microsoft.com/library/4143c385-eb50-4286-a7fd-a50f466c7af0)</ept>而不是明確地使用此座標軸方法。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The following example retrieves a collection of two elements, and then retrieves a collection of all descendants of the two elements that have the specified element name.</source>
          <target state="translated">下列範例會擷取兩個元素集合，並接著會擷取具有指定的項目名稱的兩個元素的所有下階的集合。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Returns a collection of every element in the source collection, and all descendant elements for every element in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目的集合，以及來源集合中每個項目的所有子代項目。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>Although Visual Basic has an integrated XML axis for descendant elements, there is no integrated axis that has the semantics of this method.</source>
          <target state="translated">雖然 Visual Basic 有整合式的 XML 座標軸的子代項目，但是這個方法的語意沒有整合的軸。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目的項目集合，以及來源集合中每個項目的子代項目。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains every element in the source collection, and the descendent elements of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含來源集合中的每個項目，以及來源集合中每個項目的子代項目。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Although Visual Basic has an integrated XML axis for descendant elements, there is no integrated axis that has the semantics of this method, so Visual Basic users must use this axis method explicitly.</source>
          <target state="translated">雖然 Visual Basic 具有整合式的 XML 座標軸的子代項目，但具有此方法的語意，因此 Visual Basic 使用者必須明確地使用此座標軸方法沒有整合的軸。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection.</source>
          <target state="translated">傳回包含來源集合中每個項目的已篩選項目集合，以及來源集合中每個項目的子代。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains every element in the source collection, and the descendents of every element in the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，包含來源集合中每個項目的項目集合，以及來源集合中每個項目的子代。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Although Visual Basic has an integrated XML axis for descendant elements, there is no integrated axis that has the semantics of this method, so Visual Basic users must use this axis method explicitly.</source>
          <target state="translated">雖然 Visual Basic 具有整合式的 XML 座標軸的子代項目，但具有此方法的語意，因此 Visual Basic 使用者必須明確地使用此座標軸方法沒有整合的軸。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.Extensions">
          <source>Returns a collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目和文件的子項目集合。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>Visual Basic contains an integrated elements axis that allows you to find all child elements with a specified <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> for every element in the source collection.</source>
          <target state="translated">Visual Basic 包含整合的項目座標軸，可讓您尋找與指定的所有子項目<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>來源集合中每個項目。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.Extensions">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目和文件的子項目集合。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of the child elements of every element or document in the source collection.</source>
          <target state="translated">來源集合中每個項目或文件的子項目之 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Although Visual Basic contains an integrated elements axis that allows you to find all child elements with a specified <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> for every element in the source collection, there is no integrated elements axis that allows you to retrieve a collection of every child element for every element in the source collection.</source>
          <target state="translated">雖然 Visual Basic 包含整合的項目座標軸，可讓您尋找與指定的所有子項目<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>來源集合中每個項目，則會有可讓您擷取的集合沒有整合式項目軸每個來源集合中每個元素的子元素。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example retrieves a collection of elements with the element name of <ph id="ph1">`Child`</ph>.</source>
          <target state="translated">下列範例會擷取項目集合的項目名稱與<ph id="ph1">`Child`</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>It then uses this axis method to retrieve all child elements of the collection.</source>
          <target state="translated">然後，它會使用此座標軸方法來擷取集合中的所有子項目。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">要比對的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">傳回來源集合中每個項目和文件的已篩選子項目集合。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of the child elements of every element and document in the source collection.</source>
          <target state="translated">來源集合中每個項目和文件之 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">集合中只會包含具有相符之 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Visual Basic users can use the integrated elements axis to retrieve the child elements of every element in a collection.</source>
          <target state="translated">Visual Basic 使用者可以使用整合式項目軸擷取每個項目的集合中的子系項目。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This extension method is useful when you want to retrieve all elements with a specified name at a particular depth.</source>
          <target state="translated">當您想要擷取具有指定之名稱的特定深度的所有項目，這個擴充方法才有用。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This is easy if the document is very regular, but if the document is irregular, it can be a bit more difficult.</source>
          <target state="translated">如果文件是非常一般，但如果文件是異常，它可以比較困難，這很容易。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>In the following example, we want to retrieve all <ph id="ph1">`aaa`</ph> elements that are children of <ph id="ph2">`Item`</ph> elements.</source>
          <target state="translated">在下列範例中，我們想要擷取所有<ph id="ph1">`aaa`</ph>子系的項目<ph id="ph2">`Item`</ph>項目。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>A given <ph id="ph1">`Item`</ph> element may or may not contain an <ph id="ph2">`aaa`</ph> element.</source>
          <target state="translated">給定<ph id="ph1">`Item`</ph>項目可能會或可能不包含<ph id="ph2">`aaa`</ph>項目。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This is easily accomplished using this extension method, as follows:</source>
          <target state="translated">這是輕鬆地使用來完成這個擴充方法，如下所示：</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">以下是相同的範例，但在此情況下 XML 位於命名空間。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理 XML 命名空間<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.</source>
          <target state="translated">傳回包含來源集合中所有節點的節點集合，依據文件順序來排序。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains all nodes in the source collection, sorted in document order.</source>
          <target state="translated">包含來源集合中所有節點 (依據文件順序排序) 之 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This axis method uses deferred execution.</source>
          <target state="translated">這個座標軸方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>However, it first enumerates its source collection, the sorts the nodes in document order, and then yields the results.</source>
          <target state="translated">不過，首先會列舉其來源集合、 排序文件順序中的節點，然後產生結果。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example creates a collection of nodes that are not in document order, and then uses this axis to create a new collection where the nodes are in document order.</source>
          <target state="translated">下列範例建立的文件順序中的節點集合，然後此軸使用來建立新的集合，節點是在文件順序。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the child nodes of every document and element in the source collection.</source>
          <target state="translated">傳回來源集合中每個文件和項目的子節點集合。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> of the child nodes of every document and element in the source collection.</source>
          <target state="translated">來源集合中每個文件和項目的子節點之 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method uses deferred execution.</source>
          <target state="translated">這個方法會使用延後的執行。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example retrieves all of the child nodes for every node in a collection of elements with the name of <ph id="ph1">`Child`</ph>.</source>
          <target state="translated">下列範例會擷取所有的項目集合的名稱取代集中每個節點的子節點<ph id="ph1">`Child`</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>Removes every attribute in the source collection from its parent element.</source>
          <target state="translated">在來源集合中，從每一個屬性的父項目移除這些屬性。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>This method uses snapshot semantics—that is, it copies the attributes in the source collection to a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601?displayProperty=nameWithType&gt;</ph> before disconnecting them from their parents.</source>
          <target state="translated">這個方法會使用快照集的語意，也就是說，它將屬性複製到來源集合中<ph id="ph1">&lt;xref:System.Collections.Generic.List%601?displayProperty=nameWithType&gt;</ph>之前中斷其父系。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>This is required to avoid issues with mixed imperative/declarative code.</source>
          <target state="translated">如此才能避免具有混合的宣告式命令式/程式碼的問題。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>For more information, see <bpt id="p1">[</bpt>Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>混合宣告式程式碼/命令式程式碼 Bug (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>The following example retrieves a collection of attributes, and then calls this method to remove them from their parent elements.</source>
          <target state="translated">下列範例擷取的屬性集合，並接著呼叫這個方法，從其父項目移除它們。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">中的物件類型<bpt id="p1">&lt;c&gt;</bpt>來源<ept id="p1">&lt;/c&gt;</ept>，受限於<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，其中包含來源集合。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Removes every node in the source collection from its parent node.</source>
          <target state="translated">在來源集合中，從每一個節點的父節點移除這些節點。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method uses snapshot semantics—that is, it copies the attributes in the source collection to a <ph id="ph1">`List&lt;T&gt;`</ph> before disconnecting them from their parents.</source>
          <target state="translated">這個方法會使用快照集的語意，也就是說，它將屬性複製到來源集合中<ph id="ph1">`List&lt;T&gt;`</ph>之前中斷其父系。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This is required to avoid issues with mixed imperative/declarative code.</source>
          <target state="translated">如此才能避免具有混合的宣告式命令式/程式碼的問題。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>混合宣告式程式碼/命令式程式碼 Bug (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following example retrieves a collection of elements.</source>
          <target state="translated">下列範例會擷取項目的集合。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>It then calls this method to remove the elements from their parent element.</source>
          <target state="translated">然後，它會呼叫這個方法，以從其父項目移除的項目。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>