<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XComment.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50fc0b2083b9458cff3e6453ea367a679830a8925.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fc0b2083b9458cff3e6453ea367a679830a8925</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XComment">
          <source>Represents an XML comment.</source>
          <target state="translated">代表 XML 註解。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XComment">
          <source>You can add an XML comment as a child node of an element.</source>
          <target state="translated">您可以加入 XML 註解的元素的子節點。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XComment">
          <source>You can also add an XML comment to an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> as a sibling of the root element node.</source>
          <target state="translated">您也可以加入 XML 註解<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>為根項目節點的同層級。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XComment">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>A string that contains the contents of the new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> object.</source>
          <target state="translated">字串，包含新 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> 物件的內容。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> class with the specified string content.</source>
          <target state="translated">使用指定的字串內容，初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>The following example creates an element that contains a comment as a child node.</source>
          <target state="translated">下列範例會建立包含註解做為子節點的項目。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> node to copy from.</source>
          <target state="translated">要從中複製的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> 節點。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> class from an existing comment node.</source>
          <target state="translated">從現有的註解節點，初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">這個建構函式主要在內部用來進行 XML 樹狀結構的深層複本。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>The <ph id="ph1">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">取得此節點的節點類型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>The node type.</source>
          <target state="translated">節點類型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Comment" /&gt;</ph>.</source>
          <target state="translated">對於 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> 物件，此值為 <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Comment" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">因為所有的類別，衍生自<ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>包含<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph>屬性，您可以撰寫程式碼的運作方式的具體子類別的集合<ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">然後在集合中每個節點的節點型別可以測試您的程式碼。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>The following example creates a comment node and prints its node type.</source>
          <target state="translated">下列範例會建立註解節點，並列印其節點型別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XComment.Value">
          <source>Gets or sets the string value of this comment.</source>
          <target state="translated">取得或設定這個註解的字串值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the string value of this comment.</source>
          <target state="translated">包含此註解之字串值的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>Unlike <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, you cannot retrieve the contents of a comment by casting it to a string.</source>
          <target state="translated">不同於<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，您無法將它轉型為字串，以擷取註解的內容。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>Instead, you must use this property to retrieve the contents.</source>
          <target state="translated">相反地，您必須使用這個屬性來擷取內容。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">設定這個屬性將會引發<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>The following example creates a comment node.</source>
          <target state="translated">下列範例會建立註解節點。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>It then retrieves the contents of the comment node.</source>
          <target state="translated">然後，它會擷取註解節點的內容。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XComment.Value">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">此方法將寫入其中的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
          <source>Write this comment to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">將此註解寫入 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">這個方法主要供內部寫入至 XML 樹狀結構的方法<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>