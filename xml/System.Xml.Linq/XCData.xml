<Type Name="XCData" FullName="System.Xml.Linq.XCData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d893c93b876fdf3006f16ab750c569e9e4ec6bb7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30718392" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XCData : System.Xml.Linq.XText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XCData extends System.Xml.Linq.XText" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XCData" />
  <TypeSignature Language="VB.NET" Value="Public Class XCData&#xA;Inherits XText" />
  <TypeSignature Language="C++ CLI" Value="public ref class XCData : System::Xml::Linq::XText" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XText</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="886e5-101">代表包含 CDATA 的文字節點。</span>
      <span class="sxs-lookup">
        <span data-stu-id="886e5-101">Represents a text node that contains CDATA.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="886e5-102">XML CDATA 區段可讓您將幾乎任何的任意字串儲存為 XML 項目的內容。</span><span class="sxs-lookup"><span data-stu-id="886e5-102">An XML CDATA section allows you to store almost any arbitrary string as the contents of an XML element.</span></span> <span data-ttu-id="886e5-103">此類別代表 CDATA 文字節點的 XML 概念。</span><span class="sxs-lookup"><span data-stu-id="886e5-103">This class represents the XML concept of a CDATA text node.</span></span>  
  
 <span data-ttu-id="886e5-104">此類別衍生自<xref:System.Xml.Linq.XText>，用來表示 XML 文字。</span><span class="sxs-lookup"><span data-stu-id="886e5-104">This class derives from <xref:System.Xml.Linq.XText>, which represents XML text.</span></span> <span data-ttu-id="886e5-105">CDATA 區段是特殊的 XML 文字。</span><span class="sxs-lookup"><span data-stu-id="886e5-105">CDATA sections are special cases of XML text.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="886e5-106">初始化 <see cref="T:System.Xml.Linq.XCData" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XCData (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XCData(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="886e5-107">包含 <see cref="T:System.Xml.Linq.XCData" /> 節點值的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-107">A string that contains the value of the <see cref="T:System.Xml.Linq.XCData" /> node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="886e5-108">初始化 <see cref="T:System.Xml.Linq.XCData" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-108">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="886e5-109">下列範例會建立包含 CDATA 節點的項目。</span><span class="sxs-lookup"><span data-stu-id="886e5-109">The following example creates an element that contains a CDATA node.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XCData("Some content")  
);  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>  
                           <![CDATA[Some content]]]><![CDATA[]>  
                       </Root>  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="886e5-110">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="886e5-110">This example produces the following output:</span></span>  
  
```  
<Root><![CDATA[Some content]]]><![CDATA[]></Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XCData (System.Xml.Linq.XCData other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XCData other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XCData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XCData(System::Xml::Linq::XCData ^ other);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XCData" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="886e5-111">要從中複製的 <see cref="T:System.Xml.Linq.XCData" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-111">The <see cref="T:System.Xml.Linq.XCData" /> node to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="886e5-112">初始化 <see cref="T:System.Xml.Linq.XCData" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-112">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="886e5-113">這個建構函式主要在內部用來進行 XML 樹狀結構的深層複本。</span><span class="sxs-lookup"><span data-stu-id="886e5-113">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XCData.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="886e5-114">取得此節點的節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-114">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="886e5-115">節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-115">The node type.</span>
          </span>
          <span data-ttu-id="886e5-116">對於 <see cref="T:System.Xml.Linq.XCData" /> 物件，此值為 <see cref="F:System.Xml.XmlNodeType.CDATA" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-116">For <see cref="T:System.Xml.Linq.XCData" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.CDATA" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="886e5-117">因為所有的類別，衍生自<xref:System.Xml.Linq.XObject>包含<xref:System.Xml.Linq.XObject.NodeType%2A>屬性，您可以撰寫程式碼的運作方式的具體子類別的集合<xref:System.Xml.Linq.XObject>。</span><span class="sxs-lookup"><span data-stu-id="886e5-117">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="886e5-118">然後在集合中每個節點的節點型別可以測試您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="886e5-118">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="886e5-119">下列範例會建立 XML 樹狀結構，其中包含各種類型的節點。</span><span class="sxs-lookup"><span data-stu-id="886e5-119">The following example creates an XML tree that contains various types of nodes.</span></span> <span data-ttu-id="886e5-120">接著，逐一查看樹狀結構，並列印每個節點的節點類型。</span><span class="sxs-lookup"><span data-stu-id="886e5-120">It then iterates through the tree, and prints the node type of each node.</span></span>  
  
```csharp  
// Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
XDocument xmlTree = new XDocument(  
    new XComment("a comment"),  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\""),  
    new XElement("Root",  
        new XAttribute("Att", "attContent"),  
        new XElement("Child1",  
            new XCData("CDATA content")  
        ),  
        new XElement("Child2",  
            new XText("Text content")  
        )  
    )  
);  
  
foreach (XNode node in xmlTree.DescendantNodes())  
{  
    Console.WriteLine(node.NodeType);  
    if (node.NodeType == XmlNodeType.Element)  
    {  
        foreach (XAttribute att in ((XElement)node).Attributes())  
            Console.WriteLine(att.NodeType);  
    }  
}  
```  
  
```vb  
Dim xmlTree As XDocument = _   
    <?xml version="1.0" encoding="utf-8"?>  
        <!--a comment-->  
        <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
        <Root Att="attContent">  
            <Child1><![CDATA[CDATA content]]]><![CDATA[]></Child1>  
            <Child2>Text content</Child2>  
        </Root>  
  
' Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
For Each node As XNode In xmlTree.DescendantNodes  
    Console.WriteLine(node.NodeType.ToString())  
    If node.NodeType = XmlNodeType.Element Then  
        For Each att In DirectCast(node, XElement).Attributes  
            Console.WriteLine(att.NodeType.ToString())  
        Next  
    End If  
Next  
  
```  
  
 <span data-ttu-id="886e5-121">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="886e5-121">This example produces the following output:</span></span>  
  
```  
Comment  
ProcessingInstruction  
Element  
Attribute  
Element  
CDATA  
Element  
Text  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="886e5-122">此方法將寫入其中的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-122">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="886e5-123">將這個 CDATA 物件寫入 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="886e5-123">Writes this CDATA object to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="886e5-124">這個方法主要供內部寫入至 XML 樹狀結構的方法<xref:System.Xml.XmlWriter>。</span><span class="sxs-lookup"><span data-stu-id="886e5-124">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>