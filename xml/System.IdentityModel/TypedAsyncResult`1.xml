<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypedAsyncResult`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f3b78f94e783d490a1ab918e17ca5b6ba36d5969.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3b78f94e783d490a1ab918e17ca5b6ba36d5969</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.TypedAsyncResult`1">
          <source>The type of the result.</source>
          <target state="translated">結果的型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.TypedAsyncResult`1">
          <source>A concrete implementation of <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> that will wrap the result <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> and return it when the <ph id="ph3">&lt;see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 的具象實作，這個實作將會在呼叫 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 方法時，包裝結果 <ph id="ph3">&lt;see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /&gt;</ph> 並將其傳回。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.TypedAsyncResult`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.TypedAsyncResult`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.TypedAsyncResult`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">使用者定義的物件，這個物件符合或包含非同步作業的相關資訊。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.TypedAsyncResult`1" /&gt;</ph> class that has a state object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.TypedAsyncResult`1" /&gt;</ph> 類別的新執行個體，這個執行個體具有狀態物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)">
          <source>Use this constructor if your <ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> instance does not need a callback delegate.</source>
          <target state="translated">使用這個建構函式，如果您<ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph>執行個體不需要的回呼委派。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous operation completes.</source>
          <target state="translated">在非同步作業完成時所呼叫的方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">使用者定義的物件，這個物件符合或包含非同步作業的相關資訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.TypedAsyncResult`1" /&gt;</ph> class that has a callback delegate and a state object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.TypedAsyncResult`1" /&gt;</ph> 類別的新執行個體，這個執行個體具有回呼委派和狀態物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.TypedAsyncResult`1">
          <source>Called to complete the asynchronous operation.</source>
          <target state="translated">呼叫以完成非同步作業。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)">
          <source>The result to be wrapped.</source>
          <target state="translated">要包裝的結果。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果非同步作業同步完成，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)">
          <source>Call this version of complete when your asynchronous operation is complete and no exception was encountered.</source>
          <target state="translated">當非同步作業已完成且未發生任何例外狀況時，請呼叫這個版本的完成。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)">
          <source>It updates the state of the operation and notifies the callback.</source>
          <target state="translated">它會更新作業的狀態，並通知回呼。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)">
          <source>The result to be wrapped.</source>
          <target state="translated">要包裝的結果。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果非同步作業同步完成，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)">
          <source>The exception that occurred during the processing of the asynchronous operation.</source>
          <target state="translated">在處理非同步作業期間發生的例外狀況。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)">
          <source>Call this version of complete if you raise an exception during processing.</source>
          <target state="translated">如果您在處理期間引發例外狀況，請呼叫這個版本的完成。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)">
          <source>In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <ph id="ph1">&lt;see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">除了通知回呼，它還會擷取並儲存例外狀況，以便在呼叫 <ph id="ph1">&lt;see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /&gt;</ph> 方法期間擲回。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> representing the status of an asynchronous operation.</source>
          <target state="translated">表示非同步作業狀態的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)">
          <source>End should be called when the End function for the asynchronous operation is complete.</source>
          <target state="translated">當非同步作業的 End 函式完成時，應叫用 End。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)">
          <source>It ensures the asynchronous operation is complete, and does some common validation.</source>
          <target state="translated">它可確保非同步作業已完成，而且會執行一些常見的驗證。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)">
          <source>The typed result of the asynchronous operation.</source>
          <target state="translated">非同步作業的具型別的結果。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.TypedAsyncResult`1.Result">
          <source>Gets the typed result of the completed asynchronous operation.</source>
          <target state="translated">取得完成的非同步作業的具型別結果。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.TypedAsyncResult`1.Result">
          <source>The typed result of the completed asynchronous operation.</source>
          <target state="translated">完成的非同步作業的具型別的結果。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>