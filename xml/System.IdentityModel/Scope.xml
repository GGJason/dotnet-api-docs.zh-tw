<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c3acf2d186bc00e7836e44ff85edcb61965ed26" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36555995" /></Metadata><TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <TypeSignature Language="F#" Value="type Scope = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bbda2-101">表示權杖發佈要求的組態。</span><span class="sxs-lookup"><span data-stu-id="bbda2-101">Represents the configuration for the token issuance request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-102"><xref:System.IdentityModel.Scope>類別會封裝信賴憑證者 (RP) 與安全性權杖要求 (RST) 相關聯的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="bbda2-102">The <xref:System.IdentityModel.Scope> class encapsulates information about the relying party (RP) associated with a security token request (RST).</span></span> <span data-ttu-id="bbda2-103">實作會使用此資訊<xref:System.IdentityModel.SecurityTokenService>回應 (RSTR) 傳回給安全性權杖要求 (RST) 的權杖發行管線中的類別 (STS)。</span><span class="sxs-lookup"><span data-stu-id="bbda2-103">This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).</span></span>  
  
 <span data-ttu-id="bbda2-104"><xref:System.IdentityModel.Scope> 物件包含位址的相關資訊的 RP、 加密和簽章憑證來搭配核發的安全性權杖，並使用簽發的權杖本身或對稱金鑰是否應該加密權杖。</span><span class="sxs-lookup"><span data-stu-id="bbda2-104"><xref:System.IdentityModel.Scope> objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted.</span></span> <span data-ttu-id="bbda2-105">根據預設，權杖和對稱金鑰加密。</span><span class="sxs-lookup"><span data-stu-id="bbda2-105">By default, both the token and symmetric keys are encrypted.</span></span> <span data-ttu-id="bbda2-106">您可以擴充<xref:System.IdentityModel.Scope>執行要求，例如 RP，所接受的權杖類型的其他資訊的類別預設權杖存留期、 最大權杖存留期、 RP，所使用的演算法套件，並依此類推; 不過，資訊封裝在這個類別應該不會改變，個別要求。</span><span class="sxs-lookup"><span data-stu-id="bbda2-106">You can extend the <xref:System.IdentityModel.Scope> class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.</span></span>  
  
 <span data-ttu-id="bbda2-107">權杖發行管線中實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法，這個方法會叫用<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法來取得 RST 的組態。</span><span class="sxs-lookup"><span data-stu-id="bbda2-107">The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST.</span></span> <span data-ttu-id="bbda2-108">您必須實作<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法，在您的自訂 STS 和傳回<xref:System.IdentityModel.Scope>適用於 RP 和 STS 實作的物件。</span><span class="sxs-lookup"><span data-stu-id="bbda2-108">You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a <xref:System.IdentityModel.Scope> object appropriate for the RP and your STS implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbda2-109">初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbda2-110">初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-111">下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-111">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="bbda2-112">屬性</span><span class="sxs-lookup"><span data-stu-id="bbda2-112">Property</span></span>|<span data-ttu-id="bbda2-113">值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-113">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="bbda2-114">`null` .</span><span class="sxs-lookup"><span data-stu-id="bbda2-114">`null` .</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="bbda2-115">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-115">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="bbda2-116">空的字典。</span><span class="sxs-lookup"><span data-stu-id="bbda2-116">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="bbda2-117">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-117">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="bbda2-118">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-118">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="bbda2-119">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-119">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="bbda2-120">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-120">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope appliesToAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="bbda2-121">信賴憑證者的 appliesTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-121">The appliesTo address of the relying party.</span></span> <span data-ttu-id="bbda2-122">這通常會是 URI。</span><span class="sxs-lookup"><span data-stu-id="bbda2-122">This is typically a URI.</span></span></param>
        <summary><span data-ttu-id="bbda2-123">使用指定的 appliesTo 位址，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-124">下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-124">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="bbda2-125">屬性</span><span class="sxs-lookup"><span data-stu-id="bbda2-125">Property</span></span>|<span data-ttu-id="bbda2-126">值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-126">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="bbda2-127">`appliesToAddress` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-127">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="bbda2-128">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-128">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="bbda2-129">空的字典。</span><span class="sxs-lookup"><span data-stu-id="bbda2-129">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="bbda2-130">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-130">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="bbda2-131">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-131">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="bbda2-132">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-132">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="bbda2-133">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-133">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="bbda2-134">信賴憑證者的 appliesTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-134">The appliesTo address of the relying party.</span></span> <span data-ttu-id="bbda2-135">這通常會是 URI。</span><span class="sxs-lookup"><span data-stu-id="bbda2-135">This is typically a URI.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="bbda2-136">信賴憑證者的加密憑證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-136">The encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="bbda2-137">使用指定的 appliesTo 位址和加密認證，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-137">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-138">下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-138">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="bbda2-139">屬性</span><span class="sxs-lookup"><span data-stu-id="bbda2-139">Property</span></span>|<span data-ttu-id="bbda2-140">值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-140">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="bbda2-141">`appliesToAddress` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-141">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="bbda2-142">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-142">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="bbda2-143">空的字典。</span><span class="sxs-lookup"><span data-stu-id="bbda2-143">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="bbda2-144">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-144">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="bbda2-145">`signingCredentials` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-145">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="bbda2-146">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-146">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="bbda2-147">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-147">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="bbda2-148">信賴憑證者的 appliesTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-148">The appliesTo address of the relying party.</span></span> <span data-ttu-id="bbda2-149">這通常會是 URI。</span><span class="sxs-lookup"><span data-stu-id="bbda2-149">This is typically a URI.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="bbda2-150">信賴憑證者的簽署認證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-150">The signing credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="bbda2-151">使用指定的 appliesTo 位址和簽署認證，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and signing credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-152">下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-152">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="bbda2-153">屬性</span><span class="sxs-lookup"><span data-stu-id="bbda2-153">Property</span></span>|<span data-ttu-id="bbda2-154">值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-154">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="bbda2-155">`appliesToAddress` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-155">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="bbda2-156">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-156">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="bbda2-157">空的字典。</span><span class="sxs-lookup"><span data-stu-id="bbda2-157">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="bbda2-158">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-158">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="bbda2-159">`signingCredentials` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-159">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="bbda2-160">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-160">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="bbda2-161">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-161">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="bbda2-162">信賴憑證者的 appliesTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-162">The appliesTo address of the relying party.</span></span> <span data-ttu-id="bbda2-163">這通常會是 URI。</span><span class="sxs-lookup"><span data-stu-id="bbda2-163">This is typically a URI.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="bbda2-164">信賴憑證者的簽署認證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-164">The signing credentials for the relying party.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="bbda2-165">信賴憑證者的加密憑證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-165">The encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="bbda2-166">使用指定的 appliesTo 位址、簽署認證和加密認證，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-166">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address, signing credentials, and encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-167">下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。</span><span class="sxs-lookup"><span data-stu-id="bbda2-167">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="bbda2-168">屬性</span><span class="sxs-lookup"><span data-stu-id="bbda2-168">Property</span></span>|<span data-ttu-id="bbda2-169">值</span><span class="sxs-lookup"><span data-stu-id="bbda2-169">Value</span></span>|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="bbda2-170">`appliesToAddress` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-170">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="bbda2-171">`encryptingCredentials` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-171">The value of the `encryptingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="bbda2-172">空的字典。</span><span class="sxs-lookup"><span data-stu-id="bbda2-172">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="bbda2-173">`null`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-173">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="bbda2-174">`signingCredentials` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="bbda2-174">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="bbda2-175">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-175">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="bbda2-176">`true`。</span><span class="sxs-lookup"><span data-stu-id="bbda2-176">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesToAddress : string with get, set" Usage="System.IdentityModel.Scope.AppliesToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-177">取得或設定信賴憑證者的 appliesTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-177">Gets or sets the appliesTo address of the relying party.</span></span></summary>
        <value><span data-ttu-id="bbda2-178">信賴憑證者的 appliesTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-178">The appliesTo address of the relying party.</span></span> <span data-ttu-id="bbda2-179">這通常會是 URI。</span><span class="sxs-lookup"><span data-stu-id="bbda2-179">This is typically a URI.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials with get, set" Usage="System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-180">取得或設定信賴憑證者的加密認證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-180">Gets or sets the encrypting credentials for the relying party.</span></span></summary>
        <value><span data-ttu-id="bbda2-181">用於信賴憑證者的加密憑證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-181">The encrypting credentials to be used for the relying party.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-182">如果<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>屬性是`true`，認證會用來加密簽發的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="bbda2-182">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens.</span></span> <span data-ttu-id="bbda2-183">如果<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>屬性是`true`，認證會用來加密對稱金鑰簽發安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="bbda2-183">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Scope.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-184">取得要擴充物件的屬性封包。</span><span class="sxs-lookup"><span data-stu-id="bbda2-184">Gets the properties bag to extend the object.</span></span></summary>
        <value><span data-ttu-id="bbda2-185">屬性封包。</span><span class="sxs-lookup"><span data-stu-id="bbda2-185">The properties bag.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToAddress : string with get, set" Usage="System.IdentityModel.Scope.ReplyToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-186">取得或設定信賴憑證者的 replyTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-186">Gets or sets the replyTo address of the relying party.</span></span></summary>
        <value><span data-ttu-id="bbda2-187">信賴憑證者的 replyTo 位址。</span><span class="sxs-lookup"><span data-stu-id="bbda2-187">The replyTo address of the relying party.</span></span> <span data-ttu-id="bbda2-188">這通常會是 URI。</span><span class="sxs-lookup"><span data-stu-id="bbda2-188">This is typically a URI.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Scope.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-189">取得或設定信賴憑證者的簽署認證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-189">Gets or sets the signing credentials for the relying party.</span></span></summary>
        <value><span data-ttu-id="bbda2-190">用於信賴憑證者的簽署認證。</span><span class="sxs-lookup"><span data-stu-id="bbda2-190">The signing credentials to be used for the relying party.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SymmetricKeyEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-191">取得或設定值，這個值表示發出的對稱金鑰是否必須加密。</span><span class="sxs-lookup"><span data-stu-id="bbda2-191">Gets or sets a value that indicates whether issued symmetric keys must be encrypted.</span></span></summary>
        <value><span data-ttu-id="bbda2-192">如果對稱金鑰必須經過加密，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbda2-192"><see langword="true" /> if symmetric keys must be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbda2-193">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bbda2-193">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-194">如果<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>屬性是`true`，使用中的認證加密的對稱金鑰<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="bbda2-194">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, symmetric keys are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TokenEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbda2-195">取得或設定值，這個值表示發出的安全性權杖是否必須加密。</span><span class="sxs-lookup"><span data-stu-id="bbda2-195">Gets or sets a value that indicates whether issued security tokens must be encrypted.</span></span></summary>
        <value><span data-ttu-id="bbda2-196">如果安全性權杖必須經過加密，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbda2-196"><see langword="true" /> if security tokens must be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbda2-197">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bbda2-197">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbda2-198">如果<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>屬性是`true`，使用中的認證加密的安全性權杖<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="bbda2-198">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, security tokens are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>