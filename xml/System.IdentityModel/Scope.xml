<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c3acf2d186bc00e7836e44ff85edcb61965ed26" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36555995" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <TypeSignature Language="F#" Value="type Scope = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示權杖發佈要求的組態。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Scope>類別會封裝信賴憑證者 (RP) 與安全性權杖要求 (RST) 相關聯的相關資訊。 這項資訊由實作<xref:System.IdentityModel.SecurityTokenService>類別 (STS) 權杖發行管線 (RSTR) 回應傳回給安全性權杖要求 (RST) 中的。  
  
 <xref:System.IdentityModel.Scope> 物件包含位址的相關資訊的 RP、 加密和簽章憑證來搭配核發的安全性權杖，並使用簽發的權杖本身或對稱金鑰是否應該加密語彙基元。 根據預設，會加密語彙基元和對稱金鑰。 您可以擴充<xref:System.IdentityModel.Scope>類別來執行要求，例如 RP 所接受的語彙基元類型的其他資訊預設權杖存留期、 最大的權杖存留期、 RP，所使用的演算法套件，並依此類推，不過，資訊會封裝在這個類別應該不會改變針對個別要求。  
  
 權杖發行管線中實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法，這個方法會叫用<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法來取得 RST 的組態。 您必須實作<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法中自訂 STS 和傳回<xref:System.IdentityModel.Scope>適合 RP 和 STS 實作的物件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。  
  
|屬性|值。|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.Properties%2A>|空的字典。|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`。|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope appliesToAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">信賴憑證者的 appliesTo 位址。 這通常會是 URI。</param>
        <summary>使用指定的 appliesTo 位址，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。  
  
|屬性|值。|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`appliesToAddress` 參數的值。|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.Properties%2A>|空的字典。|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`。|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">信賴憑證者的 appliesTo 位址。 這通常會是 URI。</param>
        <param name="encryptingCredentials">信賴憑證者的加密憑證。</param>
        <summary>使用指定的 appliesTo 位址和加密認證，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。  
  
|屬性|值。|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`appliesToAddress` 參數的值。|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.Properties%2A>|空的字典。|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`signingCredentials` 參數的值。|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`。|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">信賴憑證者的 appliesTo 位址。 這通常會是 URI。</param>
        <param name="signingCredentials">信賴憑證者的簽署認證。</param>
        <summary>使用指定的 appliesTo 位址和簽署認證，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。  
  
|屬性|值。|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`appliesToAddress` 參數的值。|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.Properties%2A>|空的字典。|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`signingCredentials` 參數的值。|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`。|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">信賴憑證者的 appliesTo 位址。 這通常會是 URI。</param>
        <param name="signingCredentials">信賴憑證者的簽署認證。</param>
        <param name="encryptingCredentials">信賴憑證者的加密憑證。</param>
        <summary>使用指定的 appliesTo 位址、簽署認證和加密認證，初始化 <see cref="T:System.IdentityModel.Scope" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示的初始屬性值的新<xref:System.IdentityModel.Scope>執行個體。  
  
|屬性|值|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`appliesToAddress` 參數的值。|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`encryptingCredentials` 參數的值。|  
|<xref:System.IdentityModel.Scope.Properties%2A>|空的字典。|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`。|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`signingCredentials` 參數的值。|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`。|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesToAddress : string with get, set" Usage="System.IdentityModel.Scope.AppliesToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定信賴憑證者的 appliesTo 位址。</summary>
        <value>信賴憑證者的 appliesTo 位址。 這通常會是 URI。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials with get, set" Usage="System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定信賴憑證者的加密認證。</summary>
        <value>用於信賴憑證者的加密憑證。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>屬性是`true`，認證會用來加密發出的安全性權杖。 如果<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>屬性是`true`，認證會用來加密對稱金鑰搭配安全性權杖中發出。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Scope.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要擴充物件的屬性封包。</summary>
        <value>屬性封包。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToAddress : string with get, set" Usage="System.IdentityModel.Scope.ReplyToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定信賴憑證者的 replyTo 位址。</summary>
        <value>信賴憑證者的 replyTo 位址。 這通常會是 URI。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Scope.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定信賴憑證者的簽署認證。</summary>
        <value>用於信賴憑證者的簽署認證。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SymmetricKeyEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示發出的對稱金鑰是否必須加密。</summary>
        <value>如果對稱金鑰必須經過加密，則為 <see langword="true" />，否則為<see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>屬性是`true`，使用中的認證加密的對稱金鑰<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TokenEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示發出的安全性權杖是否必須加密。</summary>
        <value>如果安全性權杖必須經過加密，則為 <see langword="true" />，否則為<see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>屬性是`true`，使用中的認證加密的安全性語彙基元<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>