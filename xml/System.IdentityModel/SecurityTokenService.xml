<Type Name="SecurityTokenService" FullName="System.IdentityModel.SecurityTokenService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3072d0bfe35d86653ef23ec20b08a5f210b357ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.SecurityTokenService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="55c1a-101">抽象基底類別，定義安全性權杖服務 (STS) 的屬性和方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="55c1a-101">The abstract base class that defines the properties and methods of a security token service (STS).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-102">若要建立的 STS，您必須衍生自<xref:System.IdentityModel.SecurityTokenService>類別。</span><span class="sxs-lookup"><span data-stu-id="55c1a-102">To create an STS you must derive from the <xref:System.IdentityModel.SecurityTokenService> class.</span></span> <span data-ttu-id="55c1a-103">在自訂類別您必須至少覆寫<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>和<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-103">In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="55c1a-104">使用這些覆寫，STS 建立使用所有其他方法的類別中定義的預設實作是能夠發行安全性權杖以回應安全性權杖的要求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-104">With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</span></span> <span data-ttu-id="55c1a-105">也就是說，實作 Ws-trust 規格中定義的問題繫結。</span><span class="sxs-lookup"><span data-stu-id="55c1a-105">That is, the Issue binding defined in the WS-Trust specification is implemented.</span></span> <span data-ttu-id="55c1a-106">這個繫結中實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-106">This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="55c1a-107">無其他 Ws-trust 的繫結 （更新、 取消，並驗證） 會實作在預設案例中，如果遇到 RST 對應至其中一個繫結適當的錯誤傳回給呼叫端。</span><span class="sxs-lookup"><span data-stu-id="55c1a-107">None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</span></span> <span data-ttu-id="55c1a-108">您當然可以覆寫適當的方法 (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>， <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>，和<xref:System.IdentityModel.SecurityTokenService.Validate%2A>) 在 STS 中實作這些繫結。</span><span class="sxs-lookup"><span data-stu-id="55c1a-108">You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55c1a-109">實作可實際執行的 STS 牽涉到仔細規劃和相當多資源來減少潛在安全性風險中公開這類服務。</span><span class="sxs-lookup"><span data-stu-id="55c1a-109">Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</span></span> <span data-ttu-id="55c1a-110">大部分的開發人員使用 Windows Identity Foundation (WIF) 會將開發外包給 STS，身分識別管理的應用程式而開發 STS 本身。</span><span class="sxs-lookup"><span data-stu-id="55c1a-110">Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</span></span> <span data-ttu-id="55c1a-111">WIF 提供 Visual Studio 擴充功能，可協助開發人員在開發環境中測試方案的身分識別和存取工具的 Visual Studio 2012。</span><span class="sxs-lookup"><span data-stu-id="55c1a-111">WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</span></span> <span data-ttu-id="55c1a-112">此工具包含 STS， `LocalSTS`，您可以設定為可提供給您所開發的應用程式的特定宣告。</span><span class="sxs-lookup"><span data-stu-id="55c1a-112">This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing.</span></span> <span data-ttu-id="55c1a-113">如需識別和存取工具的詳細資訊，請參閱[身分與存取工具的 Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-113">For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md).</span></span> <span data-ttu-id="55c1a-114">在某些情況下，`LocalSTS`可能不會提供可以充分地測試您的應用程式所需的功能; 例如，案例，包括開發使用自訂權杖處理常式應用程式。</span><span class="sxs-lookup"><span data-stu-id="55c1a-114">In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</span></span> <span data-ttu-id="55c1a-115">在這些情況下，您可以從衍生<xref:System.IdentityModel.SecurityTokenService>建立一或多個簡單 Sts，可以在開發環境中部署和，可用來測試您的應用程式中的這類功能。</span><span class="sxs-lookup"><span data-stu-id="55c1a-115">In these cases, you can derive from <xref:System.IdentityModel.SecurityTokenService> to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</span></span> <span data-ttu-id="55c1a-116">此章節的其餘部分著重於所公開的方法<xref:System.IdentityModel.SecurityTokenService>類別可讓您實作簡單的 STS 和擴充權杖發行管線。</span><span class="sxs-lookup"><span data-stu-id="55c1a-116">The rest of this section focuses on the methods exposed by the <xref:System.IdentityModel.SecurityTokenService> class that enable you to implement a simple STS and extend the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="55c1a-117">下列清單會提供給開發人員在測試或開發環境中使用的方法，其中最重要的簡短概觀。</span><span class="sxs-lookup"><span data-stu-id="55c1a-117">The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</span></span>  
  
-   <span data-ttu-id="55c1a-118"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="55c1a-118">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="55c1a-119">這個方法會傳回<xref:System.IdentityModel.Scope>包含 RP 的相關資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="55c1a-119">This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP.</span></span> <span data-ttu-id="55c1a-120">此物件用在權杖發行管線的其餘部分，而且包含簽署與加密認證来用於回應的相關資訊，以及`AppliesTo`和`ReplyTo`（如有必要） 位址。</span><span class="sxs-lookup"><span data-stu-id="55c1a-120">This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses.</span></span> <span data-ttu-id="55c1a-121">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-121">You must override this method.</span></span>  
  
-   <span data-ttu-id="55c1a-122"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="55c1a-122">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method.</span></span> <span data-ttu-id="55c1a-123">這個方法會傳回<xref:System.Security.Claims.ClaimsIdentity>物件，包含要傳回至 RP 的宣告。</span><span class="sxs-lookup"><span data-stu-id="55c1a-123">This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP.</span></span> <span data-ttu-id="55c1a-124">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-124">You must override this method.</span></span>  
  
-   <span data-ttu-id="55c1a-125"><xref:System.IdentityModel.SecurityTokenService.Issue%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="55c1a-125">The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="55c1a-126">這個方法會實作權杖要求管線，用來處理傳入安全性權杖的要求 (RST) 和 (RSTR) 將回應傳回給呼叫者，其中包含可用來向 RP 的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="55c1a-126">This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</span></span> <span data-ttu-id="55c1a-127">許多其他的方法中定義<xref:System.IdentityModel.SecurityTokenService>類別會呼叫這個方法，從包括<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>和<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-127">Many of the other methods defined in the <xref:System.IdentityModel.SecurityTokenService> class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="55c1a-128">您沒有覆寫這個方法，但是它所實作的語彙基元要求管線了解可能很有幫助。</span><span class="sxs-lookup"><span data-stu-id="55c1a-128">You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</span></span>  
  
 <span data-ttu-id="55c1a-129">透過設定 STS<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>類別。</span><span class="sxs-lookup"><span data-stu-id="55c1a-129">An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55c1a-130">中所使用的程式碼範例<xref:System.IdentityModel.SecurityTokenService>主題摘錄自`Custom Token`範例。</span><span class="sxs-lookup"><span data-stu-id="55c1a-130">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="55c1a-131">此範例提供自訂的類別，可啟用處理的簡易 Web 權杖 (SWT)，並且包括能夠為 SWT 權杖的被動式 STS 實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-131">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="55c1a-132">如需如何實作主動式 STS 的範例，請參閱`Federation Metadata`範例。</span><span class="sxs-lookup"><span data-stu-id="55c1a-132">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="55c1a-133">如需這些範例以及提供其他範例 WIF 以及有關下載這些檔案的位置資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-133">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="55c1a-134">下列程式碼顯示的被動式 STS 實作使用<xref:System.IdentityModel.SecurityTokenService>類別。</span><span class="sxs-lookup"><span data-stu-id="55c1a-134">The following code shows the implementation of a passive STS using the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#3)]  
  
 <span data-ttu-id="55c1a-135">下列程式碼示範如何叫用自訂的被動式 STS，以處理 WS-同盟要求，藉由呼叫<xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType>方法中的程式碼後置`default.aspx.cs`檔案。</span><span class="sxs-lookup"><span data-stu-id="55c1a-135">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="55c1a-136">您必須同時覆寫<see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />和<see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="55c1a-136">You must override both the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> and the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IdentityModel.Scope" />
    <altmember cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
    <altmember cref="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenService(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration">
          <span data-ttu-id="55c1a-137">
            <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />，包含 STS 的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-137">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the settings for the STS.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-138">使用指定的組態設定，從衍生類別呼叫以初始化 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-138">Called from derived classes to initialize the <see cref="T:System.IdentityModel.SecurityTokenService" /> class using the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-139">您可以使用這個建構函式來初始化領域提供者和權杖簽發者憑證。</span><span class="sxs-lookup"><span data-stu-id="55c1a-139">Use this constructor to initialize scope provider and token issuer certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55c1a-140">
            <paramref name="securityTokenServiceConfiguration" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-140">
              <paramref name="securityTokenServiceConfiguration" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCancel (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginCancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-141">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-141">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-142">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-142">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-143">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-143">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="55c1a-144">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步取消作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-144">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous cancel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="55c1a-145">包含與非同步取消作業相關聯之狀態資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-145">An object that contains state information associated with the asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-146">在衍生類別中覆寫時，開始非同步 WS-Trust 取消要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-146">When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-147">
            <see cref="T:System.IAsyncResult" />，這個物件會參考非同步取消作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-148">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-148">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-149">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-149">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-150">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-150">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-151">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-151">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="55c1a-152">
            <see cref="T:System.IdentityModel.Scope" />，其中包含與要求相關聯之信賴憑證者的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-152">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="55c1a-153">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-153">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="55c1a-154">包含與非同步作業相關聯之狀態資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-154">An object that contains state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-155">在衍生類別中覆寫時，開始非同步呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-155">When overridden in a derived class, begins an asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-156">
            <see cref="T:System.IAsyncResult" />，這個項目會參考非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-156">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-157">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-157">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetScope">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetScope (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-158">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-158">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-159">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-159">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-160">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-160">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="55c1a-161">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-161">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="55c1a-162">包含與非同步作業相關聯之狀態資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-162">An object that contains state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-163">在衍生類別中覆寫時，開始 <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> 方法的非同步呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-163">When overridden in a derived class, begins an asynchronous call for the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-164">
            <see cref="T:System.IAsyncResult" />，這個物件會參考非同步取消作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-164">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-165">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-165">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIssue">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginIssue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginIssue (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginIssue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-166">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-166">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-167">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-167">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-168">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-168">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="55c1a-169">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步核發作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-169">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous issue operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="55c1a-170">包含與非同步發行作業相關聯之狀態資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-170">An object that contains state information associated with the asynchronous issue operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-171">在衍生類別中覆寫時，開始非同步 WS-Trust 發行要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-171">When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-172">
            <see cref="T:System.IAsyncResult" />，會參考非同步核發作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-172">The <see cref="T:System.IAsyncResult" /> that references the asynchronous issue operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-173">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-173">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenew">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRenew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRenew (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRenew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-174">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-174">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-175">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-175">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-176">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-176">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="55c1a-177">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步更新作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-177">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous renew operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="55c1a-178">包含與非同步更新作業相關聯之狀態資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-178">An object that contains state information associated with the asynchronous renew operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-179">在衍生類別中覆寫時，開始非同步 WS-Trust 更新要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-179">When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-180">
            <see cref="T:System.IAsyncResult" />，會參考非同步更新作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-180">The <see cref="T:System.IAsyncResult" /> that references the asynchronous renew operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-181">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-181">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginValidate">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginValidate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginValidate (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginValidate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-182">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-182">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-183">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-183">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-184">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-184">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="55c1a-185">
            <see cref="T:System.AsyncCallback" />　委派，這個委派會接收完成非同步驗證作業的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-185">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous validate operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="55c1a-186">包含與非同步驗證作業相關聯之狀態資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-186">An object that contains state information associated with the asynchronous validate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-187">在衍生類別中覆寫時，開始非同步 WS-Trust 驗證要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-187">When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-188">
            <see cref="T:System.IAsyncResult" />，會參考非同步驗證作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-188">The <see cref="T:System.IAsyncResult" /> that references the asynchronous validate operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-189">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-189">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Cancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-190">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-190">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-191">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-191">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-192">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-192">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-193">在衍生類別中覆寫時，處理 WS-Trust 取消要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-193">When overridden in a derived class, processes a WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-194">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-194">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-195">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-195">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenDescriptor ^ CreateSecurityTokenDescriptor(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="55c1a-196">連入的權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-196">The incoming token request.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="55c1a-197">從 <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> 傳回的 <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-197">The <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> object returned from <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-198">建立 <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-198">Creates an instance of a <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-199">
            <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-199">The <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-200">在後權杖發行期間叫用<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-200">Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55c1a-201">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-201">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="55c1a-202">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-202">-or-</span>
          </span>
          <span data-ttu-id="55c1a-203">
            <paramref name="scope" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-203">
              <paramref name="scope" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCancel (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="55c1a-204">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-204">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-205">在衍生類別中覆寫時，完成非同步 WS-Trust 取消要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-205">When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-206">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-206">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-207">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-207">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetOutputClaimsIdentity (result As IAsyncResult) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ EndGetOutputClaimsIdentity(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="55c1a-208">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-208">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-209">在衍生類別中覆寫時，完成非同步呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-209">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-210">包含將放入已發行安全性權杖之宣告集合的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-210">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-211">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-211">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetScope">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope EndGetScope(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetScope (result As IAsyncResult) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Scope ^ EndGetScope(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="55c1a-212">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-212">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-213">在衍生類別中覆寫時，完成非同步呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-213">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-214">封裝與 <see cref="T:System.IdentityModel.Scope" /> 方法呼叫中指定要求 (RST) 相關聯之信賴憑證者 (RP) 資訊的 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-214">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-215">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-215">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIssue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndIssue (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndIssue(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="55c1a-216">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-216">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-217">在衍生類別中覆寫時，完成非同步 WS-Trust 發行要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-217">When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-218">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-218">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-219">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-219">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRenew (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndRenew(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="55c1a-220">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-220">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-221">在衍生類別中覆寫時，完成非同步 WS-Trust 更新要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-221">When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-222">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-222">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-223">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-223">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndValidate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndValidate (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndValidate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="55c1a-224">
            <see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-224">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-225">在衍生類別中覆寫時，完成非同步 WS-Trust 驗證要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-225">When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-226">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-226">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-227">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-227">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="protected virtual string GetIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetIssuerName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55c1a-228">取得安全性權杖服務 (STS) 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-228">Gets the name of the security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-229">簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-229">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-230">這個方法呼叫從權杖發行管線中實作預設<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-230">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="55c1a-231">預設實作會傳回<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>從透過存取組態屬性<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="55c1a-231">The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Claims::ClaimsIdentity ^ GetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-232">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-232">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-233">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-233">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-234">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-234">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="55c1a-235">
            <see cref="T:System.IdentityModel.Scope" />，其中包含與要求相關聯之信賴憑證者的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-235">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          </span>
          <span data-ttu-id="55c1a-236">這是 <see cref="T:System.IdentityModel.Scope" /> 方法所傳回的 <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-236">This is the <see cref="T:System.IdentityModel.Scope" /> object that was returned by the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-237">在衍生類別中覆寫，這個方法會傳回包含在已發行權杖中的輸出主體集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-237">When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-238">包含將放入已發行安全性權杖之宣告集合的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-238">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-239"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法從權杖發行管線，這藉由呼叫<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-239">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="55c1a-240">它會傳回<xref:System.Security.Claims.ClaimsIdentity>，其中包含要納入發出的安全性權杖的權杖要求者為基礎 (`principal`參數)，傳入的 RST (`request`參數)，而且信賴憑證者的合作對象的語彙基元設計 （`scope`參數)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-240">It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter).</span></span> <span data-ttu-id="55c1a-241">這個方法中的邏輯，主要考量回答下列問題：</span><span class="sxs-lookup"><span data-stu-id="55c1a-241">The logic in this method is primarily concerned with answering the following questions:</span></span>  
  
-   <span data-ttu-id="55c1a-242">**宣告類型應該包含在根據它適用的 RP 回應？**</span><span class="sxs-lookup"><span data-stu-id="55c1a-242">**Which claim types should be included in the response based on the RP for which it is intended?**</span></span> <span data-ttu-id="55c1a-243">通常這會決定根據所需的每個 RP 的宣告型別的清單中每個 RP 或個別要求來檢查<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A>要求的屬性。</span><span class="sxs-lookup"><span data-stu-id="55c1a-243">Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request.</span></span> <span data-ttu-id="55c1a-244">不過，邏輯和詳細資料，以判斷要包含在回應中的宣告是完全根據您的實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-244">However, the logic and details for determining the claims to include in the response is completely up to your implementation.</span></span>  
  
-   <span data-ttu-id="55c1a-245">**宣告值應該指派給回應中的宣告？**</span><span class="sxs-lookup"><span data-stu-id="55c1a-245">**Which claim values should be assigned to the claims in the response?**</span></span> <span data-ttu-id="55c1a-246">身分識別提供者 (IP STS) 這通常表示使用中要求者的一或多個宣告<xref:System.Security.Claims.ClaimsPrincipal>(所提供`principal`參數) 來存取存放區 （或其他實體） 以傳回必要的宣告型別的值。</span><span class="sxs-lookup"><span data-stu-id="55c1a-246">For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types.</span></span> <span data-ttu-id="55c1a-247">同盟提供者 (R STS) 這通常表示進行某種處理要求。 要求者的連入宣告上也可能會提供要求者，並傳遞到其他人未修改某些宣告上進行篩選或轉換。</span><span class="sxs-lookup"><span data-stu-id="55c1a-247">For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</span></span> <span data-ttu-id="55c1a-248">當然，如同決定要在回應中包含宣告的情況，詳細資料和邏輯如何決定這些宣告的值是由您的實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-248">Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55c1a-249">使用本主題中的程式碼範例取自`Custom Token`範例。</span><span class="sxs-lookup"><span data-stu-id="55c1a-249">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="55c1a-250">此範例提供自訂的類別，可啟用處理的簡易 Web 權杖 (SWT)，並且包括能夠為 SWT 權杖的被動式 STS 實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-250">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="55c1a-251">如需如何實作主動式 STS 的範例，請參閱`Federation Metadata`範例。</span><span class="sxs-lookup"><span data-stu-id="55c1a-251">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="55c1a-252">如需這些範例以及提供其他範例 WIF 以及有關下載這些檔案的位置資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-252">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="55c1a-253">下列程式碼示範如何覆寫<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法以傳回宣告對 STS。</span><span class="sxs-lookup"><span data-stu-id="55c1a-253">The following code shows how to override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to return claims for your STS.</span></span> <span data-ttu-id="55c1a-254">在此範例中，會忽略該要求安全性權杖 (RST) 訊息並根據在 STS 驗證使用者的宣告的集合傳回。</span><span class="sxs-lookup"><span data-stu-id="55c1a-254">In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="55c1a-255">您必須在 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別的實作中覆寫此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="55c1a-255">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetProofToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.ProofDescriptor GetProofToken(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::ProofDescriptor ^ GetProofToken(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.ProofDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="55c1a-256">表示傳入權杖要求 (RST) 的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-256">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="55c1a-257">會封裝信賴憑證者的相關資訊的<see cref="T:System.IdentityModel.Scope" />執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-257">The <see cref="T:System.IdentityModel.Scope" /> instance that encapsulates information about the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-258">取得要包含在回應 (RSTR) 的證明權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-258">Gets the proof token to be included in the response (RSTR).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-259">
            <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" />，表示新建立的證明描述元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-259">A <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> that represents the newly created proof descriptor.</span>
          </span>
          <span data-ttu-id="55c1a-260">證明描述元可以是非對稱式證明描述元、對稱式證明描述元，或<see langword="null" />（在持有人權杖的情況下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-260">The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <see langword="null" /> in the bearer token case.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-261">這個方法呼叫從權杖發行管線中實作預設<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-261">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="55c1a-262">預設實作會傳回證明的描述元，或擲回適當的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="55c1a-262">The default implementation returns a proof descriptor or throws an appropriate exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55c1a-263">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-263">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="55c1a-264">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-264">-or-</span>
          </span>
          <span data-ttu-id="55c1a-265">
            <paramref name="scope" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-265">
              <paramref name="scope" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestorProofEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRequestorProofEncryptingCredentials (request As RequestSecurityToken) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetRequestorProofEncryptingCredentials(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="55c1a-266">表示傳入權杖要求 (RST) 的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-266">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-267">取得要求者的證明加密認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-267">Gets the requestor's proof encrypting credentials.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-268">表示要求者之加密認證的 <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-268">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object that represents the requestor’s encrypting credentials.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-269">這個方法從呼叫<xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-269">This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.</span></span>  
  
 <span data-ttu-id="55c1a-270">預設實作會執行下列項目。</span><span class="sxs-lookup"><span data-stu-id="55c1a-270">The default implementation does the following.</span></span> <span data-ttu-id="55c1a-271">傳回`null`不是否有任何要求中指定的加密語彙基元 (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType>屬性是`null`)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-271">Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> property is `null`).</span></span> <span data-ttu-id="55c1a-272">否則，如果它可以取得權杖當做<xref:System.IdentityModel.Tokens.X509SecurityToken>，它會傳回該權杖為基礎的認證。</span><span class="sxs-lookup"><span data-stu-id="55c1a-272">Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token.</span></span> <span data-ttu-id="55c1a-273">若無法解析權杖當做<xref:System.IdentityModel.Tokens.X509SecurityToken>、<xref:System.IdentityModel.RequestFailedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="55c1a-273">If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55c1a-274">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-274">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponse (request As RequestSecurityToken, tokenDescriptor As SecurityTokenDescriptor) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ GetResponse(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="55c1a-275">包含權杖要求的 RST。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-275">The RST that contains the token request.</span>
          </span>
        </param>
        <param name="tokenDescriptor">
          <span data-ttu-id="55c1a-276">權杖描述元，其中包含要用於已發行的權杖的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-276">The token descriptor that contains the information to use for the issued token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-277">使用指定的要求 (RST) 和安全性權杖描述元，建立包含核發之權杖的回應 (RSTR)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-277">Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-278">回應 (RSTR)，如果無法從指定的要求和權杖描述元建立回應則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-278">The response (RSTR) or <see langword="null" /> if a response cannot be created from the specified request and token descriptor.</span>
          </span>
          <span data-ttu-id="55c1a-279">如果 <paramref name="tokenDescriptor" /> 參數為 <see langword="null" />，則預設實作會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-279">The default implementation returns <see langword="null" /> if the <paramref name="tokenDescriptor" /> parameter is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-280"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>從權杖發行管線，實作的方法呼叫的最後一個步驟<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-280">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="55c1a-281">它會建立並使用原始的連入要求 (RST) 和已設定在權杖發行管線中前一個步驟建立的語彙基元描述元傳回回應 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-281">It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="55c1a-282">預設實作會建立 RSTR 藉由傳遞要求參數中指定的 RST<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType>建構函式，叫用<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType>語彙基元的描述項的方法傳入<xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>套用其屬性，以新建立 RSTR、 設定<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A>屬性上使用 RSTR<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>屬性上的語彙基元的描述元，以及最後設定<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>RSTR 根據下表中的屬性：</span><span class="sxs-lookup"><span data-stu-id="55c1a-282">The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> method on the token descriptor passed into <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:</span></span>  
  
|<span data-ttu-id="55c1a-283">`RST.ReplyTo` 屬性</span><span class="sxs-lookup"><span data-stu-id="55c1a-283">`RST.ReplyTo` property</span></span>|<span data-ttu-id="55c1a-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="55c1a-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> property.</span></span>|<span data-ttu-id="55c1a-285">`RSTR.ReplyTo` 屬性</span><span class="sxs-lookup"><span data-stu-id="55c1a-285">`RSTR.ReplyTo` property</span></span>|  
|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="55c1a-286">設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-286">Set</span></span>|<span data-ttu-id="55c1a-287">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-287">Not Set</span></span>|<span data-ttu-id="55c1a-288">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-288">Not Set</span></span>|  
|<span data-ttu-id="55c1a-289">設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-289">Set</span></span>|<span data-ttu-id="55c1a-290">設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-290">Set</span></span>|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="55c1a-291">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-291">Not Set</span></span>|<span data-ttu-id="55c1a-292">設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-292">Set</span></span>|<span data-ttu-id="55c1a-293">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-293">Not Set</span></span>|  
|<span data-ttu-id="55c1a-294">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-294">Not Set</span></span>|<span data-ttu-id="55c1a-295">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-295">Not Set</span></span>|<span data-ttu-id="55c1a-296">未設定</span><span class="sxs-lookup"><span data-stu-id="55c1a-296">Not Set</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope GetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScope (principal As ClaimsPrincipal, request As RequestSecurityToken) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Scope ^ GetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-297">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示提出要求的用戶端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-297">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the client making the request.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-298">表示傳入要求 (RST) 的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-298">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming request (RST).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-299">取得 <see cref="T:System.IdentityModel.Scope" /> 物件，其中包含與所指定的要求 (RST) 相關聯之信賴憑證者 (RP) 的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-299">Gets a <see cref="T:System.IdentityModel.Scope" /> object that contains information about the relying party (RP) associated with the specified request (RST).</span>
          </span>
          <span data-ttu-id="55c1a-300">您必須在 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別的實作中覆寫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-300">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-301">封裝與要求相關聯之 RP 資訊的 <see cref="T:System.IdentityModel.Scope" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-301">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the RP information associated with the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-302"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法呼叫來自後權杖發行管線<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法應該傳回<xref:System.IdentityModel.Scope>設定連入要求的物件。</span><span class="sxs-lookup"><span data-stu-id="55c1a-302">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request.</span></span> <span data-ttu-id="55c1a-303">(權杖發行管線中實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。)<xref:System.IdentityModel.Scope>物件封裝 RP 與安全性權杖要求 (RST) 相關聯的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="55c1a-303">(The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST).</span></span> <span data-ttu-id="55c1a-304">這包括與搭配使用 RP，就不會加密任何發出的權杖和/或在回應中的對稱金鑰的加密和簽署認證的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="55c1a-304">This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</span></span> <span data-ttu-id="55c1a-305">在執行一些一般工作<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="55c1a-305">Some typical tasks performed in the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method are:</span></span>  
  
-   <span data-ttu-id="55c1a-306">判斷此權杖適用的 RP 是可辨識的 RP。</span><span class="sxs-lookup"><span data-stu-id="55c1a-306">Determine whether the RP for which the token is intended is a recognized RP.</span></span> <span data-ttu-id="55c1a-307">如何完成此作業取決於您的實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-307">How this is accomplished depends on your implementation.</span></span> <span data-ttu-id="55c1a-308">如果預期的 RP 不是有效的 RP 的此 STS，則此方法應該擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-308">If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
-   <span data-ttu-id="55c1a-309">判斷用於回應 (RSTR) 和設定的簽署認證<xref:System.IdentityModel.Scope.SigningCredentials%2A>屬性據此。</span><span class="sxs-lookup"><span data-stu-id="55c1a-309">Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.</span></span>  
  
-   <span data-ttu-id="55c1a-310">決定是否應該加密回應和/或任何包含對稱金鑰和加密所使用的認證。</span><span class="sxs-lookup"><span data-stu-id="55c1a-310">Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</span></span> <span data-ttu-id="55c1a-311">設定<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>， <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>，和<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>屬性據此。</span><span class="sxs-lookup"><span data-stu-id="55c1a-311">Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="55c1a-312">根據預設，<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>和<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>屬性會設定`true`防止 STS 發出權杖，這是不安全。</span><span class="sxs-lookup"><span data-stu-id="55c1a-312">By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure.</span></span> <span data-ttu-id="55c1a-313">我們建議您永遠不會設定為這些屬性`false`實際執行環境中。</span><span class="sxs-lookup"><span data-stu-id="55c1a-313">It is recommended that these properties never be set to `false` in a production environment.</span></span>  
  
-   <span data-ttu-id="55c1a-314">判斷應該要傳回的回應的位址。</span><span class="sxs-lookup"><span data-stu-id="55c1a-314">Determine the address to which the response should be returned.</span></span> <span data-ttu-id="55c1a-315">設定<xref:System.IdentityModel.Scope.AppliesToAddress%2A>或<xref:System.IdentityModel.Scope.ReplyToAddress%2A>屬性據此。</span><span class="sxs-lookup"><span data-stu-id="55c1a-315">Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55c1a-316">使用本主題中的程式碼範例取自`Custom Token`範例。</span><span class="sxs-lookup"><span data-stu-id="55c1a-316">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="55c1a-317">此範例提供自訂的類別，可啟用處理的簡易 Web 權杖 (SWT)，並且包括能夠為 SWT 權杖的被動式 STS 實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-317">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="55c1a-318">如需如何實作主動式 STS 的範例，請參閱`Federation Metadata`範例。</span><span class="sxs-lookup"><span data-stu-id="55c1a-318">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="55c1a-319">如需這些範例以及提供其他範例 WIF 以及有關下載這些檔案的位置資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-319">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="55c1a-320">下列程式碼範例示範 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="55c1a-320">The following code example shows an implementation of the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="55c1a-321">此實作會驗證，RP 所能辨識 STS 驗證<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>位址中的要求並將設定<xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType>屬性同理，以及簽署與加密認證用於 RP 根據的設定的憑證，在檔案中，是硬式編碼。</span><span class="sxs-lookup"><span data-stu-id="55c1a-321">This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="55c1a-322">您必須在 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別的實作中覆寫此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="55c1a-322">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityTokenHandler">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler(string requestedTokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSecurityTokenHandler (requestedTokenType As String) As SecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenHandler ^ GetSecurityTokenHandler(System::String ^ requestedTokenType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestedTokenType">
          <span data-ttu-id="55c1a-323">包含要求之語彙基元型別 URI 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-323">A string that contains the requested token type URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-324">取得適當的安全性權杖處理常式，以發出指定之類型的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-324">Gets the appropriate security token handler for issuing a security token of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-325">表示要用於建立所發行安全性權杖之權杖處理常式的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-325">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that represents the token handler to be used for creating the issued security token.</span>
          </span>
          <span data-ttu-id="55c1a-326">如果不支援要求的語彙基元類型 (沒有為指定的語彙基元類型設定的處理常式)，則傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-326">Returns <see langword="null" /> if the requested token type is not supported (there is no handler configured for the specified token type).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-327">預設實作中如果`requestedTokenType`是`null`或空字串，從設定的權杖類型可用的預設值。</span><span class="sxs-lookup"><span data-stu-id="55c1a-327">In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used.</span></span> <span data-ttu-id="55c1a-328">這由指定<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>透過存取 STS 組態物件屬性<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="55c1a-328">This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 <span data-ttu-id="55c1a-329">這個方法呼叫從權杖發行管線中實作預設<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-329">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTokenLifetime">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime(class System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenLifetime (requestLifetime As Lifetime) As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::Lifetime ^ GetTokenLifetime(System::IdentityModel::Protocols::WSTrust::Lifetime ^ requestLifetime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
      </Parameters>
      <Docs>
        <param name="requestLifetime">
          <span data-ttu-id="55c1a-330">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" />，表示要求的存留期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-330">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the requested lifetime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-331">取得已發行權杖的存留期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-331">Gets the lifetime for the issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-332">表示授與之存留期的 <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-332">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the granted lifetime.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-333">這個方法通常會呼叫抵達 RST 的存留期使用。</span><span class="sxs-lookup"><span data-stu-id="55c1a-333">This method is normally called with the lifetime that arrived in the RST.</span></span> <span data-ttu-id="55c1a-334">在預設實作中，權杖存留期會根據下表來計算。</span><span class="sxs-lookup"><span data-stu-id="55c1a-334">In the default implementation, the token lifetime is calculated according to the following table.</span></span>  
  
|<span data-ttu-id="55c1a-335">建立 (in)</span><span class="sxs-lookup"><span data-stu-id="55c1a-335">Created (in)</span></span>|<span data-ttu-id="55c1a-336">到期 (in)</span><span class="sxs-lookup"><span data-stu-id="55c1a-336">Expires (in)</span></span>|<span data-ttu-id="55c1a-337">建立 (in)</span><span class="sxs-lookup"><span data-stu-id="55c1a-337">Created (in)</span></span>|<span data-ttu-id="55c1a-338">到期 (out)</span><span class="sxs-lookup"><span data-stu-id="55c1a-338">Expires (out)</span></span>|  
|--------------------|--------------------|--------------------|---------------------|  
|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="55c1a-339">C</span><span class="sxs-lookup"><span data-stu-id="55c1a-339">C</span></span>|`null`|<span data-ttu-id="55c1a-340">C</span><span class="sxs-lookup"><span data-stu-id="55c1a-340">C</span></span>|<span data-ttu-id="55c1a-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="55c1a-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span></span>|  
|`null`|<span data-ttu-id="55c1a-342">E</span><span class="sxs-lookup"><span data-stu-id="55c1a-342">E</span></span>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<span data-ttu-id="55c1a-343">E</span><span class="sxs-lookup"><span data-stu-id="55c1a-343">E</span></span>|  
|<span data-ttu-id="55c1a-344">C</span><span class="sxs-lookup"><span data-stu-id="55c1a-344">C</span></span>|<span data-ttu-id="55c1a-345">E</span><span class="sxs-lookup"><span data-stu-id="55c1a-345">E</span></span>|<span data-ttu-id="55c1a-346">C</span><span class="sxs-lookup"><span data-stu-id="55c1a-346">C</span></span>|<span data-ttu-id="55c1a-347">E</span><span class="sxs-lookup"><span data-stu-id="55c1a-347">E</span></span>|  
  
 <span data-ttu-id="55c1a-348">這個方法呼叫從權杖發行管線中實作預設<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-348">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="Issue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Issue (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Issue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-349">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-349">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-350">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-350">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-351">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-351">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-352">發行安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-352">Issues a security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-353">包含已發行安全性權杖的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-353">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that contains the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-354">這個方法會實作 Ws-trust 規格中定義的問題繫結。</span><span class="sxs-lookup"><span data-stu-id="55c1a-354">This method implements the Issue binding defined in the WS-Trust specification.</span></span> <span data-ttu-id="55c1a-355">預設實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法處理傳入要求 (RST) 權杖發行 （宣告發行） 管線，並傳回其中一個回應 (RSTR)，其中包含具有適當的宣告來驗證安全性權杖要求者 RP 或適當的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="55c1a-355">The default implementation of the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</span></span> <span data-ttu-id="55c1a-356">權杖發行管線中的預設實作下列方法的呼叫所組成 (的<xref:System.IdentityModel.SecurityTokenService>類別)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-356">The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).</span></span>  
  
1.  <span data-ttu-id="55c1a-357"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法以驗證要求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-357">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).</span></span>  
  
2.  <span data-ttu-id="55c1a-358"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法來取得<xref:System.IdentityModel.Scope>物件，其中包含相關的信賴憑證者合作對象 (RP) 與要求相關資訊。</span><span class="sxs-lookup"><span data-stu-id="55c1a-358">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request.</span></span> <span data-ttu-id="55c1a-359">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-359">You must override this method.</span></span> <span data-ttu-id="55c1a-360">如果<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>傳回`null`、<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="55c1a-360">If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.</span></span>  
  
3.  <span data-ttu-id="55c1a-361"><xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A>方法以傳回安全性權杖的描述元根據 RST 和<xref:System.IdentityModel.Scope>上一個步驟中傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="55c1a-361">The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step.</span></span> <span data-ttu-id="55c1a-362">安全性權杖的描述元 (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) 包含的形式，可由權杖處理常式要求的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="55c1a-362">The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler.</span></span> <span data-ttu-id="55c1a-363"><xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType>屬性設定為呼叫所傳回的描述元。</span><span class="sxs-lookup"><span data-stu-id="55c1a-363">The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> property is set to the descriptor returned by the call.</span></span> <span data-ttu-id="55c1a-364">如果`null`傳回或<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>屬性的描述元是`null`、<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="55c1a-364">If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="55c1a-365">擲回例外狀況也如果<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType>屬性是`true`但<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>傳回描述項的屬性是`null`。</span><span class="sxs-lookup"><span data-stu-id="55c1a-365">The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.</span></span>  
  
4.  <span data-ttu-id="55c1a-366"><xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A>方法來取得適當權杖處理常式會根據要求的語彙基元的類型。</span><span class="sxs-lookup"><span data-stu-id="55c1a-366">The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested.</span></span> <span data-ttu-id="55c1a-367">如果`null`傳回，則<xref:System.NotImplementedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="55c1a-367">If `null` is returned, a <xref:System.NotImplementedException> is thrown.</span></span>  
  
5.  <span data-ttu-id="55c1a-368"><xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A>方法來取得權杖的簽發者名稱。</span><span class="sxs-lookup"><span data-stu-id="55c1a-368">The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token.</span></span> <span data-ttu-id="55c1a-369">擲回<xref:System.InvalidOperationException>名稱是否`null`或空的; 否則，設定<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>屬性描述項。</span><span class="sxs-lookup"><span data-stu-id="55c1a-369">Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.</span></span>  
  
6.  <span data-ttu-id="55c1a-370"><xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>方法來取得的權杖並將設定的存留期<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>屬性描述項。</span><span class="sxs-lookup"><span data-stu-id="55c1a-370">The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.</span></span>  
  
7.  <span data-ttu-id="55c1a-371"><xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>方法來取得此證明權杖来包含在發行的權杖和集<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A>屬性描述項。</span><span class="sxs-lookup"><span data-stu-id="55c1a-371">The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.</span></span>  
  
8.  <span data-ttu-id="55c1a-372"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法來取得要包含在發行的權杖和集合中的宣告<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>屬性描述項。</span><span class="sxs-lookup"><span data-stu-id="55c1a-372">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor.</span></span> <span data-ttu-id="55c1a-373">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-373">You must override this method.</span></span>  
  
9. <span data-ttu-id="55c1a-374"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>方法來建立包含核發之權杖的回應 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-374">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.</span></span>  
  
 <span data-ttu-id="55c1a-375">您可以覆寫<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法，以實作自訂權杖發行管線; 不過這通常不需要在開發和測試環境中的哪些大部份的自訂實作<xref:System.IdentityModel.SecurityTokenService>主要類別。</span><span class="sxs-lookup"><span data-stu-id="55c1a-375">You can override the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended.</span></span> <span data-ttu-id="55c1a-376">在許多這類情況您覆寫<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>和<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法並選擇性地覆寫<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法以提供您的環境可自行維修 STS。</span><span class="sxs-lookup"><span data-stu-id="55c1a-376">In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment.</span></span> <span data-ttu-id="55c1a-377">如果自訂需要進一步通常可以將它所實作的預設權杖發行管線上面所列每個階段的方法覆寫中提供。</span><span class="sxs-lookup"><span data-stu-id="55c1a-377">If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Principal" />
      <MemberSignature Language="VB.NET" Value="Public Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); void set(System::Security::Claims::ClaimsPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55c1a-378">取得或設定與目前執行個體相關聯的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-378">Gets or sets the principal associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55c1a-379">表示目前主體的 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-379">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the current principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Renew (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Renew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-380">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-380">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-381">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-381">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-382">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-382">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-383">在衍生類別中覆寫時，處理 WS-Trust 更新要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-383">When overridden in a derived class, processes a WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-384">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-384">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-385">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-385">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ Request { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55c1a-386">取得或設定與目前執行個體相關聯的安全性權杖要求 (RST)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-386">Gets or sets the security token request (RST) associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55c1a-387">包含要求的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-387">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that contains the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Scope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Scope Scope" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Scope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Scope ^ Scope { System::IdentityModel::Scope ^ get(); void set(System::IdentityModel::Scope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55c1a-388">取得或設定與目前執行個體相關聯的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-388">Gets or sets the scope associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55c1a-389">表示權杖發佈要求組態的 <see cref="T:System.IdentityModel.Scope" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-389">A <see cref="T:System.IdentityModel.Scope" /> that represents the configuration for the token issuance request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected Property SecurityTokenDescriptor As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::SecurityTokenDescriptor ^ SecurityTokenDescriptor { System::IdentityModel::Tokens::SecurityTokenDescriptor ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55c1a-390">取得或設定與目前執行個體相關聯的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-390">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55c1a-391">與目前執行個體相關聯的安全性權杖描述元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-391">The security token descriptor that is associated with the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55c1a-392">嘗試將屬性設為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-392">An attempt to set the property to <see langword="null" /> occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55c1a-393">取得擁有者組態執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-393">Gets the owner configuration instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55c1a-394">
            <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />，包含目前執行個體的組態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-394">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the configuration for the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Validate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="55c1a-395">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-395">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="55c1a-396">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-396">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="55c1a-397">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-397">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-398">在衍生類別中覆寫時，處理 WS-Trust 驗證要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-398">When overridden in a derived class, processes a WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55c1a-399">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-399">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-400">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="55c1a-400">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateRequest(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateRequest (request As RequestSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateRequest(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="55c1a-401">表示要求的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-401">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55c1a-402">驗證此執行個體封裝的安全性權杖要求 (RST)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-402">Validates the security token request (RST) encapsulated by this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55c1a-403"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法呼叫從權杖發行管線 (<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法) 來驗證傳入的 RST。</span><span class="sxs-lookup"><span data-stu-id="55c1a-403">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST.</span></span> <span data-ttu-id="55c1a-404">RST 驗證 STS 的需求 （原則），如果不正確，會擲回適當的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="55c1a-404">The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</span></span>  
  
 <span data-ttu-id="55c1a-405">預設實作<xref:System.IdentityModel.SecurityTokenService>類別支援 RST RSTR 模式和只有 Ws-trust 規格的問題繫結 (<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>屬性要求必須設定為<xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="55c1a-405">The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="55c1a-406">這個方法的預設實作會強制執行這些要求 （和其他例外狀況 > 一節中所述）。</span><span class="sxs-lookup"><span data-stu-id="55c1a-406">The default implementation of this method enforces these requirements (and others noted in the exceptions section).</span></span> <span data-ttu-id="55c1a-407">如果您必須強制執行不同的驗證需求，對自訂 STS，您可以覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="55c1a-407">You can override this method if you must enforce different validation requirements for your custom STS.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException">
          <span data-ttu-id="55c1a-408">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-408">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="55c1a-409">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-409">-or-</span>
          </span>
          <span data-ttu-id="55c1a-410">要求的 <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> 屬性不是設為 <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-410">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> property of the request is not set to <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span>
          </span>
          <span data-ttu-id="55c1a-411">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-411">-or-</span>
          </span>
          <span data-ttu-id="55c1a-412">此要求的<see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" />屬性不是<see langword="null" />或<see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />類別中所定義的其中一個常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-412">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> property of the request is not <see langword="null" /> or one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> class.</span>
          </span>
          <span data-ttu-id="55c1a-413">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-413">-or-</span>
          </span>
          <span data-ttu-id="55c1a-414">此要求的 <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> 是 <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" />，且 <see langword="KeySize" /> 項目存在，但它的值不等於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-414">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> of the request is <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> and the <see langword="KeySize" /> element is present, but its value is not equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
          <span data-ttu-id="55c1a-415">STS 不支援要求的權杖型別 (依據要求的<see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" />屬性的值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55c1a-415">The STS does not support the request token type (based on the value of the <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> property of the request).</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
  </Members>
</Type>