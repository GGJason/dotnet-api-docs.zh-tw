<Type Name="SecurityTokenService" FullName="System.IdentityModel.SecurityTokenService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49a0ab5f150cc09113681aed718c286d237b6643" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52603578" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.SecurityTokenService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenService abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenService = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ee1b1-101">抽象基底類別，定義安全性權杖服務 (STS) 的屬性和方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-101">The abstract base class that defines the properties and methods of a security token service (STS).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-102">若要建立您必須衍生自 STS<xref:System.IdentityModel.SecurityTokenService>類別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-102">To create an STS you must derive from the <xref:System.IdentityModel.SecurityTokenService> class.</span></span> <span data-ttu-id="ee1b1-103">在您的自訂類別必須，至少覆寫<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>和<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-103">In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="ee1b1-104">這些覆寫時，STS 建立使用所有其他方法的類別中定義的預設實作是能夠發出安全性權杖，以回應安全性權杖要求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-104">With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</span></span> <span data-ttu-id="ee1b1-105">也就是說，會實作 Ws-trust 規格中定義的問題繫結。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-105">That is, the Issue binding defined in the WS-Trust specification is implemented.</span></span> <span data-ttu-id="ee1b1-106">這個繫結中實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-106">This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="ee1b1-107">無其他 1.1、WS-Trust 繫結 （更新、 Cancel 和驗證） 的實作在預設案例中，而且如果遇到對應至其中一個繫結 RST，將會傳回給呼叫端的適當的錯誤。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-107">None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</span></span> <span data-ttu-id="ee1b1-108">您當然可以覆寫適當的方法 (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>， <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>，和<xref:System.IdentityModel.SecurityTokenService.Validate%2A>) 將在 STS 中實作這些繫結。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-108">You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee1b1-109">實作可實際執行的 STS 時，需要仔細規劃和相當多的資源，以減少在公開這類服務固有的潛在安全性風險。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-109">Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</span></span> <span data-ttu-id="ee1b1-110">大部分的開發人員使用 Windows Identity Foundation (WIF) 會將開發外包到 STS，身分識別管理的應用程式而開發 STS 本身。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-110">Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</span></span> <span data-ttu-id="ee1b1-111">WIF 提供 Visual Studio 擴充功能，可協助開發人員在開發環境中測試解決方案的身分識別和存取 Visual Studio 2012 的工具。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-111">WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</span></span> <span data-ttu-id="ee1b1-112">此工具包含 STS， `LocalSTS`，您可以設定為可提供給您正在開發的應用程式的特定宣告。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-112">This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing.</span></span> <span data-ttu-id="ee1b1-113">如需身分識別和存取工具的詳細資訊，請參閱[Identity and Access Tool for Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-113">For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md).</span></span> <span data-ttu-id="ee1b1-114">在某些情況下，`LocalSTS`可能不會提供適當地測試您的應用程式所需的功能; 例如，涉及的案例中開發使用的自訂權杖處理常式的應用程式。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-114">In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</span></span> <span data-ttu-id="ee1b1-115">在這些情況下，您可以從衍生<xref:System.IdentityModel.SecurityTokenService>建立一或多個簡單 Sts，，可以部署在您的開發環境，而且，可用來測試您的應用程式中的這類功能。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-115">In these cases, you can derive from <xref:System.IdentityModel.SecurityTokenService> to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</span></span> <span data-ttu-id="ee1b1-116">本節的其餘部分著重於所公開的方法<xref:System.IdentityModel.SecurityTokenService>類別可讓您實作簡單的 STS 和延伸的權杖發行管線。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-116">The rest of this section focuses on the methods exposed by the <xref:System.IdentityModel.SecurityTokenService> class that enable you to implement a simple STS and extend the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="ee1b1-117">下列清單會提供給開發人員在測試或開發環境中使用的方法，其中最重要的簡短概觀。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-117">The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</span></span>  
  
-   <span data-ttu-id="ee1b1-118"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ee1b1-118">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="ee1b1-119">這個方法會傳回<xref:System.IdentityModel.Scope>包含 RP 的相關資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-119">This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP.</span></span> <span data-ttu-id="ee1b1-120">此物件會在權杖發行管線的其餘部分，並包含在回應中，使用 簽署和加密認證的相關資訊，以及`AppliesTo`和`ReplyTo`（如有必要） 位址。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-120">This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses.</span></span> <span data-ttu-id="ee1b1-121">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-121">You must override this method.</span></span>  
  
-   <span data-ttu-id="ee1b1-122"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ee1b1-122">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method.</span></span> <span data-ttu-id="ee1b1-123">這個方法會傳回<xref:System.Security.Claims.ClaimsIdentity>物件，其中包含要傳回給 RP 的宣告。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-123">This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP.</span></span> <span data-ttu-id="ee1b1-124">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-124">You must override this method.</span></span>  
  
-   <span data-ttu-id="ee1b1-125"><xref:System.IdentityModel.SecurityTokenService.Issue%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ee1b1-125">The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="ee1b1-126">這個方法會實作權杖要求管線中，處理傳入安全性權杖的要求 (RST)，並傳回呼叫者，其中包含可用來向 RP 的權杖回應 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-126">This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</span></span> <span data-ttu-id="ee1b1-127">中定義的其他方法的許多<xref:System.IdentityModel.SecurityTokenService>類別會呼叫這個方法，包括<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>和<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-127">Many of the other methods defined in the <xref:System.IdentityModel.SecurityTokenService> class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="ee1b1-128">您沒有覆寫這個方法，但了解權杖要求管線，它會實作可能會很有幫助。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-128">You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</span></span>  
  
 <span data-ttu-id="ee1b1-129">透過設定 STS<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>類別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-129">An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee1b1-130">中所使用的程式碼範例<xref:System.IdentityModel.SecurityTokenService>取自主題`Custom Token`範例。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-130">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="ee1b1-131">此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)，並包含被動 STS 的實作，能夠為 SWT 權杖。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-131">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="ee1b1-132">如需如何實作主動式 STS 的範例，您可以參閱`Federation Metadata`範例。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-132">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="ee1b1-133">如需這些範例和其他可用的範例為 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-133">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="ee1b1-134">下列程式碼顯示被動 STS 的實作使用<xref:System.IdentityModel.SecurityTokenService>類別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-134">The following code shows the implementation of a passive STS using the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#3)]  
  
 <span data-ttu-id="ee1b1-135">下列程式碼示範如何叫用自訂的被動 STS，以處理 WS-同盟要求，藉由呼叫<xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType>背後的程式碼中的方法`default.aspx.cs`檔案。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-135">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="ee1b1-136">您必須同時覆寫<see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />而<see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-136">You must override both the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> and the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> methods.</span></span></para></block>
    <altmember cref="T:System.IdentityModel.Scope" />
    <altmember cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
    <altmember cref="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenService(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.SecurityTokenService : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration -&gt; System.IdentityModel.SecurityTokenService" Usage="new System.IdentityModel.SecurityTokenService securityTokenServiceConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration"><span data-ttu-id="ee1b1-137"><see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />，包含 STS 的設定。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-137">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the settings for the STS.</span></span></param>
        <summary><span data-ttu-id="ee1b1-138">使用指定的組態設定，從衍生類別呼叫以初始化 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-138">Called from derived classes to initialize the <see cref="T:System.IdentityModel.SecurityTokenService" /> class using the specified configuration settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-139">您可以使用這個建構函式來初始化的領域提供者和權杖簽發者憑證。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-139">Use this constructor to initialize scope provider and token issuer certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee1b1-140"><paramref name="securityTokenServiceConfiguration" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-140"><paramref name="securityTokenServiceConfiguration" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCancel (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginCancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginCancel (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-141"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-141">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-142"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-142">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-143">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-143">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="ee1b1-144"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步取消作業的通知。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-144">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous cancel operation.</span></span></param>
        <param name="state"><span data-ttu-id="ee1b1-145">包含與非同步取消作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-145">An object that contains state information associated with the asynchronous cancel operation.</span></span></param>
        <summary><span data-ttu-id="ee1b1-146">在衍生類別中覆寫時，開始非同步 WS-Trust 取消要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-146">When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-147"><see cref="T:System.IAsyncResult" />，這個物件會參考非同步取消作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-148">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-148">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetOutputClaimsIdentity (principal, request, scope, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-149"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-149">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-150"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-150">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-151">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-151">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="scope"><span data-ttu-id="ee1b1-152"><see cref="T:System.IdentityModel.Scope" />，其中包含與要求相關聯之信賴憑證者的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-152">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span></span></param>
        <param name="callback"><span data-ttu-id="ee1b1-153"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步作業的通知。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-153">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="ee1b1-154">包含與非同步作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-154">An object that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee1b1-155">在衍生類別中覆寫時，開始非同步呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-155">When overridden in a derived class, begins an asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-156"><see cref="T:System.IAsyncResult" />，這個項目會參考非同步作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-156">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-157">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-157">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetScope">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetScope (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetScope (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-158"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-158">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-159"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-159">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-160">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-160">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="ee1b1-161"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步作業的通知。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-161">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="ee1b1-162">包含與非同步作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-162">An object that contains state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee1b1-163">在衍生類別中覆寫時，開始 <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> 方法的非同步呼叫。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-163">When overridden in a derived class, begins an asynchronous call for the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-164"><see cref="T:System.IAsyncResult" />，這個物件會參考非同步取消作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-164">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-165">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-165">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIssue">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginIssue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginIssue (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginIssue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginIssue (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-166"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-166">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-167"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-167">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-168">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-168">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="ee1b1-169"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步核發作業的通知。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-169">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous issue operation.</span></span></param>
        <param name="state"><span data-ttu-id="ee1b1-170">包含與非同步發行作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-170">An object that contains state information associated with the asynchronous issue operation.</span></span></param>
        <summary><span data-ttu-id="ee1b1-171">在衍生類別中覆寫時，開始非同步 WS-Trust 發行要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-171">When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-172"><see cref="T:System.IAsyncResult" />，會參考非同步核發作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-172">The <see cref="T:System.IAsyncResult" /> that references the asynchronous issue operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-173">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-173">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenew">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRenew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRenew (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRenew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginRenew (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-174"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-174">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-175"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-175">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-176">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-176">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="ee1b1-177"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步更新作業的通知。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-177">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous renew operation.</span></span></param>
        <param name="state"><span data-ttu-id="ee1b1-178">包含與非同步更新作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-178">An object that contains state information associated with the asynchronous renew operation.</span></span></param>
        <summary><span data-ttu-id="ee1b1-179">在衍生類別中覆寫時，開始非同步 WS-Trust 更新要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-179">When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-180"><see cref="T:System.IAsyncResult" />，會參考非同步更新作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-180">The <see cref="T:System.IAsyncResult" /> that references the asynchronous renew operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-181">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-181">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginValidate">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginValidate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginValidate (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginValidate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginValidate (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-182"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-182">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-183"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-183">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-184">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-184">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="callback"><span data-ttu-id="ee1b1-185"><see cref="T:System.AsyncCallback" />　委派，這個委派會接收完成非同步驗證作業的通知。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-185">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous validate operation.</span></span></param>
        <param name="state"><span data-ttu-id="ee1b1-186">包含與非同步驗證作業相關聯之狀態資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-186">An object that contains state information associated with the asynchronous validate operation.</span></span></param>
        <summary><span data-ttu-id="ee1b1-187">在衍生類別中覆寫時，開始非同步 WS-Trust 驗證要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-187">When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-188"><see cref="T:System.IAsyncResult" />，會參考非同步驗證作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-188">The <see cref="T:System.IAsyncResult" /> that references the asynchronous validate operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-189">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-189">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Cancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Cancel (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-190"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-190">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-191"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-191">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-192">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-192">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="ee1b1-193">在衍生類別中覆寫時，處理 WS-Trust 取消要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-193">When overridden in a derived class, processes a WS-Trust Cancel request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-194"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-194">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-195">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-195">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenDescriptor ^ CreateSecurityTokenDescriptor(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor&#xA;override this.CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor" Usage="securityTokenService.CreateSecurityTokenDescriptor (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="ee1b1-196">連入的權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-196">The incoming token request.</span></span></param>
        <param name="scope"><span data-ttu-id="ee1b1-197">從 <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> 傳回的 <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-197">The <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> object returned from <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span></span></param>
        <summary><span data-ttu-id="ee1b1-198">建立 <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-198">Creates an instance of a <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-199"><see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-199">The <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-200">在之後的權杖發行期間叫用<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-200">Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee1b1-201"><paramref name="request" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-201"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ee1b1-202">-或-</span><span class="sxs-lookup"><span data-stu-id="ee1b1-202">-or-</span></span> 
 <span data-ttu-id="ee1b1-203"><paramref name="scope" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-203"><paramref name="scope" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCancel (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee1b1-204"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-204">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-205">在衍生類別中覆寫時，完成非同步 WS-Trust 取消要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-205">When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-206"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-206">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-207">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-207">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetOutputClaimsIdentity (result As IAsyncResult) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ EndGetOutputClaimsIdentity(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.EndGetOutputClaimsIdentity result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee1b1-208"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-208">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-209">在衍生類別中覆寫時，完成非同步呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-209">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-210">包含將放入已發行安全性權杖之宣告集合的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-210">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-211">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-211">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetScope">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope EndGetScope(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetScope (result As IAsyncResult) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Scope ^ EndGetScope(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope&#xA;override this.EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope" Usage="securityTokenService.EndGetScope result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee1b1-212"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-212">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-213">在衍生類別中覆寫時，完成非同步呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-213">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-214">封裝與 <see cref="T:System.IdentityModel.Scope" /> 方法呼叫中指定要求 (RST) 相關聯之信賴憑證者 (RP) 資訊的 <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-214">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-215">這個方法的預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-215">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIssue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndIssue (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndIssue(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndIssue result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee1b1-216"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-216">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-217">在衍生類別中覆寫時，完成非同步 WS-Trust 發行要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-217">When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-218"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-218">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-219">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-219">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRenew (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndRenew(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndRenew result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee1b1-220"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-220">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-221">在衍生類別中覆寫時，完成非同步 WS-Trust 更新要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-221">When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-222"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-222">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-223">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-223">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndValidate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndValidate (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndValidate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndValidate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee1b1-224"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> 方法時所傳回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-224">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-225">在衍生類別中覆寫時，完成非同步 WS-Trust 驗證要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-225">When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-226"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-226">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-227">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-227">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="protected virtual string GetIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : unit -&gt; string&#xA;override this.GetIssuerName : unit -&gt; string" Usage="securityTokenService.GetIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee1b1-228">取得安全性權杖服務 (STS) 的名稱。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-228">Gets the name of the security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="ee1b1-229">簽發者名稱。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-229">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-230">從權杖的發行管線中實作的預設會呼叫這個方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-230">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="ee1b1-231">預設實作會傳回<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>屬性設定透過存取從<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-231">The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Claims::ClaimsIdentity ^ GetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.GetOutputClaimsIdentity (principal, request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-232"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-232">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-233"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-233">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-234">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-234">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <param name="scope"><span data-ttu-id="ee1b1-235"><see cref="T:System.IdentityModel.Scope" />，其中包含與要求相關聯之信賴憑證者的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-235">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span></span> <span data-ttu-id="ee1b1-236">這是 <see cref="T:System.IdentityModel.Scope" /> 方法所傳回的 <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-236">This is the <see cref="T:System.IdentityModel.Scope" /> object that was returned by the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span></span></param>
        <summary><span data-ttu-id="ee1b1-237">在衍生類別中覆寫，這個方法會傳回包含在已發行權杖中的輸出主體集合。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-237">When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-238">包含將放入已發行安全性權杖之宣告集合的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-238">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-239"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法從權杖發行管線中，藉由呼叫<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-239">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="ee1b1-240">它會傳回<xref:System.Security.Claims.ClaimsIdentity>，其中包含要納入發行的安全性權杖的權杖要求者為基礎的宣告 (`principal`參數)，傳入的 RST (`request`參數)，而權杖的信賴憑證者合作對象 （`scope`參數)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-240">It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter).</span></span> <span data-ttu-id="ee1b1-241">這個方法中的邏輯的主要考量回答下列問題：</span><span class="sxs-lookup"><span data-stu-id="ee1b1-241">The logic in this method is primarily concerned with answering the following questions:</span></span>  
  
-   <span data-ttu-id="ee1b1-242">**根據其適用的 RP 回應中時，應該會包含哪個宣告類型？**</span><span class="sxs-lookup"><span data-stu-id="ee1b1-242">**Which claim types should be included in the response based on the RP for which it is intended?**</span></span> <span data-ttu-id="ee1b1-243">通常這會決定所需的每個 RP 的宣告型別的清單中的每個 RP 基礎或在個別要求基礎上藉由檢查<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A>要求的屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-243">Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request.</span></span> <span data-ttu-id="ee1b1-244">不過，邏輯和詳細資料，來判斷要包含在回應中的宣告會完全實作。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-244">However, the logic and details for determining the claims to include in the response is completely up to your implementation.</span></span>  
  
-   <span data-ttu-id="ee1b1-245">**哪個宣告值都應該指派給回應中的宣告？**</span><span class="sxs-lookup"><span data-stu-id="ee1b1-245">**Which claim values should be assigned to the claims in the response?**</span></span> <span data-ttu-id="ee1b1-246">身分識別提供者 (IP STS) 這通常表示要求者的中使用一或多個宣告<xref:System.Security.Claims.ClaimsPrincipal>(由`principal`參數) 來存取存放區 （或其他實體） 來傳回必要的宣告類型的值。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-246">For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor's <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types.</span></span> <span data-ttu-id="ee1b1-247">同盟提供者 (R STS) 這通常表示要求者的連入宣告，以滿足要求; 上執行某種類型的處理也可能會提供要求者，並傳遞其他人透過未修改某些宣告上進行篩選或轉換。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-247">For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor's incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</span></span> <span data-ttu-id="ee1b1-248">當然，例決定要包含在回應中的宣告的詳細資料和邏輯如何決定這些宣告的值是由您的實作。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-248">Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee1b1-249">使用本主題中的程式碼範例取自`Custom Token`範例。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-249">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="ee1b1-250">此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)，並包含被動 STS 的實作，能夠為 SWT 權杖。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-250">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="ee1b1-251">如需如何實作主動式 STS 的範例，您可以參閱`Federation Metadata`範例。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-251">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="ee1b1-252">如需這些範例和其他可用的範例為 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-252">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="ee1b1-253">下列程式碼示範如何覆寫<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法來傳回宣告 sts。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-253">The following code shows how to override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to return claims for your STS.</span></span> <span data-ttu-id="ee1b1-254">在此範例中，會忽略該要求安全性權杖 (RST) 訊息，就會傳回根據使用者通過驗證後在 STS 的宣告集合。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-254">In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ee1b1-255">您必須在 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別的實作中覆寫此方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-255">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></para></block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetProofToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.ProofDescriptor GetProofToken(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::ProofDescriptor ^ GetProofToken(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor&#xA;override this.GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor" Usage="securityTokenService.GetProofToken (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.ProofDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="ee1b1-256">表示傳入權杖要求 (RST) 的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-256">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span></span></param>
        <param name="scope"><span data-ttu-id="ee1b1-257">會封裝信賴憑證者的相關資訊的<see cref="T:System.IdentityModel.Scope" />執行個體。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-257">The <see cref="T:System.IdentityModel.Scope" /> instance that encapsulates information about the relying party.</span></span></param>
        <summary><span data-ttu-id="ee1b1-258">取得要包含在回應 (RSTR) 的證明權杖。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-258">Gets the proof token to be included in the response (RSTR).</span></span></summary>
        <returns><span data-ttu-id="ee1b1-259"><see cref="T:System.IdentityModel.Tokens.ProofDescriptor" />，表示新建立的證明描述元。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-259">A <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> that represents the newly created proof descriptor.</span></span> <span data-ttu-id="ee1b1-260">證明描述元可以是非對稱式證明描述元、對稱式證明描述元，或<see langword="null" />（在持有人權杖的情況下）。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-260">The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <see langword="null" /> in the bearer token case.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-261">從權杖的發行管線中實作的預設會呼叫這個方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-261">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="ee1b1-262">預設實作會傳回證明描述元，則會擲回適當的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-262">The default implementation returns a proof descriptor or throws an appropriate exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee1b1-263"><paramref name="request" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-263"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ee1b1-264">-或-</span><span class="sxs-lookup"><span data-stu-id="ee1b1-264">-or-</span></span> 
 <span data-ttu-id="ee1b1-265"><paramref name="scope" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-265"><paramref name="scope" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestorProofEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRequestorProofEncryptingCredentials (request As RequestSecurityToken) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetRequestorProofEncryptingCredentials(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials&#xA;override this.GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials" Usage="securityTokenService.GetRequestorProofEncryptingCredentials request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="ee1b1-266">表示傳入權杖要求 (RST) 的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-266">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span></span></param>
        <summary><span data-ttu-id="ee1b1-267">取得要求者的證明加密認證。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-267">Gets the requestor's proof encrypting credentials.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-268">表示要求者之加密認證的 <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-268">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object that represents the requestor's encrypting credentials.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-269">這個方法會從呼叫<xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-269">This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.</span></span>  
  
 <span data-ttu-id="ee1b1-270">預設實作會執行下列作業。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-270">The default implementation does the following.</span></span> <span data-ttu-id="ee1b1-271">傳回`null`不是否有任何要求中指定的加密語彙基元 (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType>屬性是`null`)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-271">Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> property is `null`).</span></span> <span data-ttu-id="ee1b1-272">否則，如果它可以取得語彙基元<xref:System.IdentityModel.Tokens.X509SecurityToken>，它會傳回根據該語彙基元的認證。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-272">Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token.</span></span> <span data-ttu-id="ee1b1-273">如果無法解析語彙基元<xref:System.IdentityModel.Tokens.X509SecurityToken>、<xref:System.IdentityModel.RequestFailedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-273">If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee1b1-274"><paramref name="request" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-274"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponse (request As RequestSecurityToken, tokenDescriptor As SecurityTokenDescriptor) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ GetResponse(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.GetResponse (request, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="ee1b1-275">包含權杖要求的 RST。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-275">The RST that contains the token request.</span></span></param>
        <param name="tokenDescriptor"><span data-ttu-id="ee1b1-276">權杖描述元，其中包含要用於已發行的權杖的資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-276">The token descriptor that contains the information to use for the issued token.</span></span></param>
        <summary><span data-ttu-id="ee1b1-277">使用指定的要求 (RST) 和安全性權杖描述元，建立包含核發之權杖的回應 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-277">Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-278">回應 (RSTR)，如果無法從指定的要求和權杖描述元建立回應則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-278">The response (RSTR) or <see langword="null" /> if a response cannot be created from the specified request and token descriptor.</span></span> <span data-ttu-id="ee1b1-279">如果 <paramref name="tokenDescriptor" /> 參數為 <see langword="null" />，則預設實作會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-279">The default implementation returns <see langword="null" /> if the <paramref name="tokenDescriptor" /> parameter is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-280"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>方法，會從權杖發行管線中，藉由呼叫的最後一個步驟<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-280">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="ee1b1-281">建立並使用原始的連入要求 (RST) 和權杖發行管線中的上一個步驟期間所建立的權杖描述元傳回回應 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-281">It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="ee1b1-282">預設實作會建立傳遞 RST 的要求參數中指定的 RSTR<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType>建構函式、 叫用<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType>方法，在 權杖描述元傳遞至<xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>套用其屬性，以新建立 RSTR，設定<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A>屬性上使用 RSTR<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>屬性上的權杖描述元，以及最後設定<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>RSTR 根據下表中的屬性：</span><span class="sxs-lookup"><span data-stu-id="ee1b1-282">The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> method on the token descriptor passed into <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:</span></span>  
  
|<span data-ttu-id="ee1b1-283">`RST.ReplyTo` 屬性</span><span class="sxs-lookup"><span data-stu-id="ee1b1-283">`RST.ReplyTo` property</span></span>|<span data-ttu-id="ee1b1-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> property.</span></span>|<span data-ttu-id="ee1b1-285">`RSTR.ReplyTo` 屬性</span><span class="sxs-lookup"><span data-stu-id="ee1b1-285">`RSTR.ReplyTo` property</span></span>|  
|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="ee1b1-286">設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-286">Set</span></span>|<span data-ttu-id="ee1b1-287">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-287">Not Set</span></span>|<span data-ttu-id="ee1b1-288">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-288">Not Set</span></span>|  
|<span data-ttu-id="ee1b1-289">設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-289">Set</span></span>|<span data-ttu-id="ee1b1-290">設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-290">Set</span></span>|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ee1b1-291">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-291">Not Set</span></span>|<span data-ttu-id="ee1b1-292">設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-292">Set</span></span>|<span data-ttu-id="ee1b1-293">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-293">Not Set</span></span>|  
|<span data-ttu-id="ee1b1-294">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-294">Not Set</span></span>|<span data-ttu-id="ee1b1-295">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-295">Not Set</span></span>|<span data-ttu-id="ee1b1-296">未設定</span><span class="sxs-lookup"><span data-stu-id="ee1b1-296">Not Set</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope GetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScope (principal As ClaimsPrincipal, request As RequestSecurityToken) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Scope ^ GetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Scope" Usage="securityTokenService.GetScope (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-297"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示提出要求的用戶端。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-297">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the client making the request.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-298">表示傳入要求 (RST) 的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-298">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming request (RST).</span></span></param>
        <summary><span data-ttu-id="ee1b1-299">取得 <see cref="T:System.IdentityModel.Scope" /> 物件，其中包含與所指定的要求 (RST) 相關聯之信賴憑證者 (RP) 的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-299">Gets a <see cref="T:System.IdentityModel.Scope" /> object that contains information about the relying party (RP) associated with the specified request (RST).</span></span> <span data-ttu-id="ee1b1-300">您必須在 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別的實作中覆寫此方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-300">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-301">封裝與要求相關聯之 RP 資訊的 <see cref="T:System.IdentityModel.Scope" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-301">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the RP information associated with the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-302"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法呼叫從權杖發行管線之後<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法，而且應該傳回<xref:System.IdentityModel.Scope>設定連入要求的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-302">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request.</span></span> <span data-ttu-id="ee1b1-303">(權杖發行管線中實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。)<xref:System.IdentityModel.Scope>物件封裝 RP 與安全性權杖要求 (RST) 相關聯的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-303">(The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST).</span></span> <span data-ttu-id="ee1b1-304">這包括用於 RP 和要加密任何發行的權杖和/或回應中的對稱金鑰的加密和簽署認證的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-304">This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</span></span> <span data-ttu-id="ee1b1-305">在執行某些一般工作<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="ee1b1-305">Some typical tasks performed in the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method are:</span></span>  
  
-   <span data-ttu-id="ee1b1-306">判斷語彙基元適用的 RP 是可辨識的 RP。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-306">Determine whether the RP for which the token is intended is a recognized RP.</span></span> <span data-ttu-id="ee1b1-307">如何完成此作業取決於您的實作。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-307">How this is accomplished depends on your implementation.</span></span> <span data-ttu-id="ee1b1-308">如果預期的 RP 不是有效的 RP 此 sts，則這個方法應該擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-308">If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
-   <span data-ttu-id="ee1b1-309">判斷回應 (RSTR) 中使用和設定簽署認證<xref:System.IdentityModel.Scope.SigningCredentials%2A>屬性據此。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-309">Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.</span></span>  
  
-   <span data-ttu-id="ee1b1-310">決定是否應該加密回應和/或任何包含的對稱金鑰，以及要用於加密的認證。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-310">Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</span></span> <span data-ttu-id="ee1b1-311">設定<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>， <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>，和<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>屬性據此。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-311">Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ee1b1-312">根據預設，<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>並<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>屬性會設定`true`防止 STS 發出權杖，並不安全。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-312">By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure.</span></span> <span data-ttu-id="ee1b1-313">我們建議您永遠不會設定為這些屬性`false`在生產環境中。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-313">It is recommended that these properties never be set to `false` in a production environment.</span></span>  
  
-   <span data-ttu-id="ee1b1-314">決定應該要傳回的回應的位址。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-314">Determine the address to which the response should be returned.</span></span> <span data-ttu-id="ee1b1-315">設定<xref:System.IdentityModel.Scope.AppliesToAddress%2A>或<xref:System.IdentityModel.Scope.ReplyToAddress%2A>屬性據此。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-315">Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee1b1-316">使用本主題中的程式碼範例取自`Custom Token`範例。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-316">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="ee1b1-317">此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)，並包含被動 STS 的實作，能夠為 SWT 權杖。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-317">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="ee1b1-318">如需如何實作主動式 STS 的範例，您可以參閱`Federation Metadata`範例。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-318">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="ee1b1-319">如需這些範例和其他可用的範例為 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-319">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="ee1b1-320">下列程式碼範例示範 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-320">The following code example shows an implementation of the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="ee1b1-321">此實作可讓您確認，RP 能辨識的 STS，驗證<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>要求與集合中的地址<xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType>屬性據此，和設定簽署和加密憑證以搭配 RP 依據憑證在檔案中，是硬式編碼。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-321">This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ee1b1-322">您必須在 <see cref="T:System.IdentityModel.SecurityTokenService" /> 類別的實作中覆寫此方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-322">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></para></block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityTokenHandler">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler(string requestedTokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSecurityTokenHandler (requestedTokenType As String) As SecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenHandler ^ GetSecurityTokenHandler(System::String ^ requestedTokenType);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler&#xA;override this.GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler" Usage="securityTokenService.GetSecurityTokenHandler requestedTokenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestedTokenType"><span data-ttu-id="ee1b1-323">包含要求之語彙基元型別 URI 的字串。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-323">A string that contains the requested token type URI.</span></span></param>
        <summary><span data-ttu-id="ee1b1-324">取得適當的安全性權杖處理常式，以發出指定之類型的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-324">Gets the appropriate security token handler for issuing a security token of the specified type.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-325">表示要用於建立所發行安全性權杖之權杖處理常式的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-325">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that represents the token handler to be used for creating the issued security token.</span></span> <span data-ttu-id="ee1b1-326">如果不支援要求的語彙基元類型 (沒有為指定的語彙基元類型設定的處理常式)，則傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-326">Returns <see langword="null" /> if the requested token type is not supported (there is no handler configured for the specified token type).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-327">在預設實作中如果`requestedTokenType`是`null`或空字串，在使用語彙基元的型別，從設定的預設值。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-327">In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used.</span></span> <span data-ttu-id="ee1b1-328">這由<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>經由 STS 組態物件屬性<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-328">This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 <span data-ttu-id="ee1b1-329">從權杖的發行管線中實作的預設會呼叫這個方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-329">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTokenLifetime">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime(class System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenLifetime (requestLifetime As Lifetime) As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::Lifetime ^ GetTokenLifetime(System::IdentityModel::Protocols::WSTrust::Lifetime ^ requestLifetime);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime&#xA;override this.GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime" Usage="securityTokenService.GetTokenLifetime requestLifetime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
      </Parameters>
      <Docs>
        <param name="requestLifetime"><span data-ttu-id="ee1b1-330"><see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" />，表示要求的存留期。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-330">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the requested lifetime.</span></span></param>
        <summary><span data-ttu-id="ee1b1-331">取得已發行權杖的存留期。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-331">Gets the lifetime for the issued token.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-332">表示授與之存留期的 <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-332">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the granted lifetime.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-333">使用 RST 中到達的存留期通常呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-333">This method is normally called with the lifetime that arrived in the RST.</span></span> <span data-ttu-id="ee1b1-334">在預設實作中，依下表被計算權杖的存留期。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-334">In the default implementation, the token lifetime is calculated according to the following table.</span></span>  
  
|<span data-ttu-id="ee1b1-335">建立 (in)</span><span class="sxs-lookup"><span data-stu-id="ee1b1-335">Created (in)</span></span>|<span data-ttu-id="ee1b1-336">到期 (in)</span><span class="sxs-lookup"><span data-stu-id="ee1b1-336">Expires (in)</span></span>|<span data-ttu-id="ee1b1-337">建立 (in)</span><span class="sxs-lookup"><span data-stu-id="ee1b1-337">Created (in)</span></span>|<span data-ttu-id="ee1b1-338">到期 (out)</span><span class="sxs-lookup"><span data-stu-id="ee1b1-338">Expires (out)</span></span>|  
|--------------------|--------------------|--------------------|---------------------|  
|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="ee1b1-339">C</span><span class="sxs-lookup"><span data-stu-id="ee1b1-339">C</span></span>|`null`|<span data-ttu-id="ee1b1-340">C</span><span class="sxs-lookup"><span data-stu-id="ee1b1-340">C</span></span>|<span data-ttu-id="ee1b1-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ee1b1-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span></span>|  
|`null`|<span data-ttu-id="ee1b1-342">E</span><span class="sxs-lookup"><span data-stu-id="ee1b1-342">E</span></span>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<span data-ttu-id="ee1b1-343">E</span><span class="sxs-lookup"><span data-stu-id="ee1b1-343">E</span></span>|  
|<span data-ttu-id="ee1b1-344">C</span><span class="sxs-lookup"><span data-stu-id="ee1b1-344">C</span></span>|<span data-ttu-id="ee1b1-345">E</span><span class="sxs-lookup"><span data-stu-id="ee1b1-345">E</span></span>|<span data-ttu-id="ee1b1-346">C</span><span class="sxs-lookup"><span data-stu-id="ee1b1-346">C</span></span>|<span data-ttu-id="ee1b1-347">E</span><span class="sxs-lookup"><span data-stu-id="ee1b1-347">E</span></span>|  
  
 <span data-ttu-id="ee1b1-348">從權杖的發行管線中實作的預設會呼叫這個方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-348">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="Issue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Issue (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Issue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Issue (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-349"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-349">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-350"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-350">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-351">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-351">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="ee1b1-352">發行安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-352">Issues a security token.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-353">包含已發行安全性權杖的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-353">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that contains the issued security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-354">這個方法會實作 Ws-trust 規格中定義的問題繫結。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-354">This method implements the Issue binding defined in the WS-Trust specification.</span></span> <span data-ttu-id="ee1b1-355">預設實作<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法處理連入要求 (RST) 權杖的發行 （宣告發行） 管線，並傳回其中一個回應 (RSTR，其中包含安全性權杖來驗證的適當宣告)RP 或適當的例外狀況的要求者。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-355">The default implementation of the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</span></span> <span data-ttu-id="ee1b1-356">權杖發行管線中的預設實作是由下列方法的呼叫所組成 (的<xref:System.IdentityModel.SecurityTokenService>類別)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-356">The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).</span></span>  
  
1.  <span data-ttu-id="ee1b1-357"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法以驗證要求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-357">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).</span></span>  
  
2.  <span data-ttu-id="ee1b1-358"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法來取得<xref:System.IdentityModel.Scope>包含信賴憑證者 (RP) 與要求相關聯的相關資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-358">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request.</span></span> <span data-ttu-id="ee1b1-359">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-359">You must override this method.</span></span> <span data-ttu-id="ee1b1-360">如果<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>會傳回`null`、<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-360">If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.</span></span>  
  
3.  <span data-ttu-id="ee1b1-361"><xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A>方法來傳回安全性權杖描述元會根據 RST 和<xref:System.IdentityModel.Scope>上一個步驟傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-361">The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step.</span></span> <span data-ttu-id="ee1b1-362">安全性權杖描述元 (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) 包含可由權杖處理常式的表單中要求的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-362">The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler.</span></span> <span data-ttu-id="ee1b1-363"><xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType>屬性設定為呼叫所傳回的描述元。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-363">The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> property is set to the descriptor returned by the call.</span></span> <span data-ttu-id="ee1b1-364">如果`null`會傳回或如果<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>屬性的描述元是`null`、<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-364">If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="ee1b1-365">如果例外狀況也擲回<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType>屬性是`true`但<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>傳回描述元上的屬性是`null`。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-365">The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.</span></span>  
  
4.  <span data-ttu-id="ee1b1-366"><xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A>方法來取得適當的權杖處理常式會根據要求的語彙基元的類型。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-366">The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested.</span></span> <span data-ttu-id="ee1b1-367">如果`null`會傳回<xref:System.NotImplementedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-367">If `null` is returned, a <xref:System.NotImplementedException> is thrown.</span></span>  
  
5.  <span data-ttu-id="ee1b1-368"><xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A>方法來取得權杖的簽發者名稱。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-368">The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token.</span></span> <span data-ttu-id="ee1b1-369">會擲回<xref:System.InvalidOperationException>名稱是否`null`或空的; 否則會將<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>描述元上的屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-369">Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.</span></span>  
  
6.  <span data-ttu-id="ee1b1-370"><xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>方法來取得的權杖並將設定的存留期<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>描述元上的屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-370">The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.</span></span>  
  
7.  <span data-ttu-id="ee1b1-371"><xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>方法來取得要包含在發行的權杖和集合中的證明權杖<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A>描述元上的屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-371">The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.</span></span>  
  
8.  <span data-ttu-id="ee1b1-372"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法來取得要包含在集與發行的權杖中宣告<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>描述元上的屬性。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-372">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor.</span></span> <span data-ttu-id="ee1b1-373">您必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-373">You must override this method.</span></span>  
  
9. <span data-ttu-id="ee1b1-374"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>方法用來建立包含核發之權杖的回應 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-374">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.</span></span>  
  
 <span data-ttu-id="ee1b1-375">您可以覆寫<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法，以實作自訂權杖的發行管線，不過這通常是不必要的大部份的自訂實作的開發和測試環境中<xref:System.IdentityModel.SecurityTokenService>是類別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-375">You can override the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended.</span></span> <span data-ttu-id="ee1b1-376">在大多數的情況下您覆寫<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>並<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法，並選擇性地覆寫<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法，以提供可自行維修的 STS，為您的環境。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-376">In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment.</span></span> <span data-ttu-id="ee1b1-377">如果自訂需要進一步通常可以將它覆寫方法實作上面所列的權杖發行管線的預設值的每個階段中提供。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-377">If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Principal" />
      <MemberSignature Language="VB.NET" Value="Public Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); void set(System::Security::Claims::ClaimsPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal with get, set" Usage="System.IdentityModel.SecurityTokenService.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee1b1-378">取得或設定與目前執行個體相關聯的主體。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-378">Gets or sets the principal associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="ee1b1-379">表示目前主體的 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-379">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the current principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Renew (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Renew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Renew (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-380"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-380">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-381"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-381">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-382">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-382">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="ee1b1-383">在衍生類別中覆寫時，處理 WS-Trust 更新要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-383">When overridden in a derived class, processes a WS-Trust Renew request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-384"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-384">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-385">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-385">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ Request { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.SecurityTokenService.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee1b1-386">取得或設定與目前執行個體相關聯的安全性權杖要求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-386">Gets or sets the security token request (RST) associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="ee1b1-387">包含要求的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-387">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that contains the request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Scope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Scope Scope" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Scope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Scope ^ Scope { System::IdentityModel::Scope ^ get(); void set(System::IdentityModel::Scope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.IdentityModel.Scope with get, set" Usage="System.IdentityModel.SecurityTokenService.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee1b1-388">取得或設定與目前執行個體相關聯的範圍。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-388">Gets or sets the scope associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="ee1b1-389">表示權杖發佈要求組態的 <see cref="T:System.IdentityModel.Scope" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-389">A <see cref="T:System.IdentityModel.Scope" /> that represents the configuration for the token issuance request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected Property SecurityTokenDescriptor As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::SecurityTokenDescriptor ^ SecurityTokenDescriptor { System::IdentityModel::Tokens::SecurityTokenDescriptor ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenDescriptor : System.IdentityModel.Tokens.SecurityTokenDescriptor with get, set" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee1b1-390">取得或設定與目前執行個體相關聯的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-390">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associated with the current instance.</span></span></summary>
        <value><span data-ttu-id="ee1b1-391">與目前執行個體相關聯的安全性權杖描述元。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-391">The security token descriptor that is associated with the current instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee1b1-392">嘗試將屬性設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-392">An attempt to set the property to <see langword="null" /> occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee1b1-393">取得擁有者組態執行個體。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-393">Gets the owner configuration instance.</span></span></summary>
        <value><span data-ttu-id="ee1b1-394"><see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />，包含目前執行個體的組態。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-394">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the configuration for the current instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Validate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Validate (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="ee1b1-395"><see cref="T:System.Security.Claims.ClaimsPrincipal" />，表示權杖要求者的身分識別。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-395">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span></span></param>
        <param name="request"><span data-ttu-id="ee1b1-396"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />，表示安全性權杖要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-396">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span></span> <span data-ttu-id="ee1b1-397">這包括要求訊息，以及其他用戶端的相關資訊，例如授權內容。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-397">This includes the request message as well as other client related information such as authorization context.</span></span></param>
        <summary><span data-ttu-id="ee1b1-398">在衍生類別中覆寫時，處理 WS-Trust 驗證要求。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-398">When overridden in a derived class, processes a WS-Trust Validate request.</span></span></summary>
        <returns><span data-ttu-id="ee1b1-399"><see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />，表示要傳回至呼叫端的 RSTR。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-399">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-400">這個方法的預設實作會擲回<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-400">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateRequest(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateRequest (request As RequestSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateRequest(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit&#xA;override this.ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit" Usage="securityTokenService.ValidateRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="ee1b1-401">表示要求的 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-401">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the request.</span></span></param>
        <summary><span data-ttu-id="ee1b1-402">驗證此執行個體封裝的安全性權杖要求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-402">Validates the security token request (RST) encapsulated by this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee1b1-403"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法呼叫從權杖發行管線 (<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法) 來驗證傳入的 RST。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-403">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST.</span></span> <span data-ttu-id="ee1b1-404">RST 為驗證依據之 sts 的需求 （原則），如果無效，會擲回適當的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-404">The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</span></span>  
  
 <span data-ttu-id="ee1b1-405">預設實作<xref:System.IdentityModel.SecurityTokenService>類別支援 RST RSTR 模式和僅問題的繫結的 Ws-trust 規格 (<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>要求的屬性必須設定為<xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-405">The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="ee1b1-406">這個方法的預設實作會強制執行這些需求 （和其他例外狀況的一節所述）。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-406">The default implementation of this method enforces these requirements (and others noted in the exceptions section).</span></span> <span data-ttu-id="ee1b1-407">如果您必須強制執行不同的驗證需求，自訂 sts，您可以覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-407">You can override this method if you must enforce different validation requirements for your custom STS.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException"><span data-ttu-id="ee1b1-408"><paramref name="request" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-408"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ee1b1-409">-或-</span><span class="sxs-lookup"><span data-stu-id="ee1b1-409">-or-</span></span> 
<span data-ttu-id="ee1b1-410">要求的 <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> 屬性不是設為 <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-410">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> property of the request is not set to <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span></span>  
  
<span data-ttu-id="ee1b1-411">-或-</span><span class="sxs-lookup"><span data-stu-id="ee1b1-411">-or-</span></span> 
<span data-ttu-id="ee1b1-412">此要求的<see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" />屬性不是<see langword="null" />或<see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />類別中所定義的其中一個常數。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-412">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> property of the request is not <see langword="null" /> or one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> class.</span></span>  
  
<span data-ttu-id="ee1b1-413">-或-</span><span class="sxs-lookup"><span data-stu-id="ee1b1-413">-or-</span></span> 
<span data-ttu-id="ee1b1-414">此要求的 <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> 是 <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" />，且 <see langword="KeySize" /> 項目存在，但它的值不等於零。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-414">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> of the request is <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> and the <see langword="KeySize" /> element is present, but its value is not equal to zero.</span></span></exception>
        <exception cref="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException"><span data-ttu-id="ee1b1-415">STS 不支援要求的權杖型別 (依據要求的<see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" />屬性的值)。</span><span class="sxs-lookup"><span data-stu-id="ee1b1-415">The STS does not support the request token type (based on the value of the <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> property of the request).</span></span></exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
  </Members>
</Type>