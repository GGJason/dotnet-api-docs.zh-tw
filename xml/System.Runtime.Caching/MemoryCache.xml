<Type Name="MemoryCache" FullName="System.Runtime.Caching.MemoryCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37eadac5a9304b10a05ba5da93ce39d7ddceff4f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36541958" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MemoryCache : System.Runtime.Caching.ObjectCache, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryCache extends System.Runtime.Caching.ObjectCache implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.MemoryCache" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryCache&#xA;Inherits ObjectCache&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryCache : System::Runtime::Caching::ObjectCache, IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryCache = class&#xA;    inherit ObjectCache&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.ObjectCache</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示可實作記憶體內部快取的類型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.MemoryCache> 類別是抽象 <xref:System.Runtime.Caching.ObjectCache> 類別的具體實作。  
  
> [!NOTE]
>  <xref:System.Runtime.Caching.MemoryCache>類別是類似於 ASP.NET<xref:System.Web.Caching.Cache>類別。 <xref:System.Runtime.Caching.MemoryCache>類別具有許多屬性和方法的存取都很熟悉您，如果您已使用 ASP.NET 快取<xref:System.Web.Caching.Cache>類別。 之間的主要差異<xref:System.Web.Caching.Cache>和<xref:System.Runtime.Caching.MemoryCache>類別是<xref:System.Runtime.Caching.MemoryCache>讓它成為可用的已變更類別[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]不是 ASP.NET 應用程式的應用程式。 例如，<xref:System.Runtime.Caching.MemoryCache>類別具有的任何相依性`System.Web`組件。 另一項差異是，您可以建立多個執行個體<xref:System.Runtime.Caching.MemoryCache>類別用於在相同的應用程式，而且在同一個<xref:System.AppDomain>執行個體。  
  
 <xref:System.Runtime.Caching.MemoryCache>類別不允許`null`為快取中的值。 任何嘗試新增或變更其值為快取項目`null`將會失敗。  
  
 <xref:System.Runtime.Caching.MemoryCache>類型未實作*快取區域*。 因此，當您呼叫<xref:System.Runtime.Caching.MemoryCache>實作包含地區，參數的基底方法的方法不會傳遞參數的值。 使用所有區域參數的方法提供預設值`null`值。 例如，<xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=nameWithType>方法多載具有`regionName`參數的預設值是`null`。  
  
   
  
## Examples  
 下列範例會宣告預設的記憶體快取執行個體的參考。 快取項目使用<xref:System.Runtime.Caching.CacheItemPolicy>物件，以提供快取項目的收回和到期的詳細資料。 它也會使用<xref:System.Runtime.Caching.ChangeMonitor>物件來監視檔案系統上的來源資料 （這是一個檔案） 的狀態。  
  
```vb  
Private Sub btnGet_Click(ByVal sender As Object, ByVal e As EventArgs)   
    Dim cache As ObjectCache = MemoryCache.[Default]   
    Dim fileContents As String = TryCast(cache("filecontents"), String)   
  
    If fileContents Is Nothing Then   
        Dim policy As New CacheItemPolicy()   
        Dim filePaths As New List(Of String)()   
        filePaths.Add("c:\cache\example.txt")   
  
        policy.ChangeMonitors.Add(New HostFileChangeMonitor(filePaths))   
  
        ' Fetch the file contents.  
        fileContents = File.ReadAllText("c:\cache\example.txt")   
  
        cache.[Set]("filecontents", fileContents, policy)   
    End If   
  
    Label1.Text = fileContents  
End Sub  
```  
  
```csharp  
private void btnGet_Click(object sender, EventArgs e)  
{  
    ObjectCache cache = MemoryCache.Default;  
    string fileContents = cache["filecontents"] as string;  
  
    if (fileContents == null)  
    {  
        CacheItemPolicy policy = new CacheItemPolicy();  
  
        List<string> filePaths = new List<string>();  
        filePaths.Add("c:\\cache\\example.txt");  
  
        policy.ChangeMonitors.Add(new   
        HostFileChangeMonitor(filePaths));  
  
        // Fetch the file contents.  
        fileContents =   
            File.ReadAllText("c:\\cache\\example.txt");  
  
        cache.Set("filecontents", fileContents, policy);  
    }  
  
    Label1.Text = fileContents;  
}  
```  
  
 ]]></format>
    </remarks>
    <threadsafe>此型別具備執行緒安全。</threadsafe>
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryCache (string name, System.Collections.Specialized.NameValueCollection config = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.#ctor(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional config As NameValueCollection = null)" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.MemoryCache : string * System.Collections.Specialized.NameValueCollection -&gt; System.Runtime.Caching.MemoryCache" Usage="new System.Runtime.Caching.MemoryCache (name, config)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">用來查詢組態資訊的名稱。  
  
 <c>注意</c>：每個名稱不一定都有組態資訊。  如果符合的組態項目存在，則會使用組態資訊來設定 <see cref="T:System.Runtime.Caching.MemoryCache" /> 執行個體。 如果符合的組態項目不存在，則可以透過 <see cref="P:System.Runtime.Caching.MemoryCache.Name" /> 屬性來存取名稱，因為指定的名稱與 <see cref="T:System.Runtime.Caching.MemoryCache" /> 執行個體相關聯。 如需記憶體快取組態的相關資訊，請參閱 <see cref="T:System.Runtime.Caching.Configuration.MemoryCacheElement" />。</param>
        <param name="config">組態資訊的名稱/值組集合，用來設定快取。</param>
        <summary>初始化 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Runtime.Caching.MemoryCache>類別初始化時，它會檢查是否有可能已使用選擇性的覆寫的組態項目的`config`建構函式中的參數。 您可以傳遞下列參數在`config`參數。 所有的值可以傳遞為整數。  
  
-   <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A>  
  
-   <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage%2A>  
  
-   <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A>  
  
 叫用此建構函式時，從應用程式組態檔時，會先擷取組態設定。 如果沒有設定項目存在於應用程式組態檔中，只有設定中提供`config`會套用。 如果應用程式組態中的組態項目存在，而且資訊也會在傳遞`config`中的資訊`config`覆寫會從組態檔讀取的資訊。  
  
 指派給快取執行個體的名稱值用於兩種方式：  
  
-   若要協助您追蹤多個快取執行個體時存在一個以上的執行個體。  
  
-   若要參考組態中的設定檔時<xref:System.Runtime.Caching.MemoryCache>初始化執行個體。  
  
    > [!NOTE]
    >  沒有任何機制來強制執行快取執行個體的唯一名稱。 因此，就可能有多個具有相同名稱的快取執行個體。  
  
    > [!CAUTION]
    >  請勿建立<xref:System.Runtime.Caching.MemoryCache>除非必要，否則執行個體。 如果您在用戶端和 Web 應用程式，建立快取執行個體<xref:System.Runtime.Caching.MemoryCache>應該在應用程式生命週期的早期建立執行個體。 您必須建立只會用於您的應用程式，並可全域存取的變數中儲存的快取執行個體的參考快取執行個體數目。 例如，在 ASP.NET 應用程式，您可以儲存應用程式狀態中的參考。 如果您建立只能有單一快取執行個體應用程式中，使用預設快取，並取得它的參考<xref:System.Runtime.Caching.MemoryCache.Default%2A>屬性，當您需要存取快取。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">無法剖析 <paramref name="config" /> 參數中名稱或值。</exception>
        <exception cref="T:System.Configuration.ConfigurationException">
          <paramref name="config" /> 集合中的值無效。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryCache (string name, System.Collections.Specialized.NameValueCollection config, bool ignoreConfigSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Specialized.NameValueCollection config, bool ignoreConfigSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.#ctor(System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, config As NameValueCollection, ignoreConfigSection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryCache(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config, bool ignoreConfigSection);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.MemoryCache : string * System.Collections.Specialized.NameValueCollection * bool -&gt; System.Runtime.Caching.MemoryCache" Usage="new System.Runtime.Caching.MemoryCache (name, config, ignoreConfigSection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="ignoreConfigSection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">用來查詢組態資訊的名稱。</param>
        <param name="config">組態資訊的名稱/值組集合，用來設定快取。</param>
        <param name="ignoreConfigSection">指出是否應該忽略組態區段。</param>
        <summary>初始化 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="memoryCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">要加入的物件。</param>
        <param name="policy">物件，包含快取項目的收回詳細資料。 這個物件提供的收回選項比簡單絕對期限要多。</param>
        <summary>將快取項目插入快取中做為 <see cref="T:System.Runtime.Caching.CacheItem" /> 執行個體，並加入有關如何收回項目的詳細資料。</summary>
        <returns>如果插入成功則為 true，如果快取中已經有項目具有與項目相同的索引鍵，則為 false。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <xref:System.Runtime.Caching.ObjectCache.Add%2A> 和 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 方法多載不支援 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性。 因此，若為快取項目設定 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性，請改用 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 方法多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將快取項目插入快取區中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A>方法多載可用來插入至快取的快取項目。 如果有相符的索引鍵的快取項目不存在，這些方法會插入新項目。 如果有相符的索引鍵的快取項目已經存在，就會傳回現有的項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddOrGetExisting (item As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="override this.AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="memoryCache.AddOrGetExisting (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">要加入的物件。</param>
        <param name="policy">物件，包含快取項目的收回詳細資料。 這個物件提供的收回選項比簡單絕對期限要多。</param>
        <summary>使用指定的 <see cref="T:System.Runtime.Caching.CacheItem" /> 執行個體和有關如何收回項目的詳細資料，在快取中加入快取項目。</summary>
        <returns>如果存在具有相同索引鍵的快取項目，則為現有的快取項目，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `item`參數提供的索引鍵和值，方法使用。 如果快取具有相同索引鍵做為索引鍵的快取項目`item`參數，此方法會傳回現有的項目，做為<xref:System.Runtime.Caching.CacheItem>執行個體。 如果沒有任何現有的快取項目，方法會建立一個新使用索引鍵與所提供的值`item`參數，且具有所指定的收回詳細資料`policy`。  
  
> [!WARNING]
>  <xref:System.Runtime.Caching.ObjectCache.Add%2A> 和 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 方法多載不支援 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性。 因此，若為快取項目設定 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性，請改用 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 方法多載。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Runtime.Caching.CacheItem.Value" /> 屬性為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的絕對和滑動期限值都會設定為不同於 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 和 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 欄位之預設值的值。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別不能根據絕對期限和滑動期限的組合來設定到期原則。 當您使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 執行個體時，只能明確設定一項到期設定。 其他到期設定必須設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 欄位或 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 欄位。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為小於 <see cref="F:System.TimeSpan.Zero" /> 的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為大於一年的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 屬性不是 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 列舉的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public override object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="memoryCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要加入之快取項目的唯一識別項。</param>
        <param name="value">快取項目的資料。</param>
        <param name="absoluteExpiration">快取項目到期的固定日期和時間。</param>
        <param name="regionName">快取區中的具名區域，快取項目可以加入至這個區域。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>使用指定索引鍵、值和絕對逾期值，在快取區中插入快取項目。</summary>
        <returns>如果存在具有相同索引鍵的快取項目，則為現有的快取項目，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果快取並沒有快取項目之索引鍵符合`key`參數，就會建立新的快取項目，而<xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=nameWithType>方法多載會傳回`null`。 如果符合的快取項目存在，則會傳回現有的項目。  
  
> [!WARNING]
>  <xref:System.Runtime.Caching.ObjectCache.Add%2A> 和 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 方法多載不支援 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性。 因此，若為快取項目設定 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性，請改用 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 方法多載。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的絕對和滑動期限值都會設定為不同於 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 和 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 欄位之預設值的值。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別不能根據絕對期限和滑動期限的組合來設定到期原則。 當您使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 執行個體時，只能明確設定一項到期設定。 將其他到期設定必須設為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 或 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為小於 <see cref="F:System.TimeSpan.Zero" /> 的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為大於一年的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 屬性不是 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 列舉的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public override object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="memoryCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要加入或取得之快取項目的唯一識別項。</param>
        <param name="value">快取項目的資料。</param>
        <param name="policy">物件，包含快取項目的收回詳細資料。 這個物件提供的收回選項比簡單絕對期限要多。</param>
        <param name="regionName">快取區中的具名區域，快取項目可以加入至這個區域。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>使用指定的索引鍵、值和有關如何收回快取項目的指定詳細資料，在快取區中插入快取項目。</summary>
        <returns>如果符合的快取項目已經存在，則為快取項目，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <xref:System.Runtime.Caching.ObjectCache.Add%2A> 和 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 方法多載不支援 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性。 因此，若為快取項目設定 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 屬性，請改用 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 方法多載。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的絕對和滑動期限值都會設定為不同於 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 和 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 欄位之預設值的值。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別不能根據絕對期限和滑動期限兩者的組合來設定到期原則。 當您使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別時，只能明確設定一個到期設定。 其他設定必須設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 或 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />。  -或-  已經對 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 指定移除回呼和更新回呼兩者。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 只支援對每個快取項目使用一種回呼。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為小於 <see cref="F:System.TimeSpan.Zero" /> 的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 已設定為大於一年的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 屬性不是 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 列舉的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheMemoryLimit">
      <MemberSignature Language="C#" Value="public long CacheMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CacheMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.CacheMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CacheMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheMemoryLimit : int64" Usage="System.Runtime.Caching.MemoryCache.CacheMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得電腦上可供快取使用的記憶體數量 (以位元組為單位)。</summary>
        <value>記憶體數量 (以位元組為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果快取的目前執行個體超過所設定的記憶體的限制<xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A>屬性，快取實作移除快取項目。 應用程式中的每個快取執行個體可以使用所指定的記憶體數量<xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A>屬性。  
  
 設定<xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A>屬性可以指定應用程式組態檔中。 或者，他們可以傳入建構函式時<xref:System.Runtime.Caching.MemoryCache>類別初始化。 如需如何設定這個屬性的詳細資訊，請參閱[ &lt;namedCaches&gt;項目 （快取設定）](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)。 如需有關如何設定此值時<xref:System.Runtime.Caching.MemoryCache>類別初始化，請參閱<xref:System.Runtime.Caching.MemoryCache.%23ctor%2A>方法。  
  
 <xref:System.Runtime.Caching.MemoryCache> 不會立即強制<xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A>中加入新項目每次<xref:System.Runtime.Caching.MemoryCache>執行個體。 內部的啟發學習法的收回額外的項目從<xref:System.Runtime.Caching.MemoryCache>逐漸運作和記憶體回收行程列入帳戶資訊 (請參閱[回收](~/docs/standard/garbage-collection/index.md)) 和其他因素，例如目前的快取大小和整體系統記憶體不足的壓力。 因此即使<xref:System.Runtime.Caching.MemoryCache>嘗試保留快取大小內設定<xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A>可以暫時將快取項目加入非常高的速率超過限制。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Contains : string * string -&gt; bool" Usage="memoryCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要搜尋之快取項目的唯一識別項。</param>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>判斷快取項目是否存在於快取中。</summary>
        <returns>如果快取包含索引鍵符合 <paramref name="key" /> 的快取項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="override this.CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="memoryCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 物件之唯一快取項目索引鍵的列舉。</param>
        <param name="regionName">快取區中的具名區域，快取項目可以加入至這個區域。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>建立 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 物件，該物件可觸發事件以回應指定快取項目的變更。</summary>
        <returns>監控快取區項目的變更監視器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor%2A>方法會建立<xref:System.Runtime.Caching.CacheEntryChangeMonitor>執行個體。 此特製化的變更監視可用來監視中指定的快取項目`keys`集合和觸發程序事件時變更的項目。  
  
 受監視的項目被視為已變更任何原因如下：  
  
-   索引鍵不存在時呼叫的<xref:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor%2A>方法。 在此情況下，產生<xref:System.Runtime.Caching.CacheEntryChangeMonitor>設執行個體是立即變更狀態。 這表示，當程式碼接著會繫結變更通知回呼，會立即觸發回呼。  
  
-   相關聯的快取項目已從快取移除。 這可能明確移除的項目，如果它已過期，或是收回復原記憶體  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keys" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keys" /> 集合中的某個項目為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Runtime.Caching.MemoryCache Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Caching.MemoryCache Default" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MemoryCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Caching::MemoryCache ^ Default { System::Runtime::Caching::MemoryCache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Runtime.Caching.MemoryCache" Usage="System.Runtime.Caching.MemoryCache.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.MemoryCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得預設 <see cref="T:System.Runtime.Caching.MemoryCache" /> 執行個體的參考。</summary>
        <value>快取的預設執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性永遠會傳回預設快取執行個體的參考。 一般應用程式案例中，只有一個執行個體<xref:System.Runtime.Caching.MemoryCache>需要。  
  
 建構函式不會建立預設快取執行個體，因為您必須使用組態來明確設定的記憶體和輪詢值的預設快取執行個體。 如需詳細資訊，請參閱[ &lt;memoryCache&gt;項目 （快取設定）](~/docs/framework/configure-apps/file-schema/runtime/memorycache-element-cache-settings.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.MemoryCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取提供之功能的說明。</summary>
        <value>旗標位元組合，表示快取實作的預設功能。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 快取實作的功能是下列值的組合：  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.InMemoryProvider>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryChangeMonitors>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.AbsoluteExpirations>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.SlidingExpirations>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryUpdateCallback>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryRemovedCallback>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryCache.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別的目前執行個體所使用的資源全部釋出。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個<xref:System.Runtime.Caching.MemoryCache>執行個體繫結至<xref:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded>事件。 不過，應用程式定義域關閉期間如果未明確處置記憶體為基礎的快取，快取執行個體將會自動呼叫<xref:System.Runtime.Caching.MemoryCache.Dispose%2A>方法。  
  
 已處置的快取執行個體關閉時使用下列步驟：  
  
1.  快取的狀態設定為指出快取已處置。 任何嘗試呼叫公用快取變更快取中，狀態的方法等方法，加入、 移除或擷取快取項目，可能會導致非預期的行為。 例如，如果您呼叫<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法處置快取後，任何作業就會發生錯誤。 如果您嘗試從快取中擷取項目<xref:System.Runtime.Caching.MemoryCache.Get%2A>方法一定會傳回`null`。  
  
2.  效能計數器資訊不會再引發目前的快取執行個體。  
  
3.  會釋放目前快取執行個體所持有的快取物件的所有參考。  
  
4.  任何<xref:System.Runtime.Caching.CacheEntryChangeMonitor>監視快取中的項目目前的執行個體將會收到通知。  
  
5.  提供變更通知的那些監視器的回呼物件會呼叫。  
  
6.  任何<xref:System.Web.Caching.CacheItemRemovedCallback>稱為已登錄至快取中的項目執行個體。 傳遞給回呼的移除原因是<xref:System.Runtime.Caching.CacheEntryRemovedReason.CacheSpecificEviction>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.Get : string * string -&gt; obj" Usage="memoryCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要取得之快取項目的唯一識別項。</param>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>從快取傳回項目。</summary>
        <returns>如果由 <paramref name="key" /> 所識別的快取項目存在，則為該快取項目的參考，否則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="override this.GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="memoryCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要取得之快取項目的唯一識別項。</param>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>以 <see cref="T:System.Runtime.Caching.CacheItem" /> 執行個體形式從快取傳回指定的項目。</summary>
        <returns>如果由 <paramref name="key" /> 所識別的快取項目存在，則為該快取項目的參考，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果所指定的快取項目`key`快取，存在於<xref:System.Runtime.Caching.MemoryCache.GetCacheItem%2A>方法會傳回做為<xref:System.Runtime.Caching.CacheItem>執行個體。 <xref:System.Runtime.Caching.CacheItem.Key%2A>和<xref:System.Runtime.Caching.CacheItem.Value%2A>屬性<xref:System.Runtime.Caching.CacheItem>將設定執行個體。 不過，<xref:System.Runtime.Caching.CacheItem.RegionName%2A>屬性會是`null`，因為中沒有實作區域<xref:System.Runtime.Caching.MemoryCache>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public override long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="override this.GetCount : string -&gt; int64" Usage="memoryCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>傳回快取中的快取項目總數。</summary>
        <returns>快取區中項目的數目。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="memoryCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立列舉程式，此列舉程式可用來逐一查看快取項目的集合。</summary>
        <returns>列舉程式物件，可用來存取快取區的項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的列舉值<xref:System.Runtime.Caching.MemoryCache.GetEnumerator%2A>方法可用來逐一查看快取中的項目。  
  
> [!IMPORTANT]
>  擷取列舉值<xref:System.Runtime.Caching.MemoryCache>執行個體是需要大量資源和封鎖作業。 因此，列舉程式不應在實際執行應用程式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastSize">
      <MemberSignature Language="C#" Value="public long GetLastSize (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLastSize(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetLastSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastSize (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="member this.GetLastSize : string -&gt; int64" Usage="memoryCache.GetLastSize regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">區域的名稱。</param>
        <summary>取得具名區域的大小。</summary>
        <returns>具名區域的大小。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="override this.GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="memoryCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">要傳回之快取項目的一組唯一識別項。</param>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>傳回對應至指定之索引鍵的一組快取項目。</summary>
        <returns>對應至指定之索引鍵的一組快取項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果快取項目所表示之`keys`不存在，對應的值字典中傳回的物件設定為`null`。 因此，傳回的字典必定中的項目數相同的項目數`keys`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keys" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">集合中的個別索引鍵是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.MemoryCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要取得或設定之快取值的唯一識別項。</param>
        <summary>使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別之執行個體的預設索引子屬性，取得或設定快取中的值。</summary>
        <value>如果項目存在，則為指定之索引鍵在快取執行個體中的值，否則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您設定這個屬性時，會將值插入快取。 若要設定快取項目的到期原則<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>。 如果有相符的索引鍵的快取項目已經存在，則會更新其值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。  -或-  插入的值為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.MemoryCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取的名稱。</summary>
        <value>快取的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.MemoryCache.Name%2A>屬性會傳回目前的執行個體名稱<xref:System.Runtime.Caching.MemoryCache>類別。 在使用多個快取執行個體的應用程式，您可以使用<xref:System.Runtime.Caching.MemoryCache.Name%2A>屬性來區分執行個體。 如需詳細資訊，請參閱 <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> 方法。 預設記憶體為基礎的快取傳回的預設名稱。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long PhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalMemoryLimit : int64" Usage="System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取可使用的實體記憶體百分比。</summary>
        <value>快取可使用的實體記憶體百分比。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A>屬性會傳回可供的單一執行個體的總實體電腦記憶體的百分比<xref:System.Runtime.Caching.MemoryCache>類別。 如果快取執行個體超過指定的限制，則會移除快取項目。  
  
 設定<xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A>屬性可以指定應用程式組態檔中。 或者，傳遞它們由呼叫端時<xref:System.Runtime.Caching.MemoryCache>類別初始化。 如需如何設定這個屬性的詳細資訊，請參閱[ &lt;namedCaches&gt;項目 （快取設定）](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)。 如需有關如何設定屬性時<xref:System.Runtime.Caching.MemoryCache>類別初始化，請參閱<xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PollingInterval">
      <MemberSignature Language="C#" Value="public TimeSpan PollingInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PollingInterval" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.PollingInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PollingInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PollingInterval { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.PollingInterval : TimeSpan" Usage="System.Runtime.Caching.MemoryCache.PollingInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取更新其記憶體統計資料之前的最多所需時間。</summary>
        <value>記憶體統計資料更新前所需的最長時間，</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Runtime.Caching.MemoryCache.PollingInterval%2A>屬性可以指定應用程式組態檔中。 或者它們可以傳遞時<xref:System.Runtime.Caching.MemoryCache>類別初始化。 如需如何設定這個屬性的詳細資訊，請參閱[ &lt;namedCaches&gt;項目 （快取設定）](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)。 如需有關如何設定屬性時<xref:System.Runtime.Caching.MemoryCache>類別初始化，請參閱<xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從快取中移除指定的項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.Remove : string * string -&gt; obj" Usage="memoryCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要移除之快取項目的唯一識別項。</param>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>從快取中移除一個快取項目。</summary>
        <returns>如果在快取中找到快取項目，則移除該項目，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果所指定之項目的`key`存在於快取中移除的項目觸發程序的任何相關聯的異動監視器。 如果移除的項目與<xref:System.Web.Caching.CacheItemUpdateCallback>物件或<xref:System.Web.Caching.CacheItemRemovedCallback>物件傳遞給回呼的原因是<xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key, System.Runtime.Caching.CacheEntryRemovedReason reason, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key, valuetype System.Runtime.Caching.CacheEntryRemovedReason reason, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Remove(System.String,System.Runtime.Caching.CacheEntryRemovedReason,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String, reason As CacheEntryRemovedReason, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.Remove : string * System.Runtime.Caching.CacheEntryRemovedReason * string -&gt; obj" Usage="memoryCache.Remove (key, reason, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="reason" Type="System.Runtime.Caching.CacheEntryRemovedReason" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要移除之快取項目的唯一識別項。</param>
        <param name="reason">已移除項目的原因。</param>
        <param name="regionName">快取區中的具名區域，已將快取項目加入其中。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>使用原因，從快取中移除快取項目。</summary>
        <returns>如果在快取中找到快取項目，則移除該項目，否則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將快取項目插入快取區中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果指定的項目不存在，則會建立它。 如果指定的項目存在，它會更新。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public override void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="override this.Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="memoryCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">物件，表示要插入的快取項目。</param>
        <param name="policy">物件，包含快取項目的收回詳細資料。 這個物件提供的收回選項比簡單絕對期限要多。</param>
        <summary>使用 <see cref="T:System.Runtime.Caching.CacheItem" /> 執行個體提供快取項目所需的索引鍵和值，以在快取中插入快取項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 就像其他<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法多載，<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法一律會置於快取值快取，不論是否項目已經存在具有相同索引鍵。 如果指定的項目不存在於快取中，插入新的快取項目。 如果指定的項目已經存在，則會更新其值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> 為 <see langword="null" />。  -或-  <see cref="P:System.Runtime.Caching.CacheItem.Key" /> 屬性為 <see langword="null" />。  -或-  <see cref="P:System.Runtime.Caching.CacheItem.Value" /> 屬性為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">傳遞的快取項目引數組合無效。 如果在快取項目的原則物件上設定下列期限詳細資料，就會發生這個狀況：-   如果 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的絕對和滑動期限值都設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 和 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 欄位之預設值以外的值。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別不能根據絕對期限和滑動期限來設定到期原則。 當您使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別時，只能明確設定一個到期設定。 其他設定必須設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 或 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 屬性。  -   如果同時指定 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的移除回呼和更新回呼。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別只支援對每個快取項目使用一種回呼。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為小於 <see cref="F:System.TimeSpan.Zero" /> 的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為大於一年的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 不是 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 列舉的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public override void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="override this.Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="memoryCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要插入之快取項目的唯一識別項。</param>
        <param name="value">快取項目的資料。</param>
        <param name="absoluteExpiration">快取項目到期的固定日期和時間。</param>
        <param name="regionName">快取區中的具名區域，快取項目可以加入至這個區域。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>使用索引鍵、值並指定以時間為基礎的到期詳細資訊，在快取區中插入快取項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 就像其他<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法多載，<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法一律會置於快取值快取中，無論是否已存在具有相同索引鍵的項目。 如果指定的項目不存在，則會插入新的快取項目。 如果指定的項目存在，它會更新。  
  
 `absoluteExpiration`參數會指出何時會從快取中移除項目。  
  
 移除項目會觸發任何相關聯的異動監視器。 如果移除的項目與<xref:System.Web.Caching.CacheItemUpdateCallback>物件或<xref:System.Web.Caching.CacheItemRemovedCallback>物件中包含的原因傳遞給回呼的移除<xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。  -或-  <paramref name="Value" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">-   傳遞的快取項目引數組合無效。 如果在快取項目的原則物件上設定下列期限詳細資料，就會發生這個狀況：-   如果 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的絕對和滑動期限值都設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 和 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 之預設值以外的值。 此狀況會發生是因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別不支援以絕對期限和滑動期限為基礎的過期項目。 當您使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別時，只能明確設定一個到期設定。 其他設定必須設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 或 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />。  -   如果在 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件上同時指定移除回呼和更新回呼。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別只支援對每個快取項目使用一種回呼。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為小於 <see cref="F:System.TimeSpan.Zero" /> 的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為大於一年的值。  -或-  -   <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 屬性不是 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 列舉的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public override void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="override this.Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="memoryCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要插入之快取項目的唯一識別項。</param>
        <param name="value">快取項目的資料。</param>
        <param name="policy">物件，包含快取項目的收回詳細資料。 這個物件提供的收回選項比簡單絕對期限要多。</param>
        <param name="regionName">快取區中的具名區域，快取項目可以加入至這個區域。 請勿傳遞這個參數的值。 這個參數預設為 <see langword="null" />，因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別沒有實作區域。</param>
        <summary>使用索引鍵、值和清除，在快取區中插入快取項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 就像其他<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法多載，<xref:System.Runtime.Caching.MemoryCache.Set%2A>方法一律會置於快取值快取，不論是否符合的項目已經存在。 如果指定的項目不存在於快取中，插入新的快取項目。 如果指定的項目存在，它會更新。  
  
 移除項目會觸發任何相關聯的異動監視器。 如果移除的項目與<xref:System.Web.Caching.CacheItemUpdateCallback>物件或<xref:System.Web.Caching.CacheItemRemovedCallback>物件中包含的原因傳遞給回呼的移除<xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 為 <see langword="null" />。  -或-  <paramref name="value" /> 為 <see langword="null" />  -或-  在 <see cref="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" /> 屬性中傳遞至協助程式方法的回呼參考為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">-   存在快取項目的無效引數組合。 如果在快取項目的原則物件上設定下列期限詳細資料，就會發生這個狀況：-   如果 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 物件的絕對和滑動期限值都設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 和 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 之預設值以外的值。 這是因為 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別不支援以絕對期限和滑動期限為基礎的過期項目。 當您使用 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別時，只能明確設定一個到期設定。 其他設定必須設定為 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 或 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />。  -   如果在 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 類別上同時指定移除回呼和更新回呼。 <see cref="T:System.Runtime.Caching.MemoryCache" /> 類別只支援對每個快取項目使用一種回呼。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為小於 <see cref="F:System.TimeSpan.Zero" /> 的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 屬性設定為大於一年的值。  -或-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 屬性不是 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 列舉的值。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="regionName" /> 不是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供在泛型集合上執行反覆項目的支援。</summary>
        <returns>列舉程式物件，可用來存取快取區的項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 它可用時，才<xref:System.Runtime.Caching.MemoryCache>執行個體轉換成<xref:System.Collections.IEnumerable>介面。  
  
 您可以使用這個方法來逐一查看快取項目的一般集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public long Trim (int percent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Trim(int32 percent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Trim(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (percent As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Trim(int percent);" />
      <MemberSignature Language="F#" Value="member this.Trim : int -&gt; int64" Usage="memoryCache.Trim percent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percent">移除項目的數目在快取項目總數中所佔的百分比。</param>
        <summary>從快取物件移除指定百分比的快取項目。</summary>
        <returns>從快取區中移除的項目數量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.MemoryCache.Trim%2A>屬性第一次移除項目，已超過的絕對或滑動期限。 任何移除的項目會傳遞給已移除的原因已註冊的回呼<xref:System.Web.Caching.CacheItemRemovedReason.Expired>。  
  
 如果不足以連線到指定的修剪百分比移除過期的項目，其他項目會從根據最少最近使用的 (LRU) 演算法，直到達到所要求的修剪百分比快取。 會傳遞給任何項目，則這種方式移除已註冊的回呼的移除原因<xref:System.Runtime.Caching.CacheEntryRemovedReason.Evicted>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>