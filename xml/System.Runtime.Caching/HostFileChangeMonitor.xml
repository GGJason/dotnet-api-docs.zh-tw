<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9766bc72336871e34c9cfc627b4f217c5c9854da" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>監控目錄和檔案路徑，並通知快取受監控項目發生變更的資訊。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.HostFileChangeMonitor>類別是具象實作<xref:System.Runtime.Caching.FileChangeMonitor>型別。 這個類別已密封，因此無法擴充。 這個類別是很有用，如果您想要使用現有的快取實作，並監視檔案和目錄的變更。  
  
 針對每個指定的檔案或目錄路徑<xref:System.Runtime.Caching.HostFileChangeMonitor>類別觸發的變更通知，如果發生任何下列變更：  
  
-   受監視的檔案或目錄變更的名稱。  
  
-   指定的檔案或目錄不存在時，監視已建立，但是稍後建立。 換句話說，檔案或目錄已建立的受監視的項目範圍內。  
  
-   變更受監視的檔案的大小。  
  
-   受監視的檔案的內容變更，或變更受監視的目錄的內容。  
  
-   已變更檔案或目錄的存取控制清單 (ACL)。  
  
-   受監視的檔案或目錄已刪除。  
  
 如果有太多變更受監視的檔案或目錄發生在相同的時間，<xref:System.Runtime.Caching.HostFileChangeMonitor>執行個體可以遺失的特定變更追蹤。 在此案例中，<xref:System.Runtime.Caching.HostFileChangeMonitor>類別觸發程序的變更通知。 此案例中很容易發生時<xref:System.Runtime.Caching.HostFileChangeMonitor>執行個體監視目錄，並在短時間內發生目錄結構的範圍中的許多變更。  
  
 因為目的<xref:System.Runtime.Caching.HostFileChangeMonitor>類別只是為了發出信號，內容已變更的一組受監視的檔案和目錄之間，其會被視為重要不會擷取特定變更的相關詳細資料。 目的<xref:System.Runtime.Caching.HostFileChangeMonitor>類別是要提供通知的狀態變更，因此會收回快取項目 （或項目）。 因為<xref:System.Runtime.Caching.HostFileChangeMonitor>類別不會指出哪些變更的確切、 內部變更追蹤溢位不相關。  
  
 當您提供的路徑<xref:System.Runtime.Caching.HostFileChangeMonitor>執行個體、 目錄和檔案路徑必須是目錄或檔案的完整路徑。 不允許相對路徑和萬用字元。  
  
 當<xref:System.Runtime.Caching.HostFileChangeMonitor>類別用在 ASP.NET 應用程式，用於受監視項目的存取權的 Windows 身分識別是 ASP.NET 應用程式的應用程式識別。 換句話說，應用程式識別將會是下列其中一項：  
  
-   處理序身分識別。  
  
-   設定的應用程式識別。  
  
-   如果應用程式正在執行從 UNC 共用 UNC 認證。  
  
 當<xref:System.Runtime.Caching.HostFileChangeMonitor>類別用在非 ASP.NET 應用程式中，<xref:System.IO.FileSystemWatcher>類別在內部用來監視檔案。 如此一來，任何存取控制清單 (ACL) 套用到受監視的檔案或目錄會套用至目前執行緒的 Windows 身分識別。  
  
> [!NOTE]
>  呼叫端必須擁有適當的程式碼存取安全性 (CAS) 權限等級，和必須有 NTFS 權限的所有受監視的目錄與路徑。  
  
   
  
## Examples  
 下列範例會建立使用的快取項目<xref:System.Runtime.Caching.HostFileChangeMonitor>物件來監視檔案系統上的來源資料 （這是一個檔案） 的狀態。 快取項目已定義使用<xref:System.Runtime.Caching.CacheItemPolicy>物件，以提供快取項目的收回和到期的詳細資料。  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">包含一個或多個要監控之目錄路徑或檔案路徑的清單。</param>
        <summary>初始化 <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A>建構函式必須提供非 null 值的`filePaths`參數。 最少，建構函式會驗證傳遞到它，然後初始化監視這些路徑的路徑集合。  
  
> [!NOTE]
>  建構函式會執行只有字串的路徑名稱的驗證。 它不會規範化路徑，或驗證路徑存在。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> 包含零個項目。  -或-  <paramref name="filePaths" /> 清單中的路徑是 <see langword="null" /> 或空字串。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得已經傳遞給 <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" /> 建構函式的目錄和檔案路徑集合。</summary>
        <value>目錄和檔案路徑的集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得唯讀值，這個值表示所監控的檔案或路徑上次寫入的時間。</summary>
        <value>所監控的檔案或路徑上次寫入的時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果檔案變更監視會監視多個檔案或路徑，這個屬性會傳回最新的寫入時間集中的所有檔案和路徑。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> 執行個體的識別項，該識別項的基準是監控目錄和檔案路徑組。</summary>
        <value>變更監視器的識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 組成的字串<xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A>屬性值由下列部分建構：  
  
-   檔案或目錄的路徑。  
  
-   最近寫入時間以 UTC 時間以刻度為單位，但做為十六進位字串表示。  
  
-   檔案大小，以十六進位字串表示。  
  
 如果檔案變更監視器監視多個路徑，這個屬性所傳回的資訊會串連成單一字串的所有受監視的目錄和檔案路徑。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>