<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73cd7d26a8035ac771856adae7eedfbd2609c7c2" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52737438" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ChangeMonitor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="db179-101">提供衍生之自訂型別的基底類別，這個型別會監控快取項目所依存之資料的狀態變更。</span>
      <span class="sxs-lookup">
        <span data-stu-id="db179-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-102"><xref:System.Runtime.Caching.ChangeMonitor>類別作為基底類別衍生的監控專門用於特定的快取實作的類別。</span><span class="sxs-lookup"><span data-stu-id="db179-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="db179-103">A<xref:System.Runtime.Caching.ChangeMonitor>執行個體監視的資料取決於快取項目狀態的變更。</span><span class="sxs-lookup"><span data-stu-id="db179-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="db179-104">例如，項目可以是檔案或資料的實體，其內容會快取。</span><span class="sxs-lookup"><span data-stu-id="db179-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="db179-105">如果更新的檔案或資料的實體，則必須也變更相關聯的快取項目。</span><span class="sxs-lookup"><span data-stu-id="db179-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="db179-106">您可以監視的一般項目包括資料實體 （例如資料庫欄位、 值、 資料列或資料表）、 另一個快取項目，以及檔案和檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="db179-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="db179-107">相依性的狀態變更為相依性變更。</span><span class="sxs-lookup"><span data-stu-id="db179-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="db179-108">在典型的快取實作中之後,<xref:System.Runtime.Caching.ChangeMonitor>執行個體通知快取相依性已變更時，快取會執行所需的動作，例如使插入快取項目失效。</span><span class="sxs-lookup"><span data-stu-id="db179-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="db179-109">衍生<xref:System.Runtime.Caching.ChangeMonitor>可以自訂類別，以監視特定的不同資料存放區的相依性變更。</span><span class="sxs-lookup"><span data-stu-id="db179-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="db179-110">比方說，有針對檔案系統、 實體記憶體或資料庫的快取實作。</span><span class="sxs-lookup"><span data-stu-id="db179-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="db179-111"><xref:System.Runtime.Caching.ChangeMonitor>類別會檢查外部快取中，會發生的變更，然後發出警示給快取中發生的變更。</span><span class="sxs-lookup"><span data-stu-id="db179-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="db179-112">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]包括下列類別衍生自<xref:System.Runtime.Caching.ChangeMonitor>類別：</span><span class="sxs-lookup"><span data-stu-id="db179-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="db179-113">每個類別適用於不同類型的相依性。</span><span class="sxs-lookup"><span data-stu-id="db179-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="db179-114">例如，衍生<xref:System.Runtime.Caching.FileChangeMonitor>類別監視快取項目取決於檔案系統資料 （檔案及資料夾） 的快取的變更。</span><span class="sxs-lookup"><span data-stu-id="db179-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="db179-115">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="db179-115">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="db179-116">如果您建立自訂快取實作或衍生的變更監視類型，您必須遵循特定的指導方針。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span>
        </span>
        <span data-ttu-id="db179-117">下列清單摘要說明這些指導方針。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-117">The following list summarizes these guidelines.</span>
        </span>
        <span data-ttu-id="db179-118">如需詳細資訊，請參閱個別的方法或屬性的文件。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-118">For more information, see the documentation for individual methods or properties.</span>
        </span>
        <span data-ttu-id="db179-119">-在衍生類別的建構函式必須設定<see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />屬性，開始監視，並呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />方法傳回之前的方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-119">-   The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span>
        </span>
        <span data-ttu-id="db179-120">如果建構函式在建構期間發生錯誤，而且必須具有要處置的資源，只能呼叫建構函式<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />多載之後<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />因為，方法呼叫<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />多載會擲回<see cref="T:System.InvalidOperationException" />如果初始化未完成的例外狀況。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span>
        </span>
        <span data-ttu-id="db179-121">-如果發生在變更完成之前初始化為受監視的資料、 建構函式必須呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法之前呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-121">-   If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span>
        </span>
        <span data-ttu-id="db179-122">-之後衍生<see cref="T:System.Runtime.Caching.ChangeMonitor" />型別會具現化，您必須插入自訂監視<see cref="T:System.Runtime.Caching.ObjectCache" />實作。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-122">-   After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span>
        </span>
        <span data-ttu-id="db179-123">如果您使用完變更監視器，呼叫或<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span>
        </span>
        <span data-ttu-id="db179-124">-之後<see cref="T:System.Runtime.Caching.ChangeMonitor" />執行個體插入<see cref="T:System.Runtime.Caching.ObjectCache" />實作，<see cref="T:System.Runtime.Caching.ObjectCache" />執行個體所需變更監視器已處置。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-124">-   After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span>
        </span>
        <span data-ttu-id="db179-125">插入無效，而且會導致例外狀況，即使<see cref="T:System.Runtime.Caching.ObjectCache" />實作必須呼叫<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />多載。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span>
        </span>
        <span data-ttu-id="db179-126">之後衍生的變更監視器已插入快取中，<see cref="T:System.Runtime.Caching.ObjectCache" />實作必須呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />，藉由傳遞<see cref="T:System.Runtime.Caching.OnChangedCallback" />物件。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-126">-   After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span>
        </span>
        <span data-ttu-id="db179-127">
          <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />方法可以呼叫一次。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span>
        </span>
        <span data-ttu-id="db179-128">如果已經發生相依性變更，情況<see cref="T:System.Runtime.Caching.OnChangedCallback" />執行個體將會立即呼叫時<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />呼叫。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span>
        </span>
        <span data-ttu-id="db179-129">否則，<see cref="T:System.Runtime.Caching.OnChangedCallback" />執行個體將會呼叫一次。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span>
        </span>
        <span data-ttu-id="db179-130">此一次呼叫，都會發生時<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />呼叫方法，因為<see cref="T:System.Runtime.Caching.ChangeMonitor" />執行個體偵測到變更，或當<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />上呼叫方法<see cref="T:System.Runtime.Caching.ChangeMonitor" />，何者先發生。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span>
        </span>
        <span data-ttu-id="db179-131">-<see cref="T:System.Runtime.Caching.OnChangedCallback" />所提供的執行個體<see cref="T:System.Runtime.Caching.ObjectCache" />實作應該移除相關聯的快取項目，並使用指定的原因<see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" />列舉型別。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-131">-   The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span>
        </span>
        <span data-ttu-id="db179-132">-A<see cref="T:System.Runtime.Caching.ChangeMonitor" />執行個體可以呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法是之前的快取實作呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />方法之後或。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-132">-   A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span>
        </span>
        <span data-ttu-id="db179-133">如果<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法之前呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />呼叫時，基底<see cref="T:System.Runtime.Caching.ChangeMonitor" />實作會通知發生這種情況的快取，並且會觸發要傳遞至回呼<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />時，會立即<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />叫用。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span>
        </span>
        <span data-ttu-id="db179-134">傳遞給任何狀態資料<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />儲存變更監視器並接著傳遞給方法<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />方法時<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />叫用方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span>
        </span>
        <span data-ttu-id="db179-135">-變更監視器必須實作<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-135">-   A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span>
        </span>
        <span data-ttu-id="db179-136">如需詳細資訊，請參閱 <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> 方法的文件。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span>
        </span>
        <span data-ttu-id="db179-137">-<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />方法多載必須先呼叫處置<see cref="T:System.Runtime.Caching.ChangeMonitor" />執行個體。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-137">-   The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span>
        </span>
        <span data-ttu-id="db179-138">呼叫 Dispose 的規則如下所示：</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-138">The rules for calling Dispose are as follows:</span>
        </span>
        <span data-ttu-id="db179-139">項目插入快取之前，必須負責對 dispose 的呼叫端的<see cref="T:System.Runtime.Caching.ChangeMonitor" />執行個體。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-139">-   Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span>
        </span>
        <span data-ttu-id="db179-140">-一次快取項目和<see cref="T:System.Runtime.Caching.ChangeMonitor" />與它相關聯的執行個體傳遞至快取，快取實作器必須確定，<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />呼叫方法時，即使插入失敗。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-140">-   Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span>
        </span>
        <span data-ttu-id="db179-141">之後的項目和其相關聯<see cref="T:System.Runtime.Caching.ChangeMonitor" />執行個體傳遞至快取、 呼叫端必須處置相依性，因為當<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />呼叫方法，呼叫會被視為相依性已變更。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-141">-   After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span>
        </span>
        <span data-ttu-id="db179-142">如此一來，<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />自動叫用方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span>
        </span>
        <span data-ttu-id="db179-143">-納入考量，這些規則<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />必須呼叫方法，透過下列方式之一：</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-143">-   Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span>
        </span>
        <span data-ttu-id="db179-144">-使用者必須先呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />如果他們決定不要插入快取中的衍生的變更監視器的執行個體的方法多載。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-144">-   Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span>
        </span>
        <span data-ttu-id="db179-145">-如果實作會嘗試將變更監控執行個體的物件快取插入，但插入失敗時，快取實作會負責呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />多載。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-145">-   If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span>
        </span>
        <span data-ttu-id="db179-146">當插入嘗試會導致例外狀況時，快取實作必須處置任何相關聯的相依性。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span>
        </span>
        <span data-ttu-id="db179-147">-如果移除快取項目時，快取實作也必須處置相依性。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-147">-   If the cache entry is removed, the cache implementation must also dispose of the dependency.</span>
        </span>
        <span data-ttu-id="db179-148">-內部實作<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法會自動呼叫<see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />方法之後它會呼叫回呼，註冊透過<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-148">-   The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="db179-149">這個自動呼叫 dispose 方法，在事件引發時才會發生的初始化<see cref="T:System.Runtime.Caching.ChangeMonitor" />先前已完成執行個體。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="db179-150">當衍生的變更監視器的建構函式呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />方法，如果變更監視的狀態已經變更 （也就是建構函式仍在作用中時受到已變更的狀態） 則<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />方法將自動處置變更監視器。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span>
        </span>
        <span data-ttu-id="db179-151">-<see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />屬性設定為<see langword="true" />之後<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法會呼叫衍生的變更監視器執行個體，不論是否<see cref="T:System.Runtime.Caching.OnChangedCallback" />物件已由呼叫設定<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />方法與否。</span>
        <span class="sxs-lookup">
          <span data-stu-id="db179-151">-   The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span>
        </span>
      </para>
    </block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce">
      <span data-ttu-id="db179-152">ASP.NET 快取</span>
      <span class="sxs-lookup">
        <span data-stu-id="db179-152">ASP.NET Caching</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="db179-153">初始化 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-153">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
          </span>
          <span data-ttu-id="db179-154">這個建構函式由衍生類別中的建構函式呼叫，來初始化基底類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-154">This constructor is called from constructors in derived classes to initialize the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-155"><xref:System.Runtime.Caching.ChangeMonitor>類別具有預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="db179-155">The <xref:System.Runtime.Caching.ChangeMonitor> class has a default constructor.</span></span> <span data-ttu-id="db179-156">不過，類別，繼承自基底<xref:System.Runtime.Caching.ChangeMonitor>類別，並定義自訂的變更監視的行為必須在建構函式執行初始化。</span><span class="sxs-lookup"><span data-stu-id="db179-156">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="db179-157">如需詳細資訊，請參閱繼承者一節的資訊。</span><span class="sxs-lookup"><span data-stu-id="db179-157">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="db179-158">在衍生類別的建構函式必須設定<see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />屬性，開始監視，並呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />類別之前它會傳回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-158">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span>
            </span>
            <span data-ttu-id="db179-159">如果完成 （例如，如果快取中找不到相依的快取索引鍵） 在相依性變更初始化之前，必須呼叫建構函式<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法之前呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-159">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span>
            </span>
            <span data-ttu-id="db179-160">在此情況下，建構函式可以呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />方法之後才<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />呼叫方法，因為<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />方法會初始化未完成時，擲回例外狀況。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-160">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="db179-161">釋放 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 類別目前的執行個體所使用的全部資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-161">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-162"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法用來釋放<xref:System.Runtime.Caching.ChangeMonitor>執行個體和相關的資源。</span><span class="sxs-lookup"><span data-stu-id="db179-162">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="db179-163">公用<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>會叫用方法，來協調與金鑰的生命週期事件 （例如初始化） 的衍生的變更監視器類別的處置程序，並釋放<xref:System.Runtime.Caching.ChangeMonitor>執行個體，以便執行個體進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="db179-163">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="db179-164"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法藉由處置的 managed 和 unmanaged 資源的衍生的變更監視器類別。</span><span class="sxs-lookup"><span data-stu-id="db179-164">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="changeMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="db179-165">將 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 類別的目前執行個體所使用的資源全部釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-165">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-166"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法會叫用<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>衍生的類別僅一次，第一次呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="db179-166">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="db179-167">後續呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="db179-167">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="db179-168">在呼叫方法之後，<xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="db179-168">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="db179-169"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>多載必須先呼叫處置<xref:System.Runtime.Caching.ChangeMonitor>執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-169">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="db179-170">呼叫 dispose 方法的規則如下：</span><span class="sxs-lookup"><span data-stu-id="db179-170">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="db179-171">項目插入快取之前，它是對 dispose 的呼叫者會負責<xref:System.Runtime.Caching.ChangeMonitor>執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-171">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="db179-172">一次快取項目和<xref:System.Runtime.Caching.ChangeMonitor>與它相關聯的執行個體傳遞至快取時，必須先確定快取實作者<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>呼叫，即使插入失敗。</span><span class="sxs-lookup"><span data-stu-id="db179-172">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="db179-173">之後的項目和其相關聯<xref:System.Runtime.Caching.ChangeMonitor>執行個體傳遞至快取、 呼叫端必須處置相依性，因為當<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>呼叫方法，呼叫會被視為相依性已變更。</span><span class="sxs-lookup"><span data-stu-id="db179-173">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="db179-174">如此一來，<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>自動叫用方法。</span><span class="sxs-lookup"><span data-stu-id="db179-174">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="db179-175">這些規則列入考量，<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>必須呼叫方法，透過下列方式之一：</span><span class="sxs-lookup"><span data-stu-id="db179-175">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="db179-176">使用者必須先呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>如果他們決定不要插入快取中的衍生的變更監視器的執行個體的方法多載。</span><span class="sxs-lookup"><span data-stu-id="db179-176">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="db179-177">快取實作會負責呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>多載，如果實作會嘗試將物件快取中插入變更監控執行個體，但是插入失敗。</span><span class="sxs-lookup"><span data-stu-id="db179-177">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="db179-178">當插入嘗試會導致例外狀況時，則快取實作必須處置任何相關聯的相依性。</span><span class="sxs-lookup"><span data-stu-id="db179-178">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="db179-179">如果已移除快取項目，快取實作必須也會處置相依性。</span><span class="sxs-lookup"><span data-stu-id="db179-179">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="db179-180">內部實作<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法會自動呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法之後它會呼叫回呼，註冊透過<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="db179-180">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db179-181">如果，才會發生此事件的引發期間的自動處置初始化<xref:System.Runtime.Caching.ChangeMonitor>先前完成的執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-181">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="db179-182">當衍生的變更監視器的建構函式呼叫<xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>方法，如果變更監視的狀態已經變更 （也就是狀態監視已變更時仍在作用中的建構函式） 然後<xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>方法將自動處置變更監視器。</span><span class="sxs-lookup"><span data-stu-id="db179-182">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db179-183">使用者不應該呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="db179-183">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="db179-184">不過，您無法防止使用者呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="db179-184">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="db179-185">因此，如果沒有的話，<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>叫用方法。</span><span class="sxs-lookup"><span data-stu-id="db179-185">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="db179-186">在此情況下，如同相依性變更，便會收到通知的快取項目。</span><span class="sxs-lookup"><span data-stu-id="db179-186">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="db179-187">若要防止衍生的類別覆寫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法，此方法不是明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="db179-187">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="db179-188">初始化沒有在呼叫基底 <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> 方法的衍生變更監視器類別中完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-188">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit" Usage="changeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="db179-189">
            <see langword="true" /> 表示釋放所有的 Managed 資源、Unmanaged 資源以及對 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 執行個體的所有參考，<see langword="false" /> 表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-189">
              <see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
          <span data-ttu-id="db179-190">傳遞 <see langword="false" /> 時，<see langword="finalizer" /> 執行緒會呼叫 <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> 方法，任何外部 Managed 參考都可能不再有效，因為記憶體回收已經將這些參考收回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-190">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="db179-191">釋放所有的 Managed 資源和 Unmanaged 資源，以及對 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 執行個體的所有參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-191">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span>
          </span>
          <span data-ttu-id="db179-192">這項多載必須由衍生自變更監控的類別實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-192">This overload must be implemented by derived change-monitor classes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-193">當 windows 7`disposing`值是`true`、 處置所有的 managed 和 unmanaged 資源，及任何參考這個物件會釋出以便衍生的變更監視器的執行個體進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="db179-193">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="db179-194">它可確保基底<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法會叫用實作<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法一次。</span><span class="sxs-lookup"><span data-stu-id="db179-194">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="db179-195">變更監視器必須實作<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />多載來釋放所有 managed 和 unmanaged 資源時的值<paramref name="disposing" />是<see langword="true" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-195">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span>
            </span>
            <span data-ttu-id="db179-196">
              <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />方法多載具有<paramref name="disposing" />的值<see langword="true" />時，會呼叫一次，也就是第一次會處置的執行個體。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-196">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span>
            </span>
            <span data-ttu-id="db179-197">變更監視器不能呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />直接多載。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-197">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span>
            </span>
            <span data-ttu-id="db179-198">在衍生的變更監視器可以呼叫公用無參數<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />基底方法<see cref="T:System.Runtime.Caching.ChangeMonitor" />類別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-198">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
            </span>
            <span data-ttu-id="db179-199">或者，變更監視器可以實作完成項方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-199">Alternatively, a change monitor can implement a finalizer method.</span>
            </span>
            <span data-ttu-id="db179-200">在此情況下，可以叫用完成項<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />方法並將它傳遞<paramref name="disposing" />的值<see langword="false" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-200">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span>
            </span>
            <span data-ttu-id="db179-201">不過，這是通常不需要。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-201">However, this is usually unnecessary.</span>
            </span>
            <span data-ttu-id="db179-202">監視相依性的變更通常被執行服務維護變更監控執行個體的參考。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-202">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span>
            </span>
            <span data-ttu-id="db179-203">參考進行記憶體回收，可防止執行個體，因此不需要的完成項方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-203">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span>
            </span>
            <span data-ttu-id="db179-204">若要避免記憶體流失，當相依性變更時，<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法會處置變更監控執行個體 （除非初始化尚未完成）。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-204">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db179-205">取得值，這個值表示 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 類別所監控的狀態已變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-205">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db179-206">如果 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 執行個體所監控的狀態已變更則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-206">
              <see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-207">您可以檢查中衍生此屬性的值<xref:System.Runtime.Caching.ChangeMonitor>類別，以查看是否已變更相依性。</span><span class="sxs-lookup"><span data-stu-id="db179-207">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="db179-208">值設定為`true`相依性變更發生時 (亦即，當<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法呼叫)。</span><span class="sxs-lookup"><span data-stu-id="db179-208">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="db179-209">之後<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法會呼叫衍生類別中的值<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>屬性會是`true`，而不論是否<xref:System.Runtime.Caching.OnChangedCallback>執行個體已呼叫通知<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="db179-209">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db179-210">呼叫端可以檢查<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>屬性，以查看是否已變更相依性。</span><span class="sxs-lookup"><span data-stu-id="db179-210">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="db179-211">不過，在多執行緒環境中，以更簡單且更容易維護的方法是將資料插入快取實作，而不檢查<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="db179-211">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="db179-212">快取實作必須檢查<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>屬性，且必須不執行 insert 或設定作業，如果一或多個相關聯的相依性已經變更。</span><span class="sxs-lookup"><span data-stu-id="db179-212">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberSignature Language="F#" Value="member this.InitializationComplete : unit -&gt; unit" Usage="changeMonitor.InitializationComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="db179-213">從衍生類別的建構函式進行呼叫，以指出初始化已經完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-213">Called from the constructor of derived classes to indicate that initialization is finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-214">在衍生類別的建構函式如果相依性變更，初始化衍生類別中完成之前，必須叫用<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="db179-214">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="db179-215">當<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>叫用方法時，<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>屬性會自動設為`true`變更監視器。</span><span class="sxs-lookup"><span data-stu-id="db179-215">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="db179-216">如此一來，當變更監視器的建構函式呼叫<xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>方法中，基底類別會自動會呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="db179-216">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="db179-217">如果初始化已完成，<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法自動處置衍生的變更監視器的執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-217">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="db179-218">在衍生類別的建構函式必須呼叫基底<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />建構函式傳回之前的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-218">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span>
            </span>
            <span data-ttu-id="db179-219">在衍生類別的建構函式可以呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />方法之後才<see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />呼叫，因為<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />方法會初始化未完成時，擲回例外狀況。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-219">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db179-220">取得值，這個值表示是否已經處置 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 類別的衍生執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-220">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db179-221">如果已經處置了執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-221">
              <see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-222">屬性設定為`true`基底之後<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>方法呼叫<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>處置執行個體的衍生類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="db179-222">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberSignature Language="F#" Value="member this.NotifyOnChanged : System.Runtime.Caching.OnChangedCallback -&gt; unit" Usage="changeMonitor.NotifyOnChanged onChangedCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback">
          <span data-ttu-id="db179-223">在相依性變更時叫用之方法的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-223">A reference to a method that is invoked when a dependency has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="db179-224">在相依性變更時，由快取實作呼叫來註冊回呼，並透過 <see cref="T:System.Runtime.Caching.ObjectCache" /> 委派通知 <see cref="T:System.Runtime.Caching.OnChangedCallback" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-224">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-225">快取實作會使用這個方法，連本身變更監視器。</span><span class="sxs-lookup"><span data-stu-id="db179-225">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="db179-226">如果您建立關聯的其中一個或多個變更監視器快取項目，您傳遞<xref:System.Runtime.Caching.CacheItemPolicy>具有快取項目填入的變更監視器屬性的執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-226">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="db179-227">支援變更監視器快取實作者負責反覆<xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>屬性並註冊<xref:System.Runtime.Caching.OnChangedCallback>委派與每個變更它所找到的監視器。</span><span class="sxs-lookup"><span data-stu-id="db179-227">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="db179-228">因為<xref:System.Runtime.Caching.OnChangedCallback>委派包含選擇性的狀態參數，則會具體的變更監視器實作可以傳遞選擇性狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="db179-228">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="db179-229">快取實作者會判斷是否可以採用明確的相依性的回呼的過程中傳遞自訂變更監視器的狀態類型。</span><span class="sxs-lookup"><span data-stu-id="db179-229">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db179-230">基底的快取擴充性 API 的狀態類型上有沒有明確的相依性的需求。</span><span class="sxs-lookup"><span data-stu-id="db179-230">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="db179-231">實作<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>方法會自動決定監視的狀態是否已在時間已變更<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="db179-231">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="db179-232">如果<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>屬性是`true`，則此方法會自動呼叫<xref:System.Runtime.Caching.OnChangedCallback>事件處理常式中，已註冊，透過<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="db179-232">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="db179-233">這是因為您可從快取實作會建立變更監視器，快取實作取得監視器，並將本身，最多時間的時間已變更基礎受監視的狀態。</span><span class="sxs-lookup"><span data-stu-id="db179-233">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="db179-234">如果狀態已變更則會傳遞至物件<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="db179-234">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="db179-235"><xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>方法可以叫用一次，並在後續呼叫會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="db179-235">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="db179-236">已經叫用此回呼方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-236">The callback method has already been invoked.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="db179-237">
            <paramref name="onChangedCallback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-237">
              <paramref name="onChangedCallback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="db179-238">1.您必須呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />的任何相依性變更通知的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-238">1.  You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span>
            </span>
            <span data-ttu-id="db179-239">如果已經發生相依性變更，情況<see cref="T:System.Runtime.Caching.OnChangedCallback" />執行個體時將會呼叫<see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />呼叫。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-239">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span>
            </span>
            <span data-ttu-id="db179-240">否則，請<see cref="T:System.Runtime.Caching.OnChangedCallback" />執行個體將會呼叫一次，時<see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />方法呼叫或當<see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />呼叫方法時，何者先發生。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-240">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span>
            </span>
            <span data-ttu-id="db179-241">
              <see cref="T:System.Runtime.Caching.OnChangedCallback" />快取實作所提供的執行個體應該要移除的快取項目並快取呼叫端要求時引發的所需的變更或更新事件回到原始的快取呼叫端。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-241">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span>
            </span>
            <span data-ttu-id="db179-242">2.</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-242">2.</span>
            </span>
            <span data-ttu-id="db179-243">物件快取實作必須先移除相依性變更相關聯的快取項目。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-243">The object cache implementation must remove the cache entry that is associated with a dependency change.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : obj -&gt; unit" Usage="changeMonitor.OnChanged state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="db179-244">變更事件的資料，</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-244">The data for the change event.</span>
          </span>
          <span data-ttu-id="db179-245">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-245">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="db179-246">在相依性變更時由衍生類別呼叫，以引發事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-246">Called by derived classes to raise the event when a dependency changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-247">一般而言，<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>發生相依性變更時，會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="db179-247">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="db179-248"><xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法也會叫用時變更監視執行個體已處置，但回呼尚未叫用時，才會發生處置。</span><span class="sxs-lookup"><span data-stu-id="db179-248">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="db179-249">如果<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法之前呼叫<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>呼叫方法時，從呼叫的狀態資料<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>方法儲存快取實作。</span><span class="sxs-lookup"><span data-stu-id="db179-249">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="db179-250">此外，要回呼<xref:System.Runtime.Caching.OnChangedCallback>立即叫用方法時<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>叫用方法。</span><span class="sxs-lookup"><span data-stu-id="db179-250">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db179-251">取得值，這個值表示 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 類別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-251">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db179-252">變更監控執行個體的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="db179-252">The identifier for a change-monitor instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db179-253"><xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A>屬性值通常包含相依性名稱結合字串資料的可唯一識別項的資料，受監視的<xref:System.Runtime.Caching.ChangeMonitor>執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-253">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="db179-254">值<xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A>屬性是一個字串。</span><span class="sxs-lookup"><span data-stu-id="db179-254">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="db179-255">字串的值用來指派的唯一識別碼<xref:System.Runtime.Caching.ChangeMonitor>執行個體。</span><span class="sxs-lookup"><span data-stu-id="db179-255">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="db179-256">藉由覆寫屬性，您可以定義之屬性的字串值的自訂實作，才能將它指派一個唯一的識別碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-256">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="db179-257">在衍生類別中，您必須在建構函式中設定屬性的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="db179-257">In derived classes, you must set the value of the property in the constructor.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>