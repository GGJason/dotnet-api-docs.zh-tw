<Type Name="ServiceBase" FullName="System.ServiceProcess.ServiceBase">
  <TypeSignature Language="C#" Value="public class ServiceBase : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBase extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBase&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBase : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.ServiceProcess.ServiceProcessInstaller))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1df3e-101">提供將會屬於服務應用程之服務的基底類別。</span><span class="sxs-lookup"><span data-stu-id="1df3e-101">Provides a base class for a service that will exist as part of a service application.</span></span> <span data-ttu-id="1df3e-102">當建立新的服務類別時，必須衍生自 <see cref="T:System.ServiceProcess.ServiceBase" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-102"><see cref="T:System.ServiceProcess.ServiceBase" /> must be derived from when creating a new service class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-103">衍生自<xref:System.ServiceProcess.ServiceBase>服務應用程式中定義您的服務類別時。</span><span class="sxs-lookup"><span data-stu-id="1df3e-103">Derive from <xref:System.ServiceProcess.ServiceBase> when defining your service class in a service application.</span></span> <span data-ttu-id="1df3e-104">任何服務很實用覆寫<xref:System.ServiceProcess.ServiceBase.OnStart%2A>和<xref:System.ServiceProcess.ServiceBase.OnStop%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-104">Any useful service overrides the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods.</span></span> <span data-ttu-id="1df3e-105">如需其他功能，您可以覆寫<xref:System.ServiceProcess.ServiceBase.OnPause%2A>和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>具有特定行為，以回應服務狀態的變更。</span><span class="sxs-lookup"><span data-stu-id="1df3e-105">For additional functionality, you can override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> with specific behavior in response to changes in the service state.</span></span>  
  
 <span data-ttu-id="1df3e-106">服務是長時間執行可執行檔不支援使用者介面，以及可能不在登入的使用者帳戶下執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-106">A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</span></span> <span data-ttu-id="1df3e-107">服務可以執行不需任何使用者的身分登入電腦。</span><span class="sxs-lookup"><span data-stu-id="1df3e-107">The service can run without any user being logged on to the computer.</span></span>  
  
 <span data-ttu-id="1df3e-108">根據預設，服務會執行系統帳戶不是系統管理員帳戶相同。</span><span class="sxs-lookup"><span data-stu-id="1df3e-108">By default, services run under the System account, which is not the same as the Administrator account.</span></span> <span data-ttu-id="1df3e-109">您無法變更系統帳戶的權限。</span><span class="sxs-lookup"><span data-stu-id="1df3e-109">You cannot change the rights of the System account.</span></span> <span data-ttu-id="1df3e-110">或者，您可以使用<xref:System.ServiceProcess.ServiceProcessInstaller>來指定服務執行所在的使用者帳戶。</span><span class="sxs-lookup"><span data-stu-id="1df3e-110">Alternatively, you can use a <xref:System.ServiceProcess.ServiceProcessInstaller> to specify a user account under which the service will run.</span></span>  
  
 <span data-ttu-id="1df3e-111">可執行檔可以包含多個服務，但必須包含個別<xref:System.ServiceProcess.ServiceInstaller>每個服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-111">An executable can contain more than one service but must contain a separate <xref:System.ServiceProcess.ServiceInstaller> for each service.</span></span> <span data-ttu-id="1df3e-112"><xref:System.ServiceProcess.ServiceInstaller>執行個體向系統註冊服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-112">The <xref:System.ServiceProcess.ServiceInstaller> instance registers the service with the system.</span></span> <span data-ttu-id="1df3e-113">安裝程式也會將每個服務與事件記錄檔可讓您記錄服務命令產生關聯。</span><span class="sxs-lookup"><span data-stu-id="1df3e-113">The installer also associates each service with an event log that you can use to record service commands.</span></span> <span data-ttu-id="1df3e-114">`main()`函式可執行檔中的定義應執行哪些服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-114">The `main()` function in the executable defines which services should run.</span></span> <span data-ttu-id="1df3e-115">服務的目前工作目錄是系統目錄，而非可執行檔所在的目錄。</span><span class="sxs-lookup"><span data-stu-id="1df3e-115">The current working directory of the service is the system directory, not the directory in which the executable is located.</span></span>  
  
 <span data-ttu-id="1df3e-116">當您啟動服務時，系統會找出可執行檔，並執行<xref:System.ServiceProcess.ServiceBase.OnStart%2A>該服務，可執行檔中包含的方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-116">When you start a service, the system locates the executable and runs the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method for that service, contained within the executable.</span></span> <span data-ttu-id="1df3e-117">不過，執行服務並不相同的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-117">However, running the service is not the same as running the executable.</span></span> <span data-ttu-id="1df3e-118">可執行檔只會載入服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-118">The executable only loads the service.</span></span> <span data-ttu-id="1df3e-119">透過服務控制管理員中存取服務 （例如，啟動和停止）。</span><span class="sxs-lookup"><span data-stu-id="1df3e-119">The service is accessed (for example, started and stopped) through the Service Control Manager.</span></span>  
  
 <span data-ttu-id="1df3e-120">可執行檔呼叫<xref:System.ServiceProcess.ServiceBase>衍生類別的建構函式的第一次呼叫服務上的啟動。</span><span class="sxs-lookup"><span data-stu-id="1df3e-120">The executable calls the <xref:System.ServiceProcess.ServiceBase> derived class's constructor the first time you call Start on the service.</span></span> <span data-ttu-id="1df3e-121"><xref:System.ServiceProcess.ServiceBase.OnStart%2A>建構函式執行後立即呼叫命令處理方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-121">The <xref:System.ServiceProcess.ServiceBase.OnStart%2A> command-handling method is called immediately after the constructor executes.</span></span> <span data-ttu-id="1df3e-122">因此需要分隔中執行的建構函式所執行的處理建構函式不已載入該服務，在第一次之後，再次執行<xref:System.ServiceProcess.ServiceBase.OnStart%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-122">The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="1df3e-123">可以釋放任何資源<xref:System.ServiceProcess.ServiceBase.OnStop%2A>應該建立在<xref:System.ServiceProcess.ServiceBase.OnStart%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-123">Any resources that can be released by <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should be created in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="1df3e-124">在建構函式中建立資源防止後再啟動服務，如果正確建立<xref:System.ServiceProcess.ServiceBase.OnStop%2A>已釋放資源。</span><span class="sxs-lookup"><span data-stu-id="1df3e-124">Creating resources in the constructor prevents them from being created properly if the service is started again after <xref:System.ServiceProcess.ServiceBase.OnStop%2A> has released the resources.</span></span>  
  
 <span data-ttu-id="1df3e-125">服務控制管理員 (SCM) 可用來與服務互動。</span><span class="sxs-lookup"><span data-stu-id="1df3e-125">The Service Control Manager (SCM) provides a way to interact with the service.</span></span> <span data-ttu-id="1df3e-126">您可以使用 SCM 傳遞到服務的啟動、 停止、 暫停、 繼續 」 或自訂的命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-126">You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</span></span> <span data-ttu-id="1df3e-127">SCM 會使用值<xref:System.ServiceProcess.ServiceBase.CanStop%2A>和<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>來判斷服務是否接受停止、 暫停或繼續命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-127">The SCM uses the values of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> and <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to determine whether the service accepts Stop, Pause, or Continue commands.</span></span> <span data-ttu-id="1df3e-128">停止、 暫停和繼續已啟用的 SCM 內容功能表才會在中的對應屬性<xref:System.ServiceProcess.ServiceBase.CanStop%2A>或<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`true`服務類別中。</span><span class="sxs-lookup"><span data-stu-id="1df3e-128">Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <xref:System.ServiceProcess.ServiceBase.CanStop%2A> or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` in the service class.</span></span> <span data-ttu-id="1df3e-129">啟用時，要將命令傳遞至服務，以及<xref:System.ServiceProcess.ServiceBase.OnStop%2A>， <xref:System.ServiceProcess.ServiceBase.OnPause%2A>，或<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1df3e-129">If enabled, the command is passed to the service, and <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is called.</span></span> <span data-ttu-id="1df3e-130">如果<xref:System.ServiceProcess.ServiceBase.CanStop%2A>， <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>，或<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`，對應的命令處理方法 (例如<xref:System.ServiceProcess.ServiceBase.OnStop%2A>) 將不會處理，即使您已實作的方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-130">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) will not be processed, even if you have implemented the method.</span></span>  
  
 <span data-ttu-id="1df3e-131">您可以使用<xref:System.ServiceProcess.ServiceController>類別以程式設計方式進行何種 SCM 未使用的使用者介面。</span><span class="sxs-lookup"><span data-stu-id="1df3e-131">You can use the <xref:System.ServiceProcess.ServiceController> class to do programmatically what the SCM does using a user interface.</span></span> <span data-ttu-id="1df3e-132">您可以自動化主控台中可用的工作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-132">You can automate the tasks available in the console.</span></span> <span data-ttu-id="1df3e-133">如果<xref:System.ServiceProcess.ServiceBase.CanStop%2A>， <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>，或<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`true`但未實作對應的命令處理方法 (例如<xref:System.ServiceProcess.ServiceBase.OnStop%2A>) 系統擲回例外狀況，並忽略命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-133">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` but you have not implemented a corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) the system throws an exception and ignores the command.</span></span>  
  
 <span data-ttu-id="1df3e-134">您不需要實作<xref:System.ServiceProcess.ServiceBase.OnStart%2A>， <xref:System.ServiceProcess.ServiceBase.OnStop%2A>，或在任何其他方法<xref:System.ServiceProcess.ServiceBase>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-134">You do not have to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, or any other method in <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="1df3e-135">不過中, 所述的服務行為<xref:System.ServiceProcess.ServiceBase.OnStart%2A>，因此最小值，這個成員應該覆寫。</span><span class="sxs-lookup"><span data-stu-id="1df3e-135">However, the service's behavior is described in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, so at minimum, this member should be overridden.</span></span> <span data-ttu-id="1df3e-136">`main()`函式可執行檔的可執行檔和服務控制管理員中註冊服務，藉由呼叫<xref:System.ServiceProcess.ServiceBase.Run%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-136">The `main()` function of the executable registers the service in the executable with the Service Control Manager by calling the <xref:System.ServiceProcess.ServiceBase.Run%2A> method.</span></span> <span data-ttu-id="1df3e-137"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>屬性<xref:System.ServiceProcess.ServiceBase>物件傳遞至<xref:System.ServiceProcess.ServiceBase.Run%2A>方法必須符合<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>該服務之服務安裝程式的屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-137">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> property of the <xref:System.ServiceProcess.ServiceBase> object passed to the <xref:System.ServiceProcess.ServiceBase.Run%2A> method must match the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the service installer for that service.</span></span>  
  
 <span data-ttu-id="1df3e-138">您可以使用`InstallUtil.exe`您系統上安裝服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-138">You can use `InstallUtil.exe` to install services on your system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1df3e-139">您可以指定的記錄檔的應用程式事件記錄檔，以接收通知服務呼叫，但是這兩者不<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>和<xref:System.ServiceProcess.ServiceBase.EventLog%2A>屬性可以寫入自訂的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-139">You can specify a log other than the Application event log to receive notification of service calls, but neither the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> nor the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property can write to a custom log.</span></span> <span data-ttu-id="1df3e-140">設定<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>至`false`如果不想使用自動記錄。</span><span class="sxs-lookup"><span data-stu-id="1df3e-140">Set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` if you do not want to use automatic logging.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df3e-141">建立 <see cref="T:System.ServiceProcess.ServiceBase" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1df3e-141">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-142">無法建立的執行個體<xref:System.ServiceProcess.ServiceBase>類別。</span><span class="sxs-lookup"><span data-stu-id="1df3e-142">Do not create an instance of the <xref:System.ServiceProcess.ServiceBase> class.</span></span> <span data-ttu-id="1df3e-143">相反地，衍生自<xref:System.ServiceProcess.ServiceBase>並具現化您的衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="1df3e-143">Instead, derive from <xref:System.ServiceProcess.ServiceBase> and instantiate your derived class.</span></span> <span data-ttu-id="1df3e-144">您需要實作建構函式類別繼承自至少<xref:System.ServiceProcess.ServiceBase>設定<xref:System.ServiceProcess.ServiceBase.ServiceName%2A>上您的元件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-144">The minimum you need to implement in the constructor for a class inherited from <xref:System.ServiceProcess.ServiceBase> is to set the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> on your component.</span></span> <span data-ttu-id="1df3e-145">建構函式中特別不需要任何其他處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-145">No other processing is specifically required in the constructor.</span></span> <span data-ttu-id="1df3e-146">您應該處理中的大部分初始化<xref:System.ServiceProcess.ServiceBase.OnStart%2A>而不是在建構函式。</span><span class="sxs-lookup"><span data-stu-id="1df3e-146">You should handle most initialization in <xref:System.ServiceProcess.ServiceBase.OnStart%2A> rather than in the constructor.</span></span> <span data-ttu-id="1df3e-147">否則，便不保證已停止後重新啟動服務時，將重新初始化的物件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-147">Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</span></span>  
  
 <span data-ttu-id="1df3e-148">如果衍生類別中覆寫建構函式，請在程式碼中呼叫基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="1df3e-148">If you override the constructor in your derived class, call the base class constructor in your code.</span></span>  
  
 <span data-ttu-id="1df3e-149"><xref:System.ServiceProcess.ServiceBase>建構函式<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-149">The <xref:System.ServiceProcess.ServiceBase> constructor sets <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true`.</span></span> <span data-ttu-id="1df3e-150">如果您不想自動登入服務呼叫從服務控制管理員 (SCM)，設定<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>至`false`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-150">If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false`.</span></span>  
  
 <span data-ttu-id="1df3e-151">如果可執行檔會包含單一服務，系統會呼叫服務的建構函式時開始從 SCM 中，選取與呼叫停止，則會執行解構函式。</span><span class="sxs-lookup"><span data-stu-id="1df3e-151">If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</span></span>  
  
 <span data-ttu-id="1df3e-152">如果可執行檔包含多個服務，呼叫開始於一項服務會導致針對可執行檔中的所有服務呼叫的建構函式，但指定的服務已啟動。</span><span class="sxs-lookup"><span data-stu-id="1df3e-152">If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</span></span> <span data-ttu-id="1df3e-153">當所有的服務已經停止，不個別停止每個服務時，解構函式的服務會一起執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-153">Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1df3e-154">如果您覆寫基底類別建構函式，您應該在衍生類別的建構函式中明確呼叫它。</span><span class="sxs-lookup"><span data-stu-id="1df3e-154">If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      </Docs>
    </Member>
    <Member MemberName="AutoLog">
      <MemberSignature Language="C#" Value="public bool AutoLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBAutoLog")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-155">指示是否在事件記錄檔中報告啟動、停止、暫停和繼續等命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-155">Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</span></span></summary>
        <value>
          <span data-ttu-id="1df3e-156">若要在事件記錄檔中報告資訊，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-156"><see langword="true" /> to report information in the event log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-157">設定<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>至`true`指示服務應用程式事件日誌中報表的命令失敗，因為狀態變更資訊用於啟動、 停止、 暫停和繼續服務上的事件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-157">Setting <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true` instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</span></span> <span data-ttu-id="1df3e-158">服務名稱做記錄檔的<xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-158">The name of the service is used as the log's <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1df3e-159">若要報告自訂事件記錄檔，而不是應用程式記錄檔的資訊，請設定<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>至`false`和寫入命令處理方法中的指示<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>， <xref:System.ServiceProcess.ServiceBase.OnPause%2A>，或<xref:System.ServiceProcess.ServiceBase.OnStop%2A>張貼到適當的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-159">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1df3e-160"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>，它提供事件記錄檔的來源字串之前，必須設定服務會嘗試寫入事件記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-160">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</span></span> <span data-ttu-id="1df3e-161">嘗試存取事件記錄檔之前設定的來源名稱，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1df3e-161">Trying to access the event log before the source name is set throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandlePowerEvent">
      <MemberSignature Language="C#" Value="public bool CanHandlePowerEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandlePowerEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandlePowerEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandlePowerEvent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-162">取得或設定值，指出服務是否可以處理電腦電源狀態變更時發生的告知。</span><span class="sxs-lookup"><span data-stu-id="1df3e-162">Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</span></span></summary>
        <value>
          <span data-ttu-id="1df3e-163">如果服務處理 <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> 類別中所指示的電腦電源狀態變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-163"><see langword="true" /> if the service handles the computer power status changes indicated in the <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> class, otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-164">當電腦的電源狀態變更，服務控制管理員 (SCM) 會驗證服務是否接受電源事件的命令使用的值<xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-164">When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span></span>  
  
 <span data-ttu-id="1df3e-165">如果<xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>是`true`，傳遞至服務的命令和<xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A>如果定義會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-165">If <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> is `true`, the command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> method is called if defined.</span></span> <span data-ttu-id="1df3e-166">如果<xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A>未實作在衍生類別中，SCM 處理空的基底類別透過電源事件<xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-166">If <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is not implemented in the derived class, the SCM handles the power event through the empty base class <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-167">這個屬性在服務啟動之後被修改。</span><span class="sxs-lookup"><span data-stu-id="1df3e-167">This property is modified after the service was started.</span></span></exception>
        <altmember cref="T:System.ServiceProcess.PowerBroadcastStatus" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandleSessionChangeEvent">
      <MemberSignature Language="C#" Value="public bool CanHandleSessionChangeEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandleSessionChangeEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandleSessionChangeEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandleSessionChangeEvent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-168">取得或設定值，指出服務是否可以處理從 Terminal Server 工作階段所擷取的工作階段變更事件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-168">Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</span></span></summary>
        <value>
          <span data-ttu-id="1df3e-169">如果服務可以處理 Terminal Server 工作階段的變更事件則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-169"><see langword="true" /> if the service can handle Terminal Server session change events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-170">這個屬性在服務啟動之後被修改。</span><span class="sxs-lookup"><span data-stu-id="1df3e-170">This property is modified after the service was started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-171">取得或設定值，指出服務是否可以暫停和繼續。</span><span class="sxs-lookup"><span data-stu-id="1df3e-171">Gets or sets a value indicating whether the service can be paused and resumed.</span></span></summary>
        <value>
          <span data-ttu-id="1df3e-172">如果服務可以暫停，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-172"><see langword="true" /> if the service can be paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-173">值設定<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>服務建構函式中的屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-173">Set the value of the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property in the constructor for the service.</span></span>  
  
 <span data-ttu-id="1df3e-174">服務已暫停，當它暫停它正在進行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-174">When a service is paused, it halts what it is doing.</span></span> <span data-ttu-id="1df3e-175">當您繼續執行服務 （無論是透過服務控制管理員中或以程式設計的方式），<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-175">When you continue the service (either through the Service Control Manager or programmatically), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> runs.</span></span>  
  
 <span data-ttu-id="1df3e-176">暫停要求傳送至服務，可以節省系統資源。</span><span class="sxs-lookup"><span data-stu-id="1df3e-176">Sending a Pause request to the service can conserve system resources.</span></span> <span data-ttu-id="1df3e-177">暫停可能不會發行所有系統資源，但停止。</span><span class="sxs-lookup"><span data-stu-id="1df3e-177">Pause may not release all system resources, but Stop does.</span></span> <span data-ttu-id="1df3e-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> 和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>，通常會執行較少處理比實作<xref:System.ServiceProcess.ServiceBase.OnStop%2A>和<xref:System.ServiceProcess.ServiceBase.OnStart%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> are often implemented to perform less processing than <xref:System.ServiceProcess.ServiceBase.OnStop%2A> and <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span>  
  
 <span data-ttu-id="1df3e-179">當<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`true`，覆寫<xref:System.ServiceProcess.ServiceBase.OnPause%2A>和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>來指定服務控制管理員 (SCM) 將暫停或繼續要求傳遞至您的服務時所採取的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-179">When <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true`, override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="1df3e-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> 復原中的處理應該實作<xref:System.ServiceProcess.ServiceBase.OnPause%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="1df3e-181">如果<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`、 SCM 將不會傳遞暫停或繼續對服務要求，因此<xref:System.ServiceProcess.ServiceBase.OnPause%2A>和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>即使它們實作，將不會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-181">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="1df3e-182">SCM 中`Pause`和`Continue`已停用控制項時<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-182">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-183">已經啟動服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-183">The service has already been started.</span></span> <span data-ttu-id="1df3e-184">一旦已經啟動服務，就無法變更 <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-184">The <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-185">取得或設定值，指出當系統關閉時是否應該通知服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-185">Gets or sets a value indicating whether the service should be notified when the system is shutting down.</span></span></summary>
        <value>
          <span data-ttu-id="1df3e-186">如果當系統關閉時應該通知服務，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-186"><see langword="true" /> if the service should be notified when the system is shutting down; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="1df3e-187">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-187">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-188">如果<xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>是`true`，當系統關閉時，通知服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-188">If <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> is `true`, the service is notified when the system is shutting down.</span></span> <span data-ttu-id="1df3e-189">在關機，<xref:System.ServiceProcess.ServiceBase.OnShutdown%2A>呼叫方法時若已在您的衍生類別中實作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-189">At shutdown, the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method is called if it has been implemented in your derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1df3e-190">只有系統應該會造成<xref:System.ServiceProcess.ServiceBase.OnShutdown%2A>方法才可執行，服務可以呼叫它，但不是建議這樣。</span><span class="sxs-lookup"><span data-stu-id="1df3e-190">Only the system should cause the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method to execute; the service can call it, but this is not recommended.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-191">已經啟動服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-191">The service has already been started.</span></span> <span data-ttu-id="1df3e-192">一旦已經啟動服務，就無法變更 <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-192">The <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-193">取得或設定值，指出一旦服務已經啟動是否可以停止它。</span><span class="sxs-lookup"><span data-stu-id="1df3e-193">Gets or sets a value indicating whether the service can be stopped once it has started.</span></span></summary>
        <value>
          <span data-ttu-id="1df3e-194">如果可以停止服務並且呼叫 <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> 方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-194"><see langword="true" /> if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-195">在服務上呼叫時停止，服務控制管理員 (SCM) 會驗證服務是否接受 Stop 命令使用的值<xref:System.ServiceProcess.ServiceBase.CanStop%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-195">When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span></span> <span data-ttu-id="1df3e-196">對於大部分的服務，值<xref:System.ServiceProcess.ServiceBase.CanStop%2A>是`true`，但某些作業系統服務，例如，不允許使用者停止它們。</span><span class="sxs-lookup"><span data-stu-id="1df3e-196">For most services, the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, but some operating system services, for example, do not allow the user to stop them.</span></span>  
  
 <span data-ttu-id="1df3e-197">如果<xref:System.ServiceProcess.ServiceBase.CanStop%2A>是`true`，傳遞至服務的停止命令而<xref:System.ServiceProcess.ServiceBase.OnStop%2A>呼叫方法時若其定義。</span><span class="sxs-lookup"><span data-stu-id="1df3e-197">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="1df3e-198">如果<xref:System.ServiceProcess.ServiceBase.OnStop%2A>未實作在衍生類別中，透過空的基底類別的 Stop 命令的 SCM 控點<xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-198">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-199">已經啟動服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-199">The service has already been started.</span></span> <span data-ttu-id="1df3e-200">一旦已經啟動服務，就無法變更 <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-200">The <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1df3e-201"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="1df3e-201"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1df3e-202">處置 (Dispose) <see cref="T:System.ServiceProcess.ServiceBase" /> 所使用的資源 (除了記憶體之外)。</span><span class="sxs-lookup"><span data-stu-id="1df3e-202">Disposes of the resources (other than memory) used by the <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-203">呼叫<xref:System.ServiceProcess.ServiceBase.Dispose%2A>衍生類別中 (並透過它在<xref:System.ServiceProcess.ServiceBase>類別) 當您完成使用衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="1df3e-203">Call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> in your derived class (and through it, in the <xref:System.ServiceProcess.ServiceBase> class) when you are finished using the derived class.</span></span> <span data-ttu-id="1df3e-204"><xref:System.ServiceProcess.ServiceBase.Dispose%2A>方法讓衍生的類別中無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="1df3e-204">The <xref:System.ServiceProcess.ServiceBase.Dispose%2A> method leaves the derived class in an unusable state.</span></span> <span data-ttu-id="1df3e-205">在呼叫<xref:System.ServiceProcess.ServiceBase.Dispose%2A>，您必須釋放所有參考衍生的類別和<xref:System.ServiceProcess.ServiceBase>讓它們所佔用的記憶體可由記憶體回收收回。</span><span class="sxs-lookup"><span data-stu-id="1df3e-205">After calling <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, you must release all references to the derived class and <xref:System.ServiceProcess.ServiceBase> so the memory they were occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1df3e-206">請務必呼叫<xref:System.ServiceProcess.ServiceBase.Dispose%2A>釋放類別衍生自您最後一個參考之前<xref:System.ServiceProcess.ServiceBase>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-206">Always call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> before you release your last reference to the class derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="1df3e-207">否則，資源<xref:System.ServiceProcess.ServiceBase>和衍生的類別會使用將不會釋放回收呼叫物件的解構函式之前。</span><span class="sxs-lookup"><span data-stu-id="1df3e-207">Otherwise, the resources <xref:System.ServiceProcess.ServiceBase> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</span></span>  
  
 <span data-ttu-id="1df3e-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> 通常處理中的程式碼實作<xref:System.ServiceProcess.ServiceBase.OnPause%2A>呼叫合併<xref:System.ServiceProcess.ServiceBase.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is often implemented to process the code in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combined with a call to <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span></span> <span data-ttu-id="1df3e-209">如果您選擇在您的衍生類別中這麼做，它是慣用實作<xref:System.ServiceProcess.ServiceBase.OnStart%2A>配置任何<xref:System.ServiceProcess.ServiceBase.Dispose%2A>釋出。</span><span class="sxs-lookup"><span data-stu-id="1df3e-209">If you choose to do this in your derived class, it is customary to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to allocate whatever <xref:System.ServiceProcess.ServiceBase.Dispose%2A> released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.EventLog EventLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-210">取得事件記錄檔，您可以利用該事件記錄將服務命令呼叫 (例如啟動和停止) 通知寫入應用程式事件記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-210">Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</span></span></summary>
        <value><span data-ttu-id="1df3e-211"><see cref="T:System.Diagnostics.EventLog" /> 執行個體，其來源是登錄到應用程式記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-211">An <see cref="T:System.Diagnostics.EventLog" /> instance whose source is registered to the Application log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-212">建構函式初始化<xref:System.ServiceProcess.ServiceBase.EventLog%2A>與執行個體的內容<xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>和<xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType>屬性集。</span><span class="sxs-lookup"><span data-stu-id="1df3e-212">The constructor initializes the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to an instance with the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> properties set.</span></span> <span data-ttu-id="1df3e-213">來源是<xref:System.ServiceProcess.ServiceBase.ServiceName%2A>的服務，並在記錄檔已在電腦的應用程式記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-213">The source is the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service, and the log is the computer's Application log.</span></span> <span data-ttu-id="1df3e-214">這些值會自動設定並不能自動記錄服務命令的變更。</span><span class="sxs-lookup"><span data-stu-id="1df3e-214">These values are set automatically and cannot be changed for automatic logging of service commands.</span></span>  
  
 <span data-ttu-id="1df3e-215">當<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>是`true`，啟動、 停止、 暫停、 繼續和自訂的命令會自動記錄應用程式事件記錄檔中。</span><span class="sxs-lookup"><span data-stu-id="1df3e-215">When <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</span></span> <span data-ttu-id="1df3e-216">您可以使用<xref:System.ServiceProcess.ServiceBase.EventLog%2A>將額外的訊息寫入該記錄檔的屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-216">You can use the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to write additional messages to that log as well.</span></span> <span data-ttu-id="1df3e-217">元件呼叫<xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType>使用這個<xref:System.ServiceProcess.ServiceBase.EventLog%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="1df3e-217">The component calls <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> using this <xref:System.ServiceProcess.ServiceBase.EventLog%2A> member.</span></span>  
  
 <span data-ttu-id="1df3e-218">若要報告自訂事件記錄檔，而不是應用程式記錄檔的資訊，請設定<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>至`false`和寫入命令處理方法中的指示<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>， <xref:System.ServiceProcess.ServiceBase.OnPause%2A>，或<xref:System.ServiceProcess.ServiceBase.OnStop%2A>張貼到適當的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-218">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-219">取得或設定服務的結束代碼 (Exit Code)。</span><span class="sxs-lookup"><span data-stu-id="1df3e-219">Gets or sets the exit code for the service.</span></span></summary>
        <value><span data-ttu-id="1df3e-220">服務的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="1df3e-220">The exit code for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-221">設定<xref:System.ServiceProcess.ServiceBase.ExitCode%2A>屬性設為非零值，之後才能停止服務，以指出服務控制管理員發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="1df3e-221">Set the <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxNameLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxNameLength = 80;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-222">指示服務名稱的最大值。</span><span class="sxs-lookup"><span data-stu-id="1df3e-222">Indicates the maximum size for a service name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-223">ServiceName 或 DisplayName 兩者都有您的服務類別上設定屬性時，必須遵守的大小限制。</span><span class="sxs-lookup"><span data-stu-id="1df3e-223">ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </Docs>
    </Member>
    <Member MemberName="OnContinue">
      <MemberSignature Language="C#" Value="protected virtual void OnContinue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnContinue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContinue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContinue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df3e-224">在衍生類別中實作時，當服務控制管理員 (SCM) 傳送繼續命令給服務時，將執行 <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-224">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="1df3e-225">指定暫停服務後要繼續正常運作所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-225">Specifies actions to take when a service resumes normal functioning after being paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-226">實作<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>鏡像，您的應用程式回應<xref:System.ServiceProcess.ServiceBase.OnPause%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-226">Implement <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to mirror your application's response to <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span> <span data-ttu-id="1df3e-227">當您繼續執行服務 （無論是透過 [服務] 主控台或以程式設計方式），<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>處理執行，然後服務再次變成作用中。</span><span class="sxs-lookup"><span data-stu-id="1df3e-227">When you continue the service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing runs, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="1df3e-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> 應該覆寫，當<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="1df3e-229">如果<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`、 SCM 將不會傳遞暫停或繼續對服務要求，因此<xref:System.ServiceProcess.ServiceBase.OnPause%2A>和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>即使它們實作，將不會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-229">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="1df3e-230">SCM 中`Pause`和`Continue`已停用控制項時<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-230">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnCustomCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomCommand(int command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="1df3e-231">傳送至服務的命令訊息。</span><span class="sxs-lookup"><span data-stu-id="1df3e-231">The command message sent to the service.</span></span></param>
        <summary><span data-ttu-id="1df3e-232">在衍生類別中實作時，當服務控制管理員 (SCM) 傳遞自訂命令給服務時，將執行 <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-232">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service Control Manager (SCM) passes a custom command to the service.</span></span> <span data-ttu-id="1df3e-233">指定在具有指定參數值的命令發生時所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-233">Specifies actions to take when a command with the specified parameter value occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> 可讓您指定啟動、 停止、 暫停和繼續服務之外的其他功能。</span><span class="sxs-lookup"><span data-stu-id="1df3e-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</span></span>  
  
 <span data-ttu-id="1df3e-235">SCM 不會檢查以確認服務是否支援自訂的命令`command`參數傳入。</span><span class="sxs-lookup"><span data-stu-id="1df3e-235">The SCM does not examine the custom command to verify whether the service supports the `command` parameter passed in.</span></span> <span data-ttu-id="1df3e-236">它的自訂命令直接傳送至服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-236">It passes the custom command directly to the service.</span></span> <span data-ttu-id="1df3e-237">如果服務無法辨識`command`參數，它不做任何動作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-237">If the service does not recognize the `command` parameter, it does nothing.</span></span>  
  
 <span data-ttu-id="1df3e-238">所引發的自訂命令<xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>陳述式中的<xref:System.ServiceProcess.ServiceController>元件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-238">Custom commands are raised by an <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> statement in a <xref:System.ServiceProcess.ServiceController> component.</span></span> <span data-ttu-id="1df3e-239">使用 switch 陳述式或 if...然後條件來處理您在服務定義的自訂命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-239">Use a switch statement or if..then condition to handle the custom commands you define on your service.</span></span>  
  
 <span data-ttu-id="1df3e-240">您可以在您的應用程式中定義，或使用中的自訂命令的唯一值<xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A>則 128 到 255 之間。</span><span class="sxs-lookup"><span data-stu-id="1df3e-240">The only values for a custom command that you can define in your application or use in <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> are those between 128 and 255.</span></span> <span data-ttu-id="1df3e-241">128 以下的整數會對應至系統保留的值。</span><span class="sxs-lookup"><span data-stu-id="1df3e-241">Integers below 128 correspond to system-reserved values.</span></span>  
  
 <span data-ttu-id="1df3e-242">如果<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>屬性是`true`，自訂的命令，像其他命令，將項目寫入事件記錄檔以報告是否方法執行成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="1df3e-242">If the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> property is `true`, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="protected virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPause" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPause ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df3e-243">在衍生類別中實作時，當服務控制管理員 (SCM) 傳送暫停命令至服務時執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-243">When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="1df3e-244">指定在服務暫停時所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-244">Specifies actions to take when a service pauses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-245">使用<xref:System.ServiceProcess.ServiceBase.OnPause%2A>來指定服務收到縸懫暀硉時，就會發生的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> to specify the processing that occurs when the service receives a Pause command.</span></span> <span data-ttu-id="1df3e-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> 應該覆寫，當<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="1df3e-247">當您繼續已暫停的服務 （無論是透過 [服務] 主控台或以程式設計方式），<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>處理，並再次變成作用中的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-247">When you continue a paused service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing is run, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="1df3e-248">[暫停] 命令只允許您的應用程式，以回應特定事件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-248">The Pause command only allows your application to react to a specific event.</span></span> <span data-ttu-id="1df3e-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> 沒有任何您沒有定義動作的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> does nothing to the service that you do not define it to do.</span></span>  
  
 <span data-ttu-id="1df3e-250">服務傳送暫停要求可以節省系統資源，因為暫停不需要釋放所有系統資源。</span><span class="sxs-lookup"><span data-stu-id="1df3e-250">Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</span></span> <span data-ttu-id="1df3e-251">例如，如果執行緒已開啟的程序，暫停服務，而不是停止它可以讓執行緒保持開啟，因此不需要服務繼續時重新配置。</span><span class="sxs-lookup"><span data-stu-id="1df3e-251">For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</span></span> <span data-ttu-id="1df3e-252">如果您定義釋放所有系統資源的暫停時，它的行為類似停止命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-252">If you define Pause to release all system resources, it behaves like a Stop command.</span></span>  
  
 <span data-ttu-id="1df3e-253">設定<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>至`true`，並覆寫<xref:System.ServiceProcess.ServiceBase.OnPause%2A>和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>指定 SCM 將暫停或繼續要求傳遞至您的服務時所採取的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-253">Set <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to `true`, and override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="1df3e-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> 復原中的處理應該實作<xref:System.ServiceProcess.ServiceBase.OnPause%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="1df3e-255">如果<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`、 SCM 將不會傳遞暫停或繼續對服務要求，因此<xref:System.ServiceProcess.ServiceBase.OnPause%2A>和<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>即使實作，將不會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-255">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if implemented.</span></span> <span data-ttu-id="1df3e-256">SCM 中`Pause`和`Continue`已停用控制項時<xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-256">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnPowerEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnPowerEvent (System.ServiceProcess.PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPowerEvent(valuetype System.ServiceProcess.PowerBroadcastStatus powerStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnPowerEvent (powerStatus As PowerBroadcastStatus) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnPowerEvent(System::ServiceProcess::PowerBroadcastStatus powerStatus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="powerStatus" Type="System.ServiceProcess.PowerBroadcastStatus" />
      </Parameters>
      <Docs>
        <param name="powerStatus"><span data-ttu-id="1df3e-257"><see cref="T:System.ServiceProcess.PowerBroadcastStatus" />，表示來自系統關於電源狀態的通知。</span><span class="sxs-lookup"><span data-stu-id="1df3e-257">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status.</span></span></param>
        <summary><span data-ttu-id="1df3e-258">在衍生類別中實作時，當電腦的電源狀態已經變更時執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-258">When implemented in a derived class, executes when the computer's power status has changed.</span></span> <span data-ttu-id="1df3e-259">這適用於攜帶型電腦，當它們進入暫停模式的時候，不同於系統關閉。</span><span class="sxs-lookup"><span data-stu-id="1df3e-259">This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</span></span></summary>
        <returns><span data-ttu-id="1df3e-260">當在衍生類別中實作時，您的應用程式之需求會決定將傳回什麼值。</span><span class="sxs-lookup"><span data-stu-id="1df3e-260">When implemented in a derived class, the needs of your application determine what value to return.</span></span> <span data-ttu-id="1df3e-261">例如，如果傳遞 <see langword="QuerySuspend" /> 廣播狀態，您可能會導致您的應用程式傳回 <see langword="false" /> 來拒絕查詢。</span><span class="sxs-lookup"><span data-stu-id="1df3e-261">For example, if a <see langword="QuerySuspend" /> broadcast status is passed, you could cause your application to reject the query by returning <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-262">使用<xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A>指定發生於系統事件中指出處理<xref:System.ServiceProcess.PowerBroadcastStatus>列舉型別，就會發生-例如，電腦會置於已暫停模式，或指出電力偏低時。</span><span class="sxs-lookup"><span data-stu-id="1df3e-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> to specify the processing that occurs when the system event indicated in the <xref:System.ServiceProcess.PowerBroadcastStatus> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</span></span>  
  
 <span data-ttu-id="1df3e-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> 應該覆寫，當<xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionChange">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionChange (System.ServiceProcess.SessionChangeDescription changeDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionChange(valuetype System.ServiceProcess.SessionChangeDescription changeDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionChange (changeDescription As SessionChangeDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionChange(System::ServiceProcess::SessionChangeDescription changeDescription);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDescription" Type="System.ServiceProcess.SessionChangeDescription" />
      </Parameters>
      <Docs>
        <param name="changeDescription"><span data-ttu-id="1df3e-264">識別變更類型的結構。</span><span class="sxs-lookup"><span data-stu-id="1df3e-264">A structure that identifies the change type.</span></span></param>
        <summary><span data-ttu-id="1df3e-265">當從 Terminal Server 工作階段接收到變更事件時執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-265">Executes when a change event is received from a Terminal Server session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-266">您必須設定<xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A>屬性`true`以便執行此方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-266">You must set the <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> property to `true` to enable the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <altmember cref="T:System.ServiceProcess.SessionChangeDescription" />
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df3e-267">在衍生類別中實作時，當系統正在關閉時執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-267">When implemented in a derived class, executes when the system is shutting down.</span></span> <span data-ttu-id="1df3e-268">指定緊接在系統關閉之前應該發生的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-268">Specifies what should occur immediately prior to the system shutting down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-269">使用<xref:System.ServiceProcess.ServiceBase.OnShutdown%2A>來指定系統關機時所發生的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> to specify the processing that occurs when the system shuts down.</span></span>  
  
 <span data-ttu-id="1df3e-270">只有當作業系統關機，不會在關閉電腦時，就會發生這個事件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-270">This event occurs only when the operating system is shut down, not when the computer is turned off.</span></span>  
  
 <span data-ttu-id="1df3e-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> 應該覆寫，當<xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected virtual void OnStart (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStart(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStart (args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStart(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="1df3e-272">啟動命令所傳遞的資料。</span><span class="sxs-lookup"><span data-stu-id="1df3e-272">Data passed by the start command.</span></span></param>
        <summary><span data-ttu-id="1df3e-273">在衍生類別中實作時，當服務控制管理員 (SCM) 傳送啟動命令至服務或當作業系統啟動 (自動啟動服務) 時執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-273">When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</span></span> <span data-ttu-id="1df3e-274">指定在服務啟動時所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-274">Specifies actions to take when the service starts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-275">使用<xref:System.ServiceProcess.ServiceBase.OnStart%2A>來指定在服務接收啟動命令時，就會發生的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to specify the processing that occurs when the service receives a Start command.</span></span> <span data-ttu-id="1df3e-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> 是您可以在其中指定服務行為的方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is the method in which you specify the behavior of the service.</span></span> <span data-ttu-id="1df3e-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> 可以接受引數，用來傳送資料，但這種使用方式很少發生。</span><span class="sxs-lookup"><span data-stu-id="1df3e-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> can take arguments as a way to pass data, but this usage is rare.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1df3e-278">請勿使用建構函式來執行處理應該在<xref:System.ServiceProcess.ServiceBase.OnStart%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-278">Do not use the constructor to perform processing that should be in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="1df3e-279">使用<xref:System.ServiceProcess.ServiceBase.OnStart%2A>來處理您的服務的所有初始設定。</span><span class="sxs-lookup"><span data-stu-id="1df3e-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to handle all initialization of your service.</span></span> <span data-ttu-id="1df3e-280">應用程式的可執行檔時，會呼叫建構函式執行時，不會在執行此服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-280">The constructor is called when the application's executable runs, not when the service runs.</span></span> <span data-ttu-id="1df3e-281">可執行檔執行之前<xref:System.ServiceProcess.ServiceBase.OnStart%2A>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-281">The executable runs before <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="1df3e-282">當您要繼續，例如，建構函式不會再次呼叫因為 SCM 已經保留在記憶體中的物件。</span><span class="sxs-lookup"><span data-stu-id="1df3e-282">When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</span></span> <span data-ttu-id="1df3e-283">如果<xref:System.ServiceProcess.ServiceBase.OnStop%2A>建構函式，而非在配置的資源釋出<xref:System.ServiceProcess.ServiceBase.OnStart%2A>，所需的資源並不會建立一次呼叫服務時的第二個時間。</span><span class="sxs-lookup"><span data-stu-id="1df3e-283">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> releases resources allocated in the constructor rather than in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, the needed resources would not be created again the second time the service is called.</span></span>  
  
 <span data-ttu-id="1df3e-284">服務可以設定為自動啟動時重新啟動電腦藉由設定<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>上服務的安裝程式<xref:System.ServiceProcess.ServiceStartMode.Automatic>。</span><span class="sxs-lookup"><span data-stu-id="1df3e-284">Services can be set to start automatically when the computer reboots by setting the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> on the service's installer to <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="1df3e-285">在這種情況下，<xref:System.ServiceProcess.ServiceBase.OnStart%2A>會在系統啟動時呼叫。</span><span class="sxs-lookup"><span data-stu-id="1df3e-285">In such a situation, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> would be called at system startup.</span></span>  
  
 <span data-ttu-id="1df3e-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> 必須在衍生類別中覆寫。</span><span class="sxs-lookup"><span data-stu-id="1df3e-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="1df3e-287">服務才能發揮作用，<xref:System.ServiceProcess.ServiceBase.OnStart%2A>和<xref:System.ServiceProcess.ServiceBase.OnStop%2A>應該同時在實作您的服務類別。</span><span class="sxs-lookup"><span data-stu-id="1df3e-287">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 <span data-ttu-id="1df3e-288">處理初始化引數中的服務<xref:System.ServiceProcess.ServiceBase.OnStart%2A>方法，不會在 Main 方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-288">Process initialization arguments for the service in the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method, not in the Main method.</span></span> <span data-ttu-id="1df3e-289">中的引數`args`可以手動設定參數陣列，在 [屬性] 視窗的 [服務] 主控台中的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-289">The arguments in the `args` parameter array can be set manually in the properties window for the service in the Services console.</span></span> <span data-ttu-id="1df3e-290">在主控台輸入的引數不會儲存。它們會傳遞至服務一次從控制台啟動服務時。</span><span class="sxs-lookup"><span data-stu-id="1df3e-290">The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</span></span> <span data-ttu-id="1df3e-291">必須是服務自動啟動時存在的引數可以放在服務的登錄機碼的 ImagePath 字串值 (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\ * \<服務名稱 >*)。</span><span class="sxs-lookup"><span data-stu-id="1df3e-291">Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<service name>*).</span></span> <span data-ttu-id="1df3e-292">您可以從登錄使用來取得引數<xref:System.Environment.GetCommandLineArgs%2A>方法，例如： `string[] imagePathArgs = Environment.GetCommandLineArgs();`。</span><span class="sxs-lookup"><span data-stu-id="1df3e-292">You can obtain the arguments from the registry using the <xref:System.Environment.GetCommandLineArgs%2A> method, for example:  `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStop" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStop ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df3e-293">在衍生類別中實作時，當服務控制管理員 (SCM) 傳送停止命令至服務時執行。</span><span class="sxs-lookup"><span data-stu-id="1df3e-293">When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="1df3e-294">指定在服務停止執行時所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="1df3e-294">Specifies actions to take when a service stops running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-295">使用<xref:System.ServiceProcess.ServiceBase.OnStop%2A>來指定服務收到 Stop 命令時，就會發生的處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to specify the processing that occurs when the service receives a Stop command.</span></span>  
  
 <span data-ttu-id="1df3e-296">SCM 收到 Stop 命令時，它會使用值的<xref:System.ServiceProcess.ServiceBase.CanStop%2A>以確認服務是否接受停止命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-296">When the SCM receives a Stop command, it uses the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> to verify whether the service accepts Stop commands.</span></span> <span data-ttu-id="1df3e-297">如果<xref:System.ServiceProcess.ServiceBase.CanStop%2A>是`true`，停止命令傳遞至服務，而<xref:System.ServiceProcess.ServiceBase.OnStop%2A>呼叫方法時若其定義。</span><span class="sxs-lookup"><span data-stu-id="1df3e-297">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service, and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="1df3e-298">如果<xref:System.ServiceProcess.ServiceBase.OnStop%2A>未實作在服務中，SCM 處理停止命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-298">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the service, the SCM handles the Stop command.</span></span>  
  
 <span data-ttu-id="1df3e-299">如果<xref:System.ServiceProcess.ServiceBase.CanStop%2A>是`false`，SCM 會略過停止命令。</span><span class="sxs-lookup"><span data-stu-id="1df3e-299">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `false`, the SCM ignores the Stop command.</span></span> <span data-ttu-id="1df3e-300">它不會傳遞至服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-300">It is not passed to the service.</span></span> <span data-ttu-id="1df3e-301">停止命令傳回，則擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1df3e-301">The Stop command returns and throws an exception.</span></span>  
  
 <span data-ttu-id="1df3e-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> 必須在衍生類別中覆寫。</span><span class="sxs-lookup"><span data-stu-id="1df3e-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="1df3e-303">服務才能發揮作用，<xref:System.ServiceProcess.ServiceBase.OnStart%2A>和<xref:System.ServiceProcess.ServiceBase.OnStop%2A>應該同時在實作您的服務類別。</span><span class="sxs-lookup"><span data-stu-id="1df3e-303">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RequestAdditionalTime">
      <MemberSignature Language="C#" Value="public void RequestAdditionalTime (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestAdditionalTime(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestAdditionalTime (milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestAdditionalTime(int milliseconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="1df3e-304">以毫秒為單位的要求時間。</span><span class="sxs-lookup"><span data-stu-id="1df3e-304">The requested time in milliseconds.</span></span></param>
        <summary><span data-ttu-id="1df3e-305">要求額外時間進行暫止的運算。</span><span class="sxs-lookup"><span data-stu-id="1df3e-305">Requests additional time for a pending operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-306"><xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A>方法用於呼叫所覆寫<xref:System.ServiceProcess.ServiceBase.OnContinue%2A>， <xref:System.ServiceProcess.ServiceBase.OnPause%2A>， <xref:System.ServiceProcess.ServiceBase.OnStart%2A>，或<xref:System.ServiceProcess.ServiceBase.OnStop%2A>方法來要求更多的時間暫止的作業，以防止標示的服務控制管理員 (SCM)為沒有回應的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-306">The <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> method is intended to be called by the overridden <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</span></span>  <span data-ttu-id="1df3e-307">如果暫止的作業不會繼續、 暫停、 啟動或停止，<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="1df3e-307">If the pending operation is not a continue, pause, start, or stop, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-308">服務不在暫止狀態。</span><span class="sxs-lookup"><span data-stu-id="1df3e-308">The service is not in a pending state.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df3e-309">提供服務可執行檔的主要進入點。</span><span class="sxs-lookup"><span data-stu-id="1df3e-309">Provides the main entry point for a service executable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (service As ServiceBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::ServiceProcess::ServiceBase ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.ServiceProcess.ServiceBase" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="1df3e-310"><see cref="T:System.ServiceProcess.ServiceBase" />，表示要啟動的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-310">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start.</span></span></param>
        <summary><span data-ttu-id="1df3e-311">使用服務控制管理員 (SCM) 登錄服務的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-311">Registers the executable for a service with the Service Control Manager (SCM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-312">呼叫這個多載`main()`函式可註冊服務和服務控制管理員中執行的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-312">Call this overload in the `main()` function of the service executable to register the service with the Service Control Manager.</span></span> <span data-ttu-id="1df3e-313">在您呼叫後<xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>，服務控制管理員發出的呼叫會導致啟動命令<xref:System.ServiceProcess.ServiceBase.OnStart%2A>服務中的方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-313">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, the Service Control Manager issues a Start command, which results in a call to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method in the service.</span></span> <span data-ttu-id="1df3e-314">服務未啟動，直到執行啟動命令為止。</span><span class="sxs-lookup"><span data-stu-id="1df3e-314">The service is not started until the Start command is executed.</span></span>  
  
 <span data-ttu-id="1df3e-315"><xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType>相同方式為呼叫方法<xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType>Windows Forms 應用程式。</span><span class="sxs-lookup"><span data-stu-id="1df3e-315">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="1df3e-316">如果<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>是`true`，項目寫入事件記錄檔，如果所指定的服務`service`參數無法啟動。</span><span class="sxs-lookup"><span data-stu-id="1df3e-316">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if the service specified by the `service` parameter fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1df3e-317"><paramref name="service" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-317"><paramref name="service" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase[] services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase[] services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (services As ServiceBase())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(cli::array &lt;System::ServiceProcess::ServiceBase ^&gt; ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.ServiceProcess.ServiceBase[]" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="1df3e-318">ServiceBase 執行個體的陣列，表示要啟動的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-318">An array of ServiceBase instances, which indicate services to start.</span></span></param>
        <summary><span data-ttu-id="1df3e-319">使用服務控制管理員 (SCM) 登錄多個服務的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-319">Registers the executable for multiple services with the Service Control Manager (SCM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-320">呼叫這個多載`main()`函式可註冊服務和服務控制管理員中執行的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-320">Call this overload in the `main()` function of the service executable to register the services with the Service Control Manager.</span></span> <span data-ttu-id="1df3e-321">在您呼叫後<xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>，服務控制管理員發出開始命令，這會導致呼叫<xref:System.ServiceProcess.ServiceBase.OnStart%2A>服務中的方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-321">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, the Service Control Manager issues Start commands, which result in calls to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> methods in the services.</span></span> <span data-ttu-id="1df3e-322">直到開始執行的命令會將無法啟動服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-322">The services are not started until the Start commands are executed.</span></span>  
  
 <span data-ttu-id="1df3e-323"><xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType>相同方式為呼叫方法<xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType>Windows Forms 應用程式的方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-323">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as the <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> method for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="1df3e-324">如果<xref:System.ServiceProcess.ServiceBase.AutoLog%2A>是`true`，項目寫入事件記錄檔，如果陣列中的任何服務無法啟動。</span><span class="sxs-lookup"><span data-stu-id="1df3e-324">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if any service in the array fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1df3e-325">您不提供要啟動的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-325">You did not supply a service to start.</span></span> <span data-ttu-id="1df3e-326">陣列可能為 <see langword="null" /> 或空白。</span><span class="sxs-lookup"><span data-stu-id="1df3e-326">The array might be <see langword="null" /> or empty.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="protected IntPtr ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property IntPtr ServiceHandle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-327">取得服務的服務控制處理。</span><span class="sxs-lookup"><span data-stu-id="1df3e-327">Gets the service control handle for the service.</span></span></summary>
        <value><span data-ttu-id="1df3e-328">包含服務之服務控制處理的 <see cref="T:System.IntPtr" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="1df3e-328">An <see cref="T:System.IntPtr" /> structure that contains the service control handle for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-329">服務控制代碼用來通訊的服務控制管理員 (SCM)。</span><span class="sxs-lookup"><span data-stu-id="1df3e-329">The service control handle is used to communicate with the Service Control Manager (SCM).</span></span>  <span data-ttu-id="1df3e-330">控制代碼可用來更新使用 unmanaged 呼叫服務的服務控制管理員的狀態資訊`SetServiceStatus`函式。</span><span class="sxs-lookup"><span data-stu-id="1df3e-330">The handle can be used to update the service control manager's status information for the calling service using the unmanaged `SetServiceStatus` function.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1df3e-331">用於存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="1df3e-331">for access to unmanaged code.</span></span> <span data-ttu-id="1df3e-332">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="1df3e-332">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceMainCallback">
      <MemberSignature Language="C#" Value="public void ServiceMainCallback (int argCount, IntPtr argPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ServiceMainCallback(int32 argCount, native int argPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ServiceMainCallback (argCount As Integer, argPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ServiceMainCallback(int argCount, IntPtr argPointer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argCount" Type="System.Int32" />
        <Parameter Name="argPointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="argCount"><span data-ttu-id="1df3e-333">引數陣列中的引數數目。</span><span class="sxs-lookup"><span data-stu-id="1df3e-333">The number of arguments in the argument array.</span></span></param>
        <param name="argPointer"><span data-ttu-id="1df3e-334">指向引數陣列的 <see cref="T:System.IntPtr" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="1df3e-334">An <see cref="T:System.IntPtr" /> structure that points to an array of arguments.</span></span></param>
        <summary><span data-ttu-id="1df3e-335">登錄命令處理常式 (Command Handler) 並啟動服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-335">Registers the command handler and starts the service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBServiceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df3e-336">取得或設定用來識別系統服務的簡短名稱。</span><span class="sxs-lookup"><span data-stu-id="1df3e-336">Gets or sets the short name used to identify the service to the system.</span></span></summary>
        <value><span data-ttu-id="1df3e-337">服務的名稱。</span><span class="sxs-lookup"><span data-stu-id="1df3e-337">The name of the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-338"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>識別到服務控制管理員中的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-338">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifies the service to the Service Control Manager.</span></span> <span data-ttu-id="1df3e-339">這個屬性的值必須是相同的服務所記錄的名稱<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>相對應的安裝程式類別的屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-339">The value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property of the corresponding installer class.</span></span> <span data-ttu-id="1df3e-340">在程式碼，<xref:System.ServiceProcess.ServiceBase.ServiceName%2A>通常設定服務的`main()`函式的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-340">In code, the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service is usually set in the `main()` function of the executable.</span></span>  
  
 <span data-ttu-id="1df3e-341"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>也用來指定<xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>聯<xref:System.ServiceProcess.ServiceBase.EventLog%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-341">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> is also used to specify the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> associated with the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property.</span></span> <span data-ttu-id="1df3e-342">這<xref:System.ServiceProcess.ServiceBase.EventLog%2A>是將服務命令資訊寫入至應用程式記錄檔的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1df3e-342">This <xref:System.ServiceProcess.ServiceBase.EventLog%2A> is an instance that writes service command information to the Application log.</span></span>  
  
 <span data-ttu-id="1df3e-343"><xref:System.ServiceProcess.ServiceBase.ServiceName%2A>，它提供事件記錄檔的來源字串之前，必須設定服務會寫入事件記錄檔。</span><span class="sxs-lookup"><span data-stu-id="1df3e-343">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service writes to the event log.</span></span> <span data-ttu-id="1df3e-344">嘗試存取事件記錄檔之前設定的來源名稱會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1df3e-344">Trying to access the event log before the source name is set causes an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1df3e-345">已經啟動服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-345">The service has already been started.</span></span> <span data-ttu-id="1df3e-346">一旦已經啟動服務，就無法變更 <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="1df3e-346">The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property cannot be changed once the service has started.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1df3e-347">指定的名稱是零長度字串或比 <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" /> 更長，或者指定的名稱包含斜線或反斜線字元。</span><span class="sxs-lookup"><span data-stu-id="1df3e-347">The specified name is a zero-length string or is longer than <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, or the specified name contains forward slash or backslash characters.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df3e-348">停止執行中的服務。</span><span class="sxs-lookup"><span data-stu-id="1df3e-348">Stops the executing service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df3e-349"><xref:System.ServiceProcess.ServiceBase.Stop%2A>方法設定的服務狀態，以指出停止暫止 」 和 「 呼叫<xref:System.ServiceProcess.ServiceBase.OnStop%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1df3e-349">The <xref:System.ServiceProcess.ServiceBase.Stop%2A> method sets the service state to indicate a stop is pending and calls the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method.</span></span>  <span data-ttu-id="1df3e-350">停止應用程式之後，服務的狀態設定為停止。</span><span class="sxs-lookup"><span data-stu-id="1df3e-350">After the application is stopped, the service state is set to stopped.</span></span> <span data-ttu-id="1df3e-351">如果應用程式是託管的服務，應用程式定義域已卸載。</span><span class="sxs-lookup"><span data-stu-id="1df3e-351">If the application is a hosted service, the application domain is unloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
  </Members>
</Type>