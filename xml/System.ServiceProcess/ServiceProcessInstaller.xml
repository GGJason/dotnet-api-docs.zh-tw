<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e74b3ded65de2cf8f02653a0912be16df26e0a19" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37611528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="60f3e-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60f3e-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      </span>
      <span data-ttu-id="60f3e-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60f3e-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-103"><xref:System.ServiceProcess.ServiceProcessInstaller>運作通用於所有服務的可執行檔中。</span><span class="sxs-lookup"><span data-stu-id="60f3e-103">The <xref:System.ServiceProcess.ServiceProcessInstaller> does work common to all services in an executable.</span></span> <span data-ttu-id="60f3e-104">安裝公用程式用來撰寫與您想要安裝的服務相關聯的登錄值。</span><span class="sxs-lookup"><span data-stu-id="60f3e-104">It is used by the installation utility to write registry values associated with services you want to install.</span></span>  
  
 <span data-ttu-id="60f3e-105">若要安裝的服務，建立專案的安裝程式類別繼承自<xref:System.Configuration.Install.Installer>，並設定<xref:System.ComponentModel.RunInstallerAttribute>若要在類別上`true`。</span><span class="sxs-lookup"><span data-stu-id="60f3e-105">To install a service, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> on the class to `true`.</span></span> <span data-ttu-id="60f3e-106">在您專案中，執行個體化一個<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體，每個服務應用程式和一個<xref:System.ServiceProcess.ServiceInstaller>應用程式中的每個服務執行個體。</span><span class="sxs-lookup"><span data-stu-id="60f3e-106">Within your project, instantiate one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="60f3e-107">最後，新增<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和<xref:System.ServiceProcess.ServiceInstaller>專案安裝程式類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="60f3e-107">Finally, add the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and the <xref:System.ServiceProcess.ServiceInstaller> instances to your project installer class.</span></span>  
  
 <span data-ttu-id="60f3e-108">當執行 InstallUtil.exe 時，此公用程式會尋找服務組件中的類別<xref:System.ComponentModel.RunInstallerAttribute>設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="60f3e-108">When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`.</span></span> <span data-ttu-id="60f3e-109">將類別加入至服務組件中，加入至<xref:System.Configuration.Install.Installer.Installers%2A>專案安裝程式相關聯的集合。</span><span class="sxs-lookup"><span data-stu-id="60f3e-109">Add classes to the service assembly by adding them to the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="60f3e-110">如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`，安裝公用程式會忽略專案安裝程式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-110">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="60f3e-111">執行個體<xref:System.ServiceProcess.ServiceProcessInstaller>，您可以修改的屬性包括指定服務應用程式執行的帳戶登入的使用者以外。</span><span class="sxs-lookup"><span data-stu-id="60f3e-111">For an instance of <xref:System.ServiceProcess.ServiceProcessInstaller>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</span></span> <span data-ttu-id="60f3e-112">您可以指定特定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>並<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>配對所在服務應該執行，或是您可以使用<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>指定電腦的 System 帳戶、 本機或網路服務帳戶或使用者帳戶下執行的服務。</span><span class="sxs-lookup"><span data-stu-id="60f3e-112">You can specify a particular <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair under which the service should run, or you can use <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to specify that the service run under the computer's System account, a local or network service account, or a user account.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60f3e-113">電腦的系統帳戶不是系統管理員帳戶相同。</span><span class="sxs-lookup"><span data-stu-id="60f3e-113">The computer's System account is not the same as the Administrator account.</span></span>  
  
 <span data-ttu-id="60f3e-114">一般來說，您未呼叫的方法上<xref:System.ServiceProcess.ServiceInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-114">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="60f3e-115">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="60f3e-115">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="60f3e-116">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 上所有先前安裝的元件。</span><span class="sxs-lookup"><span data-stu-id="60f3e-116">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="60f3e-117">應用程式的安裝常式會維護的資訊會自動使用專案安裝程式的元件已安裝， <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="60f3e-117">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="60f3e-118">此狀態資訊會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="60f3e-118">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="60f3e-119">它是通常不需要為您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="60f3e-119">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="60f3e-120">具現化<xref:System.ServiceProcess.ServiceProcessInstaller>會導致的基底類別建構函式，<xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="60f3e-120">Instantiating a <xref:System.ServiceProcess.ServiceProcessInstaller> causes the base class constructor, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, to be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60f3e-121">下列範例會建立專案安裝程式呼叫 MyProjectInstaller，繼承自<xref:System.Configuration.Install.Installer>。</span><span class="sxs-lookup"><span data-stu-id="60f3e-121">The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="60f3e-122">它會假設沒有服務可執行檔，其中包含兩個服務，「 Hello World 服務 1 」 和 「 Hello World 服務 2 」。</span><span class="sxs-lookup"><span data-stu-id="60f3e-122">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="60f3e-123">MyProjectInstaller （這會由安裝公用程式呼叫） 的建構函式內<xref:System.ServiceProcess.ServiceInstaller>物件會針對每個服務，和<xref:System.ServiceProcess.ServiceProcessInstaller>建立可執行檔。</span><span class="sxs-lookup"><span data-stu-id="60f3e-123">Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="60f3e-124">若要將 MyProjectInstaller 辨識為有效的安裝程式中，安裝公用程式<xref:System.ComponentModel.RunInstallerAttribute>屬性設為`true`。</span><span class="sxs-lookup"><span data-stu-id="60f3e-124">For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="60f3e-125">選擇性屬性在設定程序安裝程式和服務安裝程式之前安裝程式會新增至<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="60f3e-125">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="60f3e-126">物件時，安裝公用程式會存取 MyProjectInstaller，加入至<xref:System.Configuration.Install.Installer.Installers%2A>集合，透過呼叫<xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>將接著安裝。</span><span class="sxs-lookup"><span data-stu-id="60f3e-126">When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="60f3e-127">在過程中，安裝程式會維護指出已安裝哪些物件，因此每個物件可以依序發生安裝失敗時的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="60f3e-127">During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</span></span>  
  
 <span data-ttu-id="60f3e-128">一般來說，您不具現化專案安裝程式類別明確。</span><span class="sxs-lookup"><span data-stu-id="60f3e-128">Normally, you would not instantiate your project installer class explicitly.</span></span> <span data-ttu-id="60f3e-129">您會建立它，並加入<xref:System.ComponentModel.RunInstallerAttribute>，但安裝公用程式會實際呼叫，並因此會具現化，該類別。</span><span class="sxs-lookup"><span data-stu-id="60f3e-129">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60f3e-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60f3e-131">Gets or sets the type of account under which to run this service application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-131">Gets or sets the type of account under which to run this service application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60f3e-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> ，定義系統執行此服務帳戶的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service.</span>
          </span>
          <span data-ttu-id="60f3e-133">預設值為 <see langword="User" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-133">The default is <see langword="User" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-134">當<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>屬性是`User`，則<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>屬性用來定義服務應用程式執行所在的帳戶。</span><span class="sxs-lookup"><span data-stu-id="60f3e-134">When the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> property is `User`, the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are used to define an account under which the service application runs.</span></span>  
  
 <span data-ttu-id="60f3e-135"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>組可讓服務系統帳戶以外的帳戶下執行。</span><span class="sxs-lookup"><span data-stu-id="60f3e-135">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="60f3e-136">這可以比方說，讓服務在重新開機，沒有任何使用者登入時自動啟動。</span><span class="sxs-lookup"><span data-stu-id="60f3e-136">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span> <span data-ttu-id="60f3e-137">如果您將保留其中一個<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空的而且設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>到`User`，將會提示您輸入有效的使用者名稱和密碼進行安裝時。</span><span class="sxs-lookup"><span data-stu-id="60f3e-137">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="60f3e-138">您也可以指定本機系統帳戶或本機執行的服務或網路服務。</span><span class="sxs-lookup"><span data-stu-id="60f3e-138">You can also specify that the service run under the local system account, or as a local or network service.</span></span> <span data-ttu-id="60f3e-139">請參閱<xref:System.ServiceProcess.ServiceAccount>列舉類型的帳戶的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="60f3e-139">See the <xref:System.ServiceProcess.ServiceAccount> enumeration for details on types of accounts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">
          <span data-ttu-id="60f3e-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60f3e-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-142">不應該呼叫這個方法，您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="60f3e-142">This method should not be called within your code.</span></span> <span data-ttu-id="60f3e-143">上的基底類別方法<xref:System.Configuration.Install.ComponentInstaller>是`abstract`，因此它這裡實作在衍生類別上。</span><span class="sxs-lookup"><span data-stu-id="60f3e-143">The base class method on <xref:System.Configuration.Install.ComponentInstaller> is `abstract`, so it is implemented here on the derived class.</span></span> <span data-ttu-id="60f3e-144">不過，沒有任何<xref:System.ServiceProcess.ServiceProcessInstaller>類別的特定方法的實作中的處理。</span><span class="sxs-lookup"><span data-stu-id="60f3e-144">However, there is no <xref:System.ServiceProcess.ServiceProcessInstaller> class-specific processing in the method's implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60f3e-145">Gets help text displayed for service installation options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-145">Gets help text displayed for service installation options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60f3e-146">說明提供步驟的說明以特定的帳戶之下執行此服務設定的使用者名稱和密碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-146">Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-147">手動啟動服務時，可以使用此說明文字。</span><span class="sxs-lookup"><span data-stu-id="60f3e-147">This help text can be used when a service starts manually.</span></span> <span data-ttu-id="60f3e-148">表示使用者輸入使用者名稱和密碼資訊的方法。</span><span class="sxs-lookup"><span data-stu-id="60f3e-148">It indicates to the user how to enter user name and password information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="60f3e-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60f3e-150">Writes service application information to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-150">Writes service application information to the registry.</span>
          </span>
          <span data-ttu-id="60f3e-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-152">一般來說，您未呼叫的方法上<xref:System.ServiceProcess.ServiceProcessInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-152">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="60f3e-153">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="60f3e-153">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="60f3e-154">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>上所有先前安裝的元件。</span><span class="sxs-lookup"><span data-stu-id="60f3e-154">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on all previously installed components.</span></span> <span data-ttu-id="60f3e-155">此方法會傳遞至基底類別的安裝<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="60f3e-155">This method passes the installation to the base class <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="60f3e-156">一般來說，您會呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-156">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="60f3e-157">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="60f3e-157">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="60f3e-158">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 上所有先前安裝的元件</span><span class="sxs-lookup"><span data-stu-id="60f3e-158">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components</span></span>  
  
 <span data-ttu-id="60f3e-159">應用程式的安裝常式會維護的資訊會自動使用專案安裝程式的元件已安裝， <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="60f3e-159">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="60f3e-160">這個狀態資訊，將會傳入<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>作為`stateSaver`參數，會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="60f3e-160">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="60f3e-161">它是通常不需要為您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="60f3e-161">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="60f3e-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 將基底類別方法所擲回任何例外狀況傳遞至呼叫的方法或<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60f3e-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60f3e-164">Gets or sets the password associated with the user account under which the service application runs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-164">Gets or sets the password associated with the user account under which the service application runs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60f3e-165">應該執行服務的帳戶相關聯的密碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-165">The password associated with the account under which the service should run.</span>
          </span>
          <span data-ttu-id="60f3e-166">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-166">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="60f3e-167">屬性不是公用，並永遠不會序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-167">The property is not public, and is never serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-168"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>組可讓服務系統帳戶以外的帳戶下執行。</span><span class="sxs-lookup"><span data-stu-id="60f3e-168">The <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="60f3e-169">這可以比方說，讓服務在重新開機，沒有任何使用者登入時自動啟動。</span><span class="sxs-lookup"><span data-stu-id="60f3e-169">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="60f3e-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 並<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>，因為它們永遠不會序列化或儲存至的安裝狀態，以安全的方式處理 (專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 或其他公開存取的位置。</span><span class="sxs-lookup"><span data-stu-id="60f3e-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="60f3e-171">設定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>可讓系統在安裝期間會自動與服務相關聯的帳戶。</span><span class="sxs-lookup"><span data-stu-id="60f3e-171">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="60f3e-172">如果您將保留其中一個<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空的而且設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>到`User`，將會提示您輸入有效的使用者名稱和密碼進行安裝時。</span><span class="sxs-lookup"><span data-stu-id="60f3e-172">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="60f3e-173">執行個別的帳戶服務的另一個選項是使用電腦的系統帳戶。</span><span class="sxs-lookup"><span data-stu-id="60f3e-173">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="60f3e-174">該帳戶，也就是不同的系統管理員帳戶，不需要密碼。</span><span class="sxs-lookup"><span data-stu-id="60f3e-174">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="60f3e-175">系統帳戶的權限可能會超過目前登入的使用者。</span><span class="sxs-lookup"><span data-stu-id="60f3e-175">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="60f3e-176">在系統帳戶下執行，而不是使用者帳戶可避免因使用者缺乏權限的問題，服務需要</span><span class="sxs-lookup"><span data-stu-id="60f3e-176">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="60f3e-177">如果<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>而不是任何值`User`，指定使用的帳戶 （本機或網路服務或本機系統） 是，即使<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>屬性都會填入。</span><span class="sxs-lookup"><span data-stu-id="60f3e-177">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specifed account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="60f3e-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60f3e-179">Rolls back service application information written to the registry by the installation procedure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-179">Rolls back service application information written to the registry by the installation procedure.</span>
          </span>
          <span data-ttu-id="60f3e-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-181">一般來說，您未呼叫的方法上<xref:System.ServiceProcess.ServiceProcessInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-181">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="60f3e-182">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="60f3e-182">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="60f3e-183">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>產生例外狀況物件上。</span><span class="sxs-lookup"><span data-stu-id="60f3e-183">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="60f3e-184">應用程式的安裝常式會維護的資訊會自動使用專案安裝程式的元件已安裝， <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="60f3e-184">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="60f3e-185">這個狀態資訊，將會傳入<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>作為`savedState`參數，會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="60f3e-185">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="60f3e-186">它是通常不需要為您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="60f3e-186">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="60f3e-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 將基底類別方法所擲回任何例外狀況傳遞至呼叫的方法或<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="60f3e-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60f3e-188">The <paramref name="savedState" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-188">The <paramref name="savedState" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60f3e-189">-or-  The <paramref name="savedState" /> is corrupted or non-existent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-189">-or-  The <paramref name="savedState" /> is corrupted or non-existent.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60f3e-190">Gets or sets the user account under which the service application will run.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-190">Gets or sets the user account under which the service application will run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60f3e-191">服務應該執行的帳戶。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-191">The account under which the service should run.</span>
          </span>
          <span data-ttu-id="60f3e-192">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f3e-192">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f3e-193"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>組可讓服務系統帳戶以外的帳戶下執行。</span><span class="sxs-lookup"><span data-stu-id="60f3e-193">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="60f3e-194">這可以比方說，讓服務在重新開機，沒有任何使用者登入時自動啟動。</span><span class="sxs-lookup"><span data-stu-id="60f3e-194">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="60f3e-195"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 並<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>，因為它們永遠不會序列化或儲存至的安裝狀態，以安全的方式處理 (專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 或其他公開存取的位置。</span><span class="sxs-lookup"><span data-stu-id="60f3e-195"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="60f3e-196">設定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>可讓系統在安裝期間會自動與服務相關聯的帳戶。</span><span class="sxs-lookup"><span data-stu-id="60f3e-196">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="60f3e-197">如果您將保留其中一個<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空的而且設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>到`User`，將會提示您輸入有效的使用者名稱和密碼進行安裝時。</span><span class="sxs-lookup"><span data-stu-id="60f3e-197">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="60f3e-198">執行個別的帳戶服務的另一個選項是使用電腦的系統帳戶。</span><span class="sxs-lookup"><span data-stu-id="60f3e-198">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="60f3e-199">該帳戶，也就是不同的系統管理員帳戶，不需要密碼。</span><span class="sxs-lookup"><span data-stu-id="60f3e-199">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="60f3e-200">系統帳戶的權限可能會超過目前登入的使用者。</span><span class="sxs-lookup"><span data-stu-id="60f3e-200">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="60f3e-201">在系統帳戶下執行，而不是使用者帳戶可避免因使用者缺乏權限的問題，服務需要</span><span class="sxs-lookup"><span data-stu-id="60f3e-201">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="60f3e-202">如果<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>而不是任何值`User`，會使用指定的帳戶 （本機或網路服務或本機系統），即使<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>屬性都會填入。</span><span class="sxs-lookup"><span data-stu-id="60f3e-202">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>