<Type Name="ServiceInstaller" FullName="System.ServiceProcess.ServiceInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14a7817974ce9d1165d554af807dcafa580677b8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37611977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="85f94-101">Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85f94-101">Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service.</span>
      </span>
      <span data-ttu-id="85f94-102">This class is called by the install utility when installing a service application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85f94-102">This class is called by the install utility when installing a service application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-103"><xref:System.ServiceProcess.ServiceInstaller>運作的服務與相關聯的特定。</span><span class="sxs-lookup"><span data-stu-id="85f94-103">The <xref:System.ServiceProcess.ServiceInstaller> does work specific to the service with which it is associated.</span></span> <span data-ttu-id="85f94-104">安裝公用程式用來撰寫要 HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services 登錄機碼內的子機碼的服務相關聯的登錄值。</span><span class="sxs-lookup"><span data-stu-id="85f94-104">It is used by the installation utility to write registry values associated with the service to a subkey within the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services registry key.</span></span> <span data-ttu-id="85f94-105">在這個子機碼及其 ServiceName 識別服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-105">The service is identified by its ServiceName within this subkey.</span></span> <span data-ttu-id="85f94-106">子機碼也包含可執行檔或.dll 服務所屬的名稱。</span><span class="sxs-lookup"><span data-stu-id="85f94-106">The subkey also includes the name of the executable or .dll to which the service belongs.</span></span>  
  
 <span data-ttu-id="85f94-107">若要安裝的服務，建立專案的安裝程式類別繼承自<xref:System.Configuration.Install.Installer>類別，並設定<xref:System.ComponentModel.RunInstallerAttribute>若要在類別上`true`。</span><span class="sxs-lookup"><span data-stu-id="85f94-107">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="85f94-108">在您專案中，建立一個<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體，每個服務應用程式和一個<xref:System.ServiceProcess.ServiceInstaller>應用程式中的每個服務執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-108">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="85f94-109">在您的專案安裝程式類別建構函式，設定 服務的安裝內容<xref:System.ServiceProcess.ServiceProcessInstaller>並<xref:System.ServiceProcess.ServiceInstaller>執行個體，並新增至執行個體<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-109">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85f94-110">建議您將加入安裝程式執行個體; 使用建構函式不過，如果您要新增到<xref:System.Configuration.Install.Installer.Installers%2A>中的集合<xref:System.ServiceProcess.ServiceInstaller.Install%2A>方法，請務必執行同一個新增至集合中的項目<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-110">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="85f94-111">所有的類別衍生自<xref:System.Configuration.Install.Installer>類別的狀態<xref:System.Configuration.Install.Installer.Installers%2A>集合必須是相同<xref:System.ServiceProcess.ServiceInstaller.Install%2A>和<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-111">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="85f94-112">不過，您可以避免跨集合的維護<xref:System.ServiceProcess.ServiceInstaller.Install%2A>並<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法，如果您加入到安裝程式執行個體<xref:System.Configuration.Install.Installer.Installers%2A>您自訂安裝程式類別建構函式中的集合。當呼叫時，安裝公用程式時，它會尋找<xref:System.ComponentModel.RunInstallerAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="85f94-112">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute> attribute.</span></span> <span data-ttu-id="85f94-113">如果屬性是`true`，此公用程式安裝所加入的所有服務<xref:System.Configuration.Install.Installer.Installers%2A>已與您的專案安裝程式相關聯的集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-113">If the attribute is `true`, the utility installs all the services that were added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection that were associated with your project installer.</span></span> <span data-ttu-id="85f94-114">如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`或不存在，安裝公用程式會忽略專案安裝程式。</span><span class="sxs-lookup"><span data-stu-id="85f94-114">If <xref:System.ComponentModel.RunInstallerAttribute> is `false` or does not exist, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="85f94-115"><xref:System.ServiceProcess.ServiceProcessInstaller>與您的專案安裝類別安裝資訊通用於所有相關聯<xref:System.ServiceProcess.ServiceInstaller>專案中的執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-115">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="85f94-116">如果此服務會有任何項目分開安裝專案中的其他服務，這個方法會安裝該服務特有的資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-116">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85f94-117">很重要，<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>會等於<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>類別衍生自的<xref:System.ServiceProcess.ServiceBase>。</span><span class="sxs-lookup"><span data-stu-id="85f94-117">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="85f94-118">一般來說，windows 7 <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> main （） 函式的服務應用程式的可執行檔中設定服務的屬性。</span><span class="sxs-lookup"><span data-stu-id="85f94-118">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="85f94-119">服務控制管理員會使用<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>屬性找出這個可執行檔內的服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-119">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="85f94-120">您可以修改其他屬性上<xref:System.ServiceProcess.ServiceInstaller>之前或之後將它新增至<xref:System.Configuration.Install.Installer.Installers%2A>專案安裝程式的集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-120">You can modify other properties on the <xref:System.ServiceProcess.ServiceInstaller> either before or after adding it to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="85f94-121">例如，服務的<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>可能會設定為啟動服務會自動在重新開機，或需要使用者手動啟動服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-121">For example, a service's <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> may be set to start the service automatically at reboot or require a user to start the service manually.</span></span>  
  
 <span data-ttu-id="85f94-122">一般來說，您會呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="85f94-122">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="85f94-123">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-123">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="85f94-124">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 上所有先前安裝的元件。</span><span class="sxs-lookup"><span data-stu-id="85f94-124">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="85f94-125">安裝公用程式呼叫<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>移除的物件。</span><span class="sxs-lookup"><span data-stu-id="85f94-125">The installation utility calls <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> to remove the object.</span></span>  
  
 <span data-ttu-id="85f94-126">應用程式的安裝常式會維護的資訊會自動使用專案安裝程式的元件已安裝， <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="85f94-126">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="85f94-127">此狀態資訊會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體，以及每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-127">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance, and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="85f94-128">它是通常不需要為您的程式碼，明確地修改狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-128">It is usually unnecessary for your code to modify state information explicitly.</span></span>  
  
 <span data-ttu-id="85f94-129">執行安裝時，它會自動建立<xref:System.Diagnostics.EventLogInstaller>安裝與相關聯的事件記錄檔來源<xref:System.ServiceProcess.ServiceBase>衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="85f94-129">When the installation is performed, it automatically creates an <xref:System.Diagnostics.EventLogInstaller> to install the event log source associated with the <xref:System.ServiceProcess.ServiceBase> derived class.</span></span> <span data-ttu-id="85f94-130"><xref:System.Diagnostics.EventLog.Log%2A>此來源的屬性由設定<xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>電腦的應用程式記錄檔的建構函式。</span><span class="sxs-lookup"><span data-stu-id="85f94-130">The <xref:System.Diagnostics.EventLog.Log%2A> property for this source is set by the <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor to the computer's Application log.</span></span> <span data-ttu-id="85f94-131">當您設定<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>的<xref:System.ServiceProcess.ServiceInstaller>(這應該與相同<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>的服務)、<xref:System.Diagnostics.EventLog.Source%2A>會自動設為相同的值。</span><span class="sxs-lookup"><span data-stu-id="85f94-131">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> (which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service), the <xref:System.Diagnostics.EventLog.Source%2A> is automatically set to the same value.</span></span> <span data-ttu-id="85f94-132">安裝失敗，來源是在安裝復原以及先前安裝的服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-132">In an installation failure, the source's installation is rolled-back along with previously installed services.</span></span>  
  
 <span data-ttu-id="85f94-133"><xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法會嘗試停止服務，如果它正在執行。</span><span class="sxs-lookup"><span data-stu-id="85f94-133">The <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method tries to stop the service if it is running.</span></span> <span data-ttu-id="85f94-134">這是否成功，<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>復原所做的變更<xref:System.ServiceProcess.ServiceInstaller.Install%2A>。</span><span class="sxs-lookup"><span data-stu-id="85f94-134">Whether this succeeds or not, <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> undoes the changes made by <xref:System.ServiceProcess.ServiceInstaller.Install%2A>.</span></span> <span data-ttu-id="85f94-135">如果事件記錄建立新的來源，則會刪除來源。</span><span class="sxs-lookup"><span data-stu-id="85f94-135">If a new source was created for event logging, the source is deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85f94-136">下列範例會建立專案安裝程式，稱為`MyProjectInstaller`，該項則繼承自<xref:System.Configuration.Install.Installer>。</span><span class="sxs-lookup"><span data-stu-id="85f94-136">The following example creates a project installer, called `MyProjectInstaller`, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="85f94-137">它會假設沒有服務可執行檔，其中包含兩個服務，「 Hello World 服務 1 」 和 「 Hello World 服務 2 」。</span><span class="sxs-lookup"><span data-stu-id="85f94-137">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="85f94-138">建構函式內`MyProjectInstaller`（這會由呼叫安裝公用程式），<xref:System.ServiceProcess.ServiceInstaller>會建立物件，如每一種服務，以及<xref:System.ServiceProcess.ServiceProcessInstaller>建立可執行檔。</span><span class="sxs-lookup"><span data-stu-id="85f94-138">Within the constructor for `MyProjectInstaller` (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each of these services, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="85f94-139">安裝公用程式，可辨識`MyProjectInstaller`為有效的安裝程式中，<xref:System.ComponentModel.RunInstallerAttribute>屬性設為`true`。</span><span class="sxs-lookup"><span data-stu-id="85f94-139">For the install utility to recognize `MyProjectInstaller` as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="85f94-140">選擇性屬性在設定程序安裝程式和服務安裝程式之前安裝程式會新增至<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-140">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="85f94-141">安裝公用程式的存取時`MyProjectInstaller`，加入至物件<xref:System.Configuration.Install.Installer.Installers%2A>集合，透過呼叫<xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>將接著安裝。</span><span class="sxs-lookup"><span data-stu-id="85f94-141">When the install utility accesses `MyProjectInstaller`, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="85f94-142">在過程中，安裝程式會維護狀態資訊，以指出已安裝哪些物件，讓每個可以被卸除，如果發生安裝失敗。</span><span class="sxs-lookup"><span data-stu-id="85f94-142">During the process, the installer maintains state information indicating which objects have been installed, so each can be backed out in turn, if an installation failure occurs.</span></span>  
  
 <span data-ttu-id="85f94-143">一般來說，您不會明確地建立您的專案安裝程式類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-143">Normally, you would not create an instance of your project installer class explicitly.</span></span> <span data-ttu-id="85f94-144">您會建立它，並加入<xref:System.ComponentModel.RunInstallerAttribute>屬性語法，但它會實際呼叫，並因此會具現化，此類別，安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="85f94-144">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute> attribute to the syntax, but it is the install utility that actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85f94-145">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-145">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-146">若要安裝的服務，建立專案的安裝程式類別繼承自<xref:System.Configuration.Install.Installer>類別，並設定<xref:System.ComponentModel.RunInstallerAttribute>若要在類別上`true`。</span><span class="sxs-lookup"><span data-stu-id="85f94-146">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="85f94-147">在您專案中，建立一個<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體，每個服務應用程式和一個<xref:System.ServiceProcess.ServiceInstaller>應用程式中的每個服務執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-147">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="85f94-148">在您的專案安裝程式類別建構函式，設定 服務的安裝內容<xref:System.ServiceProcess.ServiceProcessInstaller>並<xref:System.ServiceProcess.ServiceInstaller>執行個體，並新增至執行個體<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-148">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 <span data-ttu-id="85f94-149"><xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>建構函式會自動產生的事件記錄檔來源其<xref:System.Diagnostics.EventLog.Log%2A>屬性設定為電腦的應用程式記錄檔，並有<xref:System.Diagnostics.EventLogInstaller>。</span><span class="sxs-lookup"><span data-stu-id="85f94-149">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor automatically generates an event log source whose <xref:System.Diagnostics.EventLog.Log%2A> property is set to the computer's Application log, and an <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="85f94-150">當您設定<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>的<xref:System.ServiceProcess.ServiceInstaller>，它應該是等於<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>的服務，<xref:System.Diagnostics.EventLog.Source%2A>的事件記錄檔的屬性會自動設為相同的值。</span><span class="sxs-lookup"><span data-stu-id="85f94-150">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller>, which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service, the <xref:System.Diagnostics.EventLog.Source%2A> property of the event log is automatically set to the same value.</span></span> <span data-ttu-id="85f94-151">來源會自動刪除在安裝失敗的情況下。</span><span class="sxs-lookup"><span data-stu-id="85f94-151">The source is deleted automatically in the case of an installation failure.</span></span>  
  
 <span data-ttu-id="85f94-152"><xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>建構函式<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>屬性設`ServiceStartMode.Manual`來指定使用者啟動服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-152">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor sets the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> property to `ServiceStartMode.Manual` to specify that a user start the service.</span></span> <span data-ttu-id="85f94-153">您可以重設的屬性`ServiceStartMode.Automatic`來指定服務啟動時重新啟動電腦。</span><span class="sxs-lookup"><span data-stu-id="85f94-153">You can reset the property to `ServiceStartMode.Automatic` to specify that the service start when the computer reboots.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.ServiceProcess.ServiceStartMode" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="85f94-154">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-154">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85f94-155">Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" /> to this installer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-155">Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" /> to this installer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-156">您的程式碼，很少會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-156">This method will rarely be called within your code.</span></span> <span data-ttu-id="85f94-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> 通常呼叫只能由設計工具。</span><span class="sxs-lookup"><span data-stu-id="85f94-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> is usually called only by designers.</span></span>  
  
 <span data-ttu-id="85f94-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> 將儲存的服務名稱`component`參數來<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>的<xref:System.ServiceProcess.ServiceInstaller>執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> saves the service name of the `component` parameter to the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> instance.</span></span> <span data-ttu-id="85f94-159">(因為參數必須是衍生自類別的執行個體<xref:System.ServiceProcess.ServiceBase>，`component`保證都有<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>屬性。)</span><span class="sxs-lookup"><span data-stu-id="85f94-159">(Because the parameter must be an instance of a class that derives from <xref:System.ServiceProcess.ServiceBase>, `component` is guaranteed to have a <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85f94-160">如果您使用 Visual Studio 設計工具，會呼叫這個方法在設計階段，當使用者按一下`Add Installer`上指定此類別為其安裝程式的元件。</span><span class="sxs-lookup"><span data-stu-id="85f94-160">If you are using the Visual Studio designer, this method is called at design time when the user clicks `Add Installer` on a component that specified this class as its installer.</span></span> <span data-ttu-id="85f94-161">安裝程式會採用其可以從實體元件，並將它儲存在安裝階段使用的所有資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-161">The installer takes all information it can from the live component and stores it for use at install time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85f94-162">The component you are associating with this installer does not inherit from <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-162">The component you are associating with this installer does not inherit from <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="DelayedAutoStart">
      <MemberSignature Language="C#" Value="public bool DelayedAutoStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DelayedAutoStart" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayedAutoStart As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DelayedAutoStart { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DelayedAutoStart : bool with get, set" Usage="System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDelayedAutoStart")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85f94-163">Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-163">Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85f94-164">
            <see langword="true" /> 延遲自動啟動服務;否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-164">
              <see langword="true" /> to delay automatic start of the service; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85f94-165">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-166"><xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A>屬性可以套用至任何服務，但它會被忽略，除非服務的啟動模式是<xref:System.ServiceProcess.ServiceStartMode.Automatic>。</span><span class="sxs-lookup"><span data-stu-id="85f94-166">The <xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A> property can be applied to any service, but it is ignored unless the service's start mode is <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="85f94-167">設定會影響在下次系統重新啟動。</span><span class="sxs-lookup"><span data-stu-id="85f94-167">The setting takes effect the next time the system is restarted.</span></span> <span data-ttu-id="85f94-168">服務控制管理員並不保證服務的特定開始時間。</span><span class="sxs-lookup"><span data-stu-id="85f94-168">The Service Control Manager does not guarantee a specific start time for the service.</span></span>  
  
 <span data-ttu-id="85f94-169">延遲自動啟動服務無法載入順序群組的成員，但它可以依賴另一個自動啟動服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-169">A delayed automatic start service cannot be a member of a load ordering group, but it can depend on another automatic start service.</span></span> <span data-ttu-id="85f94-170">如果應用程式在載入之前呼叫延遲自動啟動服務，則呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="85f94-170">If an application calls a delayed automatic start service before it is loaded, the call fails.</span></span>  
  
 <span data-ttu-id="85f94-171">在作業系統上不支援延遲自動啟動，設定這個屬性沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="85f94-171">On operating systems that do not support delayed automatic start, setting this property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDescription")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85f94-172">Gets or sets the description for the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-172">Gets or sets the description for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85f94-173">服務的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-173">The description of the service.</span>
          </span>
          <span data-ttu-id="85f94-174">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-174">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-175">使用<xref:System.ServiceProcess.ServiceInstaller.Description%2A>屬性以描述已安裝的服務給使用者的目的。</span><span class="sxs-lookup"><span data-stu-id="85f94-175">Use the <xref:System.ServiceProcess.ServiceInstaller.Description%2A> property to describe the purpose of the installed service to the user.</span></span> <span data-ttu-id="85f94-176">使用者可以檢視顯示已安裝服務的詳細資料的應用程式中的服務描述。</span><span class="sxs-lookup"><span data-stu-id="85f94-176">The user can view the service description in applications that display details for installed services.</span></span>  
  
 <span data-ttu-id="85f94-177">比方說，使用 Windows XP，您可以檢視服務描述，使用服務控制命令列公用程式 (Sc.exe) 或者您可以檢視內的服務描述**Services**節點**電腦管理**主控台。</span><span class="sxs-lookup"><span data-stu-id="85f94-177">For example, using Windows XP, you can view the service description with the Service Control command-line utility (Sc.exe) or you can view the service description within the **Services** node of the **Computer Management** console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85f94-178">下列程式碼範例會設定新的 Windows 服務應用程式的安裝屬性。</span><span class="sxs-lookup"><span data-stu-id="85f94-178">The following code example sets the installation properties for a new Windows service application.</span></span> <span data-ttu-id="85f94-179">此範例會設定服務名稱，以及顯示名稱和描述。</span><span class="sxs-lookup"><span data-stu-id="85f94-179">The example sets the service name, along with the display name and description.</span></span> <span data-ttu-id="85f94-180">指派之後，服務的安裝屬性，此範例會新增<xref:System.ServiceProcess.ServiceInstaller>物件至<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-180">After assigning the installation properties for the service, the example adds the <xref:System.ServiceProcess.ServiceInstaller> object to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-csharp[ServiceProcess_ServiceInstaller#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceProcess_serviceinstaller/CS/simpleserviceinstaller.cs#3)]
 [!code-vb[ServiceProcess_ServiceInstaller#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceProcess_serviceinstaller/VB/service1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDisplayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85f94-181">Indicates the friendly name that identifies the service to the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-181">Indicates the friendly name that identifies the service to the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85f94-182">使用服務時，常用來做為互動式工具相關聯的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-182">The name associated with the service, used frequently for interactive tools.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-183"><xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A>使用，例如，在服務控制管理員來提供服務的使用者可讀的描述性名稱。</span><span class="sxs-lookup"><span data-stu-id="85f94-183">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is used, for example, in the Service Control Manager to provide a user-readable descriptive name for the service.</span></span> <span data-ttu-id="85f94-184"><xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A>登錄值，但不是能作為登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="85f94-184">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is a registry value, but is never used as a registry key.</span></span> <span data-ttu-id="85f94-185">因此，限制<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>屬性值不會套用。</span><span class="sxs-lookup"><span data-stu-id="85f94-185">Therefore, restrictions on the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property value do not apply.</span></span> <span data-ttu-id="85f94-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> 做為 HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services 登錄機碼，因此很受到限制。</span><span class="sxs-lookup"><span data-stu-id="85f94-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> is used as the HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services registry key, so it is restricted.</span></span>  
  
 <span data-ttu-id="85f94-187">顯示名稱永遠不會安裝公用程式用來識別服務，因此沒有任何限制上選擇的名稱，因為沒有為<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="85f94-187">The display name is never used by the install utility to identify the service, so there are no restrictions on the choice of name, as there is for the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.Description" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="85f94-188">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-188">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85f94-189">Installs the service by writing service application information to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-189">Installs the service by writing service application information to the registry.</span>
          </span>
          <span data-ttu-id="85f94-190">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-190">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-191">一般來說，您會呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="85f94-191">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="85f94-192">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceInstaller.Install%2A>在安裝期間的方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-192">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during installation.</span></span> <span data-ttu-id="85f94-193">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>產生例外狀況物件上。</span><span class="sxs-lookup"><span data-stu-id="85f94-193">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="85f94-194">應用程式的安裝常式會維護自動相關元件已安裝，使用專案安裝程式的資訊<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="85f94-194">An application's install routine maintains information automatically about the components that were already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="85f94-195">這個狀態資訊，將會傳入<xref:System.ServiceProcess.ServiceInstaller.Install%2A>作為`stateSaver`參數，會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-195">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="85f94-196">它是通常不需要為您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-196">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="85f94-197"><xref:System.ServiceProcess.ServiceProcessInstaller>與您的專案安裝類別安裝資訊通用於所有相關聯<xref:System.ServiceProcess.ServiceInstaller>專案中的執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-197">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="85f94-198">如果此服務會有任何項目分開安裝專案中的其他服務，這個方法會安裝該服務特有的資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-198">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
 <span data-ttu-id="85f94-199">若要安裝的服務，建立專案的安裝程式類別繼承自<xref:System.Configuration.Install.Installer>類別，並設定<xref:System.ComponentModel.RunInstallerAttribute>若要在類別上`true`。</span><span class="sxs-lookup"><span data-stu-id="85f94-199">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="85f94-200">在您專案中，建立一個<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體，每個服務應用程式和一個<xref:System.ServiceProcess.ServiceInstaller>應用程式中的每個服務執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-200">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="85f94-201">在您的專案安裝程式類別建構函式，設定 服務的安裝內容<xref:System.ServiceProcess.ServiceProcessInstaller>並<xref:System.ServiceProcess.ServiceInstaller>執行個體，並新增至執行個體<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-201">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85f94-202">建議您將加入安裝程式執行個體; 使用建構函式不過，如果您要新增到<xref:System.Configuration.Install.Installer.Installers%2A>中的集合<xref:System.ServiceProcess.ServiceInstaller.Install%2A>方法，請務必執行同一個新增至集合中的項目<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-202">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="85f94-203">所有的類別衍生自<xref:System.Configuration.Install.Installer>類別的狀態<xref:System.Configuration.Install.Installer.Installers%2A>集合必須是相同<xref:System.ServiceProcess.ServiceInstaller.Install%2A>和<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-203">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="85f94-204">不過，您可以避免跨集合的維護<xref:System.ServiceProcess.ServiceInstaller.Install%2A>並<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法，如果您加入到安裝程式執行個體<xref:System.Configuration.Install.Installer.Installers%2A>您自訂安裝程式類別建構函式中的集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-204">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85f94-205">The installation does not contain a <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> for the executable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-205">The installation does not contain a <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> for the executable.</span>
          </span>
          <span data-ttu-id="85f94-206">-or-  The file name for the assembly is <see langword="null" /> or an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-206">-or-  The file name for the assembly is <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="85f94-207">-or-  The service name is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-207">-or-  The service name is invalid.</span>
          </span>
          <span data-ttu-id="85f94-208">-or-  The Service Control Manager could not be opened.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-208">-or-  The Service Control Manager could not be opened.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85f94-209">The display name for the service is more than 255 characters in length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-209">The display name for the service is more than 255 characters in length.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="85f94-210">The system could not generate a handle to the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-210">The system could not generate a handle to the service.</span>
          </span>
          <span data-ttu-id="85f94-211">-or-  A service with that name is already installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-211">-or-  A service with that name is already installed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="serviceInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">
          <span data-ttu-id="85f94-212">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-212">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85f94-213">Indicates whether two installers would install the same service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-213">Indicates whether two installers would install the same service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85f94-214">
            <see langword="true" /> if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result in installing the same service; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-214">
              <see langword="true" /> if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result in installing the same service; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-215"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A> 比方說，指出是否兩個安裝程式會安裝在相同的使用者帳戶下相同的服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-215"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A> indicates, for example, whether two installers would install the same service under the same user account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="85f94-216">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-216">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85f94-217">Rolls back service application information written to the registry by the installation procedure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-217">Rolls back service application information written to the registry by the installation procedure.</span>
          </span>
          <span data-ttu-id="85f94-218">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-218">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-219">一般來說，您會呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="85f94-219">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="85f94-220">安裝公用程式會自動呼叫<xref:System.ServiceProcess.ServiceInstaller.Install%2A>安裝程序期間的方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-220">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="85f94-221">它會出失敗，如有必要，藉由呼叫<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>產生例外狀況物件上。</span><span class="sxs-lookup"><span data-stu-id="85f94-221">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="85f94-222">應用程式的安裝常式會維護的資訊會自動使用專案安裝程式的元件已安裝， <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="85f94-222">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="85f94-223">這個狀態資訊，將會傳入<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>作為`savedState`參數，會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-223">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="85f94-224">它是通常不需要為您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-224">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServiceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85f94-225">Indicates the name used by the system to identify this service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-225">Indicates the name used by the system to identify this service.</span>
          </span>
          <span data-ttu-id="85f94-226">This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> of the service you want to install.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-226">This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> of the service you want to install.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85f94-227">若要安裝服務的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-227">The name of the service to be installed.</span>
          </span>
          <span data-ttu-id="85f94-228">此值必須設定之前安裝公用程式嘗試安裝服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-228">This value must be set before the install utility attempts to install the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-229">很重要，<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>會等於<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>類別衍生自的<xref:System.ServiceProcess.ServiceBase>。</span><span class="sxs-lookup"><span data-stu-id="85f94-229">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="85f94-230">一般來說，windows 7 <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> main （） 函式的服務應用程式的可執行檔中設定服務的屬性。</span><span class="sxs-lookup"><span data-stu-id="85f94-230">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="85f94-231">服務控制管理員會使用<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>屬性找出這個可執行檔內的服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-231">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="85f94-232">當您設定<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>服務安裝程式<xref:System.Diagnostics.EventLog.Source%2A>相關聯的事件記錄檔設定為相同的值。</span><span class="sxs-lookup"><span data-stu-id="85f94-232">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the service installer, the <xref:System.Diagnostics.EventLog.Source%2A> of the associated event log is set to the same value.</span></span> <span data-ttu-id="85f94-233">這會讓自動登入應用程式記錄檔，在電腦上的服務 （例如啟動和停止） 的命令呼叫服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-233">This allows the service to automatically log service commands (such as Start and Stop) calls to the Application log on the computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85f94-234">如果相同名稱的來源已存在的電腦上，但在應用程式記錄檔的記錄檔，將會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="85f94-234">If a source by the same name already exists on the computer, but in a log other than the Application log, an exception will be thrown.</span></span> <span data-ttu-id="85f94-235">如果來源存在，且應用程式記錄檔相關聯，該來源用來報告命令呼叫服務，並擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="85f94-235">If the source exists and is associated with the Application log, that source is used to report command calls to the service, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="85f94-236"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>不能是`null`或長度為零。</span><span class="sxs-lookup"><span data-stu-id="85f94-236">The <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> cannot be `null` or have zero length.</span></span> <span data-ttu-id="85f94-237">其大小上限為 256 個字元。</span><span class="sxs-lookup"><span data-stu-id="85f94-237">Its maximum size is 256 characters.</span></span> <span data-ttu-id="85f94-238">它也不能包含正向或反斜線 '/' 或 '\\'，或具有值小於 32 的十進位值的字元的 ASCII 字元集。</span><span class="sxs-lookup"><span data-stu-id="85f94-238">It also cannot contain forward or backward slashes, '/' or '\\', or characters from the ASCII character set with value less than decimal value 32.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85f94-239">The <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> property is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-239">The <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> property is invalid.</span>
          </span>
        </exception>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ServicesDependedOn">
      <MemberSignature Language="C#" Value="public string[] ServicesDependedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ServicesDependedOn" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ServicesDependedOn As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ServicesDependedOn { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServicesDependedOn : string[] with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServicesDependedOn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85f94-240">Indicates the services that must be running for this service to run.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-240">Indicates the services that must be running for this service to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85f94-241">必須先執行與這個安裝程式相關聯的服務可以執行的服務的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-241">An array of services that must be running before the service associated with this installer can run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-242">服務可能需要其他服務，才能開始執行。</span><span class="sxs-lookup"><span data-stu-id="85f94-242">A service can require other services to be running before it can start.</span></span> <span data-ttu-id="85f94-243">這個屬性的資訊會寫入登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="85f94-243">The information from this property is written to a key in the registry.</span></span> <span data-ttu-id="85f94-244">當使用者 （或系統，在自動啟動的情況下） 嘗試執行服務時，服務控制管理員 (SCM) 驗證，每個陣列中的服務已經啟動。</span><span class="sxs-lookup"><span data-stu-id="85f94-244">When the user (or the system, in the case of automatic startup) tries to run the service, the Service Control Manager (SCM) verifies that each of the services in the array has already been started.</span></span>  
  
 <span data-ttu-id="85f94-245">如果陣列中的任何服務未執行然後，SCM 會嘗試啟動它們。</span><span class="sxs-lookup"><span data-stu-id="85f94-245">If any service in the array is not running then, the SCM tries to start them.</span></span> <span data-ttu-id="85f94-246">這包括服務與`Manual` <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>。</span><span class="sxs-lookup"><span data-stu-id="85f94-246">This includes services with `Manual`<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>.</span></span>  
  
 <span data-ttu-id="85f94-247">如果此服務所依存的任何服務無法啟動，將不會啟動此服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-247">If any service upon which this service depends fails to start, this service will not start.</span></span> <span data-ttu-id="85f94-248">如果因為沒有任何例外狀況處理在系統層級偵測到此系統未啟動，不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="85f94-248">An exception is not thrown if the system is not started because there is no exception handling at the system level to detect this.</span></span> <span data-ttu-id="85f94-249">決定如何處理服務啟動失敗，並實作此程式碼中。</span><span class="sxs-lookup"><span data-stu-id="85f94-249">Decide how to handle service start failures and implement this in your code.</span></span> <span data-ttu-id="85f94-250">一般而言，對話方塊隨即出現在啟動使用者如果服務無法啟動。</span><span class="sxs-lookup"><span data-stu-id="85f94-250">Typically, a dialog appears to the user at startup if a service fails to start.</span></span>  
  
 <span data-ttu-id="85f94-251">如果服務未啟動，會將項目寫入應用程式事件記錄檔中。</span><span class="sxs-lookup"><span data-stu-id="85f94-251">If the service does not start, an entry is written to the Application event log.</span></span>  
  
 <span data-ttu-id="85f94-252">此服務所依存的服務不需要位於相同的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="85f94-252">The services upon which this service depends do not need to be in the same executable.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.StartType" />
      </Docs>
    </Member>
    <Member MemberName="StartType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceStartMode StartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceStartMode StartType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberSignature Language="VB.NET" Value="Public Property StartType As ServiceStartMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceStartMode StartType { System::ServiceProcess::ServiceStartMode get(); void set(System::ServiceProcess::ServiceStartMode value); };" />
      <MemberSignature Language="F#" Value="member this.StartType : System.ServiceProcess.ServiceStartMode with get, set" Usage="System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerStartType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85f94-253">Indicates how and when this service is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-253">Indicates how and when this service is started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85f94-254">A<see cref="T:System.ServiceProcess.ServiceStartMode" />表示服務已啟動的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-254">A <see cref="T:System.ServiceProcess.ServiceStartMode" /> that represents the way the service is started.</span>
          </span>
          <span data-ttu-id="85f94-255">預設值是<see langword="Manual" />，指定的服務將不會自動重新開機後啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-255">The default is <see langword="Manual" />, which specifies that the service will not automatically start after reboot.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-256">設定<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>指定的重新開機後自動啟動服務或使用者必須以手動方式啟動服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-256">Set the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> to specify either that the service be started automatically after reboot or that a user must manually start the service.</span></span> <span data-ttu-id="85f94-257">服務可以也停用，指定，它無法啟動，以手動方式或以程式設計的方式，直到啟用為止。</span><span class="sxs-lookup"><span data-stu-id="85f94-257">A service can also be disabled, specifying that it cannot be started, either manually or programmatically, until it is enabled.</span></span>  
  
 <span data-ttu-id="85f94-258">您無法變更<xref:System.ServiceProcess.ServiceInstaller>安裝後的屬性值。</span><span class="sxs-lookup"><span data-stu-id="85f94-258">You cannot change <xref:System.ServiceProcess.ServiceInstaller> property values after installation.</span></span> <span data-ttu-id="85f94-259">若要變更<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>，您必須解除安裝，然後重新安裝您的服務，或手動變更 使用服務控制管理員的設定。</span><span class="sxs-lookup"><span data-stu-id="85f94-259">To change the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>, you either have to uninstall and reinstall your service, or manually change the setting using the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="85f94-260">The start mode is not a value of the <see cref="T:System.ServiceProcess.ServiceStartMode" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-260">The start mode is not a value of the <see cref="T:System.ServiceProcess.ServiceStartMode" /> enumeration.</span>
          </span>
        </exception>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="85f94-261">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-261">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85f94-262">Uninstalls the service by removing information about it from the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-262">Uninstalls the service by removing information about it from the registry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f94-263">解除安裝第一次嘗試解除安裝之前停止服務。</span><span class="sxs-lookup"><span data-stu-id="85f94-263">Uninstall first attempts to stop the service before uninstalling it.</span></span> <span data-ttu-id="85f94-264">如果無法停止服務，攔截到任何例外狀況時，並移除服務方法會繼續執行。</span><span class="sxs-lookup"><span data-stu-id="85f94-264">If the service cannot be stopped, no exception is caught, and the method continues with the removal of the service.</span></span>  
  
 <span data-ttu-id="85f94-265">一般來說，您會呼叫方法上<xref:System.ServiceProcess.ServiceInstaller>內您的程式碼; 它們通常稱為只能由安裝公用程式。</span><span class="sxs-lookup"><span data-stu-id="85f94-265">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="85f94-266">InstallUtil 用來解除安裝服務，以及安裝它們;解除安裝會採用參數的命令列呼叫。</span><span class="sxs-lookup"><span data-stu-id="85f94-266">InstallUtil is used to uninstall services as well as install them; uninstalling takes a switch in the command line call.</span></span>  
  
 <span data-ttu-id="85f94-267">應用程式的解除安裝常式會維護元件的資訊會自動解除安裝，使用專案安裝程式的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="85f94-267">An application's uninstall routine maintains information automatically about the components being uninstalled, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="85f94-268">這個狀態資訊，將會傳入<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>作為`savedState`參數，會持續更新為<xref:System.ServiceProcess.ServiceProcessInstaller>執行個體和每個<xref:System.ServiceProcess.ServiceInstaller>公用程式會安裝執行個體。</span><span class="sxs-lookup"><span data-stu-id="85f94-268">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="85f94-269">它是通常不需要為您的程式碼，明確地修改此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="85f94-269">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="85f94-270">所有的類別衍生自<xref:System.Configuration.Install.Installer>類別的狀態<xref:System.Configuration.Install.Installer.Installers%2A>集合必須是相同<xref:System.ServiceProcess.ServiceInstaller.Install%2A>和<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="85f94-270">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="85f94-271">不過，您可以避免跨集合的維護<xref:System.ServiceProcess.ServiceInstaller.Install%2A>並<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>方法，如果您加入到安裝程式執行個體<xref:System.Configuration.Install.Installer.Installers%2A>您自訂安裝程式類別建構函式中的集合。</span><span class="sxs-lookup"><span data-stu-id="85f94-271">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 <span data-ttu-id="85f94-272">沒有任何復原機制，來解除安裝，因此如果一項服務無法解除安裝，這不會影響其他服務 （通常是在相同的安裝專案中） 時解除安裝。</span><span class="sxs-lookup"><span data-stu-id="85f94-272">There is no rollback mechanism for uninstalling, so if one service fails to uninstall, this does not affect the other services (usually within the same installation project) being uninstalled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="85f94-273">The Service Control Manager could not be opened.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-273">The Service Control Manager could not be opened.</span>
          </span>
          <span data-ttu-id="85f94-274">-or-  The system could not get a handle to the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85f94-274">-or-  The system could not get a handle to the service.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>