<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d57a5e371d3d4e2adabce3cb909c216d8991a0e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30328862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="81b71-101">表示已評估的設計階段中繼資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81b71-101">Represents evaluated design-time metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81b71-102">永遠不會用來代表內建的中繼資料，例如 %（檔名）。</span><span class="sxs-lookup"><span data-stu-id="81b71-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="81b71-103">中繼資料一律都與專案原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="81b71-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="81b71-104">中繼資料包含藉以<xref:Microsoft.Build.Evaluation.ProjectItemDefinition>或<xref:Microsoft.Build.Evaluation.ProjectItem>。</span><span class="sxs-lookup"><span data-stu-id="81b71-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-105">Condition 屬性的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-105">Location of the Condition attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-106">傳回 Condition 屬性位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-106">Returns Condition attribute location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-107">取得已評估的中繼資料值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-107">Gets the evaluated metadata value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-108">傳回已評估的中繼資料值 (絕不會是 Null)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-108">Returns the evaluated metadata value, which is never null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81b71-109">不能直接設定： 可設定且未經過評估的值。</span><span class="sxs-lookup"><span data-stu-id="81b71-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-110">判斷中繼資料是否源自已匯入的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-110">Determines if the metadata originated from an imported file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-111">如果中繼資料源自已匯入的檔案，則傳回 true，否則傳回 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-111">Returns true if the metadata originated from an imported file; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-112">取得包含項目定義或項目的項目型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-112">Gets the item type of the containing item definition or item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-113">傳回包含項目定義或項目的項目型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-113">Returns the item type of the containing item definition or item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-114">項目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-114">Location of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-115">傳回項目位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-115">Returns the element location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-116">取得中繼資料的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-116">Gets the name of the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-117">傳回中繼資料的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-117">Returns the name of the metadata.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-118">取得此中繼資料在評估期間覆寫的最後一個中繼資料 (從項目定義或項目)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-119">傳回此中繼資料在評估期間覆寫其值的最後一個中繼資料 (從項目定義或項目)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span>
          </span>
          <span data-ttu-id="81b71-120">如果中繼資料尚未被覆寫，則傳回 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-120">Returns null if the metadata has not been overridden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81b71-121">這個方法會搜尋具有相同名稱的所有中繼資料的圓周上方邏輯專案檔中，其中所含相同型別的項目，項目定義和條件評估為 true。</span><span class="sxs-lookup"><span data-stu-id="81b71-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="81b71-122">如果中繼資料包含的項目，這個方法會搜尋任何先前的中繼資料具有相同名稱和其條件評估為 true 的項目。</span><span class="sxs-lookup"><span data-stu-id="81b71-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="81b71-123">項目定義要搜尋項目之前。</span><span class="sxs-lookup"><span data-stu-id="81b71-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="81b71-124">如果專案不具有自上次修改後已評估，這個值可能不正確。</span><span class="sxs-lookup"><span data-stu-id="81b71-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-125">取得包含此中繼資料的專案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-125">Gets the project that contains this metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-126">傳回包含此中繼資料的專案 (絕不會是 Null)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-126">Returns the project that contains this metadata, which is never null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="81b71-127">要與之比較的專案中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-127">The project metadata to be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81b71-128">比較這個專案中繼資料與指定的專案中繼資料是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-128">Compares this project metadata with the given project metadata for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81b71-129">如果專案中繼資料相等，則會傳回 true；否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-129">Returns true if the project metadata are equal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-130">取得或設定未評估的中繼資料值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-130">Gets or sets the unevaluated metadata value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-131">傳回未評估的中繼資料值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-131">Returns the unevaluated metadata value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81b71-132">Setter 方法更新且未經過評估的值和評估的值，但不影響任何專案中其他項目重新評估之前。</span><span class="sxs-lookup"><span data-stu-id="81b71-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="81b71-133">例如，-類型"i"項目上修改一段名為"m"的中繼資料時，如果它不會影響"j"評估從"@(j-> '(m) %')"直到重新評估。</span><span class="sxs-lookup"><span data-stu-id="81b71-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="81b71-134">-如果"m"的且未經過評估的值設定為評估，例如"$（p）"，修改的項目評估的值將以"$（p） 」 重新評估之前。</span><span class="sxs-lookup"><span data-stu-id="81b71-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="81b71-135">設定中繼資料透過<xref:Microsoft.Build.Evaluation.ProjectItem>可能會造成相關聯<xref:Microsoft.Build.Construction.ProjectItemElement>需要分割，如果項目元素中的來源項目清單、 萬用字元或分號區運算式。</span><span class="sxs-lookup"><span data-stu-id="81b71-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="81b71-136">由於它會隱含打算只會影響該特定項目。</span><span class="sxs-lookup"><span data-stu-id="81b71-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="81b71-137">設定透過 ProjectMetadata 的中繼資料不會造成任何分割，因為它表示打算會影響所有的項目，以基礎<xref:Microsoft.Build.Construction.ProjectMetadataElement>。</span><span class="sxs-lookup"><span data-stu-id="81b71-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="81b71-138">包含專案中被標示為已修改。</span><span class="sxs-lookup"><span data-stu-id="81b71-138">The containing project is marked as modified.</span></span> <span data-ttu-id="81b71-139">且未經過評估的值會假設包含逸出字元序列所需。</span><span class="sxs-lookup"><span data-stu-id="81b71-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="81b71-140">這個方法可能不會使專案處於自我一致的狀態。</span><span class="sxs-lookup"><span data-stu-id="81b71-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81b71-141">取得關聯的專案中繼資料項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-141">Gets the associated project metadata element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81b71-142">傳回關聯的專案中繼資料項目 (絕不會是 Null)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81b71-142">Returns the associated project metadata element, which can never be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>