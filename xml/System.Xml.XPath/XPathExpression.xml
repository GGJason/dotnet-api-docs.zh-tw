<Type Name="XPathExpression" FullName="System.Xml.XPath.XPathExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6abc44c1fadfc26679f8b4bf26c83149c7ac966b" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46668261" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XPathExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathExpression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.XPathExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XPathExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathExpression abstract" />
  <TypeSignature Language="F#" Value="type XPathExpression = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供代表已編譯 XPath 運算式的具類型類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會傳回的結果<xref:System.Xml.XPath.XPathNavigator.Compile%2A>方法的<xref:System.Xml.XPath.XPathNavigator>類別。 若要為參數<xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>， <xref:System.Xml.XPath.XPathNavigator.Matches%2A>， <xref:System.Xml.XPath.XPathNavigator.Select%2A>，以及<xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A>方法<xref:System.Xml.XPath.XPathNavigator>類別。  
  
   
  
## Examples  
 下列範例會示範如何使用 XPath 傳回型別，以判斷如何處理 XPath 運算式。  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 該範例採用 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>當您繼承自<see cref="T:System.Xml.XPath.XPathExpression" />類別，您必須覆寫下列成員： 
-   <see cref="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)" /><see cref="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)" />  
  
-   <see cref="M:System.Xml.XPath.XPathExpression.Clone" />  
  
-   <see cref="P:System.Xml.XPath.XPathExpression.Expression" />  
  
-   <see cref="P:System.Xml.XPath.XPathExpression.ReturnType" />  
  
-   <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)" />  
  
-   <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />。</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddSort">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，對 XPath 運算式所選取的節點進行排序。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddSort">
      <MemberSignature Language="C#" Value="public abstract void AddSort (object expr, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSort(object expr, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddSort (expr As Object, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddSort(System::Object ^ expr, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member AddSort : obj * System.Collections.IComparer -&gt; unit" Usage="xPathExpression.AddSort (expr, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="expr">表示排序鍵的物件。 這可以是節點的 <see langword="string" /> 值或具有已編譯 XPath 運算式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</param>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> 物件，提供特定資料型別比較，以比較兩個物件是否等價。</param>
        <summary>在衍生類別中覆寫時，根據指定的 <see cref="T:System.Collections.IComparer" /> 物件，對 XPath 運算式所選取的節點進行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathExpression.AddSort%2A>方法可讓使用者排序物件資料類型而不是字串或數字。 <xref:System.Collections.IComparer>物件會提供實作<xref:System.Collections.IComparer.Compare%2A>支援使用者定義的類別的 排序的方法。  
  
 在下列範例中，將書籍會按照 ISBN 編號，其中`isbn`是實作物件<xref:System.Collections.IComparer>介面。  
  
```vb  
Dim expression As XPathExpression = navigator.Compile("bookstore/book")  
Dim isbn As ISBN = New ISBN()  
expression.AddSort("@ISBN", (IComparer)isbn)  
```  
  
```csharp  
XPathExpression expression = navigator.Compile("bookstore/book");  
ISBN isbn = new ISBN();  
expression.AddSort("@ISBN", (IComparer)isbn);  
```  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathExpression.AddSort%2A>方法。  
  
-   在其中加入排序的順序提供排序鍵的順序。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>或排序索引鍵需要命名空間解析，您必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，以提供<xref:System.Xml.XmlNamespaceManager>的命名空間解析。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>不包含前置詞，則會假設命名空間統一資源識別元 (URI) 為空的命名空間。 如果 XML 包含預設命名空間，您仍然必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，並提供<xref:System.Xml.XmlNamespaceManager>包含前置詞和命名空間來處理的預設命名空間 URI。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <see cref="T:System.Xml.XPath.XPathExpression" /> 或排序鍵包含前置詞，而且未提供 <see cref="T:System.Xml.XmlNamespaceManager" /> 或所提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 中找不到前置詞。</exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Xml.XmlNamespaceManager" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
      </Docs>
    </Member>
    <Member MemberName="AddSort">
      <MemberSignature Language="C#" Value="public abstract void AddSort (object expr, System.Xml.XPath.XmlSortOrder order, System.Xml.XPath.XmlCaseOrder caseOrder, string lang, System.Xml.XPath.XmlDataType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSort(object expr, valuetype System.Xml.XPath.XmlSortOrder order, valuetype System.Xml.XPath.XmlCaseOrder caseOrder, string lang, valuetype System.Xml.XPath.XmlDataType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddSort (expr As Object, order As XmlSortOrder, caseOrder As XmlCaseOrder, lang As String, dataType As XmlDataType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddSort(System::Object ^ expr, System::Xml::XPath::XmlSortOrder order, System::Xml::XPath::XmlCaseOrder caseOrder, System::String ^ lang, System::Xml::XPath::XmlDataType dataType);" />
      <MemberSignature Language="F#" Value="abstract member AddSort : obj * System.Xml.XPath.XmlSortOrder * System.Xml.XPath.XmlCaseOrder * string * System.Xml.XPath.XmlDataType -&gt; unit" Usage="xPathExpression.AddSort (expr, order, caseOrder, lang, dataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Object" />
        <Parameter Name="order" Type="System.Xml.XPath.XmlSortOrder" />
        <Parameter Name="caseOrder" Type="System.Xml.XPath.XmlCaseOrder" />
        <Parameter Name="lang" Type="System.String" />
        <Parameter Name="dataType" Type="System.Xml.XPath.XmlDataType" />
      </Parameters>
      <Docs>
        <param name="expr">表示排序鍵的物件。 這可以是節點的 <see langword="string" /> 值或具有已編譯 XPath 運算式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</param>
        <param name="order">
          <see cref="T:System.Xml.XPath.XmlSortOrder" /> 值會表示排序順序。</param>
        <param name="caseOrder">
          <see cref="T:System.Xml.XPath.XmlCaseOrder" /> 值會表示如何排序大寫和小寫字母。</param>
        <param name="lang">要用於比較的語言。 使用 <see cref="T:System.Globalization.CultureInfo" /> 類別，該類別可被傳遞至語言類型的 <see cref="Overload:System.String.Compare" /> 方法，例如 "us-en" 代表美國。英文。 如果指定空字串，則此系統環境會用來判斷 <see cref="T:System.Globalization.CultureInfo" />。</param>
        <param name="dataType">
          <see cref="T:System.Xml.XPath.XmlDataType" /> 值會表示資料類型的排序次序。</param>
        <summary>在衍生類別中進行覆寫時，根據提供的參數來排序 XPath 運算式所選取的節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   在其中加入排序的順序提供排序鍵的順序。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>或排序索引鍵需要命名空間解析，您必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，以提供<xref:System.Xml.XmlNamespaceManager>的命名空間解析。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>不包含前置詞，則會假設命名空間統一資源識別元 (URI) 為空的命名空間。 如果 XML 包含預設命名空間，您仍然必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，並提供<xref:System.Xml.XmlNamespaceManager>包含前置詞和命名空間來處理的預設命名空間 URI。  
  
   
  
## Examples  
 下列範例示範如何依價格依遞減順序排序的書籍文件。  
  
 [!code-vb[XPathXMLExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathXMLExamples/vb/xpathexpression.addsort.vb#4)]  
  
 [!code-csharp[XPathXMLExamples#5](~/samples/snippets/csharp/VS_Snippets_Data/XPathXMLExamples/cs/xpathexpression.addsort.cs#5)]  
  
 該範例採用 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <see cref="T:System.Xml.XPath.XPathExpression" /> 或排序鍵包含前置詞，而且未提供 <see cref="T:System.Xml.XmlNamespaceManager" /> 或所提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 中找不到前置詞。</exception>
        <altmember cref="T:System.Xml.XPath.XmlSortOrder" />
        <altmember cref="T:System.Xml.XPath.XmlCaseOrder" />
        <altmember cref="T:System.Xml.XPath.XmlDataType" />
        <altmember cref="T:System.Xml.XmlNamespaceManager" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="Overload:System.String.Compare" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=148089">傳遞至 XPathExpression.AddSort 的字串中的命名空間前置詞</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathExpression Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathExpression Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XPath::XPathExpression ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XPath.XPathExpression" Usage="xPathExpression.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，傳回這個 <see cref="T:System.Xml.XPath.XPathExpression" /> 的複製。</summary>
        <returns>新的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當在衍生類別中覆寫<xref:System.Xml.XPath.XPathExpression.Clone%2A>方法傳回的複製品<xref:System.Xml.XPath.XPathExpression>具有相同的狀態這物件<xref:System.Xml.XPath.XPathExpression>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compile">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>編譯指定的 XPath 運算式，並傳回表示 XPath 運算式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathExpression Compile (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathExpression Compile(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.Compile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile (xpath As String) As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XPath::XPathExpression ^ Compile(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="static member Compile : string -&gt; System.Xml.XPath.XPathExpression" Usage="System.Xml.XPath.XPathExpression.Compile xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 運算式。</param>
        <summary>編譯指定的 XPath 運算式，並傳回代表 XPath運算式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</summary>
        <returns>
          <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 運算式是評估後會產生下列一種結果類型。  
  
-   <xref:System.Xml.XPath.XPathResultType.NodeSet>  
  
-   <xref:System.Xml.XPath.XPathResultType.Boolean>  
  
-   <xref:System.Xml.XPath.XPathResultType.Number>  
  
-   <xref:System.Xml.XPath.XPathResultType.String>  
  
> [!NOTE]
>  如果 XPath 運算式中，指定具有無效的引數 （或未實作的使用者定義函式） 數目，則只有在執行階段發生例外狀況。 使用者定義函式不會檢查在編譯時期和執行評估的運算式時，才會發生所產生的使用者定義函式的例外狀況。  
  
   
  
## Examples  
 下列範例會示範如何使用 XPath 傳回型別，以判斷如何處理 XPath 運算式。 此範例會使用<xref:System.Xml.XPath.XPathExpression.Compile%2A>方法，以傳回新<xref:System.Xml.XPath.XPathExpression>物件。  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 該範例採用 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式參數不是有效的 XPath 運算式。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
        <altmember cref="T:System.Xml.XPath.XPathResultType" />
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathExpression Compile (string xpath, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathExpression Compile(string xpath, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile (xpath As String, nsResolver As IXmlNamespaceResolver) As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XPath::XPathExpression ^ Compile(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="static member Compile : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathExpression" Usage="System.Xml.XPath.XPathExpression.Compile (xpath, nsResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 運算式。</param>
        <param name="nsResolver">物件，實作命名空間解析的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 介面。</param>
        <summary>以為命名空間解析指定的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，編譯指定的 XPath 運算式，並傳回表示 XPath 運算式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</summary>
        <returns>
          <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 運算式是評估後會產生下列一種結果類型。  
  
-   <xref:System.Xml.XPath.XPathResultType.NodeSet>  
  
-   <xref:System.Xml.XPath.XPathResultType.Boolean>  
  
-   <xref:System.Xml.XPath.XPathResultType.Number>  
  
-   <xref:System.Xml.XPath.XPathResultType.String>  
  
> [!NOTE]
>  如果 XPath 運算式中，指定具有無效的引數數目 （或未實作的使用者定義函式），則只有在執行階段發生例外狀況。 使用者定義函式不會檢查在編譯時期和執行評估的運算式時，才會發生使用者定義函式所產生的例外狀況。  
  
> [!NOTE]
>  不可能進行編譯<xref:System.Xml.XPath.XPathExpression>使用自訂的內容，在一個步驟中傳遞<xref:System.Xml.Xsl.XsltContext>，它會實作<xref:System.Xml.IXmlNamespaceResolver>，當做此方法的引數。 若要使用<xref:System.Xml.XPath.XPathExpression>使用自訂的內容中，您必須呼叫<xref:System.Xml.XPath.XPathExpression.SetContext%2A>編譯運算式之後的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式參數不是有效的 XPath 運算式。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.XPath.XPathResultType" />
        <altmember cref="Overload:System.Xml.XPath.XPathExpression.SetContext" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathExpression.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string" Usage="System.Xml.XPath.XPathExpression.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得 <see cref="T:System.Xml.XPath.XPathExpression" /> 的 <see langword="string" /> 表示。</summary>
        <value>
          <see langword="string" /> 的 <see cref="T:System.Xml.XPath.XPathExpression" /> 表示。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathResultType ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathResultType ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathExpression.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReturnType As XPathResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XPath::XPathResultType ReturnType { System::Xml::XPath::XPathResultType get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : System.Xml.XPath.XPathResultType" Usage="System.Xml.XPath.XPathExpression.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathResultType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得 XPath 運算式的結果類型。</summary>
        <value>
          <see cref="T:System.Xml.XPath.XPathResultType" /> 值，代表 XPath 運算式的結果類型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會示範如何使用 XPath 傳回型別，以判斷如何處理 XPath 運算式。  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 該範例採用 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XPath.XPathResultType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，指定 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件用於命名空間解析。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public abstract void SetContext (System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetContext (nsResolver As IXmlNamespaceResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetContext(System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Xml.IXmlNamespaceResolver -&gt; unit" Usage="xPathExpression.SetContext nsResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="nsResolver">實作 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 介面的物件，用於命名空間解析。</param>
        <summary>在衍生類別中覆寫時，指定 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件用於命名空間解析。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空間解析使用時，支援類別可實作<xref:System.Xml.IXmlNamespaceResolver>介面，例如<xref:System.Xml.XmlNamespaceManager>類別。 <xref:System.Xml.XmlNamespaceManager>儲存前置詞和命名空間統一資源識別元 (URI) 的對應。 如果<xref:System.Xml.XPath.XPathExpression>需要命名空間解析、 前置詞和命名空間 URI 組必須加入至物件，例如<xref:System.Xml.XmlNamespaceManager>類別，它會實作<xref:System.Xml.IXmlNamespaceResolver>介面，而<xref:System.Xml.XPath.XPathExpression.SetContext%2A>必須呼叫方法，來指定<xref:System.Xml.IXmlNamespaceResolver>介面物件，用於解析命名空間。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>不包含前置詞，它會假設命名空間 URI 是空的命名空間。 如果 XML 包含預設命名空間，您仍然必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，並提供包含前置詞及命名空間來處理的預設命名空間 URI 的物件。  
  
-   您也可以提供<xref:System.Xml.IXmlNamespaceResolver>介面物件來解析命名<xref:System.Xml.XPath.XPathExpression.Compile%2A>方法，當您建立您<xref:System.Xml.XPath.XPathExpression>物件。  
  
-   <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 接受<xref:System.Xml.Xsl.XsltContext>做為命名空間解析程式，因此您可以實作自訂的內容並使用函式和變數根據<xref:System.Xml.Xsl.IXsltContextFunction>和<xref:System.Xml.Xsl.IXsltContextVariable>。 XPath 運算式將會執行它們。 如需詳細資訊，請參閱 <<c0> [ 使用者定義函式和變數](~/docs/standard/data/xml/user-defined-functions-and-variables.md)。  
  
   
  
## Examples  
 下列範例示範如何使用 XPath 傳回型別來判斷如何處理 XPath 運算式，以及如何使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，以提供<xref:System.Xml.XmlNamespaceManager>命名空間解析的物件。  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 該範例採用 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件參數並非衍生自 <see cref="T:System.Xml.IXmlNamespaceResolver" />。</exception>
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)" />
        <related type="Article" href="http://msdn.microsoft.com/library/4772f20e-1e7f-496e-93c2-1484473be555">使用者定義函式和變數</related>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public abstract void SetContext (System.Xml.XmlNamespaceManager nsManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Xml.XmlNamespaceManager nsManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetContext (nsManager As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetContext(System::Xml::XmlNamespaceManager ^ nsManager);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Xml.XmlNamespaceManager -&gt; unit" Usage="xPathExpression.SetContext nsManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nsManager" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="nsManager">要用於命名空間解析的 <see cref="T:System.Xml.XmlNamespaceManager" /> 物件。</param>
        <summary>在衍生類別中覆寫時，指定 <see cref="T:System.Xml.XmlNamespaceManager" /> 物件用於命名空間解析。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用支援命名空間解析<xref:System.Xml.XmlNamespaceManager>儲存前置詞和命名空間統一資源識別元 (URI) 對應的類別。 如果<xref:System.Xml.XPath.XPathExpression>需要命名空間解析、 前置詞和命名空間 URI 組必須新增至<xref:System.Xml.XmlNamespaceManager>物件並<xref:System.Xml.XPath.XPathExpression.SetContext%2A>必須呼叫方法，來指定<xref:System.Xml.XmlNamespaceManager>用於命名空間解析的物件。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>不包含前置詞，它會假設命名空間 URI 是空的命名空間。 如果 XML 包含預設命名空間，您仍然必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，並提供<xref:System.Xml.XmlNamespaceManager>物件，包含前置詞和命名空間來處理的預設命名空間 URI。  
  
-   您也可以提供<xref:System.Xml.IXmlNamespaceResolver>物件來解析命名<xref:System.Xml.XPath.XPathExpression.Compile%2A>方法，當您建立您<xref:System.Xml.XPath.XPathExpression>物件。  
  
-   <xref:System.Xml.XPath.XPathExpression.SetContext%2A> 接受<xref:System.Xml.Xsl.XsltContext>做為命名空間解析程式，因此您可以實作自訂的內容並使用函式和變數根據<xref:System.Xml.Xsl.IXsltContextFunction>和<xref:System.Xml.Xsl.IXsltContextVariable>。 XPath 運算式將會執行它們。 如需詳細資訊，請參閱 <<c0> [ 使用者定義函式和變數](~/docs/standard/data/xml/user-defined-functions-and-variables.md)。  
  
   
  
## Examples  
 下列範例示範如何使用 XPath 傳回型別來判斷如何處理 XPath 運算式，以及如何使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，以提供<xref:System.Xml.XmlNamespaceManager>命名空間解析的物件。  
  
 [!code-cpp[XPathExpression.ReturnType#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathExpression.ReturnType/CPP/returntype.cpp#1)]
 [!code-csharp[XPathExpression.ReturnType#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathExpression.ReturnType/CS/returntype.cs#1)]
 [!code-vb[XPathExpression.ReturnType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathExpression.ReturnType/VB/returntype.vb#1)]  
  
 該範例採用 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <see cref="T:System.Xml.XmlNamespaceManager" /> 物件參數並非衍生自 <see cref="T:System.Xml.XmlNamespaceManager" /> 類別。</exception>
        <altmember cref="T:System.Xml.XmlNamespaceManager" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)" />
        <related type="Article" href="http://msdn.microsoft.com/library/4772f20e-1e7f-496e-93c2-1484473be555">使用者定義函式和變數</related>
      </Docs>
    </Member>
  </Members>
</Type>