<Type Name="XPathNavigator" FullName="System.Xml.XPath.XPathNavigator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb09fc6039af96d324d6a432ccdd87591d53620b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55391891" /></Metadata><TypeSignature Language="C#" Value="public abstract class XPathNavigator : System.Xml.XPath.XPathItem, ICloneable, System.Xml.IXmlNamespaceResolver, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathNavigator extends System.Xml.XPath.XPathItem implements class System.ICloneable, class System.Xml.IXmlNamespaceResolver, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.XPathNavigator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XPathNavigator&#xA;Inherits XPathItem&#xA;Implements ICloneable, IXmlNamespaceResolver, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathNavigator abstract : System::Xml::XPath::XPathItem, ICloneable, System::Xml::IXmlNamespaceResolver, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XPathNavigator = class&#xA;    inherit XPathItem&#xA;    interface ICloneable&#xA;    interface IXPathNavigable&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XPath.XPathItem</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供游標模型來巡覽及編輯 XML 資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator>類別中<xref:System.Xml.XPath?displayProperty=nameWithType>命名空間是抽象類別會定義資料指標模型，來巡覽及編輯 XML 資訊項目為 XQuery 1.0 和 XPath 2.0 資料模型的執行個體。  
  
 <xref:System.Xml.XPath.XPathNavigator>實作的類別，從建立物件<xref:System.Xml.XPath.IXPathNavigable>這類介面<xref:System.Xml.XPath.XPathDocument>和<xref:System.Xml.XmlDocument>類別。 <xref:System.Xml.XPath.XPathNavigator> 所建立的物件<xref:System.Xml.XPath.XPathDocument>物件是唯讀，同時<xref:System.Xml.XPath.XPathNavigator>所建立的物件<xref:System.Xml.XmlDocument>可以編輯的物件。 <xref:System.Xml.XPath.XPathNavigator>物件的唯讀或可編輯狀態用來決定<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>屬性<xref:System.Xml.XPath.XPathNavigator>類別。  
  
 如需有關如何處理使用 XPath 資料模型的 XML 資料的詳細資訊，請參閱 <<c0> [ 使用 XPath 資料模型處理 XML 資料](~/docs/standard/data/xml/process-xml-data-using-the-xpath-data-model.md)主題。  
  
> [!IMPORTANT]
>  使用所引發的例外狀況<xref:System.Xml.XPath.XPathNavigator>類別，例如<xref:System.Xml.XPath.XPathException>類別中，可能包含不應公開受信任的案例中的機密資訊。 使機密資訊不會暴露在不受信任的情況下，就應該正確處理例外狀況。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Xml.XPath.XPathNavigator" />類別，您必須覆寫下列成員： 
-   <see cref="P:System.Xml.XPath.XPathNavigator.NameTable" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.Clone" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.NodeType" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.Name" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.BaseURI" />  
  
-   <see cref="P:System.Xml.XPath.XPathNavigator.IsEmptyElement" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)" />  
  
-   <see cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.Value" /></para></block>
    <altmember cref="T:System.Xml.XPath.IXPathNavigable" />
    <altmember cref="T:System.Xml.XPath.XPathDocument" />
    <altmember cref="T:System.Xml.XmlDocument" />
    <altmember cref="T:System.Xml.XmlNode" />
    <related type="Article" href="https://msdn.microsoft.com/library/536c6fce-1453-4654-9c72-bca54d47e081">使用 XPath 資料模型處理 XML 資料</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XPathNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XPathNavigator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.XPath.XPathNavigator" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化狀態，在這種類型的衍生的類別建構函式會呼叫這個建構函式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendChild">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在目前節點的子節點清單結尾建立新的子節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter AppendChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter AppendChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ AppendChild();" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : unit -&gt; System.Xml.XmlWriter&#xA;override this.AppendChild : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.AppendChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Xml.XmlWriter" /> 物件，該物件可用來在目前節點的子節點清單結尾建立一或多個新的子節點。</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> 物件，用來在目前節點的子節點清單結尾建立新的子節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將子節點附加至目前節點的子節點清單結尾加入新的節點。 比方說，當三個子節點存在的項目，第一個附加的節點會變成第四個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法。  
  
-   新的子節點不會插入直到<xref:System.Xml.XmlWriter.Close%2A>方法的<xref:System.Xml.XmlWriter>呼叫物件。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於根節點或項目節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
 您可以將多個節點寫入的寫入器。 所有節點會都附加至目前節點的子節點清單結尾。  
  
   
  
## Examples  
 在下列範例中，新`pages`子項目會附加至清單中的第一個子項目的`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlWriter>從傳回的物件<xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法。  
  
 [!code-cpp[XPathNavigatorMethods#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#1)]
 [!code-csharp[XPathNavigatorMethods#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#1)]
 [!code-vb[XPathNavigatorMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#1)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不是根節點或項目節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (string newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(string newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChild (newChild As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChild(System::String ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : string -&gt; unit&#xA;override this.AppendChild : string -&gt; unit" Usage="xPathNavigator.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newChild">新的子節點之 XML 資料字串。</param>
        <summary>使用指定的 XML 資料字串，在目前節點的子節點清單結尾建立新的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加的子節點至目前節點的子節點清單結尾加入新節點。 比方說，當項目有三個子節點，附加的節點會變成第四個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 若要建立新的項目節點，包含 XML 字串參數中的所有 XML 語法。 新的字串`book`節點是`AppendChild("<book/>")`。 字串為"book"的文字附加至目前節點的文字節點`AppendChild("book")`。 如果 XML 字串包含多個節點，加入所有節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於根節點或項目節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，會將新的 `pages` 項目子系附加至 `book` 檔案中第一個 `contosoBooks.xml` 項目的項目子系清單。  
  
 [!code-cpp[XPathNavigatorMethods#2](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#2)]
 [!code-csharp[XPathNavigatorMethods#2](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#2)]
 [!code-vb[XPathNavigatorMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#2)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">XML 資料字串參數為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不是根節點或項目節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException">XML 資料字串參數的語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XmlReader newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(class System.Xml.XmlReader newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChild (newChild As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChild(System::Xml::XmlReader ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlReader -&gt; unit&#xA;override this.AppendChild : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newChild">位於新的子節點之 XML 資料上的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
        <summary>使用指定 <see cref="T:System.Xml.XmlReader" /> 物件的 XML 內容，在目前節點的子節點清單結尾建立新的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加的子節點至目前節點的子節點清單結尾加入新節點。 比方說，當項目有三個子節點，附加的節點會變成第四個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法。  
  
-   如果<xref:System.Xml.XmlReader>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於根節點或項目節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子項目會附加至清單中的第一個子項目的`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlReader>指定的物件。 `http://www.contoso.com/books` ，以便使用相同的命名空間與 XML 文件附加新的子項目指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#3](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#3)]
 [!code-csharp[XPathNavigatorMethods#3](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#3)]
 [!code-vb[XPathNavigatorMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#3)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Xml.XmlReader" /> 物件處於錯誤狀態或已關閉。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XmlReader" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不是根節點或項目節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException"><see cref="T:System.Xml.XmlReader" /> 物件參數的 XML 內容語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XPath.XPathNavigator newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(class System.Xml.XPath.XPathNavigator newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChild (newChild As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChild(System::Xml::XPath::XPathNavigator ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.AppendChild : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newChild"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，位於要以新的子節點形式加入的節點上。</param>
        <summary>使用 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中指定的節點，在目前節點的子節點清單結尾建立新的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加的子節點至目前節點的子節點清單結尾加入新節點。 比方說，當項目有三個子節點，附加的節點會變成第四個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於根節點或項目節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子項目會附加至清單中的第一個子項目的`book`中的項目`contosoBooks.xml`檔案中，使用中所含節點<xref:System.Xml.XPath.XPathNavigator>指定。 `http://www.contoso.com/books` ，以便使用相同的命名空間與 XML 文件附加新的子項目指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#4](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#4)]
 [!code-csharp[XPathNavigatorMethods#4](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#4)]
 [!code-vb[XPathNavigatorMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#4)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不是根節點或項目節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendChildElement">
      <MemberSignature Language="C#" Value="public virtual void AppendChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildElement(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendChildElement (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendChildElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AppendChildElement : string * string * string * string -&gt; unit&#xA;override this.AppendChildElement : string * string * string * string -&gt; unit" Usage="xPathNavigator.AppendChildElement (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">新的子項目節點的命名空間前置詞 (如有此項)。</param>
        <param name="localName">新的子項目節點的區域名稱 (如有此項)。</param>
        <param name="namespaceURI">新的子項目節點的命名空間 URI (如有此項)。 <see cref="F:System.String.Empty" /> 和 <see langword="null" /> 相等。</param>
        <param name="value">新的子項目節點的值。 如果已傳遞 <see cref="F:System.String.Empty" /> 或 <see langword="null" />，則會建立空的項目。</param>
        <summary>使用命名空間前置詞、區域名稱以及有指定值的指定命名空間 URI，在目前節點的子節點清單結尾建立新的子項目節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加的子節點至目前節點的子節點清單結尾加入新節點。 比方說，當項目節點的三個子節點存在，附加的節點會變成第四個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 命名空間前置詞和 URI 值，可由使用<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>方法或<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法。 比方說，下列語法會將附加的子元素使用範圍內的命名空間`xmlns:bk=http://www.contoso.com/books`:  
  
```csharp  
navigator.AppendChildElement(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 這會建立新的子系`<bk:pages/>`項目。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.AppendChildElement%2A>方法。  
  
-   如果指定的命名空間前置詞`null`或<xref:System.String.Empty?displayProperty=nameWithType>，則新項目的 URI 的命名空間的前置詞取自目前命名空間範圍內。 如果沒有指派給指定的命名空間 URI 在目前的範圍內沒有命名空間前置詞，會自動產生的命名空間前置詞。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChildElement%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於根節點或項目節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.AppendChildElement%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，會將新的 `pages` 項目子系附加至 `book` 檔案中第一個 `contosoBooks.xml` 項目的項目子系清單。  
  
 [!code-cpp[XPathNavigatorMethods#5](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#5)]
 [!code-csharp[XPathNavigatorMethods#5](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#5)]
 [!code-vb[XPathNavigatorMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#5)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不是根節點或項目節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XPath.XPathNavigator.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得目前節點的基底 (Base) URI。</summary>
        <value>節點載入的來源位置，如果沒有任何值，則為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 網路上的 XML 文件組成的資料，使用各種不同的 W3C 標準包含機制，彙總的區塊，並因此會包含來自不同位置的節點。 DTD 實體即為一例，此彙總的資料，但不限於使用 Dtd。 <xref:System.Xml.XPath.XPathNavigator.BaseURI%2A>屬性能告訴您這些節點會來自。  
  
 例如，如果 XML 資料從載入http://server/mydata.xml，則<xref:System.Xml.XPath.XPathNavigator.BaseURI%2A>屬性會傳回http://server/mydata.xml。  
  
> [!NOTE]
>  使用所建立的節點<xref:System.Xml.XPath.XPathNavigator>類別具有相同<xref:System.Xml.XPath.XPathNavigator.BaseURI%2A>為 XML 文件<xref:System.Xml.XPath.XPathNavigator>從已建立。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public virtual bool CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEdit" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.CanEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEdit : bool" Usage="System.Xml.XPath.XPathNavigator.CanEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Xml.XPath.XPathNavigator" /> 是否可以編輯底層 XML 資料。</summary>
        <value><see langword="true" /> 如果<see cref="T:System.Xml.XPath.XPathNavigator" />可以編輯基礎 XML 資料，否則<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>屬性具有不同的值為基礎的三個不同的實作<xref:System.Xml.XPath.IXPathNavigable>.NET Framework 中的介面。 <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>值<xref:System.Xml.XPath.XPathNavigator>建立的每個實作的物件會列在下表。  
  
|<xref:System.Xml.XPath.IXPathNavigable> 實作|<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> 值|  
|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Xml.XPath.XPathDocument>|`false`|  
|<xref:System.Xml.XmlDocument>|`true`|  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>屬性來顯示<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>的值<xref:System.Xml.XPath.XPathDocument>和<xref:System.Xml.XmlDocument>類別。  
  
 [!code-cpp[XPathNavigatorProperties#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#1)]
 [!code-csharp[XPathNavigatorProperties#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#1)]
 [!code-vb[XPathNavigatorProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#1)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckValidity">
      <MemberSignature Language="C#" Value="public virtual bool CheckValidity (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckValidity(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckValidity(System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberSignature Language="F#" Value="abstract member CheckValidity : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.ValidationEventHandler -&gt; bool&#xA;override this.CheckValidity : System.Xml.Schema.XmlSchemaSet * System.Xml.Schema.ValidationEventHandler -&gt; bool" Usage="xPathNavigator.CheckValidity (schemas, validationEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="schemas"><see cref="T:System.Xml.Schema.XmlSchemaSet" />，包含用來驗證 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中所含的 XML 資料之結構描述。</param>
        <param name="validationEventHandler"><see cref="T:System.Xml.Schema.ValidationEventHandler" />，可接收與結構描述驗證的警告和錯誤有關的資訊。</param>
        <summary>請驗證 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料確實有符合所提供的 XML 結構描述定義語言 (XSD) 結構描述。</summary>
        <returns>如果未發生任何結構描述驗證錯誤，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Xml.XPath.XPathNavigator.CheckValidity%2A>方法會驗證 XML 資料包含在<xref:System.Xml.XPath.XPathNavigator>全域型別或結構描述或結構描述中所提供的宣告符合<xref:System.Xml.Schema.XmlSchemaSet>。  
  
-   <xref:System.Xml.XPath.XPathNavigator.CheckValidity%2A>方法不會執行資訊集增加。 這表示，不會套用結構描述預設值、 文字值不會轉換成不可部份完成值，且沒有新的型別資訊與相關聯的資訊項目。  
  
-   結構描述`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`會忽略的 XML 資料中的提示。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>位於 [文件] 節點中，在驗證程序包含唯一性和參考條件約束檢查 (`xs:ID`， `xs:IDREF`， `xs:key`， `xs:keyref`，和`xs:unique`)。 否則，會省略這些檢查。  
  
-   如果<xref:System.Xml.Schema.XmlSchemaSet>傳遞的參數`null`並<xref:System.Xml.XPath.XPathNavigator>位於項目節點，所公開的型別資訊<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>屬性的<xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>屬性用來檢查節點的有效性。 如果<xref:System.Xml.Schema.XmlSchemaSet>傳遞的參數`null`並<xref:System.Xml.XPath.XPathNavigator>位於根節點，<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>文件項目 （也就是項目子系的根節點） 的屬性用。 在這兩種情況下如果<xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>項目之屬性<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>屬性是`null`而<xref:System.Xml.Schema.XmlSchemaSet>傳遞作為參數就是`null`、<xref:System.InvalidOperationException>因為沒有類型資訊，用以執行會擲回驗證。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">已發生結構描述驗證錯誤，而且未指定任何 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 來處理驗證錯誤。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的節點並不是項目、屬性或根節點，或是沒有任何型別資訊可執行驗證。</exception>
        <exception cref="T:System.ArgumentException">當 <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> 不在 XML 資料的根節點上時，使用了 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 參數呼叫 <see cref="T:System.Xml.XPath.XPathNavigator" /> 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNavigator Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XPath::XPathNavigator ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，請在與這個 <see cref="T:System.Xml.XPath.XPathNavigator" /> 相同的節點上建立新的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</summary>
        <returns>與這個 <see cref="T:System.Xml.XPath.XPathNavigator" /> 位於相同節點的新 <see cref="T:System.Xml.XPath.XPathNavigator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.Clone%2A>方法會特別適用於搭配<xref:System.Xml.XPath.XPathNodeIterator>。 <xref:System.Xml.XPath.XPathNodeIterator>用來逐一查看選取的節點集，並包含<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>屬性會傳回<xref:System.Xml.XPath.XPathNavigator>位於內容節點的<xref:System.Xml.XPath.XPathNodeIterator>。 不過，<xref:System.Xml.XPath.XPathNavigator>所傳回<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>屬性不能用來將移開節點集。 相反地，複製傳回<xref:System.Xml.XPath.XPathNavigator>和使用 「 複製的瀏覽器執行任何其他動作。  
  
 複製<xref:System.Xml.XPath.XPathNavigator>不會影響原始的後續變更<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例會取得 Herman Melville 所撰寫的所有書名。  
  
 [!code-cpp[XPathNavigatorMethods#6](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#6)]
 [!code-csharp[XPathNavigatorMethods#6](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#6)]
 [!code-vb[XPathNavigatorMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#6)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparePosition">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeOrder ComparePosition (System.Xml.XPath.XPathNavigator nav);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeOrder ComparePosition(class System.Xml.XPath.XPathNavigator nav) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComparePosition (nav As XPathNavigator) As XmlNodeOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeOrder ComparePosition(System::Xml::XPath::XPathNavigator ^ nav);" />
      <MemberSignature Language="F#" Value="abstract member ComparePosition : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlNodeOrder&#xA;override this.ComparePosition : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlNodeOrder" Usage="xPathNavigator.ComparePosition nav" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeOrder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">要比較的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</param>
        <summary>比較目前 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置與指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置。</summary>
        <returns><see cref="T:System.Xml.XmlNodeOrder" /> 值，表示兩個 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的比較位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表描述<xref:System.Xml.XmlNodeOrder>列舉型別。  
  
|XmlNodeOrder|描述|  
|------------------|-----------------|  
|<xref:System.Xml.XmlNodeOrder.Before>|目前的節點，這個<xref:System.Xml.XPath.XPathNavigator>所提供的目前節點之前<xref:System.Xml.XPath.XPathNavigator>。|  
|<xref:System.Xml.XmlNodeOrder.After>|目前的節點，這個<xref:System.Xml.XPath.XPathNavigator>所提供的目前節點之後<xref:System.Xml.XPath.XPathNavigator>。|  
|<xref:System.Xml.XmlNodeOrder.Same>|這兩個<xref:System.Xml.XPath.XPathNavigator>物件位於相同節點上。|  
|<xref:System.Xml.XmlNodeOrder.Unknown>|節點位置無法決定相對於其他文件順序，或`null`指定為<xref:System.Xml.XPath.XPathNavigator>參數。 如果兩個節點位於不同的樹狀結構中，就會發生這種情況。|  
  
 <xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A>方法的行為會視<xref:System.Xml.XPath.XPathNodeType><xref:System.Xml.XPath.XPathNavigator>目前所在。 當比較 XML 文件中的節點時，適用下列規則：  
  
-   <xref:System.Xml.XPath.XPathNodeType.Element> 節點：這些節點會傳回文件順序，將來源文件。  
  
-   <xref:System.Xml.XPath.XPathNodeType.Namespace> 節點：這些節點可能會傳回文件順序，而且一律之前<xref:System.Xml.XPath.XPathNodeType.Attribute>節點的父項目。  
  
-   <xref:System.Xml.XPath.XPathNodeType.Attribute> 節點：這些節點可能會傳回文件順序。 一律後處理之後<xref:System.Xml.XPath.XPathNodeType.Namespace>節點，以及任何的子節點的父節點之前。  
  
> [!NOTE]
>  XPath 資料模型的詳細資訊和節點類型的詳細資訊，請參閱 W3C 第 5 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
> [!NOTE]
>  使用<xref:System.Xml.XPath.XPathNavigator.IsSamePosition%2A>方法而非<xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A>盡可能的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathExpression Compile (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathExpression Compile(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compile (xpath As String) As XPathExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathExpression ^ Compile(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Compile : string -&gt; System.Xml.XPath.XPathExpression&#xA;override this.Compile : string -&gt; System.Xml.XPath.XPathExpression" Usage="xPathNavigator.Compile xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">表示 XPath 運算式的字串。</param>
        <summary>編譯表示 XPath 運算式的字串，並傳回 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</summary>
        <returns>表示 XPath 運算式的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 運算式是評估後會產生下列的傳回類型的其中一個：  
  
-   節點集： 未排序的集合不重複的節點  
  
-   布林值：`true`或 `false`  
  
-   浮點數的數字：  
  
-   字串： UCS 字元的順序  
  
 傳回節點集的運算式可用於<xref:System.Xml.XPath.XPathNavigator.Select%2A>和<xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>方法。 傳回布林值、 數字或字串的運算式可用於<xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>方法。 有效的運算式上的規則<xref:System.Xml.XPath.XPathNavigator.Matches%2A>方法專屬於該方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="xpath" /> 參數包含無效的 XPath 運算式。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual void CreateAttribute (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateAttribute(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateAttribute (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : string * string * string * string -&gt; unit&#xA;override this.CreateAttribute : string * string * string * string -&gt; unit" Usage="xPathNavigator.CreateAttribute (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">新屬性節點的命名空間前置詞 (如有此項)。</param>
        <param name="localName">不能為 <see cref="F:System.String.Empty" /> 或 <see langword="null" /> 的新屬性節點的區域名稱。</param>
        <param name="namespaceURI">新屬性節點的命名空間 URI (如有此項)。</param>
        <param name="value">新屬性節點的值。 如果已傳遞 <see cref="F:System.String.Empty" /> 或 <see langword="null" />，則會建立空的屬性節點。</param>
        <summary>使用命名空間前置詞、區域名稱以及有指定值的指定命名空間 URI，在目前的項目節點上建立屬性節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空間前置詞和 URI 值可以使用來取得<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>或<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法。 例如，下列語法會建立的屬性使用範圍內的命名空間`xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
editor.CreateAttribute(navigator.Prefix, "attributeName", LookupNamespace(navigator.Prefix), "text")  
```  
  
 這會建立新的屬性`<bk:element attributeName="text"/>`上目前的項目。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>方法。  
  
-   如果指定的命名空間前置詞<xref:System.String.Empty?displayProperty=nameWithType>或`null`，從目前的命名空間範圍內取得的命名空間 URI 的新屬性的前置詞。 如果沒有指派給指定的命名空間 URI 在目前的範圍內沒有命名空間前置詞，會自動產生的命名空間前置詞。 例如若要建立新屬性的預設命名空間中的項目`contosoBooks.xml`檔案中，(`xmlns="http://www.contoso.com/books"`)，您指定`null`或<xref:System.String.Empty?displayProperty=nameWithType>命名空間前置詞和命名空間 URI 參數。 指定`http://www.contoso.com/books`命名空間 URI 的參數將會造成<xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>方法，以自動產生新的屬性的命名空間前置詞。  
  
-   如果建立新的屬性與項目中，命名空間宣告是衝突，因為選擇的命名空間前置詞由在相同的範圍內的另一個命名空間宣告的命名空間節點，或因為選擇的前置詞的相同項目，但是繫結至不同的命名空間 URI，會擲回例外狀況。  
  
-   <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`discount`上建立屬性`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#7](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#7)]
 [!code-csharp[XPathNavigatorMethods#7](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#7)]
 [!code-vb[XPathNavigatorMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#7)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不位於項目節點上。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter CreateAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter CreateAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CreateAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttributes () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ CreateAttributes();" />
      <MemberSignature Language="F#" Value="abstract member CreateAttributes : unit -&gt; System.Xml.XmlWriter&#xA;override this.CreateAttributes : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.CreateAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Xml.XmlWriter" /> 物件，此物件是用來在目前的項目上建立新的屬性。</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> 物件，此物件是用來在目前的項目上建立新的屬性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.CreateAttributes%2A>方法。  
  
-   當<xref:System.Xml.XPath.XPathNavigator>位於項目時，所建立的新屬性上<xref:System.Xml.XPath.XPathNavigator>方法會放置在目前項目的屬性清單的結尾。  
  
-   新的屬性不會插入直到<xref:System.Xml.XmlWriter.Close%2A>方法的<xref:System.Xml.XmlWriter>呼叫物件。  
  
-   如果指定的命名空間前置詞<xref:System.String.Empty?displayProperty=nameWithType>或`null`，從目前的命名空間範圍內取得的命名空間 URI 的新屬性的前置詞。 如果沒有指派給指定的命名空間 URI 在目前的範圍內沒有命名空間前置詞，會自動產生的命名空間前置詞。 例如若要建立新屬性的預設命名空間中的項目`contosoBooks.xml`檔案中，(`xmlns="http://www.contoso.com/books"`)，您指定`null`或<xref:System.String.Empty?displayProperty=nameWithType>命名空間前置詞和命名空間 URI 參數。 指定`http://www.contoso.com/books`命名空間 URI 的參數將會造成<xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>方法，以自動產生新的屬性的命名空間前置詞。  
  
-   如果建立新的屬性與項目中，命名空間宣告是衝突，因為選擇的命名空間前置詞由在相同的範圍內的另一個命名空間宣告的命名空間節點，或因為選擇的前置詞的相同項目，但是繫結至不同的命名空間 URI，會擲回例外狀況。  
  
-   <xref:System.Xml.XmlWriter>傳回的物件只用來建立屬性。 呼叫其他<xref:System.Xml.XmlWriter>不建立屬性的物件方法會擲回的例外狀況。  
  
-   <xref:System.Xml.XPath.XPathNavigator.CreateAttributes%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，會使用從 `discount` 方法傳回的 `currency` 物件，在 `price` 檔案中第一個 `book` 項目的 `contosoBooks.xml` 項目子系上，建立新的 <xref:System.Xml.XmlWriter> 及 <xref:System.Xml.XPath.XPathNavigator.CreateAttributes%2A> 屬性。  
  
 [!code-cpp[XPathNavigatorMethods#8](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#8)]
 [!code-csharp[XPathNavigatorMethods#8](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#8)]
 [!code-vb[XPathNavigatorMethods#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#8)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不位於項目節點上。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的複本。</summary>
        <returns>此 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 複本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法相當於<xref:System.Xml.XPath.XPathNavigator.Clone%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRange">
      <MemberSignature Language="C#" Value="public virtual void DeleteRange (System.Xml.XPath.XPathNavigator lastSiblingToDelete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRange(class System.Xml.XPath.XPathNavigator lastSiblingToDelete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteRange (lastSiblingToDelete As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteRange(System::Xml::XPath::XPathNavigator ^ lastSiblingToDelete);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRange : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.DeleteRange : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.DeleteRange lastSiblingToDelete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSiblingToDelete" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="lastSiblingToDelete"><see cref="T:System.Xml.XPath.XPathNavigator" />，位於要刪除的範圍內的最後一個同層級節點上。</param>
        <summary>刪除從目前節點到指定節點的某範圍之同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.DeleteRange%2A>方法會從目前節點中刪除某範圍之同層級節點<xref:System.Xml.XPath.XPathNavigator>所指定的節點上 （含） 定位<xref:System.Xml.XPath.XPathNavigator>（含） 的參數。 <xref:System.Xml.XPath.XPathNavigator>然後位於其父節點。  
  
   
  
## Examples  
 在下列範例中，第一個和第二個`book`的項目`contosoBooks.xml`檔案會使用刪除<xref:System.Xml.XPath.XPathNavigator.DeleteRange%2A>方法。  
  
 [!code-cpp[XPathNavigatorMethods#52](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#52)]
 [!code-csharp[XPathNavigatorMethods#52](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#52)]
 [!code-vb[XPathNavigatorMethods#52](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#52)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.InvalidOperationException">所指定要刪除的最後一個節點不是目前節點的有效同層級節點。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSelf">
      <MemberSignature Language="C#" Value="public virtual void DeleteSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteSelf() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.DeleteSelf" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteSelf ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteSelf();" />
      <MemberSignature Language="F#" Value="abstract member DeleteSelf : unit -&gt; unit&#xA;override this.DeleteSelf : unit -&gt; unit" Usage="xPathNavigator.DeleteSelf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>刪除目前的節點和它的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Xml.XPath.XPathNavigator>位於已刪除的節點的父節點上順利刪除。  
  
-   如果已刪除的節點是文字節點，也就是簡單的具型別項目的內容，項目就會失去其類型資訊。 這表示當項目上放置<xref:System.Xml.XPath.XPathNavigator.XmlType%2A>，<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>並<xref:System.Xml.XPath.XPathNavigator.TypedValue%2A>屬性具有值`null`，<xref:System.String>和<xref:System.String.Empty>分別。  
  
-   已刪除的節點都仍可存取<xref:System.Xml.XPath.XPathNavigator>位在它們在刪除前的物件。 但是嘗試移動已刪除的子樹狀目錄的方法會失敗。 例如，<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>並<xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>方法一律失敗時<xref:System.Xml.XPath.XPathNavigator>位於最上層最已刪除的節點。 這是因為已刪除的節點不再連接至 XML 文件。 同樣地<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>方法一律會失敗如果<xref:System.Xml.XPath.XPathNavigator>置於最下方的已刪除節點。  
  
   
  
## Examples  
 在下列範例中`price`的第一個項目`book`項目`contosoBooks.xml`檔案會使用刪除<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>方法。 刪除 <xref:System.Xml.XPath.XPathNavigator> 項目之後，`price` 物件的位置在父 `book` 項目上。  
  
 [!code-cpp[XPathNavigatorMethods#9](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#9)]
 [!code-csharp[XPathNavigatorMethods#9](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#9)]
 [!code-vb[XPathNavigatorMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#9)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 位於無法刪除的節點上，例如根節點或命名空間節點等。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>評估指定的 XPath 運算式，並傳回具類型的結果。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (xpath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : string -&gt; obj&#xA;override this.Evaluate : string -&gt; obj" Usage="xPathNavigator.Evaluate xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">字串，表示能接受評估的 XPath 運算式。</param>
        <summary>評估指定的 XPath 運算式，並傳回具類型的結果。</summary>
        <returns>運算式的結果 (布林值、數字、字串或節點集)。 這會分別對應至 <see cref="T:System.Boolean" />、<see cref="T:System.Double" />、<see cref="T:System.String" /> 或 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 等物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列 C# 程式碼會將`Price/text()`節點的數字，乘以 10，並傳回產生的值。  
  
```csharp 
nav.Evaluate("Price/text()*10");  
```  
  
> [!NOTE]
>  XPath position （） 和 last （） 函式，做為述詞在位置步驟中，除非需要節點集才能評估的參考。 在此情況下，您必須使用的多載採用<xref:System.Xml.XPath.XPathNodeIterator>做為引數; 否則 position （） 和 last （） 會傳回 0。  
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例中，評估 XPath 運算式，並傳回<xref:System.Double>。  
  
 [!code-cpp[XPathNavigatorMethods#10](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#10)]
 [!code-csharp[XPathNavigatorMethods#10](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#10)]
 [!code-vb[XPathNavigatorMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#10)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式的傳回類型是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
        <altmember cref="T:System.Xml.XPath.XPathExpression" />
        <altmember cref="P:System.Xml.XPath.XPathExpression.ReturnType" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (expr As XPathExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::Xml::XPath::XPathExpression ^ expr);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Xml.XPath.XPathExpression -&gt; obj&#xA;override this.Evaluate : System.Xml.XPath.XPathExpression -&gt; obj" Usage="xPathNavigator.Evaluate expr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">可以接受評估的 <see cref="T:System.Xml.XPath.XPathExpression" />。</param>
        <summary>評估 <see cref="T:System.Xml.XPath.XPathExpression" />，並傳回具類型的結果。</summary>
        <returns>運算式的結果 (布林值、數字、字串或節點集)。 這會分別對應至 <see cref="T:System.Boolean" />、<see cref="T:System.Double" />、<see cref="T:System.String" /> 或 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 等物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列 C# 程式碼會傳回數字將轉換後`Price/text()`節點以數字] 和 [值乘以 10。  
  
```csharp  
XPathExpression expr = nav.Compile("Price/text()*10");  
nav.Evaluate(expr);  
```  
  
> [!NOTE]
>  XPath position （） 和 last （） 函式，做為述詞在位置步驟中，除非需要節點集才能評估的參考。 在此情況下，您必須使用的多載採用<xref:System.Xml.XPath.XPathNodeIterator>做為引數; 否則 position （） 和 last （） 會傳回 0。  
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例會評估<xref:System.Xml.XPath.XPathExpression>，並傳回<xref:System.Double>。  
  
 [!code-cpp[XPathNavigatorMethods#11](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#11)]
 [!code-csharp[XPathNavigatorMethods#11](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#11)]
 [!code-vb[XPathNavigatorMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#11)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式的傳回類型是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
        <altmember cref="P:System.Xml.XPath.XPathExpression.ReturnType" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (xpath As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : string * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.Evaluate : string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xPathNavigator.Evaluate (xpath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">字串，表示能接受評估的 XPath 運算式。</param>
        <param name="resolver"><see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析 XPath 運算式中的命名空間前置詞。</param>
        <summary>評估指定的 XPath 運算式，並傳回具類型的結果，透過的方式是使用指定的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件來解析 XPath 運算式中的命名空間前置詞。</summary>
        <returns>運算式的結果 (布林值、數字、字串或節點集)。 這會分別對應至 <see cref="T:System.Boolean" />、<see cref="T:System.Double" />、<see cref="T:System.String" /> 或 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 等物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列 C# 程式碼會傳回數字將轉換後`Price/text()`節點以數字] 和 [值乘以 10。  
  
```csharp  
XPathExpression expr = nav.Compile("Price/text()*10");  
nav.Evaluate(expr);  
```  
  
> [!NOTE]
>  XPath position （） 和 last （） 函式，做為述詞在位置步驟中，除非需要節點集才能評估的參考。 在此情況下，您必須使用的多載採用<xref:System.Xml.XPath.XPathNodeIterator>做為引數; 否則 position （） 和 last （） 會傳回 0。  
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例中，評估 XPath 運算式，並傳回<xref:System.Double>使用<xref:System.Xml.XmlNamespaceManager>指定用來解析 XPath 運算式中的命名空間前置詞的物件。  
  
 [!code-cpp[XPathNavigatorMethods#12](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#12)]
 [!code-csharp[XPathNavigatorMethods#12](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#12)]
 [!code-vb[XPathNavigatorMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#12)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式的傳回類型是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr, System.Xml.XPath.XPathNodeIterator context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(class System.Xml.XPath.XPathExpression expr, class System.Xml.XPath.XPathNodeIterator context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Evaluate (expr As XPathExpression, context As XPathNodeIterator) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Evaluate(System::Xml::XPath::XPathExpression ^ expr, System::Xml::XPath::XPathNodeIterator ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Xml.XPath.XPathExpression * System.Xml.XPath.XPathNodeIterator -&gt; obj&#xA;override this.Evaluate : System.Xml.XPath.XPathExpression * System.Xml.XPath.XPathNodeIterator -&gt; obj" Usage="xPathNavigator.Evaluate (expr, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
        <Parameter Name="context" Type="System.Xml.XPath.XPathNodeIterator" />
      </Parameters>
      <Docs>
        <param name="expr">可以接受評估的 <see cref="T:System.Xml.XPath.XPathExpression" />。</param>
        <param name="context"><see cref="T:System.Xml.XPath.XPathNodeIterator" />，指向要執行評估的選定節點集。</param>
        <summary>使用提供的內容來評估 <see cref="T:System.Xml.XPath.XPathExpression" />，並傳回具類型的結果。</summary>
        <returns>運算式的結果 (布林值、數字、字串或節點集)。 這會分別對應至 <see cref="T:System.Boolean" />、<see cref="T:System.Double" />、<see cref="T:System.String" /> 或 <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 等物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用評估運算式<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>節點<xref:System.Xml.XPath.XPathNodeIterator>與內容節點。 如果`context`是`null`，在其上的節點<xref:System.Xml.XPath.XPathNavigator>位於目前做為內容節點。  
  
 Position （） 和 last （） 函式，除非使用做為述詞在位置步驟中，會一律傳回 0，在下列情況下：  
  
-   `context` 引數為 `null`。  
  
-   <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> 尚未呼叫上<xref:System.Xml.XPath.XPathNodeIterator>。  
  
 因為目前的節點上，使用 position （） 和 last （） 函式，所以您不應該使用<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>與選定的節點集的屬性。 這可能會失效的狀態<xref:System.Xml.XPath.XPathNavigator>。  
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例會評估<xref:System.Xml.XPath.XPathExpression>，並傳回<xref:System.Double>使用<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>節點<xref:System.Xml.XPath.XPathNodeIterator>與內容節點。  
  
 [!code-cpp[XPathNavigatorMethods#13](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#13)]
 [!code-csharp[XPathNavigatorMethods#13](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#13)]
 [!code-vb[XPathNavigatorMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#13)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式的傳回類型是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string * string -&gt; string&#xA;override this.GetAttribute : string * string -&gt; string" Usage="xPathNavigator.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">屬性的本機名稱。 <paramref name="localName" /> 會區分大小寫。</param>
        <param name="namespaceURI">屬性的命名空間 URI。</param>
        <summary>取得具有指定的區域名稱和命名空間 URI 的屬性值。</summary>
        <returns><see cref="T:System.String" />，包含指定屬性的值；如果找不到符合的屬性，或 <see cref="F:System.String.Empty" /> 不在項目節點上，則為 <see cref="T:System.Xml.XPath.XPathNavigator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator>必須定位在項目節點，然後再呼叫上<xref:System.Xml.XPath.XPathNavigator.GetAttribute%2A>方法。  
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespace (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespace : string -&gt; string&#xA;override this.GetNamespace : string -&gt; string" Usage="xPathNavigator.GetNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">命名空間節點的區域名稱。</param>
        <summary>傳回對應至指定區域名稱之命名空間節點的值。</summary>
        <returns><see cref="T:System.String" />，包含命名空間節點的值；如果找不到符合的命名空間節點，或 <see cref="F:System.String.Empty" /> 不在項目節點上，則為 <see cref="T:System.Xml.XPath.XPathNavigator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空間`xml`和`xmlns`一律會傳回值。 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`name`參數<xref:System.Xml.XPath.XPathNavigator.GetNamespace%2A>方法會傳回預設`xmlns`命名空間。  
  
 如需命名空間節點的定義，請參閱 W3C 5.4 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 這個方法不會影響狀態<xref:System.Xml.XPath.XPathNavigator>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xPathNavigator.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope"><see cref="T:System.Xml.XmlNamespaceScope" /> 值，指定要傳回的命名空間。</param>
        <summary>傳回目前節點範圍中的命名空間。</summary>
        <returns>以前置詞當做索引鍵的命名空間名稱之 <see cref="T:System.Collections.Generic.IDictionary`2" /> 集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的命名空間取決於<xref:System.Xml.XmlNamespaceScope>指定值。  
  
|XmlNamespaceScope 值|傳回的命名空間|  
|-----------------------------|-------------------------|  
|<xref:System.Xml.XmlNamespaceScope.All>|在目前節點範圍中定義的所有命名空間， 這包括`xmlns:xml`一律以隱含方式宣告命名空間。 命名空間傳回的順序並無定義。|  
|<xref:System.Xml.XmlNamespaceScope.ExcludeXml>|目前節點範圍中定義的所有命名空間不包括`xmlns:xml`一律以隱含方式宣告命名空間。 命名空間傳回的順序並無定義。|  
|<xref:System.Xml.XmlNamespaceScope.Local>|在目前節點上本機定義的所有命名空間。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XPath.XPathNavigator.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前節點是否具有任何屬性。</summary>
        <value><see langword="true" /> 如果目前的節點屬性;會傳回<see langword="false" />如果目前節點沒有屬性，或如果<see cref="T:System.Xml.XPath.XPathNavigator" />不位於項目節點上。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public virtual bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Xml.XPath.XPathNavigator.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前節點是否具有任何子節點。</summary>
        <value>如果目前的節點有任何子節點，則為 <see langword="true" />，否則會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>置於不能有子節點的節點<xref:System.Xml.XPath.XPathNavigator.HasChildren%2A>屬性一律會傳回`false`。  
  
 下表列出的子節點<xref:System.Xml.XPath.XPathNodeType>允許每個節點<xref:System.Xml.XPath.XPathNodeType>節點。  
  
|XPathNodeType Node|XPathNodeType 的子節點|  
|------------------------|-------------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XPath.XPathNodeType.Element><xref:System.Xml.XPath.XPathNodeType.Comment>，或<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>節點。 **注意︰** <xref:System.Xml.XmlNodeType.DocumentFragment>相當於<xref:System.Xml.XPath.XPathNodeType.Root>時使用<xref:System.Xml.XmlDocument>類別，並可以有相同的子系的項目。|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element><xref:System.Xml.XPath.XPathNodeType.Text>， <xref:System.Xml.XPath.XPathNodeType.Comment>， <xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>，<xref:System.Xml.XPath.XPathNodeType.Whitespace>或<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>節點。|  
|所有其他<xref:System.Xml.XPath.XPathNodeType>節點|不能有子節點。|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XPath.XPathNavigator.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定表示目前節點之子節點的標記。</summary>
        <value><see cref="T:System.String" />，包含目前節點之子節點的標記。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.XPath.XPathNavigator.InnerXml%2A>和<xref:System.Xml.XPath.XPathNavigator.OuterXml%2A>屬性不是非常有效率。 如果效能是優先考量，就使用的節點巡覽方法更有效率<xref:System.Xml.XPath.XPathNavigator>以取得子節點的值。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.InnerXml%2A>屬性來顯示的第一個內容`book`中的項目`contosoBooks.xml`檔案及其子節點在<xref:System.Xml.XPath.XPathNavigator>。  
  
 [!code-cpp[XPathNavigatorProperties#2](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#2)]
 [!code-csharp[XPathNavigatorProperties#2](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#2)]
 [!code-vb[XPathNavigatorProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#2)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">無法設定 <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> 屬性。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAfter">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在目前選取的節點之後建立新的同層級節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter InsertAfter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ InsertAfter();" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : unit -&gt; System.Xml.XmlWriter&#xA;override this.InsertAfter : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.InsertAfter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Xml.XmlWriter" /> 物件，此物件用來在目前選取的節點之後建立新的同層級節點。</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> 物件，用來在目前選取的節點之後建立新的同層級節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法。  
  
-   新的同層級節點不會插入直到<xref:System.Xml.XmlWriter.Close%2A>方法的<xref:System.Xml.XmlWriter>呼叫物件。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之後插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlWriter>所傳回的物件<xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法。  
  
 [!code-cpp[XPathNavigatorMethods#14](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#14)]
 [!code-csharp[XPathNavigatorMethods#14](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#14)]
 [!code-vb[XPathNavigatorMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#14)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不可為在目前節點之後插入的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (string newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(string newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertAfter (newSibling As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertAfter(System::String ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : string -&gt; unit&#xA;override this.InsertAfter : string -&gt; unit" Usage="xPathNavigator.InsertAfter newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newSibling">新的同層級節點之 XML 資料字串。</param>
        <summary>使用指定的 XML 字串，在目前選取的節點之後建立新的同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立新的項目節點，包含 XML 字串參數中的所有 XML 語法。 新的字串`book`節點是`InsertAfter("<book/>")`。 目前節點的文字節點之後插入的文字為"book"的字串`InsertAfter("book")`。 如果 XML 字串包含多個節點，加入所有節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之後插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#15](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#15)]
 [!code-csharp[XPathNavigatorMethods#15](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#15)]
 [!code-vb[XPathNavigatorMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#15)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">XML 字串參數為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不得為插入目前節點後面的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException">XML 字串參數的語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XmlReader newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(class System.Xml.XmlReader newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertAfter (newSibling As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertAfter(System::Xml::XmlReader ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlReader -&gt; unit&#xA;override this.InsertAfter : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.InsertAfter newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newSibling"><see cref="T:System.Xml.XmlReader" /> 物件位於新同層級節點的 XML 資料上。</param>
        <summary>使用指定之 <see cref="T:System.Xml.XmlReader" /> 物件的 XML 內容，在目前選取的節點之後建立新的同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法。  
  
-   如果<xref:System.Xml.XmlReader>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之後插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlReader>指定的物件。 `http://www.contoso.com/books` ，讓新的同層級項目會插入 XML 文件使用相同的命名空間指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#16](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#16)]
 [!code-csharp[XPathNavigatorMethods#16](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#16)]
 [!code-vb[XPathNavigatorMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#16)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Xml.XmlReader" /> 物件處於錯誤狀態或已關閉。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XmlReader" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不可為在目前節點之後插入的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException"><see cref="T:System.Xml.XmlReader" /> 物件參數的 XML 內容語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XPath.XPathNavigator newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(class System.Xml.XPath.XPathNavigator newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertAfter (newSibling As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertAfter(System::Xml::XPath::XPathNavigator ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.InsertAfter : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.InsertAfter newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newSibling">位在要做為新同層級節點加入之節點上的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</param>
        <summary>使用所指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件中的節點，在目前選取的節點之後建立新的同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法。  
  
-   如果<xref:System.Xml.XmlReader>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertAfter%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之後插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案中，使用中所含節點<xref:System.Xml.XPath.XPathNavigator>指定的物件。 `http://www.contoso.com/books` ，讓新的同層級項目會插入 XML 文件使用相同的命名空間指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#17](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#17)]
 [!code-csharp[XPathNavigatorMethods#17](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#17)]
 [!code-vb[XPathNavigatorMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#17)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不可為在目前節點之後插入的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertBefore">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在目前選取的節點之前建立新的同層級節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter InsertBefore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ InsertBefore();" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : unit -&gt; System.Xml.XmlWriter&#xA;override this.InsertBefore : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.InsertBefore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Xml.XmlWriter" /> 物件，此物件用來在目前選取的節點之前，建立新的同層級節點。</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> 物件，用來在目前選取的節點之前，建立新的同層級節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法。  
  
-   新的同層級節點不會插入直到<xref:System.Xml.XmlWriter.Close%2A>方法的<xref:System.Xml.XmlWriter>呼叫物件。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之前插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlWriter>所傳回的物件<xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法。  
  
 [!code-cpp[XPathNavigatorMethods#18](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#18)]
 [!code-csharp[XPathNavigatorMethods#18](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#18)]
 [!code-vb[XPathNavigatorMethods#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#18)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不得為插入目前節點前面的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (string newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(string newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertBefore (newSibling As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertBefore(System::String ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : string -&gt; unit&#xA;override this.InsertBefore : string -&gt; unit" Usage="xPathNavigator.InsertBefore newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newSibling">新的同層級節點之 XML 資料字串。</param>
        <summary>使用指定的 XML 字串，在目前選取的節點之前建立新的同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立新的項目節點，包含 XML 字串參數中的所有 XML 語法。 新的字串`book`節點是`InsertBefore("<book/>")`。 目前節點的文字節點之前插入文字"book"的字串`InsertBefore("book")`。 如果 XML 字串包含多個節點，加入所有節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，會在 `pages` 檔案之第一個 `price` 項目的 `book` 項目子系之前，插入新的 `contosoBooks.xml` 項目。  
  
 [!code-cpp[XPathNavigatorMethods#19](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#19)]
 [!code-csharp[XPathNavigatorMethods#19](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#19)]
 [!code-vb[XPathNavigatorMethods#19](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#19)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">XML 字串參數為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不得為插入目前節點前面的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException">XML 字串參數的語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XmlReader newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(class System.Xml.XmlReader newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertBefore (newSibling As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertBefore(System::Xml::XmlReader ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlReader -&gt; unit&#xA;override this.InsertBefore : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.InsertBefore newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newSibling"><see cref="T:System.Xml.XmlReader" /> 物件位於新同層級節點的 XML 資料上。</param>
        <summary>使用指定之 <see cref="T:System.Xml.XmlReader" /> 物件的 XML 內容，在目前選取的節點之前建立新的同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法。  
  
-   如果<xref:System.Xml.XmlReader>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之前插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlReader>指定的物件。 `http://www.contoso.com/books` ，讓新的同層級項目會插入 XML 文件使用相同的命名空間指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#20](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#20)]
 [!code-csharp[XPathNavigatorMethods#20](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#20)]
 [!code-vb[XPathNavigatorMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#20)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Xml.XmlReader" /> 物件處於錯誤狀態或已關閉。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XmlReader" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不得為插入目前節點前面的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException"><see cref="T:System.Xml.XmlReader" /> 物件參數的 XML 內容語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XPath.XPathNavigator newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(class System.Xml.XPath.XPathNavigator newSibling) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertBefore (newSibling As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertBefore(System::Xml::XPath::XPathNavigator ^ newSibling);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.InsertBefore : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.InsertBefore newSibling" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newSibling">位在要做為新同層級節點加入之節點上的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</param>
        <summary>使用所指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的節點，在目前所選節點之前建立新的同層級節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertBefore%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之前插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案中，使用中所含節點<xref:System.Xml.XPath.XPathNavigator>指定的物件。 `http://www.contoso.com/books` ，讓新的同層級項目會插入 XML 文件使用相同的命名空間指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#21](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#21)]
 [!code-csharp[XPathNavigatorMethods#21](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#21)]
 [!code-vb[XPathNavigatorMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#21)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不得為插入目前節點前面的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertElementAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertElementAfter (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertElementAfter(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertElementAfter (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertElementAfter(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member InsertElementAfter : string * string * string * string -&gt; unit&#xA;override this.InsertElementAfter : string * string * string * string -&gt; unit" Usage="xPathNavigator.InsertElementAfter (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">新的子項目的命名空間前置詞 (如有此項)。</param>
        <param name="localName">新的子項目的本機名稱 (如有此項)。</param>
        <param name="namespaceURI">新的子項目的命名空間 URI (如有此項)。 <see cref="F:System.String.Empty" /> 和 <see langword="null" /> 相等。</param>
        <param name="value">新的子項目的值。 如果已傳遞 <see cref="F:System.String.Empty" /> 或 <see langword="null" />，則會建立空的項目。</param>
        <summary>使用命名空間前置詞、區域名稱以及有指定值的指定命名空間 URI，在目前的節點之後建立新的同層級項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空間前置詞和 URI 值可以使用來取得<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>或<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法。 例如，下列語法中插入同層級項目使用範圍內的命名空間`xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
navigator.InsertElementAfter(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 這會建立新的同層級`<bk:pages/>`項目。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A>方法。  
  
-   如果指定的命名空間前置詞`null`或<xref:System.String.Empty?displayProperty=nameWithType>，則新項目的 URI 的命名空間的前置詞取自目前命名空間範圍內。 如果沒有指派給指定的命名空間 URI 在目前的範圍內沒有命名空間前置詞，會自動產生的命名空間前置詞。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中的新`pages`之後插入項目`price`的第一個子項目`book`中的項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#22](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#22)]
 [!code-csharp[XPathNavigatorMethods#22](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#22)]
 [!code-vb[XPathNavigatorMethods#22](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#22)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不可為在目前節點之後插入的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertElementBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertElementBefore (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertElementBefore(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertElementBefore (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertElementBefore(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member InsertElementBefore : string * string * string * string -&gt; unit&#xA;override this.InsertElementBefore : string * string * string * string -&gt; unit" Usage="xPathNavigator.InsertElementBefore (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">新的子項目的命名空間前置詞 (如有此項)。</param>
        <param name="localName">新的子項目的本機名稱 (如有此項)。</param>
        <param name="namespaceURI">新的子項目的命名空間 URI (如有此項)。 <see cref="F:System.String.Empty" /> 和 <see langword="null" /> 相等。</param>
        <param name="value">新的子項目的值。 如果已傳遞 <see cref="F:System.String.Empty" /> 或 <see langword="null" />，則會建立空的項目。</param>
        <summary>使用命名空間前置詞、區域名稱以及有指定值的指定命名空間 URI，在目前的節點之前建立新的同層級項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空間前置詞和 URI 值可以使用來取得<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>或<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法。 例如，下列語法中插入同層級項目使用範圍內的命名空間`xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
navigator.InsertElementBefore(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 這會建立新的同層級`<bk:pages/>`項目。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A>方法。  
  
-   如果指定的命名空間前置詞`null`或<xref:System.String.Empty?displayProperty=nameWithType>，則新項目的 URI 的命名空間的前置詞取自目前命名空間範圍內。 如果沒有指派給指定的命名空間 URI 在目前的範圍內沒有命名空間前置詞，會自動產生的命名空間前置詞。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，會在 `pages` 檔案之第一個 `price` 項目的 `book` 項目子系之前，插入新的 `contosoBooks.xml` 項目。  
  
 [!code-cpp[XPathNavigatorMethods#23](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#23)]
 [!code-csharp[XPathNavigatorMethods#23](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#23)]
 [!code-vb[XPathNavigatorMethods#23](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#23)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不得為插入目前節點前面的新同層級節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDescendant">
      <MemberSignature Language="C#" Value="public virtual bool IsDescendant (System.Xml.XPath.XPathNavigator nav);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDescendant(class System.Xml.XPath.XPathNavigator nav) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDescendant (nav As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDescendant(System::Xml::XPath::XPathNavigator ^ nav);" />
      <MemberSignature Language="F#" Value="abstract member IsDescendant : System.Xml.XPath.XPathNavigator -&gt; bool&#xA;override this.IsDescendant : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.IsDescendant nav" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">要和此 <see cref="T:System.Xml.XPath.XPathNavigator" /> 比較的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</param>
        <summary>判斷指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 是否為目前 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的子代 (Descendant)。</summary>
        <returns>如果指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 是目前 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的子代，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator>是目前的子代<xref:System.Xml.XPath.XPathNavigator>如果它位於目前的子系節點<xref:System.Xml.XPath.XPathNavigator>。 例如，執行下列的 XML 字串：  
  
 `<item><name>widget</name></item>`  
  
 如果目前<xref:System.Xml.XPath.XPathNavigator>置於`item`節點，而<xref:System.Xml.XPath.XPathNavigator>指定位於`name`節點，<xref:System.Xml.XPath.XPathNavigator.IsDescendant%2A>傳回`true`。  
  
 這個方法永遠傳回`false`在下列情況下：  
  
-   <xref:System.Xml.XPath.XPathNavigator>指定的共用相同的實作，但是指向不同的文件執行個體比目前的巡覽器。  
  
-   <xref:System.Xml.XPath.XPathNavigator>指定具有比目前的巡覽器的不同實作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XPath.XPathNavigator.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得值，指出目前的節點是否為空元素，且沒有結尾元素標記。</summary>
        <value>如果目前的節點為空項目，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您判斷下列不同的項目之間的差異。  
  
|元素|IsEmptyElement 值|  
|-------------|--------------------------|  
|`<item num="123"/>`|`true`|  
|`<item num="123">test</item>`|`false`|  
|`<item num="123"></item>`|`false`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNode">
      <MemberSignature Language="C#" Value="public override sealed bool IsNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.IsNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsNode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNode : bool" Usage="System.Xml.XPath.XPathNavigator.IsNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前的節點是否表示 XPath 節點。</summary>
        <value>一律傳回 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSamePosition">
      <MemberSignature Language="C#" Value="public abstract bool IsSamePosition (System.Xml.XPath.XPathNavigator other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSamePosition(class System.Xml.XPath.XPathNavigator other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSamePosition (other As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSamePosition(System::Xml::XPath::XPathNavigator ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSamePosition : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.IsSamePosition other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="other">要和此 <see cref="T:System.Xml.XPath.XPathNavigator" /> 比較的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</param>
        <summary>在衍生類別中覆寫時，請判斷目前的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 是否和指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 位在相同的位置。</summary>
        <returns>如果兩個 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的位置相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.IsSamePosition%2A>方法會假設<xref:System.Xml.XPath.XPathNavigator>指定共用相同的實作，而且在相同的文件執行個體與目前的點<xref:System.Xml.XPath.XPathNavigator>。  
  
 這個方法永遠傳回`false`在下列情況下：  
  
-   <xref:System.Xml.XPath.XPathNavigator>指定的共用相同的實作，但是指向不同的文件執行個體比目前<xref:System.Xml.XPath.XPathNavigator>。  
  
-   <xref:System.Xml.XPath.XPathNavigator>具有不同於目前的實作<xref:System.Xml.XPath.XPathNavigator>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XPath.XPathNavigator.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得目前節點的 <see cref="P:System.Xml.XPath.XPathNavigator.Name" />，而不含任何命名空間前置詞。</summary>
        <value><see cref="T:System.String" />，包含目前節點的區域名稱；如果目前節點沒有名稱 (例如文字或註解節點)，則為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的本機名稱取決於<xref:System.Xml.XPath.XPathNodeType>目前節點。 比方說，本機名稱`<bk:book>`項目是`book`。  
  
 下表列出所傳回的值<xref:System.Xml.XPath.XPathNavigator.LocalName%2A>屬性，根據<xref:System.Xml.XPath.XPathNodeType>目前節點。  
  
|XPathNodeType|屬性值|  
|-------------------|--------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|項目的本機名稱。|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|屬性的本機名稱。|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|關聯的命名空間 URI 的前置詞。|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|處理指示的目標。|  
|所有其他<xref:System.Xml.XPath.XPathNodeType>節點|<xref:System.String.Empty?displayProperty=nameWithType>.|  
  
   
  
## Examples  
 下列範例會逐一查看節點樹狀目錄中以遞迴方式，並顯示相關資訊<xref:System.Xml.XPath.XPathNodeType.Element>和<xref:System.Xml.XPath.XPathNodeType.Text>節點。  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Name" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Prefix" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string&#xA;override this.LookupNamespace : string -&gt; string" Usage="xPathNavigator.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">您要解析其命名空間 URI 的前置詞。 若要符合預設命名空間，請傳遞 <see cref="F:System.String.Empty" />。</param>
        <summary>取得指定前置詞的命名空間 URI。</summary>
        <returns><see cref="T:System.String" />，包含指派給指定命名空間前置詞的命名空間 URI；如果沒有命名空間 URI 指派給指定的前置詞，則為 <see langword="null" />。 傳回的 <see cref="T:System.String" /> 已原子化。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`prefix`參數，則 URI 會傳回目前指派的預設命名空間。 如果沒有預設命名空間 URI 已明確指派，並<xref:System.String.Empty?displayProperty=nameWithType>指定為`prefix`參數，空白前置詞是不在任何命名空間中的項目相關聯和<xref:System.String.Empty?displayProperty=nameWithType>會傳回。  
  
> [!NOTE]
>  命名空間 URI 對應的前置詞可以變更節點從 XML 文件。 如此一來，值<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法可能無法一致從一個節點的下一步。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法，請參閱 <<c2> <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A> 或<xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string&#xA;override this.LookupPrefix : string -&gt; string" Usage="xPathNavigator.LookupPrefix namespaceURI" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">用來解析前置詞的命名空間 URI。</param>
        <summary>取得為指定命名空間 URI 宣告的前置詞。</summary>
        <returns><see cref="T:System.String" />，包含指派給指定之命名空間 URI 的命名空間前置詞；如果沒有指派前置詞給指定的命名空間 URI，則為 <see cref="F:System.String.Empty" />。 傳回的 <see cref="T:System.String" /> 已原子化。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>方法會傳回第一個符合的命名空間 URI 的前置詞。 多個前置詞，指的相同的命名空間 URI 不會排序以任何特定的方式，讓特定的前置詞可能不會傳回每次當多個指派。  
  
> [!NOTE]
>  命名空間 URI 前置詞對應可以變更節點從 XML 文件。 如此一來，值<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>方法可能無法一致從一個節點的下一步。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷目前的節點是否符合指定的 <see cref="N:System.Xml.XPath" /> 運算式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Matches(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (xpath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Matches : string -&gt; bool&#xA;override this.Matches : string -&gt; bool" Usage="xPathNavigator.Matches xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 運算式。</param>
        <summary>判斷目前的節點是否符合指定的 XPath 運算式。</summary>
        <returns>如果目前的節點符合指定的 XPath 運算式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法的狀態就不會影響<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.Matches%2A>方法，請參閱<xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">無法評估 XPath 運算式。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (expr As XPathExpression) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::Xml::XPath::XPathExpression ^ expr);" />
      <MemberSignature Language="F#" Value="abstract member Matches : System.Xml.XPath.XPathExpression -&gt; bool&#xA;override this.Matches : System.Xml.XPath.XPathExpression -&gt; bool" Usage="xPathNavigator.Matches expr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr"><see cref="T:System.Xml.XPath.XPathExpression" /> 物件，包含已編譯的 XPath 運算式。</param>
        <summary>判斷目前的節點是否符合指定的 <see cref="T:System.Xml.XPath.XPathExpression" />。</summary>
        <returns>如果目前節點符合 <see cref="T:System.Xml.XPath.XPathExpression" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。 這個方法相當於<xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=nameWithType>方法，不同之處在於<xref:System.Xml.XPath.XPathExpression>物件包含已編譯的 XPath 運算式指定，而不是 XPath 運算式<xref:System.String>。  
  
   
  
## Examples  
 下列範例會顯示所有小說的標題。  
  
 [!code-cpp[XPathNavigatorMethods#24](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#24)]
 [!code-csharp[XPathNavigatorMethods#24](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#24)]
 [!code-vb[XPathNavigatorMethods#24](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#24)]  
  
 此範例會使用該檔案，`books.xml`作為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">無法評估 XPath 運算式。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public abstract bool MoveTo (System.Xml.XPath.XPathNavigator other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveTo(class System.Xml.XPath.XPathNavigator other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveTo (other As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveTo(System::Xml::XPath::XPathNavigator ^ other);" />
      <MemberSignature Language="F#" Value="abstract member MoveTo : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.MoveTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="other"><see cref="T:System.Xml.XPath.XPathNavigator" />，位於要移至的節點上。</param>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至與指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 相同的位置上。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移到與指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 相同的位置上，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法一律會傳回`true`如果<xref:System.Xml.XPath.XPathNavigator>指定為<xref:System.Xml.XPath.XPathNavigator>共用相同的實作和指向相同的文件執行個體與目前的<xref:System.Xml.XPath.XPathNavigator>。  
  
 這個方法一律會傳回`false`如果<xref:System.Xml.XPath.XPathNavigator>指定為<xref:System.Xml.XPath.XPathNavigator>具有不同於目前的實作<xref:System.Xml.XPath.XPathNavigator>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string * string -&gt; bool&#xA;override this.MoveToAttribute : string * string -&gt; bool" Usage="xPathNavigator.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">屬性的本機名稱。</param>
        <param name="namespaceURI">此屬性的命名空間 URI；空的命名空間則為 <see langword="null" />。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至具有相符的區域名稱和命名空間 URI 的屬性。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至該屬性，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>不目前所在項目，這個方法會傳回`false`。  
  
 在成功呼叫之後<xref:System.Xml.XPath.XPathNavigator.MoveToAttribute%2A>，則<xref:System.Xml.XPath.XPathNavigator.LocalName%2A>，<xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A>和<xref:System.Xml.XPath.XPathNavigator.Prefix%2A>屬性反映之屬性的值。 當<xref:System.Xml.XPath.XPathNavigator>器位於屬性 (attribute) 的方法<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更巡覽器的位置。 相反地，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>移至下一步 的 屬性 節點。  
  
 一旦位於屬性，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移至擁有者項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToChild">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移到指定的子節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToChild(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToChild (type As XPathNodeType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToChild(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member MoveToChild : System.Xml.XPath.XPathNodeType -&gt; bool&#xA;override this.MoveToChild : System.Xml.XPath.XPathNodeType -&gt; bool" Usage="xPathNavigator.MoveToChild type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">要移向的子節點之 <see cref="T:System.Xml.XPath.XPathNodeType" />。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移到指定 <see cref="T:System.Xml.XPath.XPathNodeType" /> 的子節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至此子節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值<xref:System.Xml.XPath.XPathNavigator.MoveToChild%2A>方法而定<xref:System.Xml.XPath.XPathNodeType>目前的節點，而<xref:System.Xml.XPath.XPathNodeType>移至的子節點。  
  
 下表顯示不同<xref:System.Xml.XPath.XPathNodeType>節點，以及他們可以移至的子節點。  
  
|目前節點的 XPathNodeType|子節點 XPathNodeType|  
|----------------------------------|--------------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XPath.XPathNodeType.Element>、<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>、<xref:System.Xml.XPath.XPathNodeType.Comment> 或 <xref:System.Xml.XPath.XPathNodeType.Text>。|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element>、<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>、<xref:System.Xml.XPath.XPathNodeType.Comment> 或 <xref:System.Xml.XPath.XPathNodeType.Text>。|  
|所有其他<xref:System.Xml.XPath.XPathNodeType>值|無。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToChild(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToChild (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToChild(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToChild : string * string -&gt; bool&#xA;override this.MoveToChild : string * string -&gt; bool" Usage="xPathNavigator.MoveToChild (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">要移向的子節點之區域名稱。</param>
        <param name="namespaceURI">要移向的子節點之命名空間 URI。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移到具有指定區域名稱和命名空間 URI 的子節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至此子節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.MoveToChild%2A>方法，請參閱<xref:System.Xml.XPath.XPathNavigator.AppendChild%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirst">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFirst () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFirst();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirst : unit -&gt; bool&#xA;override this.MoveToFirst : unit -&gt; bool" Usage="xPathNavigator.MoveToFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的第一個同層級節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至目前節點的第一個同層級節點，則為 <see langword="true" />；如果沒有第一個同層級節點，或是 <see cref="T:System.Xml.XPath.XPathNavigator" /> 目前位在屬性節點上，則為 <see langword="false" />。 如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 已經在第一個同層級位置，<see cref="T:System.Xml.XPath.XPathNavigator" /> 將會傳回 <see langword="true" />，且不會移動其位置。  
  
如果因為沒有第一個同層級而使 <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> 傳回 <see langword="false" />，或是 <see cref="T:System.Xml.XPath.XPathNavigator" /> 目前位在屬性上，則 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置不會變更。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstAttribute : unit -&gt; bool" Usage="xPathNavigator.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，移動 <see cref="T:System.Xml.XPath.XPathNavigator" /> 至目前節點的第一個屬性。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至目前節點的第一個屬性，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>不目前所在項目，這個方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>不會變更。  
  
 在成功呼叫之後<xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A>，則<xref:System.Xml.XPath.XPathNavigator.LocalName%2A>，<xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A>和<xref:System.Xml.XPath.XPathNavigator.Prefix%2A>屬性反映之屬性的值。 當<xref:System.Xml.XPath.XPathNavigator>器位於屬性 (attribute) 的方法<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。 相反地，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>移至下一步 的 屬性 節點。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>放置在屬性上，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移至擁有者項目。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A>並<xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>通訊錄的每個顯示的所有屬性的方法`books.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#49](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#49)]
 [!code-csharp[XPathNavigatorMethods#49](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#49)]
 [!code-vb[XPathNavigatorMethods#49](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#49)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstChild">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstChild () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstChild();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstChild : unit -&gt; bool" Usage="xPathNavigator.MoveToFirstChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的第一個子節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至目前節點的第一個子節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNodeType.Root> 並<xref:System.Xml.XPath.XPathNodeType.Element>是唯一的兩個<xref:System.Xml.XPath.XPathNodeType>可以有子系的值。 這個屬性一律傳回`false`針對所有其他<xref:System.Xml.XPath.XPathNodeType>節點型別。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.MoveToFirstChild%2A>方法，請參閱<xref:System.Xml.XPath.XPathNavigator.Clone%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XPath.XPathNodeType" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasChildren" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToFirstNamespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的第一個命名空間節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToFirstNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveToFirstNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveToFirstNamespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveToFirstNamespace();" />
      <MemberSignature Language="F#" Value="member this.MoveToFirstNamespace : unit -&gt; bool" Usage="xPathNavigator.MoveToFirstNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的第一個命名空間節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至第一個命名空間節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator> 類別會以反向的文件順序傳回命名空間節點。 因此，<xref:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace%2A> 實際上會移至目前範圍中的最後一個命名空間節點。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>已移至命名空間節點，<xref:System.Xml.XPath.XPathNavigator.Name%2A>屬性會反映的命名空間名稱。  
  
 當<xref:System.Xml.XPath.XPathNavigator>命名空間節點，方法位於<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。 相反地，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>移至下一個命名空間節點。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>器位於命名空間節點，而呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移回項目節點。  
  
 如需命名空間節點的定義，請參閱 W3C 5.4 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstNamespace(valuetype System.Xml.XPath.XPathNamespaceScope namespaceScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstNamespace (namespaceScope As XPathNamespaceScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstNamespace(System::Xml::XPath::XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstNamespace : System.Xml.XPath.XPathNamespaceScope -&gt; bool" Usage="xPathNavigator.MoveToFirstNamespace namespaceScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="namespaceScope"><see cref="T:System.Xml.XPath.XPathNamespaceScope" /> 值，說明命名空間的範圍。</param>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至符合指定 <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> 的第一個命名空間節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至第一個命名空間節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator> 類別會以反向的文件順序傳回命名空間節點。 因此，<xref:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace%2A> 實際上會移至目前範圍中的最後一個命名空間節點。  
  
 例如，使用下列 XML 片段，如果<xref:System.Xml.XPath.XPathNavigator>置於`data`節點，<xref:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace%2A>以下列方式運作。  
  
-   `MoveToFirstNamespace(XPathNamespaceScope.All)` 移至下列的命名空間節點的其中一個： `xmlns:c='C'`， `xmlns:a='A2'`， `xmlns=''`， `xmlns:b='B'`，或`xmlns:xml='http://www.w3.org/XML/1998/namespace'`。  
  
-   `MoveToFirstNamespace(XPathNamespaceScope.ExcludeXml)` 移至下列的命名空間節點的其中一個： `xmlns:c='C'`， `xmlns:a='A2'`， `xmlns=''`，或`xmlns:b='B'`。  
  
-   `MoveToFirstNamespace(XPathNamespaceScope.Local)` 移至`xmlns:c='C'`節點。  
  
```xml  
<root xmlns='urn:default' xmlns:a='A1' xmlns:b='B'>  
    <item xmlns='' xmlns:a='A2'>  
        <data xmlns:c='C' />  
    </item>  
</root>  
```  
  
 如果<xref:System.Xml.XPath.XPathNavigator>不目前所在項目，這個方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>不會變更。 在後<xref:System.Xml.XPath.XPathNavigator>已移至命名空間節點，<xref:System.Xml.XPath.XPathNavigator.Name%2A>屬性會反映的命名空間名稱。  
  
 當<xref:System.Xml.XPath.XPathNavigator>命名空間節點，方法位於<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。 相反地，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>移至下一個命名空間節點。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>器位於命名空間節點，而呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移回項目節點。  
  
 如需命名空間節點的定義，請參閱 W3C 5.4 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToFollowing">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至文件順序中指定的項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (type As XPathNodeType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : System.Xml.XPath.XPathNodeType -&gt; bool&#xA;override this.MoveToFollowing : System.Xml.XPath.XPathNodeType -&gt; bool" Usage="xPathNavigator.MoveToFollowing type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">項目的 <see cref="T:System.Xml.XPath.XPathNodeType" />。 <see cref="T:System.Xml.XPath.XPathNodeType" /> 不能是 <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> 或 <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />。</param>
        <summary>會根據文件順序，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至下列指定的 <see cref="T:System.Xml.XPath.XPathNodeType" /> 項目。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移動，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法不會移動到屬性或命名空間節點。 如果<xref:System.Xml.XPath.XPathNodeType>參數值是<xref:System.Xml.XPath.XPathNodeType.Attribute>或<xref:System.Xml.XPath.XPathNodeType.Namespace>，則<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>會保持不變。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回`false`，位置<xref:System.Xml.XPath.XPathNavigator>會保持不變。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Xml.XPath.XPathNavigator>移動從根目錄`contosoBooks.xml`檔案，以下列`bookstore`項目。  
  
 [!code-cpp[XPathNavigatorMethods#25](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#25)]
 [!code-csharp[XPathNavigatorMethods#25](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#25)]
 [!code-vb[XPathNavigatorMethods#25](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#25)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : string * string -&gt; bool&#xA;override this.MoveToFollowing : string * string -&gt; bool" Usage="xPathNavigator.MoveToFollowing (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">項目的本機名稱。</param>
        <param name="namespaceURI">項目的命名空間 URI。</param>
        <summary>會根據文件順序，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移到具有指定區域名稱和命名空間 URI 的項目。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移動，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回`false`，位置<xref:System.Xml.XPath.XPathNavigator>會保持不變。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Xml.XPath.XPathNavigator>移動從根目錄`contosoBooks.xml`檔案的第一個`price`項目。  
  
 [!code-cpp[XPathNavigatorMethods#26](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#26)]
 [!code-csharp[XPathNavigatorMethods#26](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#26)]
 [!code-vb[XPathNavigatorMethods#26](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#26)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(valuetype System.Xml.XPath.XPathNodeType type, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (type As XPathNodeType, end As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::Xml::XPath::XPathNodeType type, System::Xml::XPath::XPathNavigator ^ end);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : System.Xml.XPath.XPathNodeType * System.Xml.XPath.XPathNavigator -&gt; bool&#xA;override this.MoveToFollowing : System.Xml.XPath.XPathNodeType * System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.MoveToFollowing (type, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="type">項目的 <see cref="T:System.Xml.XPath.XPathNodeType" />。 <see cref="T:System.Xml.XPath.XPathNodeType" /> 不能是 <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> 或 <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />。</param>
        <param name="end"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件所在的項目界限，目前的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 在搜尋下列項目時，將不會超出這個界限。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至所指定 <see cref="T:System.Xml.XPath.XPathNodeType" /> 的下列項目，依文件順序到指定的界限。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移動，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法不會移動到屬性或命名空間節點。 如果<xref:System.Xml.XPath.XPathNodeType>參數值是<xref:System.Xml.XPath.XPathNodeType.Attribute>或<xref:System.Xml.XPath.XPathNodeType.Namespace>，則<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>會保持不變。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>做為參數傳遞的界限不位於目前的位置之後<xref:System.Xml.XPath.XPathNavigator>則會忽略它。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>做為參數傳遞的界限`null`使用指定的下一個後續節點<xref:System.Xml.XPath.XPathNodeType>位於文件順序。  
  
-   <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法無法用來將移至屬性或命名空間節點。 如果<xref:System.Xml.XPath.XPathNavigator>界限傳遞為參數位於其上方的屬性或命名空間節點，它就相當於<xref:System.Xml.XPath.XPathNavigator>界限參數具有已位於其父項目的第一個子節點。 這可確保屬性或命名空間節點的父項目，<xref:System.Xml.XPath.XPathNavigator>界限參數位於上可以比對這個方法。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回`false`，位置<xref:System.Xml.XPath.XPathNavigator>會保持不變。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Xml.XPath.XPathNavigator>移動從根目錄`contosoBooks.xml`檔案，以下列`price`項目。 複製品<xref:System.Xml.XPath.XPathNavigator>物件由使用<xref:System.Xml.XPath.XPathNavigator.Clone%2A>方法。 複製<xref:System.Xml.XPath.XPathNavigator>，位於`price`項目，將作為界限。 複製的位置中的變更<xref:System.Xml.XPath.XPathNavigator>不會影響原始<xref:System.Xml.XPath.XPathNavigator>。 原始<xref:System.Xml.XPath.XPathNavigator>會移回至根目錄`contosoBooks.xml`檔案中，使用<xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A>方法。 標題和作者的名字和姓氏的名稱則會使用擷取<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法和<xref:System.Xml.XPath.XPathNodeType>的<xref:System.Xml.XPath.XPathNodeType.Text>。 <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回 true，直到`price`到達項目的界限。  
  
 [!code-cpp[XPathNavigatorMethods#27](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#27)]
 [!code-csharp[XPathNavigatorMethods#27](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#27)]
 [!code-vb[XPathNavigatorMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#27)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(string localName, string namespaceURI, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToFollowing (localName As String, namespaceURI As String, end As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToFollowing(System::String ^ localName, System::String ^ namespaceURI, System::Xml::XPath::XPathNavigator ^ end);" />
      <MemberSignature Language="F#" Value="abstract member MoveToFollowing : string * string * System.Xml.XPath.XPathNavigator -&gt; bool&#xA;override this.MoveToFollowing : string * string * System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathNavigator.MoveToFollowing (localName, namespaceURI, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="localName">項目的本機名稱。</param>
        <param name="namespaceURI">項目的命名空間 URI。</param>
        <param name="end"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件所在的項目界限，目前的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 在搜尋下列項目時，將不會超出這個界限。</param>
        <summary>會根據文件順序，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移到指定界限之區域名稱和指定命名空間 URI 的項目。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移動，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>做為參數傳遞的界限不位於目前的位置之後<xref:System.Xml.XPath.XPathNavigator>則會忽略它。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>界限參數是`null`，具有區域名稱和命名空間 URI，指定下列項目位於文件順序。  
  
-   <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法無法用來將移至屬性或命名空間節點。 如果<xref:System.Xml.XPath.XPathNavigator>界限傳遞為參數位於其上方的屬性或命名空間節點，它就相當於<xref:System.Xml.XPath.XPathNavigator>界限參數具有已位於其父項目的第一個子節點。 這可確保屬性或命名空間節點的父項目，<xref:System.Xml.XPath.XPathNavigator>界限參數位於上可以比對這個方法。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法會傳回`false`，位置<xref:System.Xml.XPath.XPathNavigator>會保持不變。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Xml.XPath.XPathNavigator>移動從根目錄`contosoBooks.xml`檔案，以下列`book`項目。 複製品<xref:System.Xml.XPath.XPathNavigator>物件由使用<xref:System.Xml.XPath.XPathNavigator.Clone%2A>方法並從移`book`如下的項目`first-name`項目。 複製<xref:System.Xml.XPath.XPathNavigator>，位於`first-name`項目，將作為界限。 複製的位置中的變更<xref:System.Xml.XPath.XPathNavigator>不會影響原始<xref:System.Xml.XPath.XPathNavigator>。 原始<xref:System.Xml.XPath.XPathNavigator>接著會嘗試將移至下列`price`項目使用<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>與界限的方法做為參數傳遞。 在此動作會失敗，因為下列`price`元素已超出界限。 原始<xref:System.Xml.XPath.XPathNavigator>接著會嘗試將移至下列`title`這是之前使用的相同方法的界限，成功的項目。  
  
 [!code-cpp[XPathNavigatorMethods#28](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#28)]
 [!code-csharp[XPathNavigatorMethods#28](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#28)]
 [!code-vb[XPathNavigatorMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#28)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToId">
      <MemberSignature Language="C#" Value="public abstract bool MoveToId (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToId(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToId (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToId(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member MoveToId : string -&gt; bool" Usage="xPathNavigator.MoveToId id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><see cref="T:System.String" /> 表示要移向之節點的 <c>ID</c> 值。</param>
        <summary>在衍生類別中覆寫時，移至具有類型 <c>ID</c> 的屬性之節點 (此類型的值符合指定的 <see cref="T:System.String" />)。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移動，則為 <see langword="true" />，否則為 <see langword="false" />。 如果 <see langword="false" />，則不會變更巡覽器的位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可以用來識別節點的唯一`ID`提供來源文件明確宣告之型別的屬性`ID`使用 DTD。  
  
 例如，假設下列的 XML 資料中， `<data><x a="a1"/></data>`，使用 DTD 包含下列已載入： `<!ATTLIST x a ID #REQUIRED>`。  
  
 如果<xref:System.Xml.XPath.XPathNavigator>已在 XML 資料中，呼叫的某處放置`MoveToId("a1")`位置<xref:System.Xml.XPath.XPathNavigator>項目節點上`x`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNamespace">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToNamespace (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNamespace : string -&gt; bool&#xA;override this.MoveToNamespace : string -&gt; bool" Usage="xPathNavigator.MoveToNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">命名空間節點的命名空間前置詞。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至具有指定命名空間前置詞的命名空間節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至指定的命名空間，則為 <see langword="true" />；如果找不到相符的命名空間節點，或 <see cref="T:System.Xml.XPath.XPathNavigator" /> 不在項目節點上，則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在後<xref:System.Xml.XPath.XPathNavigator>已移至命名空間節點，<xref:System.Xml.XPath.XPathNavigator.Name%2A>屬性會反映的命名空間名稱。  
  
 當<xref:System.Xml.XPath.XPathNavigator>命名空間節點，方法位於<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。 相反地，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>移至下一個命名空間節點。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>是否位於命名空間節點上，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移回項目節點。  
  
 如需命名空間節點的定義，請參閱 W3C 5.4 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToNext">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的下一個同層級節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNext : unit -&gt; bool" Usage="xPathNavigator.MoveToNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的下一個同層級節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至下一個同層級節點，則為 <see langword="true" />；如果沒有其他的同層級節點，或 <see cref="T:System.Xml.XPath.XPathNavigator" /> 目前位在屬性節點上，則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會逐一查看節點樹狀目錄中以遞迴方式，並顯示項目和文字節點的相關資訊。  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToNext (type As XPathNodeType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToNext(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNext : System.Xml.XPath.XPathNodeType -&gt; bool&#xA;override this.MoveToNext : System.Xml.XPath.XPathNodeType -&gt; bool" Usage="xPathNavigator.MoveToNext type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">要移向的同層級節點之 <see cref="T:System.Xml.XPath.XPathNodeType" />。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點中符合指定 <see cref="T:System.Xml.XPath.XPathNodeType" /> 的下一個同層級節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至下一個同層級節點，則為 <see langword="true" />；如果沒有其他的同層級節點，或 <see cref="T:System.Xml.XPath.XPathNavigator" /> 目前位在屬性節點上，則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>方法而定<xref:System.Xml.XPath.XPathNodeType>目前節點和<xref:System.Xml.XPath.XPathNodeType>移至下一步 的同層級節點。  
  
 下表顯示不同<xref:System.Xml.XPath.XPathNodeType>節點，而且他們可以移至的同層級節點。  
  
|目前節點的 XPathNodeType|同層級節點 XPathNodeType|  
|----------------------------------|----------------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element>、<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>、<xref:System.Xml.XPath.XPathNodeType.Comment> 或 <xref:System.Xml.XPath.XPathNodeType.Text>。|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|<xref:System.Xml.XPath.XPathNodeType.Element>、<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>、<xref:System.Xml.XPath.XPathNodeType.Comment> 或 <xref:System.Xml.XPath.XPathNodeType.Text>。|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|<xref:System.Xml.XPath.XPathNodeType.Element>、<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>、<xref:System.Xml.XPath.XPathNodeType.Comment> 或 <xref:System.Xml.XPath.XPathNodeType.Text>。|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|<xref:System.Xml.XPath.XPathNodeType.Element>、<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>、<xref:System.Xml.XPath.XPathNodeType.Comment> 或 <xref:System.Xml.XPath.XPathNodeType.Text>。|  
|所有其他<xref:System.Xml.XPath.XPathNodeType>值|無。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToNext (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveToNext(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNext : string * string -&gt; bool&#xA;override this.MoveToNext : string * string -&gt; bool" Usage="xPathNavigator.MoveToNext (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">要移向的下一個同層級節點之區域名稱。</param>
        <param name="namespaceURI">要移向的下一個同層級節點之命名空間 URI。</param>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移到具有指定區域名稱和命名空間 URI 的下一個同層級節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至下一個同層級節點，則為 <see langword="true" />；如果沒有其他的同層級節點，或 <see cref="T:System.Xml.XPath.XPathNavigator" /> 目前位在屬性節點上，則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextAttribute : unit -&gt; bool" Usage="xPathNavigator.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至下一個屬性。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至下一個屬性，則為 <see langword="true" />；如果沒有其他屬性，則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>不目前位在屬性上，這個方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>不會變更。  
  
 當<xref:System.Xml.XPath.XPathNavigator>屬性，方法位於<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>方法都不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>放置在屬性上，您可以呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移至擁有者項目。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A>並<xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>通訊錄的每個顯示的所有屬性的方法`books.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#49](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#49)]
 [!code-csharp[XPathNavigatorMethods#49](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#49)]
 [!code-vb[XPathNavigatorMethods#49](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#49)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToNextNamespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至下一個命名空間節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToNextNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveToNextNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveToNextNamespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveToNextNamespace();" />
      <MemberSignature Language="F#" Value="member this.MoveToNextNamespace : unit -&gt; bool" Usage="xPathNavigator.MoveToNextNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至下一個命名空間節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至下一個命名空間節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator> 類別會以反向的文件順序傳回命名空間節點。 因此，<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>實際上會移至目前範圍中的一個以上命名空間節點。  
  
 如果<xref:System.Xml.XPath.XPathNavigator>不目前所在的命名空間節點，這個方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>不會變更。  
  
 當<xref:System.Xml.XPath.XPathNavigator>命名空間節點，方法位於<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>器位於命名空間節點，而呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移回項目節點。  
  
 如需命名空間節點的定義，請參閱 W3C 5.4 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextNamespace(valuetype System.Xml.XPath.XPathNamespaceScope namespaceScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextNamespace (namespaceScope As XPathNamespaceScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextNamespace(System::Xml::XPath::XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextNamespace : System.Xml.XPath.XPathNamespaceScope -&gt; bool" Usage="xPathNavigator.MoveToNextNamespace namespaceScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="namespaceScope"><see cref="T:System.Xml.XPath.XPathNamespaceScope" /> 值，說明命名空間的範圍。</param>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至符合指定 <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> 的下一個命名空間節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至下一個命名空間節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator> 類別會以反向的文件順序傳回命名空間節點。  
  
 如果<xref:System.Xml.XPath.XPathNavigator>不目前所在的命名空間節點，這個方法會傳回`false`和位置<xref:System.Xml.XPath.XPathNavigator>不會變更。  
  
 當<xref:System.Xml.XPath.XPathNavigator>命名空間節點，方法位於<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>， <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>，和<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>皆不適用。 這些方法一律會傳回`false`且不會變更的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
 在後<xref:System.Xml.XPath.XPathNavigator>器位於命名空間節點，而呼叫<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>移回項目節點。  
  
 如需命名空間節點的定義，請參閱 W3C 5.4 節[XML 路徑語言 (XPath)](https://www.w3.org/TR/xpath/all/#data-model)建議。
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MoveToParent">
      <MemberSignature Language="C#" Value="public abstract bool MoveToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToParent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToParent();" />
      <MemberSignature Language="F#" Value="abstract member MoveToParent : unit -&gt; bool" Usage="xPathNavigator.MoveToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的父節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至目前節點的父節點，則為 <see langword="true" />；否則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>方法而定<xref:System.Xml.XPath.XPathNodeType>目前的節點，和<xref:System.Xml.XPath.XPathNodeType>移至父節點。  
  
 下表顯示不同<xref:System.Xml.XPath.XPathNodeType>節點，以及他們可以移至父節點。  
  
|XPathNodeType|父節點|  
|-------------------|-----------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XPath.XPathNodeType.Root> 節點沒有父代。|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|<xref:System.Xml.XPath.XPathNodeType.Element> 或<xref:System.Xml.XPath.XPathNodeType.Root>節點。|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|<xref:System.Xml.XPath.XPathNodeType.Element> 節點。|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|<xref:System.Xml.XPath.XPathNodeType.Element> 節點。|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|<xref:System.Xml.XPath.XPathNodeType.Element> 節點。|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|<xref:System.Xml.XPath.XPathNodeType.Element> 或<xref:System.Xml.XPath.XPathNodeType.Root>節點。|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|<xref:System.Xml.XPath.XPathNodeType.Element> 或<xref:System.Xml.XPath.XPathNodeType.Root>節點。|  
|<xref:System.Xml.XPath.XPathNodeType.Whitespace>|<xref:System.Xml.XPath.XPathNodeType.Element> 或<xref:System.Xml.XPath.XPathNodeType.Root>節點。|  
|<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>|<xref:System.Xml.XPath.XPathNodeType.Element> 或<xref:System.Xml.XPath.XPathNodeType.Root>節點。|  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>方法，請參閱<xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPrevious">
      <MemberSignature Language="C#" Value="public abstract bool MoveToPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToPrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToPrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToPrevious();" />
      <MemberSignature Language="F#" Value="abstract member MoveToPrevious : unit -&gt; bool" Usage="xPathNavigator.MoveToPrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點的上一個同層級節點。</summary>
        <returns>如果 <see cref="T:System.Xml.XPath.XPathNavigator" /> 成功移至上一個同層級節點，則為 <see langword="true" />；如果沒有上一個同層級節點，或 <see cref="T:System.Xml.XPath.XPathNavigator" /> 目前位在屬性節點上，則為 <see langword="false" />。 如果為 <see langword="false" />，<see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置就不會變更。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveToRoot">
      <MemberSignature Language="C#" Value="public virtual void MoveToRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToRoot() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.MoveToRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveToRoot ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveToRoot();" />
      <MemberSignature Language="F#" Value="abstract member MoveToRoot : unit -&gt; unit&#xA;override this.MoveToRoot : unit -&gt; unit" Usage="xPathNavigator.MoveToRoot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Xml.XPath.XPathNavigator" /> 移至目前節點所屬的根節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有節點都屬於只能有一個文件。 因此，這個方法一律會成功。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A>方法，請參閱<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XPath.XPathNavigator.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得目前節點的限定名稱。</summary>
        <value><see cref="T:System.String" /> 包含目前節點的限定 <see cref="P:System.Xml.XPath.XPathNavigator.Name" />；如果目前節點沒有名稱 (例如文字或註解節點)，則為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.Name%2A>傳回取決於<xref:System.Xml.XPath.XPathNodeType>目前節點。 例如，名稱`<bk:book>`項目是`bk:book`。  
  
 下表列出所傳回的值<xref:System.Xml.XPath.XPathNavigator.Name%2A>屬性，根據<xref:System.Xml.XPath.XPathNodeType>目前節點。  
  
|XPathNodeType|屬性值|  
|-------------------|--------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|限定的名稱<xref:System.Xml.XPath.XPathNodeType.Element>。 在下列範例中， `<bk:book>`，項目節點的名稱是`bk:book`。|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|限定的名稱<xref:System.Xml.XPath.XPathNodeType.Attribute>。 在下列範例中， `<book bk:genre='novel'>`，則名稱<xref:System.Xml.XPath.XPathNodeType.Attribute> 節點是`bk:genre`。|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|關聯的命名空間 URI 的前置詞。 在下列命名空間宣告中， `xmlns:bk='urn:samples'`，則<xref:System.Xml.XPath.XPathNavigator.Name%2A>屬性會傳回`bk`。|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|目標<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>。 在下列範例中， `<?xml-stylesheet type='text/xsl' href= 'books.xsl'?>`，則<xref:System.Xml.XPath.XPathNavigator.Name%2A>屬性會傳回`xml-stylesheet`。|  
|所有其他<xref:System.Xml.XPath.XPathNodeType>節點|<xref:System.String.Empty?displayProperty=nameWithType>.|  
  
   
  
## Examples  
 下列範例會逐一查看節點樹狀目錄中以遞迴方式，並顯示相關資訊<xref:System.Xml.XPath.XPathNodeType.Element>和<xref:System.Xml.XPath.XPathNodeType.Text>節點。  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XPath.XPathNavigator.LocalName" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Prefix" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XPath.XPathNavigator.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得目前節點的命名空間 URI。</summary>
        <value><see cref="T:System.String" />，包含目前節點的命名空間 URI；如果目前節點沒有命名空間 URI，則為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回 URI 的命名空間取決於<xref:System.Xml.XPath.XPathNodeType>目前節點。  
  
 <xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A>屬性會傳回`urn:samples`節點`<bk:book xmlns:bk='urn:samples'>`。  
  
 只有<xref:System.Xml.XPath.XPathNodeType.Element>並<xref:System.Xml.XPath.XPathNodeType.Attribute><xref:System.Xml.XPath.XPathNodeType>節點可以有命名空間 URI。  
  
   
  
## Examples  
 下列範例會逐一查看節點樹狀目錄中以遞迴方式，並顯示相關資訊<xref:System.Xml.XPath.XPathNodeType.Element>和<xref:System.Xml.XPath.XPathNodeType.Text>節點。  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XPath.XPathNodeType" />
        <altmember cref="P:System.Xml.XPath.XPathNavigator.Prefix" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XPath.XPathNavigator.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得 <see cref="T:System.Xml.XmlNameTable" /> 的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</summary>
        <value><see cref="T:System.Xml.XmlNameTable" /> 物件，可讓您取得 XML 文件中的原子化版本的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNameTable>儲存的任何區域名稱、 命名空間 URI 和前置詞所使用的原子化的字串<xref:System.Xml.XPath.XPathNavigator>。 這表示當相同<xref:System.Xml.XPath.XPathNavigator.Name%2A>多次 （例如 「 書籍 」），則會傳回相同<xref:System.String>會傳回物件，該<xref:System.Xml.XPath.XPathNavigator.Name%2A>。 這讓您能夠撰寫有效率的程式碼，進行物件比較，對這些字串，而不是昂貴的字串比較。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NavigatorComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer NavigatorComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEqualityComparer NavigatorComparer" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NavigatorComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NavigatorComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEqualityComparer ^ NavigatorComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigatorComparer : System.Collections.IEqualityComparer" Usage="System.Xml.XPath.XPathNavigator.NavigatorComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Collections.IEqualityComparer" />，其用於 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的相等比較。</summary>
        <value><see cref="T:System.Collections.IEqualityComparer" /> 用於 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的相等比較。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.NavigatorComparer%2A>屬性可讓<xref:System.Xml.XPath.XPathNavigator>要比較根據位置，而不是物件參考的物件。 <xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A>並<xref:System.Object.Equals%2A>由此類別實作的方法為基礎的位置<xref:System.Xml.XPath.XPathNavigator>做為參數傳遞的物件。 <xref:System.Object.GetHashCode%2A>由此類別實作的方法使用的節點，例如其區域名稱和命名空間 URI 的屬性來建立節點的雜湊碼。  
  
   
  
## Examples  
 下列範例示範如何將<xref:System.Xml.XPath.XPathNavigator.NavigatorComparer%2A>屬性。  
  
 [!code-cpp[XPathNavigatorProperties#3](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#3)]
 [!code-csharp[XPathNavigatorProperties#3](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#3)]
 [!code-vb[XPathNavigatorProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#3)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XPathNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XPath::XPathNodeType NodeType { System::Xml::XPath::XPathNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XPath.XPathNodeType" Usage="System.Xml.XPath.XPathNavigator.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得目前節點的 <see cref="T:System.Xml.XPath.XPathNodeType" />。</summary>
        <value>代表目前節點的其中一個 <see cref="T:System.Xml.XPath.XPathNodeType" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會逐一查看節點樹狀目錄中以遞迴方式，並顯示相關資訊<xref:System.Xml.XPath.XPathNodeType.Element>和<xref:System.Xml.XPath.XPathNodeType.Text>節點。  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string with get, set" Usage="System.Xml.XPath.XPathNavigator.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定標記，表示目前節點和其子節點的開頭和結尾標記。</summary>
        <value>包含標記的 <see cref="T:System.String" />，表示目前節點和其子節點的開頭和結尾標記。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Xml.XPath.XPathNavigator.InnerXml%2A>和<xref:System.Xml.XPath.XPathNavigator.OuterXml%2A>屬性不是非常有效率。 如果效能是優先考量，就使用的節點巡覽方法更有效率<xref:System.Xml.XPath.XPathNavigator>以取得子節點的值。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.OuterXml%2A>屬性來顯示的第一個內容`book`中的項目`contosoBooks.xml`檔案，它的子節點和其開頭和結尾標記<xref:System.Xml.XPath.XPathNavigator>。  
  
 [!code-cpp[XPathNavigatorProperties#4](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#4)]
 [!code-csharp[XPathNavigatorProperties#4](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#4)]
 [!code-vb[XPathNavigatorProperties#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#4)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XPath.XPathNavigator.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得與目前節點相關聯的命名空間前置詞。</summary>
        <value><see cref="T:System.String" />，包含與目前節點相關聯的命名空間前置詞。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.Prefix%2A>屬性會取得目前節點相關聯的命名空間前置詞。 例如，<xref:System.Xml.XPath.XPathNavigator.Prefix%2A>屬性會傳回`bk`如`<bk:book>`項目。 如果前置詞不存在，或<xref:System.Xml.XPath.XPathNodeType>目前的節點不是<xref:System.Xml.XPath.XPathNodeType.Element>或<xref:System.Xml.XPath.XPathNodeType.Attribute>，則<xref:System.Xml.XPath.XPathNavigator.Prefix%2A>屬性會傳回<xref:System.String.Empty?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列範例會逐一查看節點樹狀目錄中以遞迴方式，並顯示相關資訊<xref:System.Xml.XPath.XPathNodeType.Element>和<xref:System.Xml.XPath.XPathNodeType.Text>節點。  
  
 [!code-cpp[XPathNavigatorMethods#29](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#29)]
 [!code-csharp[XPathNavigatorMethods#29](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#29)]
 [!code-vb[XPathNavigatorMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#29)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PrependChild">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在目前節點的子節點清單開頭建立新的子節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter PrependChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter PrependChild() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild () As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ PrependChild();" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : unit -&gt; System.Xml.XmlWriter&#xA;override this.PrependChild : unit -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.PrependChild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回用以在目前節點的子節點清單開頭建立新子節點的 <see cref="T:System.Xml.XmlWriter" /> 物件。</summary>
        <returns>用以在目前節點的子節點清單開頭建立新子節點的 <see cref="T:System.Xml.XmlWriter" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加在前面的子節點加入至目前節點的子節點清單開頭的新節點。 比方說，當項目有三個子節點，預留的節點會變成第一個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法。  
  
-   新的子節點不會插入直到<xref:System.Xml.XmlWriter.Close%2A>方法的<xref:System.Xml.XmlWriter>呼叫物件。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於項目節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子元素前面的第一個子項目清單的開頭加上`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlWriter>從傳回的物件<xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法。  
  
 [!code-cpp[XPathNavigatorMethods#30](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#30)]
 [!code-csharp[XPathNavigatorMethods#30](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#30)]
 [!code-vb[XPathNavigatorMethods#30](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#30)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不允許在前面加上新的子節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (string newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(string newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChild (newChild As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChild(System::String ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : string -&gt; unit&#xA;override this.PrependChild : string -&gt; unit" Usage="xPathNavigator.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newChild">新的子節點之 XML 資料字串。</param>
        <summary>使用指定的 XML 字串，在目前節點的子節點清單開頭建立新的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加在前面的子節點加入至目前節點的子節點清單開頭的新節點。 比方說，當項目有三個子節點，預留的節點會變成第一個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 若要建立新的項目節點，包含 XML 字串參數中的所有 XML 語法。 新的字串`book`節點是`PrependChild("<book/>")`。 字串為"book"的文字附加至目前節點的文字節點`PrependChild("book")`。 如果 XML 字串包含多個節點，加入所有節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於項目節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子元素前面的第一個子項目清單的開頭加上`book`中的項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#31](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#31)]
 [!code-csharp[XPathNavigatorMethods#31](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#31)]
 [!code-vb[XPathNavigatorMethods#31](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#31)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">XML 字串參數為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不允許在前面加上新的子節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException">XML 字串參數的語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XmlReader newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(class System.Xml.XmlReader newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChild (newChild As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChild(System::Xml::XmlReader ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlReader -&gt; unit&#xA;override this.PrependChild : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newChild">位於新的子節點之 XML 資料上的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
        <summary>使用指定之 <see cref="T:System.Xml.XmlReader" /> 物件的 XML 內容，在目前節點的子節點清單開頭建立新的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加在前面的子節點加入至目前節點的子節點清單開頭的新節點。 比方說，當項目有三個子節點，預留的節點會變成第一個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法。  
  
-   如果<xref:System.Xml.XmlReader>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於項目節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子元素前面的第一個子項目清單的開頭加上`book`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlReader>指定的物件。 `http://www.contoso.com/books` ，讓新的子項目會在前面加上使用相同的命名空間與 XML 文件，指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#32](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#32)]
 [!code-csharp[XPathNavigatorMethods#32](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#32)]
 [!code-vb[XPathNavigatorMethods#32](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#32)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Xml.XmlReader" /> 物件處於錯誤狀態或已關閉。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XmlReader" /> 物件參數為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不允許在前面加上新的子節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException"><see cref="T:System.Xml.XmlReader" /> 物件參數的 XML 內容語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XPath.XPathNavigator newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(class System.Xml.XPath.XPathNavigator newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChild (newChild As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChild(System::Xml::XPath::XPathNavigator ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.PrependChild : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newChild"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，位於要以新的子節點形式加入的節點上。</param>
        <summary>使用指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件中的節點，在目前節點的子節點清單開頭建立新的子節點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加在前面的子節點加入至目前節點的子節點清單開頭的新節點。 比方說，當項目有三個子節點，預留的節點會變成第一個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法。  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>物件位於 XML 節點的序列，會加入序列中的所有節點。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於項目節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChild%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子元素前面的第一個子項目清單的開頭加上`book`中的項目`contosoBooks.xml`檔案中，使用中所含節點<xref:System.Xml.XPath.XPathNavigator>指定的物件。 `http://www.contoso.com/books` ，讓新的子項目會在前面加上使用相同的命名空間與 XML 文件，指定命名空間。  
  
 [!code-cpp[XPathNavigatorMethods#33](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#33)]
 [!code-csharp[XPathNavigatorMethods#33](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#33)]
 [!code-vb[XPathNavigatorMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#33)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不允許在前面加上新的子節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrependChildElement">
      <MemberSignature Language="C#" Value="public virtual void PrependChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChildElement(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependChildElement (prefix As String, localName As String, namespaceURI As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrependChildElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member PrependChildElement : string * string * string * string -&gt; unit&#xA;override this.PrependChildElement : string * string * string * string -&gt; unit" Usage="xPathNavigator.PrependChildElement (prefix, localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">新的子項目的命名空間前置詞 (如有此項)。</param>
        <param name="localName">新的子項目的本機名稱 (如有此項)。</param>
        <param name="namespaceURI">新的子項目的命名空間 URI (如有此項)。 <see cref="F:System.String.Empty" /> 和 <see langword="null" /> 相等。</param>
        <param name="value">新的子項目的值。 如果已傳遞 <see cref="F:System.String.Empty" /> 或 <see langword="null" />，則會建立空的項目。</param>
        <summary>使用命名空間前置詞、區域名稱以及有指定值的指定命名空間 URI，在目前節點的子節點清單開頭建立新的子項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 附加在前面的子節點加入至目前節點的子節點清單開頭的新節點。 比方說，當項目有三個子節點，預留的節點會變成第一個子節點。 如果沒有子節點存在，則會建立新的子節點。  
  
 命名空間前置詞和 URI 值，可由使用<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>或<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>方法。 比方說，下列語法會附加的子元素之前使用的範圍內的命名空間`xmlns:bk="http://www.contoso.com/books"`:  
  
```csharp  
navigator.PrependChildElement(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)  
```  
  
 這會建立新的子系`<bk:pages/>`項目。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.PrependChildElement%2A>方法。  
  
-   如果指定的命名空間前置詞`null`或<xref:System.String.Empty?displayProperty=nameWithType>，則新項目的 URI 的命名空間的前置詞取自目前命名空間範圍內。 如果沒有指派給指定的命名空間 URI 在目前的範圍內沒有命名空間前置詞，會自動產生的命名空間前置詞。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChildElement%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於項目節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.PrependChildElement%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 在下列範例中，新`pages`子元素前面的第一個子項目清單的開頭加上`book`中的項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#34](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#34)]
 [!code-csharp[XPathNavigatorMethods#34](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#34)]
 [!code-vb[XPathNavigatorMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#34)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 所在的目前節點不允許在前面加上新的子節點。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xml.XmlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xml.XmlReader" Usage="xPathNavigator.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Xml.XmlReader" /> 物件，此物件包含目前的節點和它的子節點。</summary>
        <returns><see cref="T:System.Xml.XmlReader" /> 物件，包含目前的節點和它的子節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以目前節點及其子節點建立 <xref:System.Xml.XmlReader> 物件時，會將 <xref:System.Xml.XmlReader> 物件的 <xref:System.Xml.XmlReader.ReadState%2A> 屬性設為 <xref:System.Xml.ReadState.Initial>。 當初次呼叫 <xref:System.Xml.XmlReader> 物件的 <xref:System.Xml.XmlReader.Read%2A> 方法時，<xref:System.Xml.XmlReader> 會移至 <xref:System.Xml.XPath.XPathNavigator> 的目前節點。 新的 <xref:System.Xml.XmlReader> 物件在到達 XML 樹狀目錄的尾端之前，會持續讀取。 此時，<xref:System.Xml.XmlReader.Read%2A> 方法會傳回 `false`，且 <xref:System.Xml.XmlReader> 物件的 <xref:System.Xml.XmlReader.ReadState%2A> 屬性會設為 <xref:System.Xml.ReadState.EndOfFile>。  
  
> [!NOTE]
>  變更的位置<xref:System.Xml.XmlReader>物件並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
 目前節點範圍內的命名空間的命名空間宣告不會插入到 XML 資料流提供給<xref:System.Xml.XmlReader>物件。  
  
> [!NOTE]
>  此行為不同於<xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A>方法。  
  
 這個方法會建立<xref:System.Xml.XmlReader>具有特定的讀取器設定，並會使用這個方法的模組物件具有無法控制這些設定。 比方說，這個方法所傳回的讀取器禁止處理資料型別定義 (Dtd)。 如果讀取器會嘗試讀取使用 DTD 的檔案，則會擲回錯誤， <xref:System.Xml.XmlException>。 例外狀況訊息將會是`Unexpected DTD declaration`。  
  
 您可以實作自訂變更此行為<xref:System.Xml.XmlResolver>會傳回<xref:System.Xml.XmlReader>與需要<xref:System.Xml.XmlReaderSettings>。  
  
   
  
## Examples  
 下列範例說明如何利用<xref:System.Xml.XPath.XPathNavigator.ReadSubtree%2A>方法，在第一天`book`項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#35](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#35)]
 [!code-csharp[XPathNavigatorMethods#35](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#35)]
 [!code-vb[XPathNavigatorMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#35)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 未置於項目節點或根節點。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceRange">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter ReplaceRange (System.Xml.XPath.XPathNavigator lastSiblingToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter ReplaceRange(class System.Xml.XPath.XPathNavigator lastSiblingToReplace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceRange (lastSiblingToReplace As XPathNavigator) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWriter ^ ReplaceRange(System::Xml::XPath::XPathNavigator ^ lastSiblingToReplace);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceRange : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlWriter&#xA;override this.ReplaceRange : System.Xml.XPath.XPathNavigator -&gt; System.Xml.XmlWriter" Usage="xPathNavigator.ReplaceRange lastSiblingToReplace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSiblingToReplace" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="lastSiblingToReplace"><see cref="T:System.Xml.XPath.XPathNavigator" />，位於要取代的範圍內的最後一個同層級節點上。</param>
        <summary>取代從目前節點到指定節點的某範圍之同層級節點。</summary>
        <returns>用來指定取代範圍的 <see cref="T:System.Xml.XmlWriter" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.ReplaceRange%2A>方法會取代從目前節點的同層級節點各種<xref:System.Xml.XPath.XPathNavigator>位於 （含） 到所指定的節點<xref:System.Xml.XPath.XPathNavigator>（含） 的參數。  
  
> [!NOTE]
>  取代範圍不會插入直到<xref:System.Xml.XmlWriter.Close%2A>方法的<xref:System.Xml.XmlWriter>呼叫物件。  
  
   
  
## Examples  
 在下列範例中，第一個和第二個`book`的項目`contosoBooks.xml`檔案會取代為新的空`book`項目使用<xref:System.Xml.XPath.XPathNavigator.ReplaceRange%2A>方法。  
  
 [!code-cpp[XPathNavigatorMethods#53](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#53)]
 [!code-csharp[XPathNavigatorMethods#53](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#53)]
 [!code-vb[XPathNavigatorMethods#53](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#53)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.InvalidOperationException">所指定要取代的最後一個節點不是目前節點的有效同層級節點。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReplaceSelf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將目前的節點取代為指定的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (string newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(string newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSelf (newNode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSelf(System::String ^ newNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSelf : string -&gt; unit&#xA;override this.ReplaceSelf : string -&gt; unit" Usage="xPathNavigator.ReplaceSelf newNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newNode">新的節點之 XML 資料字串。</param>
        <summary>將目前的節點取代為指定字串的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator>置於新的節點上完成<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法並傳回`true`。 <xref:System.Xml.XPath.XPathNavigator>不位於新節點上完成後<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法時，XML 輸入<xref:System.String.Empty>在此情況下<xref:System.Xml.XPath.XPathNavigator>是置於下一個同層級節點或父節點如果沒有下一個同層級節點已取代的節點並<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>傳回`false`。  
  
-   <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   如果 XML 資料字串的語式不會擲回例外狀況，並在此方法的結果就相當於呼叫<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>目前的節點上。  
  
-   如果 XML 字串包含多個節點，加入所有節點和<xref:System.Xml.XPath.XPathNavigator>位於節點的一系列的第一個節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法並不等於<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>方法。  
  
   
  
## Examples  
 在下列範例中`price`中的項目`contosoBooks.xml`檔案會取代新`pages`項目。  
  
 [!code-cpp[XPathNavigatorMethods#36](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#36)]
 [!code-csharp[XPathNavigatorMethods#36](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#36)]
 [!code-vb[XPathNavigatorMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#36)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">XML 字串參數為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不在項目、文字、處理指示或註解節點上。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException">XML 字串參數的語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XmlReader newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(class System.Xml.XmlReader newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSelf (newNode As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSelf(System::Xml::XmlReader ^ newNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSelf : System.Xml.XmlReader -&gt; unit&#xA;override this.ReplaceSelf : System.Xml.XmlReader -&gt; unit" Usage="xPathNavigator.ReplaceSelf newNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="newNode"><see cref="T:System.Xml.XmlReader" /> 物件，位於新節點的 XML 資料上。</param>
        <summary>將目前的節點取代為指定 <see cref="T:System.Xml.XmlReader" /> 物件的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator>置於新的節點上完成<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法並傳回`true`。 <xref:System.Xml.XPath.XPathNavigator>不位於新節點上完成後<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法時，XML 輸入<xref:System.String.Empty>在此情況下<xref:System.Xml.XPath.XPathNavigator>是置於下一個同層級節點或父節點如果沒有下一個同層級節點已取代的節點並<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>傳回`false`。  
  
-   <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   如果 XML 資料字串的語式不會擲回例外狀況，並在此方法的結果就相當於呼叫<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>目前的節點上。  
  
-   如果 XML 字串包含多個節點，加入所有節點和<xref:System.Xml.XPath.XPathNavigator>位於節點的一系列的第一個節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法並不等於<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>方法。  
  
   
  
## Examples  
 在下列範例中`price`中的項目`contosoBooks.xml`檔案會取代新`pages`項目。  
  
 [!code-cpp[XPathNavigatorMethods#37](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#37)]
 [!code-csharp[XPathNavigatorMethods#37](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#37)]
 [!code-vb[XPathNavigatorMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#37)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Xml.XmlReader" /> 物件處於錯誤狀態或已關閉。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XmlReader" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不在項目、文字、處理指示或註解節點上。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException"><see cref="T:System.Xml.XmlReader" /> 物件參數的 XML 內容語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XPath.XPathNavigator newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(class System.Xml.XPath.XPathNavigator newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSelf (newNode As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSelf(System::Xml::XPath::XPathNavigator ^ newNode);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSelf : System.Xml.XPath.XPathNavigator -&gt; unit&#xA;override this.ReplaceSelf : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xPathNavigator.ReplaceSelf newNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="newNode">位於新節點上的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</param>
        <summary>將目前的節點取代為指定 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator>置於新的節點上完成<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法並傳回`true`。 <xref:System.Xml.XPath.XPathNavigator>不位於新節點上完成後<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法時，XML 輸入<xref:System.String.Empty>在此情況下<xref:System.Xml.XPath.XPathNavigator>是置於下一個同層級節點或父節點如果沒有下一個同層級節點已取代的節點並<xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>傳回`false`。  
  
-   <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>定位於項目、 文字、 處理指示或註解節點上。  
  
-   如果 XML 資料字串的語式不會擲回例外狀況，並在此方法的結果就相當於呼叫<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>目前的節點上。  
  
-   如果 XML 字串包含多個節點，加入所有節點和<xref:System.Xml.XPath.XPathNavigator>位於節點的一系列的第一個節點上。  
  
-   <xref:System.Xml.XPath.XPathNavigator.ReplaceSelf%2A>方法並不等於<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>方法。  
  
   
  
## Examples  
 在下列範例中`price`中的項目`contosoBooks.xml`檔案會取代新`pages`項目。  
  
 [!code-cpp[XPathNavigatorMethods#38](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#38)]
 [!code-csharp[XPathNavigatorMethods#38](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#38)]
 [!code-vb[XPathNavigatorMethods#38](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#38)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不在項目、文字、處理指示或註解節點上。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
        <exception cref="T:System.Xml.XmlException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件參數的 XML 內容語式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XPath.XPathNavigator.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得在結構描述驗證之後已指派給目前節點的結構描述資訊。</summary>
        <value><see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 物件，包含目前節點的結構描述資訊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以設定結構描述資訊<xref:System.Xml.XPath.XPathNodeType.Element>， <xref:System.Xml.XPath.XPathNodeType.Attribute>，或在<xref:System.Xml.XPath.XPathNodeType.Text>節點與非`null`<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>。 如果目前節點不是其中一個以上的節點型別，或者<xref:System.Xml.XPath.XPathNavigator>執行個體不會報告結構描述資訊，請<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>屬性會傳回`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的 XPath 運算式來選取節點集。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (xpath As String) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ Select(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member Select : string -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.Select : string -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.Select xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><see cref="T:System.String" /> 代表 XPath 運算式。</param>
        <summary>使用指定的 XPath 運算式來選取節點集。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" /> 指向選定節點集。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選取項目的內容是位置<xref:System.Xml.XPath.XPathNavigator>會呼叫這個方法。 呼叫這個方法中之後,<xref:System.Xml.XPath.XPathNodeIterator>傳回表示所選節點的集合。 使用<xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>方法的<xref:System.Xml.XPath.XPathNodeIterator>來逐一查看選取的節點集。  
  
 下列 C# 程式碼會逐一查看選取的節點集。  
  
```csharp  
XPathNodeIterator iterator = nav.Select("/bookstore/book");  
while (iterator.MoveNext())  
{  
    Console.WriteLine(Iterator.Current.Name);  
}  
```  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法。  
  
-   您仍然可以使用任一<xref:System.Xml.XPath.XPathNavigator>內移動物件的導覽方法<xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>中選取的節點巡覽方法無關<xref:System.Xml.XPath.XPathNodeIterator>。  
  
-   未來呼叫<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法都會傳回新<xref:System.Xml.XPath.XPathNodeIterator>物件，指向選取的節點集符合新<xref:System.Xml.XPath.XPathNavigator.Select%2A>呼叫。 這兩個<xref:System.Xml.XPath.XPathNodeIterator>物件是彼此完全獨立。  
  
-   如果 XPath 運算式需要命名空間解析，請使用<xref:System.Xml.XPath.XPathNavigator.Select%2A>多載，這個方法會接受<xref:System.Xml.XPath.XPathExpression>作為其引數。  
  
-   這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法來選取節點集。  
  
 [!code-cpp[XPathNavigatorMethods#39](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#39)]
 [!code-csharp[XPathNavigatorMethods#39](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#39)]
 [!code-vb[XPathNavigatorMethods#39](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#39)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式包含錯誤或其傳回類型不是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (expr As XPathExpression) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ Select(System::Xml::XPath::XPathExpression ^ expr);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.Select : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.Select expr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">包含已編譯之 XPath 查詢的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XPath.XPathExpression" /> 來選取節點集。</summary>
        <returns>指向選定節點集的 <see cref="T:System.Xml.XPath.XPathNodeIterator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選取項目的內容是位置<xref:System.Xml.XPath.XPathNavigator>呼叫這個方法的時機。 在您呼叫此方法中後,<xref:System.Xml.XPath.XPathNodeIterator>傳回表示所選節點的集合。 使用<xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>上<xref:System.Xml.XPath.XPathNodeIterator>來逐一查看選取的節點集。  
  
 下列 C# 程式碼會逐一查看選取的節點集。  
  
```csharp  
XPathNodeIterator ni = nav.Select(expr);  
while (ni.MoveNext())  
{  
    Console.WriteLine(ni.Current.Name);  
}  
```  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法。  
  
-   您仍然可以使用任一<xref:System.Xml.XPath.XPathNavigator>內移動物件的導覽方法<xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>中選取的節點巡覽方法無關<xref:System.Xml.XPath.XPathNodeIterator>。  
  
-   未來呼叫<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法都會傳回新<xref:System.Xml.XPath.XPathNodeIterator>物件，指向選取的節點集符合新<xref:System.Xml.XPath.XPathNavigator.Select%2A>呼叫。 這兩個<xref:System.Xml.XPath.XPathNodeIterator>物件是彼此完全獨立。  
  
-   如果<xref:System.Xml.XPath.XPathExpression>需要命名空間解析、 前置詞和命名空間 URI 組必須新增至<xref:System.Xml.XmlNamespaceManager>，而<xref:System.Xml.XPath.XPathExpression.SetContext%2A>必須呼叫方法，來指定<xref:System.Xml.XmlNamespaceManager>用於命名空間解析。  
  
 例如，假設文件包含下列的 XML 節點。  
  
```xml  
<bookstore xmlns:bk='urn:samples'>  
    <book bk:ISBN='1-325-0980'>  
        <title>Pride And Prejudice</title>  
    </book>  
</bookstore>  
```  
  
 下列 C# 程式碼在此情況下，選取`bk:ISBN`節點。  
  
```csharp  
XPathExpression expr = nav.Compile("book/@bk:ISBN");  
XmlNamespaceManager mngr = new XmlNamespaceManager(new NameTable());  
mngr.AddNamespace("bk","urn:samples");  
expr.SetContext(mngr);  
XPathNodeIterator ni = nav.Select(expr);  
```  
  
> [!NOTE]
>  如果<xref:System.Xml.XPath.XPathExpression>不包含前置詞，它會假設命名空間 URI 是空的命名空間。 如果 XML 包含預設命名空間，您仍然必須使用<xref:System.Xml.XPath.XPathExpression.SetContext%2A>方法，並提供<xref:System.Xml.XmlNamespaceManager>包含前置詞和命名空間來處理的預設命名空間 URI。  
  
 例如，假設您有下列的 XML。  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
    <book>  
        <title>Pride And Prejudice</title>  
    </book>  
</bookstore>  
```  
  
 在此情況下，下列 C# 程式碼會選取活頁簿的所有節點：  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(nav.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XPathExpression expr;  
expr = nav.Compile("//ab:book");  
expr.SetContext(nsmgr);  
XPathNodeIterator ni = nav.Select(expr);  
```  
  
 這個方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法來選取節點集。  
  
 [!code-cpp[XPathNavigatorMethods#40](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#40)]
 [!code-csharp[XPathNavigatorMethods#40](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#40)]
 [!code-vb[XPathNavigatorMethods#40](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#40)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式包含錯誤或其傳回類型不是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (xpath As String, resolver As IXmlNamespaceResolver) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ Select(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member Select : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.Select : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.Select (xpath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath"><see cref="T:System.String" /> 代表 XPath 運算式。</param>
        <param name="resolver"><see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用於解析命名空間前置詞。</param>
        <summary>使用指定的 XPath 運算式並搭配指定用來解析命名空間前置詞的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，以選取節點集。</summary>
        <returns>指向選定節點集的 <see cref="T:System.Xml.XPath.XPathNodeIterator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例說明選取節點集使用<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法使用<xref:System.Xml.XmlNamespaceManager>指定用來解析 XPath 運算式中的命名空間前置詞的物件。  
  
 [!code-cpp[XPathNavigatorMethods#41](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#41)]
 [!code-csharp[XPathNavigatorMethods#41](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#41)]
 [!code-vb[XPathNavigatorMethods#41](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#41)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">XPath 運算式包含錯誤或其傳回類型不是節點集。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 運算式無效。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectAncestors">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>選取目前節點中，所有符合選取準則的祖系節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectAncestors(valuetype System.Xml.XPath.XPathNodeType type, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectAncestors (type As XPathNodeType, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectAncestors(System::Xml::XPath::XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectAncestors : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectAncestors : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectAncestors (type, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">祖系節點的 <see cref="T:System.Xml.XPath.XPathNodeType" />。</param>
        <param name="matchSelf">若要將內容節點包含在選取項目中，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>選取目前節點中，所有具有相符 <see cref="T:System.Xml.XPath.XPathNodeType" /> 的祖系節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" />，包含選取的節點。 傳回的節點是以相反的文件順序排列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 選取上階節點的範例，請參閱<xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (string name, string namespaceURI, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectAncestors(string name, string namespaceURI, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectAncestors (name As String, namespaceURI As String, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectAncestors(System::String ^ name, System::String ^ namespaceURI, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectAncestors : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectAncestors : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectAncestors (name, namespaceURI, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">祖系節點的區域名稱。</param>
        <param name="namespaceURI">祖系節點的命名空間 URI。</param>
        <param name="matchSelf">若要將內容節點包含在選取項目中，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>選取目前節點中，所有具有指定區域名稱和命名空間 URI 的祖系節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" />，包含選取的節點。 傳回的節點是以相反的文件順序排列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`name`參數，所有屬於指定命名空間 URI 已選取的祖系節點。 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`namespaceURI`參數，請選取指定的區域名稱與屬於任何命名空間的節點的所有上階。 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為已選取本機名稱和命名空間 URI，屬於任何命名空間的所有祖系節點。  
  
 <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例說明選取上階、 子節點及子代節點。  
  
 [!code-cpp[XPathNavigatorMethods#42](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#42)]
 [!code-csharp[XPathNavigatorMethods#42](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#42)]
 [!code-vb[XPathNavigatorMethods#42](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#42)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see langword="null" /> 不能做為參數傳遞。</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectChildren">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>選取目前節點中，所有符合選取準則的子節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectChildren(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectChildren (type As XPathNodeType) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectChildren(System::Xml::XPath::XPathNodeType type);" />
      <MemberSignature Language="F#" Value="abstract member SelectChildren : System.Xml.XPath.XPathNodeType -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectChildren : System.Xml.XPath.XPathNodeType -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectChildren type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">子節點的 <see cref="T:System.Xml.XPath.XPathNodeType" />。</param>
        <summary>選取目前節點中，所有具有相符之 <see cref="T:System.Xml.XPath.XPathNodeType" /> 的子節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" />，包含選取的節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A>方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 選取上階子節點及子代節點的範例，請參閱<xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectChildren(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectChildren (name As String, namespaceURI As String) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectChildren(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member SelectChildren : string * string -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectChildren : string * string -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectChildren (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">子節點的區域名稱。</param>
        <param name="namespaceURI">子節點的命名空間 URI。</param>
        <summary>選取目前節點中，所有具有指定區域名稱和命名空間 URI 的子節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" />，包含選取的節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`name`參數，所有屬於指定命名空間 URI 已選取的子節點。 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`namespaceURI`參數，會選取沒有命名空間屬於指定的區域名稱節點的所有子系。 如果這兩個本機名稱和命名空間 URI 參數<xref:System.String.Empty?displayProperty=nameWithType>，會選取屬於任何命名空間的所有子節點。  
  
 <xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A>方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 選取上階子節點及子代節點的範例，請參閱<xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see langword="null" /> 不能做為參數傳遞。</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectDescendants">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>選取目前節點中，所有符合選取準則的子系節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectDescendants(valuetype System.Xml.XPath.XPathNodeType type, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectDescendants (type As XPathNodeType, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectDescendants(System::Xml::XPath::XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectDescendants : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectDescendants : System.Xml.XPath.XPathNodeType * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectDescendants (type, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">子代節點的 <see cref="T:System.Xml.XPath.XPathNodeType" />。</param>
        <param name="matchSelf">若要將內容節點包含在選取項目中，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>選取目前節點中，所有具有相符 <see cref="T:System.Xml.XPath.XPathNodeType" /> 的子代節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" />，包含選取的節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A>方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 選取上階子節點及子代節點的範例，請參閱<xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (string name, string namespaceURI, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectDescendants(string name, string namespaceURI, bool matchSelf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectDescendants (name As String, namespaceURI As String, matchSelf As Boolean) As XPathNodeIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNodeIterator ^ SelectDescendants(System::String ^ name, System::String ^ namespaceURI, bool matchSelf);" />
      <MemberSignature Language="F#" Value="abstract member SelectDescendants : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator&#xA;override this.SelectDescendants : string * string * bool -&gt; System.Xml.XPath.XPathNodeIterator" Usage="xPathNavigator.SelectDescendants (name, namespaceURI, matchSelf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">子代節點的區域名稱。</param>
        <param name="namespaceURI">子代節點的命名空間 URI。</param>
        <param name="matchSelf">若要將內容節點包含在選取項目中，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>選取目前節點中，所有具有指定區域名稱和命名空間 URI 的子系節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNodeIterator" />，包含選取的節點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`name`參數，所有屬於指定命名空間 URI 已選取的子系節點。 如果<xref:System.String.Empty?displayProperty=nameWithType>指定為`namespaceURI`選取參數，所有子系節點指定的區域名稱與屬於任何命名空間。 如果這兩個本機名稱和命名空間 URI 參數<xref:System.String.Empty?displayProperty=nameWithType>，會選取屬於任何命名空間的所有子系節點。  
  
 子系是在子網域或子系的子系，依此類推;因此選取的節點永遠不會包含屬性或命名空間節點。  
  
 <xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A>方法沒有任何作用狀態的<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 選取上階、 子節點及子代節點的範例，請參閱<xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see langword="null" /> 不能做為參數傳遞。</exception>
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
        <altmember cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>於 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中選取單一節點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectSingleNode (xpath As String) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="abstract member SelectSingleNode : string -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.SelectSingleNode : string -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><see cref="T:System.String" /> 代表 XPath 運算式。</param>
        <summary>使用指定的 XPath 查詢，於 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中選取單一節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含指定 XPath 查詢的第一個相符節點；如果沒有查詢結果，則為 <see langword="null" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A>方法會選取符合 XPath 查詢中的第一個節點<xref:System.Xml.XPath.XPathNavigator>物件。  
  
   
  
## Examples  
 下列範例會選取單一節點從<xref:System.Xml.XPath.XPathNavigator>根據指定的 XPath 查詢。  
  
 [!code-cpp[XPathNavigatorMethods#43](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#43)]
 [!code-csharp[XPathNavigatorMethods#43](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#43)]
 [!code-vb[XPathNavigatorMethods#43](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#43)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在 XPath 查詢中發生錯誤或 XPath 運算式的傳回類型不是節點。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 查詢無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (System.Xml.XPath.XPathExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(class System.Xml.XPath.XPathExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectSingleNode (expression As XPathExpression) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ SelectSingleNode(System::Xml::XPath::XPathExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member SelectSingleNode : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.SelectSingleNode : System.Xml.XPath.XPathExpression -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.SelectSingleNode expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expression">包含已編譯之 XPath 查詢的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XPath.XPathExpression" /> 物件，於 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中選取單一節點。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含指定 XPath 查詢的第一個相符節點；如果沒有查詢結果，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A>方法會選取符合已編譯的 XPath 查詢中所包含的第一個節點<xref:System.Xml.XPath.XPathExpression>物件中<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例會選取單一節點從<xref:System.Xml.XPath.XPathNavigator>根據 XPath 查詢中包含<xref:System.Xml.XPath.XPathExpression>。  
  
 [!code-cpp[XPathNavigatorMethods#44](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#44)]
 [!code-csharp[XPathNavigatorMethods#44](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#44)]
 [!code-vb[XPathNavigatorMethods#44](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#44)]  
  
 範例將 `books.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>   
<bookstore>  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在 XPath 查詢中發生錯誤或 XPath 運算式的傳回類型不是節點。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 查詢無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectSingleNode (xpath As String, resolver As IXmlNamespaceResolver) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ SelectSingleNode(System::String ^ xpath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="abstract member SelectSingleNode : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.SelectSingleNode : string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.XPath.XPathNavigator" Usage="xPathNavigator.SelectSingleNode (xpath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath"><see cref="T:System.String" /> 代表 XPath 運算式。</param>
        <param name="resolver"><see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析 XPath 查詢中的命名空間前置詞。</param>
        <summary>使用指定的 XPath 查詢並搭配指定的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，在 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件中選取單一節點，以解析命名空間前置詞。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含指定 XPath 查詢的第一個相符節點；如果沒有查詢結果，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A>方法會選取符合指定的 XPath 查詢的第一個節點。 <xref:System.Xml.XPath.XPathNavigator.SelectSingleNode%2A>方法會使用<xref:System.Xml.IXmlNamespaceResolver>來解析命名空間前置詞的物件。  
  
> [!NOTE]
>  在 XPath 中的所有命名空間前置字元必須是在查詢中。 如果 XML 文件會使用預設的命名空間，您仍必須將命名空間前置詞<xref:System.Xml.IXmlNamespaceResolver>物件。  
  
   
  
## Examples  
 下列範例會選取單一節點從<xref:System.Xml.XPath.XPathNavigator>物件會根據指定的 XPath 查詢，並且使用<xref:System.Xml.XmlNamespaceManager>指定用來解析 XPath 查詢中的命名空間前置詞的物件。  
  
 [!code-cpp[XPathNavigatorMethods#45](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#45)]
 [!code-csharp[XPathNavigatorMethods#45](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#45)]
 [!code-vb[XPathNavigatorMethods#45](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#45)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在 XPath 查詢中發生錯誤或 XPath 運算式的傳回類型不是節點。</exception>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 查詢無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTypedValue">
      <MemberSignature Language="C#" Value="public virtual void SetTypedValue (object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTypedValue(object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTypedValue (typedValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTypedValue(System::Object ^ typedValue);" />
      <MemberSignature Language="F#" Value="abstract member SetTypedValue : obj -&gt; unit&#xA;override this.SetTypedValue : obj -&gt; unit" Usage="xPathNavigator.SetTypedValue typedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typedValue">節點的新類型值。</param>
        <summary>設定目前節點的類型值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Xml.XmlDocument>物件會建立為的結構描述驗證結果<xref:System.Xml.XmlReader>物件、 指定的值<xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A>方法會針對 XML 文件的 XML 結構描述定義語言 (XSD) 結構描述驗證。 如果指定的值是根據 XML 文件的結構描述無效<xref:System.Xml.Schema.XmlSchemaException>就會擲回。  
  
 <xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A>方法是時才有效<xref:System.Xml.XPath.XPathNavigator>位於項目或屬性節點上。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Xml.XPath.XPathNavigator.SetTypedValue%2A>方法用來更新所有`price`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlNamespaceManager>來解析 XPath 運算式中的命名空間前置詞的物件。  
  
 [!code-cpp[XPathNavigatorMethods#46](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#46)]
 [!code-csharp[XPathNavigatorMethods#46](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#46)]
 [!code-vb[XPathNavigatorMethods#46](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#46)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援指定的物件類型。</exception>
        <exception cref="T:System.ArgumentNullException">指定的值不可為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不在項目或屬性節點上。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit&#xA;override this.SetValue : string -&gt; unit" Usage="xPathNavigator.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">節點的新值。</param>
        <summary>設定目前節點的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   如果<xref:System.Xml.XPath.XPathNavigator>位於具有複雜內容 （子項目），項目節點上呼叫<xref:System.Xml.XPath.XPathNavigator.SetValue%2A>方法會取代為包含新的字串值的文字節點的子項目。  
  
-   <xref:System.Xml.XPath.XPathNavigator.SetValue%2A>方法無法更新根節點或命名空間節點。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Xml.XPath.XPathNavigator.SetValue%2A>方法用來更新所有`price`中的項目`contosoBooks.xml`檔案中，使用<xref:System.Xml.XmlNamespaceManager>來解析 XPath 運算式中的命名空間前置詞的物件。  
  
 [!code-cpp[XPathNavigatorMethods#47](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#47)]
 [!code-csharp[XPathNavigatorMethods#47](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#47)]
 [!code-vb[XPathNavigatorMethods#47](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#47)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">這個值參數是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 位於根節點、命名空間節點，或指定值無效。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Xml.XPath.XPathNavigator" /> 不支援編輯。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的新複本。</summary>
        <returns><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件的新複本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Xml.XPath.XPathNavigator> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。  
  
 如需這個成員的說明，請參閱 <xref:System.Xml.XPath.XPathNavigator.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xPathNavigator.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得目前節點的文字值。</summary>
        <returns><see langword="string" />，包含目前節點的文字值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的內容<xref:System.Xml.XPath.XPathNavigator.ToString%2A>方法取決於<xref:System.Xml.XPath.XPathNodeType>的節點。  
  
|XPathNodeType|屬性值|  
|-------------------|--------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|<xref:System.Xml.XmlNode.InnerText%2A>根節點。|  
|<xref:System.Xml.XPath.XPathNodeType.Element>|項目的 <xref:System.Xml.XmlNode.InnerText%2A>。|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute>|屬性的值。|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|文字節點的內容。|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|除了目標之外的完整內容。|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|註解的內容。|  
|<xref:System.Xml.XPath.XPathNodeType.Whitespace>|標記間的泛空白字元。|  
|<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>|混合內容模型或內的泛空白字元中標記間的泛空白字元`xml:space='preserve'`範圍。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public override object TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : obj" Usage="System.Xml.XPath.XPathNavigator.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的節點，做為最適當的 .NET Framework 類型的 Boxed 物件。</summary>
        <value>目前的節點，做為最適當的 .NET Framework 類型的 Boxed 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性和不可部分完成的簡單型別或簡單的文字內容的項目的<xref:System.Xml.XPath.XPathNavigator.TypedValue%2A>屬性會傳回 boxed<xref:System.Object>最適當的.NET framework <xref:System.Type>。 如果這個項目或屬性的內容是清單型別<xref:System.Xml.XPath.XPathNavigator.TypedValue%2A>屬性傳回的最適當的.NET framework 物件的陣列<xref:System.Type>。  
  
 下表描述<xref:System.Xml.XPath.XPathNavigator.TypedValue%2A>每個傳回的<xref:System.Xml.XPath.XPathNodeType>。  
  
|XPathNodeType|TypedValue 傳回|  
|-------------------|-------------------------|  
|<xref:System.Xml.XPath.XPathNodeType.Root>|傳回<xref:System.String>物件，其中包含所有<xref:System.Xml.XPath.XPathNodeType.Text>節點子系的串連，並以空格分隔文件。 如果文件未包含任何<xref:System.Xml.XPath.XPathNodeType.Text>節點的子系，<xref:System.String.Empty?displayProperty=nameWithType>會傳回。|  
|<xref:System.Xml.XPath.XPathNodeType.Element><br /><br /> （型別或簡單內容）|傳回<xref:System.Object>表示的具類型的值<xref:System.Xml.XPath.XPathNodeType.Element>。<br /><br /> 如果<xref:System.Xml.XPath.XPathNodeType.Element>定義為 XML 結構描述清單資料類型，則節點值公開為物件的陣列。 每個<xref:System.Object>陣列中包含的項目子系的具類型的值。|  
|<xref:System.Xml.XPath.XPathNodeType.Element><br /><br /> （不具型別、 混合或複雜內容）|傳回<xref:System.String>物件，其中包含所有<xref:System.Xml.XPath.XPathNodeType.Text>節點下的階<xref:System.Xml.XPath.XPathNodeType.Element>（包括類型值的字串表示法），串連並以空格分隔。 如果<xref:System.Xml.XPath.XPathNodeType.Element>未包含任何<xref:System.Xml.XPath.XPathNodeType.Text>節點的子系，<xref:System.String.Empty?displayProperty=nameWithType>會傳回。|  
|<xref:System.Xml.XPath.XPathNodeType.Attribute><br /><br /> （型別或簡單內容）|傳回<xref:System.Object>表示的具類型的值<xref:System.Xml.XPath.XPathNodeType.Attribute>。 <xref:System.Object> Box 為.NET Framework<xref:System.Type>值。<br /><br /> 如果<xref:System.Xml.XPath.XPathNodeType.Attribute>定義作為 XML 結構描述清單中的資料類型的節點值公開為物件的陣列。 每個<xref:System.Object>陣列中包含的子系的具類型的值<xref:System.Xml.XPath.XPathNodeType.Attribute>。|  
|<xref:System.Xml.XPath.XPathNodeType.Text>|A<xref:System.String>包含文字的物件。|  
|<xref:System.Xml.XPath.XPathNodeType.Comment>|A<xref:System.String>物件，其中包含內容的註解，不包括周圍`<!--`和`-->`。|  
|<xref:System.Xml.XPath.XPathNodeType.ProcessingInstruction>|A<xref:System.String>物件，其中包含處理指示的內容，但不包括目標和周圍`<?`和`?>`。|  
|<xref:System.Xml.XPath.XPathNodeType.Namespace>|A<xref:System.String>物件，包含命名空間名稱。|  
|<xref:System.Xml.XPath.XPathNodeType.Whitespace>|A<xref:System.String>物件，包含節點的文字。|  
|<xref:System.Xml.XPath.XPathNodeType.SignificantWhitespace>|A<xref:System.String>物件，包含節點的文字。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingObject">
      <MemberSignature Language="C#" Value="public virtual object UnderlyingObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UnderlyingObject" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UnderlyingObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ UnderlyingObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingObject : obj" Usage="System.Xml.XPath.XPathNavigator.UnderlyingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>由 <see cref="T:System.Xml.XPath.XPathNavigator" /> 實作所使用，此實作可以提供存放區上的「虛擬化」XML 檢視，或是提供基礎物件的存取。</summary>
        <value>預設為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A>屬性可由<xref:System.Xml.XPath.XPathNavigator>存放區，以存取基礎物件上的實作提供 「 虛擬化 」 XML 檢視。 例如，如果<xref:System.Xml.XPath.XPathNavigator>物件用來透過 Common Language Runtime (CLR) 物件圖形中提供虛擬的 XML 檢視，您可能想要執行使用 XPath 查詢<xref:System.Xml.XPath.XPathNavigator.Select%2A>方法，然後存取所選的節點的 CLR 物件。 <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A>屬性會公開這些基礎物件。  
  
 在許多情況下，這個值會是`null`，以及所傳回的物件<xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A>屬性一律會是特定的實作。  
  
 <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A>屬性應該保留物件身分識別，並且只應該用來傳回具有一對一的對應關係，其各自的重疊項目物件。 使用者應該一律取得相同的物件至相同的節點使用相同的後續造訪<xref:System.Xml.XPath.XPathNavigator>物件或複製。  
  
> [!NOTE]
>  <xref:System.Xml.XPath.XPathNavigator.UnderlyingObject%2A>的屬性<xref:System.Xml.XPath.XPathNavigator>所建立的物件<xref:System.Xml.XmlDocument>物件會傳回對應<xref:System.Xml.XmlNode>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public override object ValueAs (Type returnType, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ValueAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValueAs (returnType As Type, nsResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ValueAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="override this.ValueAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xPathNavigator.ValueAs (returnType, nsResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType"><see cref="T:System.Type" />，將目前節點的值以這個形式傳回。</param>
        <param name="nsResolver"><see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用於解析命名空間前置詞。</param>
        <summary>取得目前節點的值做為指定的 <see cref="T:System.Type" />，透過的方式是使用指定的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件來解析命名空間前置詞。</summary>
        <returns>如所要求的 <see cref="T:System.Type" /> 的目前節點的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathItem.ValueAs%2A>方法會嘗試將目前節點的值轉換成.NET Framework 型別，指定根據 XPath 2.0 規則目前節點的類型轉換。  
  
 <xref:System.Xml.IXmlNamespaceResolver>物件用來解析命名空間前置詞與類型轉換。 例如，當轉換`xs:QName`至`xs:string`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">目前節點的值的格式對於目標型別不正確。</exception>
        <exception cref="T:System.InvalidCastException">嘗試的轉換無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsBoolean">
      <MemberSignature Language="C#" Value="public override bool ValueAsBoolean { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueAsBoolean" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsBoolean As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ValueAsBoolean { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsBoolean : bool" Usage="System.Xml.XPath.XPathNavigator.ValueAsBoolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的節點值做為 <see cref="T:System.Boolean" />。</summary>
        <value>目前節點的值，為 <see cref="T:System.Boolean" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>具有結構描述或類型資訊 (比方說，從<xref:System.Xml.XmlDocument>初始化 XML 結構描述驗證的物件<xref:System.Xml.XmlReader>)，如果目前節點定義為 XML 結構描述`xs:boolean`類型，<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>屬性傳回目前節點的值，成為 unboxed<xref:System.Boolean>物件。  
  
 不過，如果<xref:System.Xml.XPath.XPathNavigator>沒有任何結構描述或類型資訊，<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>屬性會嘗試將轉換至目前節點的字串值<xref:System.Boolean>值，根據 XPath 2.0 轉換規則，如`xs:boolean`。  
  
   
  
## Examples  
 在下列範例中，在每個元素的值`valueas.xml`會傳回檔案，使用<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>， <xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A>， <xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A>， <xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A>，和<xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A>屬性。  
  
 [!code-cpp[XPathNavigatorProperties#5](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#5)]
 [!code-csharp[XPathNavigatorProperties#5](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#5)]
 [!code-vb[XPathNavigatorProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#5)]  
  
 範例將 `valueas.xml` 檔案做為輸入。  
  
```xml  
<root>  
    <booleanElement>true</booleanElement>  
    <dateTimeElement>2004-04-20T12:00:00</dateTimeElement>  
    <decimalElement>10.00</decimalElement>  
    <numberElement>100000000</numberElement>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">目前節點的字串值不能轉換為 <see cref="T:System.Boolean" />。</exception>
        <exception cref="T:System.InvalidCastException">嘗試轉換成 <see cref="T:System.Boolean" /> 無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ValueAsDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValueAsDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValueAsDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDateTime : DateTime" Usage="System.Xml.XPath.XPathNavigator.ValueAsDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的節點值做為 <see cref="T:System.DateTime" />。</summary>
        <value>目前節點的值，為 <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>具有結構描述或類型資訊 (比方說，從<xref:System.Xml.XmlDocument>初始化 XML 結構描述驗證的物件<xref:System.Xml.XmlReader>)，如果目前節點定義為 XML 結構描述`xs:datetime`類型，<xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A>屬性傳回目前節點的值，成為 unboxed<xref:System.DateTime>物件。  
  
 不過，如果<xref:System.Xml.XPath.XPathNavigator>沒有任何結構描述或類型資訊，<xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A>屬性會嘗試將轉換至目前節點的字串值<xref:System.DateTime>值，根據 XPath 2.0 轉換規則，如`xs:datetime`。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A>屬性，請參閱<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">目前節點的字串值不能轉換為 <see cref="T:System.DateTime" />。</exception>
        <exception cref="T:System.InvalidCastException">嘗試轉換成 <see cref="T:System.DateTime" /> 無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDouble">
      <MemberSignature Language="C#" Value="public override double ValueAsDouble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ValueAsDouble" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsDouble As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double ValueAsDouble { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDouble : double" Usage="System.Xml.XPath.XPathNavigator.ValueAsDouble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的節點值做為 <see cref="T:System.Double" />。</summary>
        <value>目前節點的值，為 <see cref="T:System.Double" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>具有結構描述或類型資訊 (比方說，從<xref:System.Xml.XmlDocument>初始化 XML 結構描述驗證的物件<xref:System.Xml.XmlReader>)，如果目前節點定義為 XML 結構描述`xs:double`類型，<xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A>屬性傳回目前節點的值，成為 unboxed<xref:System.Double>物件。  
  
 不過，如果<xref:System.Xml.XPath.XPathNavigator>沒有任何結構描述或類型資訊，<xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A>屬性會嘗試將轉換至目前節點的字串值<xref:System.Double>值，根據 XPath 2.0 轉換規則，如`xsd:double`。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A>屬性，請參閱<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">目前節點的字串值不能轉換為 <see cref="T:System.Double" />。</exception>
        <exception cref="T:System.InvalidCastException">嘗試轉換成 <see cref="T:System.Double" /> 無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsInt">
      <MemberSignature Language="C#" Value="public override int ValueAsInt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueAsInt" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsInt As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ValueAsInt { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsInt : int" Usage="System.Xml.XPath.XPathNavigator.ValueAsInt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的節點值做為 <see cref="T:System.Int32" />。</summary>
        <value>目前節點的值，做為 <see cref="T:System.Int32" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>具有結構描述或類型資訊 (比方說，從<xref:System.Xml.XmlDocument>初始化 XML 結構描述驗證的物件<xref:System.Xml.XmlReader>)，如果目前節點定義為 XML 結構描述`xs:integer`類型，<xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A>屬性傳回目前節點的值，成為 unboxed<xref:System.Int32>物件。  
  
 不過，如果<xref:System.Xml.XPath.XPathNavigator>沒有任何結構描述或類型資訊，<xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A>屬性會嘗試將轉換至目前節點的字串值<xref:System.Int32>值，根據 XPath 2.0 轉換規則，如`xs:integer`。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A>屬性，請參閱<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">目前節點的字串值不能轉換為 <see cref="T:System.Int32" />。</exception>
        <exception cref="T:System.InvalidCastException">嘗試轉換成 <see cref="T:System.Int32" /> 無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsLong">
      <MemberSignature Language="C#" Value="public override long ValueAsLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ValueAsLong" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsLong As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ValueAsLong { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsLong : int64" Usage="System.Xml.XPath.XPathNavigator.ValueAsLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的節點值做為 <see cref="T:System.Int64" />。</summary>
        <value>目前節點的值，做為 <see cref="T:System.Int64" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.XPath.XPathNavigator>具有結構描述或類型資訊 (比方說，從<xref:System.Xml.XmlDocument>初始化 XML 結構描述驗證的物件<xref:System.Xml.XmlReader>)，如果目前節點定義為 XML 結構描述`xs:integer`類型，<xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A>屬性傳回目前節點的值，成為 unboxed<xref:System.Int64>物件。  
  
 不過，如果<xref:System.Xml.XPath.XPathNavigator>沒有任何結構描述或類型資訊，<xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A>屬性會嘗試將轉換至目前節點的字串值<xref:System.Int64>值，根據 XPath 2.0 轉換規則，如`xs:integer`。  
  
   
  
## Examples  
 如需<xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A>屬性，請參閱<xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">目前節點的字串值不能轉換為 <see cref="T:System.Int64" />。</exception>
        <exception cref="T:System.InvalidCastException">嘗試轉換成 <see cref="T:System.Int64" /> 無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.XPath.XPathNavigator.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前節點的 .NET Framework <see cref="T:System.Type" />。</summary>
        <value>目前節點的 .NET Framework <see cref="T:System.Type" />。 預設值為 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XPath.XPathItem.ValueType%2A>屬性會取得.NET Framework<xref:System.Type>的目前節點的具類型值。  
  
 例如，類型的元素`xs:int`會有<xref:System.Xml.XPath.XPathItem.ValueType%2A>的<xref:System.Int32>預設。 不過，<xref:System.Xml.XPath.XPathItem.ValueType%2A>可能是任何一個可以對應到有效型別`xs:int`這類<xref:System.Int16>或<xref:System.Double>。  
  
 如果節點沒有類型，這相當於型別上的註解節點`xdt:untypedAtomic`。 在此情況下，<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>屬性會傳回節點的字串。 如需詳細資訊，請參閱 < [System.Xml 類別中的型別支援](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。  
  
   
  
## Examples  
 在下列範例中， `contosoBooks.xml` XML 檔案並`contosoBooks.xsd`XML 結構描述定義語言 (XSD) 結構描述用來建立<xref:System.Xml.XPath.XPathNavigator>物件。 具類型的值`price`項目會顯示使用<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>屬性，然後傳回為字串，使用<xref:System.Xml.XPath.XPathNavigator.ValueAs%2A>方法。  
  
 [!code-cpp[XPathNavigatorProperties#6](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorProperties/CPP/xpathnavigatorproperties.cpp#6)]
 [!code-csharp[XPathNavigatorProperties#6](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorProperties/CS/xpathnavigatorproperties.cs#6)]
 [!code-vb[XPathNavigatorProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorProperties/VB/xpathnavigatorproperties.vb#6)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 該範例還採用 `contosoBooks.xsd` 做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.contoso.com/books" xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="bookstore">  
        <xs:complexType>  
            <xs:sequence>  
                <xs:element maxOccurs="unbounded" name="book">  
                    <xs:complexType>  
                        <xs:sequence>  
                            <xs:element name="title" type="xs:string" />  
                            <xs:element name="author">  
                                <xs:complexType>  
                                    <xs:sequence>  
                                        <xs:element minOccurs="0" name="name" type="xs:string" />  
                                        <xs:element minOccurs="0" name="first-name" type="xs:string" />  
                                        <xs:element minOccurs="0" name="last-name" type="xs:string" />  
                                    </xs:sequence>  
                                </xs:complexType>  
                            </xs:element>  
                            <xs:element name="price" type="xs:decimal" />  
                        </xs:sequence>  
                        <xs:attribute name="genre" type="xs:string" use="required" />  
                        <xs:attribute name="publicationdate" type="xs:date" use="required" />  
                        <xs:attribute name="ISBN" type="xs:string" use="required" />  
                    </xs:complexType>  
                </xs:element>  
            </xs:sequence>  
        </xs:complexType>  
    </xs:element>  
</xs:schema>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSubtree">
      <MemberSignature Language="C#" Value="public virtual void WriteSubtree (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSubtree(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteSubtree (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteSubtree(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubtree : System.Xml.XmlWriter -&gt; unit&#xA;override this.WriteSubtree : System.Xml.XmlWriter -&gt; unit" Usage="xPathNavigator.WriteSubtree writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要將資料流導向其中的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
        <summary>將目前節點和其子節點的資料流導向指定的 <see cref="T:System.Xml.XmlWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目前節點範圍內的命名空間的命名空間宣告會插入到 XML 的串流處理到<xref:System.Xml.XmlWriter>指定的物件。  
  
 比方說，如果<xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A>方法會呼叫第一天`book`項目`books.xml`檔案，`http://www.contoso.com/books`命名空間宣告在 XML 文件頂端會出現在串流處理到 XML<xref:System.Xml.XmlWriter>指定物件下列範例所示。  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<book genre="autobiography" publicationdate="1981" ISBN="1-861003-11-0" xmlns="http://www.contoso.com/books">  
    <title>The Autobiography of Benjamin Franklin</title>  
    <author>  
        <first-name>Benjamin</first-name>  
        <last-name>Franklin</last-name>  
    </author>  
    <price>8.99</price>  
</book>  
```  
  
> [!NOTE]
>  <xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A>方法並不會影響的位置<xref:System.Xml.XPath.XPathNavigator>。  
  
   
  
## Examples  
 下列範例說明如何利用<xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A>方法，在第一天`book`項目`contosoBooks.xml`檔案。  
  
 [!code-cpp[XPathNavigatorMethods#48](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#48)]
 [!code-csharp[XPathNavigatorMethods#48](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#48)]
 [!code-vb[XPathNavigatorMethods#48](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#48)]  
  
 範例將 `contosoBooks.xml` 檔案做為輸入。  
  
```xml  
  
<?xml version="1.0" encoding="utf-8" ?>  
<bookstore xmlns="http://www.contoso.com/books">  
    <book genre="autobiography" publicationdate="1981-03-22" ISBN="1-861003-11-0">  
        <title>The Autobiography of Benjamin Franklin</title>  
        <author>  
            <first-name>Benjamin</first-name>  
            <last-name>Franklin</last-name>  
        </author>  
        <price>8.99</price>  
    </book>  
    <book genre="novel" publicationdate="1967-11-17" ISBN="0-201-63361-2">  
        <title>The Confidence Man</title>  
        <author>  
            <first-name>Herman</first-name>  
            <last-name>Melville</last-name>  
        </author>  
        <price>11.99</price>  
    </book>  
    <book genre="philosophy" publicationdate="1991-02-15" ISBN="1-861001-57-6">  
        <title>The Gorgias</title>  
        <author>  
            <name>Plato</name>  
        </author>  
        <price>9.99</price>  
    </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XPath.XPathNavigator.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前節點的 <c>xml:lang</c> 範圍。</summary>
        <value>A <see cref="T:System.String" /> ，其中包含的值<c>xml: lang</c>範圍內，或<see cref="F:System.String.Empty" />如果目前節點沒有<c>xml: lang</c>範圍要傳回的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在範例中，XML 時<xref:System.Xml.XPath.XPathNavigator>置於`name`項目，<xref:System.Xml.XPath.XPathNavigator.XmlLang%2A>屬性會傳回範圍`en-us`指出節點所在的範圍`xml:lang="en-us"`屬性。  
  
```xml  
<root xml:lang="en-us">  
    <name>Name</name>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.XmlSchemaType XmlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaType XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathNavigator.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlType As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaType ^ XmlType { System::Xml::Schema::XmlSchemaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Schema.XmlSchemaType" Usage="System.Xml.XPath.XPathNavigator.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前節點的 <see cref="T:System.Xml.Schema.XmlSchemaType" /> 資訊。</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaType" /> 物件；預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.XPath.XPathNavigator.XmlType%2A>屬性。  
  
-   <xref:System.Xml.XPath.XPathNavigator.XmlType%2A>屬性是`null`，除非<xref:System.Xml.Schema.IXmlSchemaInfo.Validity%2A>屬性<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>屬性<xref:System.Xml.XPath.XPathNavigator>設為<xref:System.Xml.Schema.XmlSchemaValidity.Valid?displayProperty=nameWithType>。  
  
-   如果有效，此節點<xref:System.Xml.XPath.XPathNavigator.XmlType%2A>屬性是相同<xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>屬性<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>屬性<xref:System.Xml.XPath.XPathNavigator>，除非此節點是等位的成員。  
  
-   如果這個節點是等位，成員<xref:System.Xml.XPath.XPathNavigator.XmlType%2A>屬性是相同<xref:System.Xml.Schema.IXmlSchemaInfo.MemberType%2A>屬性<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>屬性的<xref:System.Xml.XPath.XPathNavigator>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>