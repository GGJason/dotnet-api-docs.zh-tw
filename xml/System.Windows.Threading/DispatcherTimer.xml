<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bc5bd6e538ac42e034d4b00fcacb3cd0db5d822" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2cf69-101">整合至 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列中的計時器，會在指定的時間間隔以指定的優先權處理這個佇列。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2cf69-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-102"><xref:System.Windows.Threading.DispatcherTimer>評估頂端的每個<xref:System.Windows.Threading.Dispatcher>迴圈。</span><span class="sxs-lookup"><span data-stu-id="2cf69-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="2cf69-103">要執行的確切時間發生的時間間隔，但保證不會執行的時間間隔之前不保證計時器。</span><span class="sxs-lookup"><span data-stu-id="2cf69-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="2cf69-104">這是因為<xref:System.Windows.Threading.DispatcherTimer>作業會置於<xref:System.Windows.Threading.Dispatcher>像其他作業佇列。</span><span class="sxs-lookup"><span data-stu-id="2cf69-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="2cf69-105">當<xref:System.Windows.Threading.DispatcherTimer>作業便會執行相依於其他工作在佇列和它們的優先權。</span><span class="sxs-lookup"><span data-stu-id="2cf69-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="2cf69-106">如果<xref:System.Timers.Timer?displayProperty=nameWithType>用於[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]應用程式，值得注意的是，<xref:System.Timers.Timer?displayProperty=nameWithType>不同執行緒上執行則[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]執行緒。</span><span class="sxs-lookup"><span data-stu-id="2cf69-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="2cf69-107">若要存取的物件上[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]執行緒，則需要張貼到作業<xref:System.Windows.Threading.Dispatcher>的[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]執行緒使用<xref:System.Windows.Threading.Dispatcher.Invoke%2A>或<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2cf69-108">使用的原因<xref:System.Windows.Threading.DispatcherTimer>反對<xref:System.Timers.Timer?displayProperty=nameWithType>的<xref:System.Windows.Threading.DispatcherTimer>在相同執行緒上執行<xref:System.Windows.Threading.Dispatcher>和<xref:System.Windows.Threading.DispatcherPriority>可以設定上<xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="2cf69-109">A<xref:System.Windows.Threading.DispatcherTimer>會讓物件保持運作每當計時器繫結物件的方法。</span><span class="sxs-lookup"><span data-stu-id="2cf69-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="2cf69-110">下列範例會建立<xref:System.Windows.Threading.DispatcherTimer>，來更新的內容<xref:System.Windows.Controls.Label>呼叫<xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>方法<xref:System.Windows.Input.CommandManager>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="2cf69-111">A<xref:System.Windows.Threading.DispatcherTimer>名為物件`dispatcherTimer`建立。</span><span class="sxs-lookup"><span data-stu-id="2cf69-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2cf69-112">此事件處理常式`dispatcherTimer_Tick`加入至<xref:System.Windows.Threading.DispatcherTimer.Tick>事件`dispatcherTimer`。</span><span class="sxs-lookup"><span data-stu-id="2cf69-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="2cf69-113"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A>設為 1 秒，使用<xref:System.Windows.Duration.TimeSpan%2A>物件，且計時器已啟動。</span><span class="sxs-lookup"><span data-stu-id="2cf69-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="2cf69-114"><xref:System.Windows.Threading.DispatcherTimer.Tick>事件處理常式更新<xref:System.Windows.Controls.Label>會顯示目前的第二，而且它會呼叫<xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>上<xref:System.Windows.Input.CommandManager>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-115">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-116">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-117"><xref:System.Windows.Threading.DispatcherTimer> 在執行<xref:System.Windows.Threading.Dispatcher>在目前執行緒的<xref:System.Windows.Threading.DispatcherPriority.Background>優先順序。</span><span class="sxs-lookup"><span data-stu-id="2cf69-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="2cf69-118">若要指定不同<xref:System.Windows.Threading.Dispatcher>，使用下列建構函式： <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2cf69-119">叫用計時器的優先權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-119">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cf69-120">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體，這個類別會以指定的優先權處理計時器事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-121"><xref:System.Windows.Threading.DispatcherTimer> 在執行<xref:System.Windows.Threading.Dispatcher>目前執行緒。</span><span class="sxs-lookup"><span data-stu-id="2cf69-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="2cf69-122">若要指定不同<xref:System.Windows.Threading.Dispatcher>，使用下列建構函式： <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2cf69-123">叫用計時器的優先權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-123">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <param name="dispatcher">
          <span data-ttu-id="2cf69-124">與計時器關聯的發送器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-124">The dispatcher the timer is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cf69-125">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體，這個類別會以指定的優先權執行於指定之 <see cref="T:System.Windows.Threading.Dispatcher" /> 上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2cf69-126">
            <paramref name="dispatcher" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-126">
              <paramref name="dispatcher" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval">
          <span data-ttu-id="2cf69-127">刻度之間的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-127">The period of time between ticks.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2cf69-128">叫用計時器的優先權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-128">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2cf69-129">發生 <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> 事件時要呼叫的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span>
          </span>
        </param>
        <param name="dispatcher">
          <span data-ttu-id="2cf69-130">與計時器關聯的發送器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-130">The dispatcher the timer is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2cf69-131">初始化這個 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體，這個類別會使用指定的時間間隔、優先權、事件處理常式和 <see cref="T:System.Windows.Threading.Dispatcher" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2cf69-132">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-132">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2cf69-133">
            <paramref name="interval" /> 小於 0 或大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-133">
              <paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-134">取得與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-134">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cf69-135">發送器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-135">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-136"><xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A>屬性在建立決定<xref:System.Windows.Threading.DispatcherTimer>物件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-136">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="2cf69-137"><xref:System.Windows.Threading.Dispatcher>屬性設定為目前<xref:System.Windows.Threading.Dispatcher>建立當時除非不同<xref:System.Windows.Threading.Dispatcher>指定。</span><span class="sxs-lookup"><span data-stu-id="2cf69-137">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-138">取得或設定計時器刻度之間的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-138">Gets or sets the period of time between timer ticks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cf69-139">刻度之間的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-139">The period of time between ticks.</span>
          </span>
          <span data-ttu-id="2cf69-140">預設為 00:00:00。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-140">The default is 00:00:00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-141">要執行的確切時間發生的時間間隔，但保證不會執行的時間間隔之前不保證計時器。</span><span class="sxs-lookup"><span data-stu-id="2cf69-141">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="2cf69-142">這是因為<xref:System.Windows.Threading.DispatcherTimer>作業會置於<xref:System.Windows.Threading.Dispatcher>像其他作業佇列。</span><span class="sxs-lookup"><span data-stu-id="2cf69-142">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="2cf69-143">當<xref:System.Windows.Threading.DispatcherTimer>作業便會執行相依於其他工作在佇列和它們的優先權。</span><span class="sxs-lookup"><span data-stu-id="2cf69-143">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="2cf69-144">下列範例會建立<xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-144">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="2cf69-145">新<xref:System.Windows.Threading.DispatcherTimer>名為物件`dispatcherTimer`建立。</span><span class="sxs-lookup"><span data-stu-id="2cf69-145">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2cf69-146">此事件處理常式`dispatcherTimer_Tick`加入至<xref:System.Windows.Threading.DispatcherTimer.Tick>事件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-146">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="2cf69-147"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A>設為 1 秒，使用<xref:System.TimeSpan>物件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-147">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2cf69-148">
            <paramref name="interval" /> 小於零，或大於 <see cref="F:System.Int32.MaxValue" /> 毫秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-148">
              <paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-149">取得或設定值，這個值表示計時器是否正在執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-149">Gets or sets a value that indicates whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cf69-150">如果已啟用計時器，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-150">
              <see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2cf69-151">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 必須設定為`true`如<xref:System.Windows.Threading.DispatcherTimer.Tick>會引發事件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="2cf69-153">呼叫<xref:System.Windows.Threading.DispatcherTimer.Start%2A>設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="2cf69-153">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="2cf69-154">呼叫<xref:System.Windows.Threading.DispatcherTimer.Stop%2A>設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`false`。</span><span class="sxs-lookup"><span data-stu-id="2cf69-154">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="2cf69-155">下列範例會建立<xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-155">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="2cf69-156">新<xref:System.Windows.Threading.DispatcherTimer>名為物件`dispatcherTimer`建立。</span><span class="sxs-lookup"><span data-stu-id="2cf69-156">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2cf69-157">此事件處理常式`dispatcherTimer_Tick`加入至<xref:System.Windows.Threading.DispatcherTimer.Tick>事件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-157">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="2cf69-158"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A>設為 1 秒，使用<xref:System.TimeSpan>物件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-158">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-159">啟動 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-159">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-160">設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`false`計時器啟動時停止計時器。</span><span class="sxs-lookup"><span data-stu-id="2cf69-160">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="2cf69-161">設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`true`計時器已停止時啟動計時器。</span><span class="sxs-lookup"><span data-stu-id="2cf69-161">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="2cf69-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> 設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="2cf69-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="2cf69-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> 重設的計時器<xref:System.Windows.Threading.DispatcherTimer.Interval%2A>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cf69-164">下列範例會建立<xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-164">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="2cf69-165">新<xref:System.Windows.Threading.DispatcherTimer>名為物件`dispatcherTimer`建立。</span><span class="sxs-lookup"><span data-stu-id="2cf69-165">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="2cf69-166">此事件處理常式`dispatcherTimer_Tick`加入至<xref:System.Windows.Threading.DispatcherTimer.Tick>事件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-166">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="2cf69-167"><xref:System.Windows.Threading.DispatcherTimer.Interval%2A>設為 1 秒，使用<xref:System.Windows.Duration.TimeSpan%2A>物件。</span><span class="sxs-lookup"><span data-stu-id="2cf69-167">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-168">停止 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-168">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cf69-169">設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`false`計時器啟動時停止計時器。</span><span class="sxs-lookup"><span data-stu-id="2cf69-169">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="2cf69-170">設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`true`計時器已停止時啟動計時器。</span><span class="sxs-lookup"><span data-stu-id="2cf69-170">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="2cf69-171">呼叫<xref:System.Windows.Threading.DispatcherTimer.Stop%2A>設定<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>至`false`。</span><span class="sxs-lookup"><span data-stu-id="2cf69-171">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-172">取得或設定使用者定義的資料物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-172">Gets or sets a user-defined data object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2cf69-173">使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-173">The user-defined data.</span>
          </span>
          <span data-ttu-id="2cf69-174">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-174">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2cf69-175">發生於計時器間隔已耗用時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2cf69-175">Occurs when the timer interval has elapsed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2cf69-176">下列範例會建立<xref:System.Windows.Threading.DispatcherTimer.Tick>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="2cf69-176">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="2cf69-177">事件處理常式更新<xref:System.Windows.Controls.Label>會顯示目前的第二，而且它會呼叫<xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>上<xref:System.Windows.Input.CommandManager>。</span><span class="sxs-lookup"><span data-stu-id="2cf69-177">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>