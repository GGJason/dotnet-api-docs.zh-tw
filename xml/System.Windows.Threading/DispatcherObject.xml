<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a940ab9e8bca976429db39edb2ab477f770dde6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c78e-101">表示與 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c78e-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c78e-102">只有的執行緒，<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>建立在可以存取<xref:System.Windows.Threading.DispatcherObject>直接。</span><span class="sxs-lookup"><span data-stu-id="0c78e-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="0c78e-103">若要存取<xref:System.Windows.Threading.DispatcherObject>從執行緒以外的執行緒<xref:System.Windows.Threading.DispatcherObject>所建立，請呼叫<xref:System.Windows.Threading.Dispatcher.Invoke%2A>或<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>上<xref:System.Windows.Threading.Dispatcher><xref:System.Windows.Threading.DispatcherObject>相關聯。</span><span class="sxs-lookup"><span data-stu-id="0c78e-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="0c78e-104">子類別<xref:System.Windows.Threading.DispatcherObject>，需要強制執行的執行緒安全性可以這樣做藉由呼叫<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>上所有公用方法。</span><span class="sxs-lookup"><span data-stu-id="0c78e-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="0c78e-105">這可以確保呼叫執行緒會在執行緒的<xref:System.Windows.Threading.DispatcherObject>上建立。</span><span class="sxs-lookup"><span data-stu-id="0c78e-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="0c78e-106">A<xref:System.Windows.Threading.DispatcherObject>無法獨立執行個體化; 也就是說，所有建構函式會受到保護。</span><span class="sxs-lookup"><span data-stu-id="0c78e-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="0c78e-107">衍生自<xref:System.Windows.Threading.DispatcherObject>具有執行緒相似性。</span><span class="sxs-lookup"><span data-stu-id="0c78e-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="0c78e-108">衍生自<xref:System.Windows.Freezable>是無限制執行緒時就會凍結。</span><span class="sxs-lookup"><span data-stu-id="0c78e-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="0c78e-109">如需詳細資訊，請參閱 [Freezable 物件概觀](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0c78e-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0c78e-110">任何 public<see langword="static" />此類型的成員是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c78e-110">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="0c78e-111">不保證任何執行個體成員是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c78e-111">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="0c78e-112">這個物件可以存取只會從其建立所在的執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c78e-112">This object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="0c78e-113">嘗試存取來自其他執行緒將會擲回<see cref="T:System.InvalidOperationException" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c78e-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="0c78e-114">
        <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> 或<see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />提供支援封送處理至正確的執行緒工作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c78e-114">
          <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshalling work to the correct thread.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c78e-115">初始化 <see cref="T:System.Windows.Threading.DispatcherObject" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c78e-116">判斷呼叫的執行是否可以存取這個 <see cref="T:System.Windows.Threading.DispatcherObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c78e-117">如果呼叫的執行緒可以存取這個物件則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-117">
              <see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c78e-118">只有執行緒<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>建立在可以存取<xref:System.Windows.Threading.DispatcherObject>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="0c78e-119">任何執行緒可以檢查以查看是否有存取這個<xref:System.Windows.Threading.DispatcherObject>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="0c78e-120">之間的差異<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>和<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>在於<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>傳回布林值，指定呼叫執行緒是否有存取這個<xref:System.Windows.Threading.DispatcherObject>和<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>擲回例外狀況，如果呼叫的執行緒沒有存取權這<xref:System.Windows.Threading.DispatcherObject>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="0c78e-121">呼叫此方法等於呼叫<xref:System.Windows.Threading.Dispatcher.CheckAccess%2A>上相關聯<xref:System.Windows.Threading.Dispatcher>物件。</span><span class="sxs-lookup"><span data-stu-id="0c78e-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c78e-122">下列範例會使用<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>判斷執行緒是否有存取權的執行緒，<xref:System.Windows.Controls.Button>上建立。</span><span class="sxs-lookup"><span data-stu-id="0c78e-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="0c78e-123"><xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>方法<xref:System.Windows.Controls.Button>呼叫以驗證的存取權的執行緒。</span><span class="sxs-lookup"><span data-stu-id="0c78e-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="0c78e-124">如果呼叫執行緒具有存取權，<xref:System.Windows.Controls.Button>藉由只存取的成員會更新<xref:System.Windows.Controls.Button>; 否則，請接受委派<xref:System.Windows.Controls.Button>做為引數，就會發佈到<xref:System.Windows.Threading.Dispatcher>的<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c78e-125">取得與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的 <see cref="T:System.Windows.Threading.DispatcherObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c78e-126">發送器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-126">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c78e-127">只有的執行緒，<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>建立在可以存取<xref:System.Windows.Threading.DispatcherObject>直接。</span><span class="sxs-lookup"><span data-stu-id="0c78e-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="0c78e-128">若要存取<xref:System.Windows.Threading.DispatcherObject>從執行緒以外的執行緒<xref:System.Windows.Threading.DispatcherObject>所建立，請呼叫<xref:System.Windows.Threading.Dispatcher.Invoke%2A>和<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>上<xref:System.Windows.Threading.Dispatcher><xref:System.Windows.Threading.DispatcherObject>相關聯。</span><span class="sxs-lookup"><span data-stu-id="0c78e-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c78e-129">請強制執行可以存取這個 <see cref="T:System.Windows.Threading.DispatcherObject" /> 的呼叫執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c78e-130">只有執行緒<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>建立在可以存取<xref:System.Windows.Threading.DispatcherObject>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="0c78e-131">任何執行緒可以檢查以查看是否有存取這個<xref:System.Windows.Threading.DispatcherObject>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="0c78e-132">之間的差異<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>和<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>在於<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>傳回布林值，指定呼叫執行緒是否有存取這個<xref:System.Windows.Threading.DispatcherObject>和<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>擲回例外狀況，如果呼叫的執行緒沒有存取權這<xref:System.Windows.Threading.DispatcherObject>。</span><span class="sxs-lookup"><span data-stu-id="0c78e-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c78e-133">下列範例會使用<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>判斷執行緒是否有存取權的執行緒，<xref:System.Windows.Controls.Button>上建立。</span><span class="sxs-lookup"><span data-stu-id="0c78e-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="0c78e-134">如果呼叫的執行緒沒有存取權，<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="0c78e-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c78e-135">呼叫執行緒無法存取這個 <see cref="T:System.Windows.Threading.DispatcherObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c78e-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>