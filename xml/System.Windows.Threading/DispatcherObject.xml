<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DispatcherObject.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a940ab9e8bca976429db39edb2ab477f770dde6b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a940ab9e8bca976429db39edb2ab477f770dde6b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Represents an object that is associated with a <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</source>
          <target state="translated">表示與 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 關聯的物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Only the thread that the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> directly.</source>
          <target state="translated">只有的執行緒，<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph>建立在可以存取<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>直接。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>To access a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> from a thread other than the thread the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on, call <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> on the <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> is associated with.</source>
          <target state="translated">若要存取<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>從執行緒以外的執行緒<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>所建立，請呼叫<ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>上<ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph><ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>相關聯。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> that need to enforce thread safety can do so by calling <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> on all public methods.</source>
          <target state="translated">子類別<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>，需要強制執行的執行緒安全性可以這樣做藉由呼叫<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph>上所有公用方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>This guarantees the calling thread is the thread that the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on.</source>
          <target state="translated">這可以確保呼叫執行緒會在執行緒的<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>上建立。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> cannot be independently instantiated; that is, all constructors are protected.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>無法獨立執行個體化; 也就是說，所有建構函式會受到保護。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Objects that derive from <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> have thread affinity.</source>
          <target state="translated">衍生自<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>具有執行緒相似性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Objects that derive from <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> are free-threaded when they are frozen.</source>
          <target state="translated">衍生自<ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph>是無限制執行緒時就會凍結。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>For more information, see the <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>Freezable 物件概觀<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Any public <ph id="ph1">&lt;see langword="static" /&gt;</ph> members of this type are thread safe.</source>
          <target state="translated">任何 public<ph id="ph1">&lt;see langword="static" /&gt;</ph>此類型的成員是安全執行緒。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">不保證任何執行個體成員是安全執行緒。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>This object can be accessed only from the thread on which it was created.</source>
          <target state="translated">這個物件可以存取只會從其建立所在的執行緒。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Attempts to access it from other threads will throw an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">嘗試存取來自其他執行緒將會擲回<ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> provide support for marshalling work to the correct thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> 或<ph id="ph2">&lt;see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph>提供支援封送處理至正確的執行緒工作。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Determines whether the calling thread has access to this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>.</source>
          <target state="translated">判斷呼叫的執行是否可以存取這個 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the calling thread has access to this object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果呼叫的執行緒可以存取這個物件則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Only the thread the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">只有執行緒<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph>建立在可以存取<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Any thread can check to see whether it has access to this <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">任何執行緒可以檢查以查看是否有存取這個<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>The difference between <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> is that <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> returns a Boolean that specifies whether the calling thread has access to this <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> throws an exception if the calling thread does not have access to the this <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">之間的差異<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph>在於<ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph>傳回布林值，指定呼叫執行緒是否有存取這個<ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph>擲回例外狀況，如果呼叫的執行緒沒有存取權這<ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Calling this method is identical to calling <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</ph> on the associated <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> object.</source>
          <target state="translated">呼叫此方法等於呼叫<ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</ph>上相關聯<ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> to determine whether a thread has access to the thread that a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> was created on.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph>判斷執行緒是否有存取權的執行緒，<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>上建立。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> is called to verify access to the thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>呼叫以驗證的存取權的執行緒。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>If the calling thread has access, the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is updated by just accessing the members of the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>; otherwise, a delegate, which accepts a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> as an argument, is posted onto the <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">如果呼叫執行緒具有存取權，<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>藉由只存取的成員會更新<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>; 否則，請接受委派<ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph>做為引數，就會發佈到<ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>的<ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> this <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph> is associated with.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 關聯的 <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>The dispatcher.</source>
          <target state="translated">發送器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>Only the thread that the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> directly.</source>
          <target state="translated">只有的執行緒，<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph>建立在可以存取<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>直接。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>To access a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> from a thread other than the thread the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on, call <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> on the <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> is associated with.</source>
          <target state="translated">若要存取<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>從執行緒以外的執行緒<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>所建立，請呼叫<ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>上<ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph><ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>相關聯。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>Enforces that the calling thread has access to this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>.</source>
          <target state="translated">請強制執行可以存取這個 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph> 的呼叫執行緒。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>Only the thread the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">只有執行緒<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph>建立在可以存取<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>Any thread can check to see whether it has access to this <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">任何執行緒可以檢查以查看是否有存取這個<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>The difference between <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> is that <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> returns a Boolean that specifies whether the calling thread has access to this <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> throws an exception if the calling thread does not have access to the this <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">之間的差異<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph>在於<ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph>傳回布林值，指定呼叫執行緒是否有存取這個<ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph>擲回例外狀況，如果呼叫的執行緒沒有存取權這<ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> to determine whether a thread has access to the thread that a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> was created on.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph>判斷執行緒是否有存取權的執行緒，<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>上建立。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>If the calling thread does not have access, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">如果呼叫的執行緒沒有存取權，<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>the calling thread does not have access to this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>.</source>
          <target state="translated">呼叫執行緒無法存取這個 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>