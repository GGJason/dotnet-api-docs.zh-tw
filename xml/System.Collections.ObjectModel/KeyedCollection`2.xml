<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea360e85ebfc5e60951e9ca94053f3de29a9871a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701207" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="aa986-101">集合中的索引鍵類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa986-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="aa986-102">集合中項目的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa986-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="aa986-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa986-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-104"><xref:System.Collections.ObjectModel.KeyedCollection%602>類別會提供這兩種 o （1） 的索引擷取和接近 o （1） 的擷取做為索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="aa986-105">它是抽象型別，還是更精確地無限一組抽象型別，因為每個建構的泛型類型是抽象的基底類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="aa986-106">若要使用<xref:System.Collections.ObjectModel.KeyedCollection%602>，衍生自適當的建構類型的集合類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="aa986-107"><xref:System.Collections.ObjectModel.KeyedCollection%602>類別是根據集合之間的混合<xref:System.Collections.Generic.IList%601>泛型介面和集合，可根據<xref:System.Collections.Generic.IDictionary%602>泛型介面。</span><span class="sxs-lookup"><span data-stu-id="aa986-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="aa986-108">讓基礎的集合<xref:System.Collections.Generic.IList%601>泛型介面，<xref:System.Collections.ObjectModel.KeyedCollection%602>是項目的索引的清單。</span><span class="sxs-lookup"><span data-stu-id="aa986-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="aa986-109">讓基礎的集合<xref:System.Collections.Generic.IDictionary%602>泛型介面，<xref:System.Collections.ObjectModel.KeyedCollection%602>有與每個項目相關聯的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="aa986-110">不同於字典的項目<xref:System.Collections.ObjectModel.KeyedCollection%602>不是索引鍵/值組; 相反地，整個項目是值，而索引鍵內嵌於值。</span><span class="sxs-lookup"><span data-stu-id="aa986-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="aa986-111">例如，集合的項目衍生自`KeyedCollection\<String,String>`(`KeyedCollection(Of String, String)` Visual Basic 中) 可能是 「 John Doe Jr.。 」</span><span class="sxs-lookup"><span data-stu-id="aa986-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="aa986-112">其中的值是 「 John Doe Jr.。 」</span><span class="sxs-lookup"><span data-stu-id="aa986-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="aa986-113">機碼為"Doe";包含整數索引鍵的員工記錄的集合無法衍生自或`KeyedCollection\<int,Employee>`。</span><span class="sxs-lookup"><span data-stu-id="aa986-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="aa986-114">抽象<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法會擷取項目中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="aa986-115">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含您可使用取得的查閱字典<xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="aa986-116">當項目加入至<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是擷取一次，並儲存在進行快速搜尋的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="aa986-117">藉由指定字典建立臨界值，當您建立覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-118">第一次的項目數超過該臨界值時，會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="aa986-119">如果您指定為-1 做為臨界值時，永遠不會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-120">使用內部的查閱字典時，它包含在集合中的所有項目的參考如果`TItem`是參考類型，或複製的集合中的所有項目，如果`TItem`是實值類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="aa986-121">因此，使用的查閱字典可能無法適當如果`TItem`是實值類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="aa986-122">您可以使用來存取依其索引或索引鍵的項目<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="aa986-123">您可以新增項目沒有索引鍵，但後續可以僅依索引存取這些項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-124">本節包含兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="aa986-124">This section contains two code examples.</span></span> <span data-ttu-id="aa986-125">第一個範例顯示的最小的程式碼，才能衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，並示範許多繼承的方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="aa986-126">第二個範例示範如何覆寫的受保護的方法<xref:System.Collections.ObjectModel.KeyedCollection%602>以提供自訂行為。</span><span class="sxs-lookup"><span data-stu-id="aa986-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="aa986-127">**範例 1**</span><span class="sxs-lookup"><span data-stu-id="aa986-127">**Example 1**</span></span>  
  
 <span data-ttu-id="aa986-128">此程式碼範例顯示的最小的程式碼衍生的集合類別<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法，並提供公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="aa986-129">程式碼範例也示範許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="aa986-130">`SimpleOrder`類別是非常簡單的申請清單，其中包含`OrderItem`物件，每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="aa986-131">索引鍵`OrderItem`不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-132">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="aa986-133">**範例 2**</span><span class="sxs-lookup"><span data-stu-id="aa986-133">**Example 2**</span></span>  
  
 <span data-ttu-id="aa986-134">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，以及<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="aa986-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="aa986-135">在此範例中提供的自訂行為是通知事件，名為`Changed`，這在每個覆寫方法結束時引發。</span><span class="sxs-lookup"><span data-stu-id="aa986-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="aa986-136">此程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>和代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="aa986-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="aa986-137">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="aa986-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="aa986-138">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別來包含事件資訊，以及列舉型別來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="aa986-139">在程式碼範例示範自訂行為，藉由在呼叫的屬性和方法的衍生類別中，`Main`方法的`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="aa986-140">此程式碼範例會使用不可變的索引鍵中的物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="aa986-141">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aa986-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa986-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-144">A<xref:System.Collections.ObjectModel.KeyedCollection%602>建立與這個建構函式會使用預設泛型等號比較子的索引鍵，類型取自<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="aa986-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aa986-145">若要指定不同的泛型等號比較子，請使用<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29>建構函式或<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="aa986-146">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目新增時建立的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="aa986-147">當項目加入至<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是擷取一次，並儲存在進行快速搜尋的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="aa986-148">使用覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式，並指定字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="aa986-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-149">因為<xref:System.Collections.ObjectModel.KeyedCollection%602>類別是抽象的 (`MustInherit` Visual Basic 中)，您必須衍生自它，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="aa986-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="aa986-150">在您的衍生類型的建構函式，呼叫適當<xref:System.Collections.ObjectModel.KeyedCollection%602>建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="aa986-151">您不需要公開 （expose） 功能，例如相等比較子或建構函式的字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="aa986-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="aa986-152">這個建構函式是 o （1） 的作業。</span><span class="sxs-lookup"><span data-stu-id="aa986-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-153">此程式碼範例顯示的最小的程式碼衍生的集合類別<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法，並提供公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="aa986-154">程式碼範例也示範許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="aa986-155">`SimpleOrder`類別是非常簡單的申請清單，其中包含`OrderItem`物件，每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="aa986-156">索引鍵`OrderItem`不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-157">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="aa986-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-160">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目新增時建立的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="aa986-161">當項目加入至<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是擷取一次，並儲存在進行快速搜尋的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="aa986-162">使用覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式，並指定字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="aa986-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-163">因為<xref:System.Collections.ObjectModel.KeyedCollection%602>類別是抽象的 (`MustInherit` Visual Basic 中)，您必須衍生自它，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="aa986-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="aa986-164">在您的衍生類型的建構函式，呼叫適當<xref:System.Collections.ObjectModel.KeyedCollection%602>建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="aa986-165">您不需要公開 （expose） 功能，例如相等比較子或建構函式的字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="aa986-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="aa986-166">這個建構函式是 o （1） 的作業。</span><span class="sxs-lookup"><span data-stu-id="aa986-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="aa986-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="aa986-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-170">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目新增時建立的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="aa986-171">當項目加入至<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是擷取一次，並儲存在進行快速搜尋的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="aa986-172">這個建構函式可讓您覆寫該行為。</span><span class="sxs-lookup"><span data-stu-id="aa986-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="aa986-173">指定要新增的第一個項目時，請建立字典的 0、 1 建立字典，第二個項目新增時，等等。</span><span class="sxs-lookup"><span data-stu-id="aa986-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="aa986-174">如果您指定為-1 做為臨界值時，永遠不會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="aa986-175">適用於非常小型集合中擷取速度的查閱字典所提供的改進可能不值得字典所需的額外記憶體。</span><span class="sxs-lookup"><span data-stu-id="aa986-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="aa986-176">設定臨界值，可讓您決定何時要做出取捨。</span><span class="sxs-lookup"><span data-stu-id="aa986-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-177">因為<xref:System.Collections.ObjectModel.KeyedCollection%602>類別是抽象的 (`MustInherit` Visual Basic 中)，您必須衍生自它，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="aa986-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="aa986-178">在您的衍生類型的建構函式，呼叫適當<xref:System.Collections.ObjectModel.KeyedCollection%602>建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="aa986-179">您不需要公開 （expose） 功能，例如相等比較子或建構函式的字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="aa986-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="aa986-180">這個建構函式是 o （1） 的作業。</span><span class="sxs-lookup"><span data-stu-id="aa986-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-181">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，以及<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="aa986-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="aa986-182">在此範例中提供的自訂行為是通知事件，名為`Changed`，這在每個覆寫方法結束時引發。</span><span class="sxs-lookup"><span data-stu-id="aa986-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="aa986-183">此程式碼範例會使用<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式包含臨界值為 0，以便在內部字典建立的物件第一次加入至集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="aa986-184">此程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>和代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="aa986-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="aa986-185">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="aa986-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="aa986-186">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別來包含事件資訊，以及列舉型別來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="aa986-187">在程式碼範例示範自訂行為，藉由在呼叫的屬性和方法的衍生類別中，`Main`方法的`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="aa986-188">此程式碼範例會使用不可變的索引鍵中的物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="aa986-189">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aa986-190">
            <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="aa986-191">The element to change the key of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="aa986-192">The new key for <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-194">這個方法不會修改索引鍵內嵌於`item`; 它只會取代儲存的查閱字典中的金鑰。</span><span class="sxs-lookup"><span data-stu-id="aa986-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="aa986-195">因此，如果`newKey`內嵌在索引鍵不同`item`，您無法存取`item`使用所傳回索引鍵<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="aa986-196">這個方法不會執行任何動作如果<xref:System.Collections.ObjectModel.KeyedCollection%602>沒有查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="aa986-197">在每個索引鍵<xref:System.Collections.ObjectModel.KeyedCollection%602>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="aa986-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="aa986-198">金鑰不能是`null`。</span><span class="sxs-lookup"><span data-stu-id="aa986-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="aa986-199">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="aa986-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="aa986-200">實作者的附註</span><span class="sxs-lookup"><span data-stu-id="aa986-200">Notes for Implementers</span></span>  
 <span data-ttu-id="aa986-201">修改機碼內嵌在項目之前，您必須呼叫這個方法，以更新中的查閱字典的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="aa986-202">如果字典建立臨界值為 – 1，就不需要呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="aa986-203">不會公開<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>做為衍生類別的公用方法的方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="aa986-204">不當使用這個方法會將查閱字典同步的項目索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="aa986-205">例如，若要設定金鑰`null`並再將它設定為另一個值，將多個索引鍵的項目加入至的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="aa986-206">公開 （expose) 此方法在內部以允許可變動的項目索引鍵： 索引鍵的項目變更時，這個方法用來變更查閱字典中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-207">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動的索引鍵，以及如何覆寫保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以維護的索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="aa986-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="aa986-208">此程式碼範例會建立`MutableKeys`集合，它是衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，和`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="aa986-209">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="aa986-210">當新的金鑰指派給屬性時，會呼叫屬性 setter `internal` (`Friend` Visual Basic 中)`ChangeKey`方法來測試是否有新的金鑰會與現有的索引鍵衝突的集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="aa986-211">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="aa986-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="aa986-212">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，以防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend` Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="aa986-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="aa986-213">此欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="aa986-214">欄位會設定後的項目加入至集合中移除項目時清除。</span><span class="sxs-lookup"><span data-stu-id="aa986-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa986-215">
            <paramref name="item" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aa986-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aa986-217">
            <paramref name="item" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-217">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="aa986-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa986-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-220">如果沒有查閱字典，這個方法會清除它，但不會刪除它。</span><span class="sxs-lookup"><span data-stu-id="aa986-220">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="aa986-221">如果項目數目已超過字典建立臨界值和<xref:System.Collections.ObjectModel.KeyedCollection%602>是使用查閱字典，它會繼續使用查閱字典，即使的項目數會再次低於閾值。</span><span class="sxs-lookup"><span data-stu-id="aa986-221">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="aa986-222">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-222">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="aa986-223">實作者的附註</span><span class="sxs-lookup"><span data-stu-id="aa986-223">Notes for Implementers</span></span>  
 <span data-ttu-id="aa986-224">覆寫此方法以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法中，繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-224">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="aa986-225">呼叫基底類別實作，這個方法，以清除基礎的集合，並清除的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-225">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-226">本節包含示範如何覆寫的兩個程式碼範例<xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>方法，以清除集合中的所有物件提供自訂行為。</span><span class="sxs-lookup"><span data-stu-id="aa986-226">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="aa986-227">第一個範例會將自訂的通知事件加入與第二個物件的集合提供支援，可變動的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-227">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="aa986-228">範例 1</span><span class="sxs-lookup"><span data-stu-id="aa986-228">Example 1</span></span>  
  
 <span data-ttu-id="aa986-229">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，以及<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="aa986-229">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="aa986-230">在此範例中提供的自訂行為是通知事件，名為`Changed`，這在每個覆寫方法結束時引發。</span><span class="sxs-lookup"><span data-stu-id="aa986-230">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="aa986-231">此程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>和代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="aa986-231">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="aa986-232">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="aa986-232">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="aa986-233">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別來包含事件資訊，以及列舉型別來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-233">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="aa986-234">在程式碼範例示範自訂行為，藉由在呼叫的屬性和方法的衍生類別中，`Main`方法的`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-234">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="aa986-235">此程式碼範例會使用不可變的索引鍵中的物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-235">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="aa986-236">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-236">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="aa986-237">範例 2</span><span class="sxs-lookup"><span data-stu-id="aa986-237">Example 2</span></span>  
  
 <span data-ttu-id="aa986-238">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動的索引鍵，以及如何覆寫保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以維護的索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="aa986-238">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="aa986-239">此程式碼範例會建立`MutableKeys`集合，它是衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，和`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-239">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="aa986-240">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-240">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="aa986-241">當新的金鑰指派給屬性時，會呼叫屬性 setter `internal` (`Friend` Visual Basic 中)`ChangeKey`方法來測試是否有新的金鑰會與現有的索引鍵衝突的集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-241">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="aa986-242">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="aa986-242">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="aa986-243">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，以防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend` Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="aa986-243">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="aa986-244">此欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-244">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="aa986-245">欄位會設定後的項目加入至集合中移除項目時清除。</span><span class="sxs-lookup"><span data-stu-id="aa986-245">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa986-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa986-247">實作<see cref="T:System.Collections.Generic.IEqualityComparer`1" />用來判斷集合中的索引鍵相等與否的泛型介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-247">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-248">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="aa986-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="aa986-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-250">Determines whether the collection contains an element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-250">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa986-251">
            <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-251">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-252">如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典，`key`用來搜尋的字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-252">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="aa986-253">如果沒有任何的查閱字典，每個元素的索引鍵所擷取<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法相較於指定的索引鍵和。</span><span class="sxs-lookup"><span data-stu-id="aa986-253">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="aa986-254">這個方法是 o （1） 運算，如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典; 否則就是 O (`n`) 運算，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-254">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-255">此程式碼範例顯示的最小的程式碼衍生的集合類別<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法，並提供公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-255">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="aa986-256">程式碼範例也示範許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-256">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="aa986-257">`SimpleOrder`類別是非常簡單的申請清單，其中包含`OrderItem`物件，每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-257">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="aa986-258">索引鍵`OrderItem`不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-258">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-259">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-259">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa986-260">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-260">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa986-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa986-262">查閱字典<see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />，如果有的話，否則<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-262">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-263">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目新增時建立的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-263">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="aa986-264">當項目加入至<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是擷取一次，並儲存在進行快速搜尋的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-264">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="aa986-265">使用覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式，並指定字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="aa986-265">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="aa986-266">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="aa986-266">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-267">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動的索引鍵，以及如何覆寫保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以維護的索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="aa986-267">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="aa986-268">此程式碼範例會建立`MutableKeys`集合，它是衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，和`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-268">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="aa986-269">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-269">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="aa986-270">當新的金鑰指派給屬性時，會呼叫屬性 setter `internal` (`Friend` Visual Basic 中)`ChangeKey`方法來測試是否有新的金鑰會與現有的索引鍵衝突的集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-270">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="aa986-271">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="aa986-271">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="aa986-272">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，以防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend` Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="aa986-272">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="aa986-273">此欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-273">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="aa986-274">欄位會設定後的項目加入至集合中移除項目時清除。</span><span class="sxs-lookup"><span data-stu-id="aa986-274">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="aa986-275">The element from which to extract the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-275">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-276">When implemented in a derived class, extracts the key from the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-276">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa986-277">The key for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-277">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-278">如果不同於內嵌在索引鍵的查閱字典中的索引鍵`item`，您無法存取`item`使用所傳回索引鍵<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-278">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="aa986-279">您可以實作此方法以傳回`null`集合，其中包含不含索引鍵的項目，在此情況下存取的項目可以是只依其索引。</span><span class="sxs-lookup"><span data-stu-id="aa986-279">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="aa986-280">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="aa986-280">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="aa986-281">實作者的附註</span><span class="sxs-lookup"><span data-stu-id="aa986-281">Notes for Implementers</span></span>  
 <span data-ttu-id="aa986-282">您必須覆寫此方法以提供一種方式從字典中的項目擷取索引鍵的字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-282">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="aa986-283">這個方法會在內部呼叫。</span><span class="sxs-lookup"><span data-stu-id="aa986-283">This method is called internally.</span></span> <span data-ttu-id="aa986-284">您不需要讓它成為公用。</span><span class="sxs-lookup"><span data-stu-id="aa986-284">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-285">此程式碼範例顯示的最小的程式碼衍生的集合類別<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法，並提供公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-285">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="aa986-286">程式碼範例也示範許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-286">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="aa986-287">`SimpleOrder`類別是非常簡單的申請清單，其中包含`OrderItem`物件，每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-287">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="aa986-288">索引鍵`OrderItem`不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-288">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-289">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-289">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="aa986-290">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-290">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="aa986-291">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-291">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-293">如果`index`等於<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，`item`新增至結尾<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-293">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="aa986-294">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-294">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="aa986-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> 會呼叫<xref:System.Collections.ObjectModel.Collection%601.Add%2A>和<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="aa986-296">實作者的附註</span><span class="sxs-lookup"><span data-stu-id="aa986-296">Notes for Implementers</span></span>  
 <span data-ttu-id="aa986-297">覆寫此方法以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>並<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>方法，繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-297">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="aa986-298">呼叫基礎集合中插入項目，以及更新的查閱字典，這個方法的基底類別實作。</span><span class="sxs-lookup"><span data-stu-id="aa986-298">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-299">本節包含示範如何覆寫的兩個程式碼範例<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法，以提供自訂行為加入，或將物件插入至集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-299">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="aa986-300">第一個範例會將自訂的通知事件加入與第二個物件的集合提供支援，可變動的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-300">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="aa986-301">範例 1</span><span class="sxs-lookup"><span data-stu-id="aa986-301">Example 1</span></span>  
  
 <span data-ttu-id="aa986-302">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，以及<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="aa986-302">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="aa986-303">在此範例中提供的自訂行為是通知事件，名為`Changed`，這在每個覆寫方法結束時引發。</span><span class="sxs-lookup"><span data-stu-id="aa986-303">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="aa986-304">此程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>和代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="aa986-304">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="aa986-305">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="aa986-305">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="aa986-306">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別來包含事件資訊，以及列舉型別來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-306">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="aa986-307">在程式碼範例示範自訂行為，藉由在呼叫的屬性和方法的衍生類別中，`Main`方法的`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-307">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="aa986-308">此程式碼範例會使用不可變的索引鍵中的物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-308">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="aa986-309">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-309">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="aa986-310">範例 2</span><span class="sxs-lookup"><span data-stu-id="aa986-310">Example 2</span></span>  
  
 <span data-ttu-id="aa986-311">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動的索引鍵，以及如何覆寫保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以維護的索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="aa986-311">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="aa986-312">此程式碼範例會建立`MutableKeys`集合，它是衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，和`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-312">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="aa986-313">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-313">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="aa986-314">當新的金鑰指派給屬性時，會呼叫屬性 setter `internal` (`Friend` Visual Basic 中)`ChangeKey`方法來測試是否有新的金鑰會與現有的索引鍵衝突的集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-314">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="aa986-315">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="aa986-315">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="aa986-316">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，以防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend` Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="aa986-316">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="aa986-317">此欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-317">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="aa986-318">欄位會設定後的項目加入至集合中移除項目時清除。</span><span class="sxs-lookup"><span data-stu-id="aa986-318">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aa986-319">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-319">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="aa986-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="aa986-321">The key of the element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-321">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-322">Gets the element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-322">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa986-323">具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-323">The element with the specified key.</span>
          </span>
          <span data-ttu-id="aa986-324">如果找不到具指定之索引鍵的項目，則會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-324">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-325">這個屬性讓您能夠使用下列語法來存取集合中的特定項目： `myCollection[key]` (`myCollection(key)` Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="aa986-325">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-326">這個屬性會區別繼承<xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType>屬性，可取得及設定的數值索引的項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-326">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="aa986-327">不過，如果`TKey`別的<xref:System.Int32>，這個屬性加上遮罩的繼承的屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-327">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="aa986-328">在此情況下，您可以存取繼承的屬性轉型<xref:System.Collections.ObjectModel.KeyedCollection%602>與其基底類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-328">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="aa986-329">例如， `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` Visual Basic 中`KeyedCollection<int, MyType^>`c + + 中) 可以轉換成`Collection<MyType>`(`Collection(Of MyType)`在 Visual Basic 中`Collection<MyType^>`c + + 中)。</span><span class="sxs-lookup"><span data-stu-id="aa986-329">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="aa986-330">如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典，`key`用來從字典擷取項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-330">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="aa986-331">如果沒有任何的查閱字典，每個元素的索引鍵所擷取<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法相較於指定的索引鍵和。</span><span class="sxs-lookup"><span data-stu-id="aa986-331">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="aa986-332">C# 語言使用關鍵字來定義索引，而不必實作<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-332">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="aa986-333">Visual Basic 會將 <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="aa986-333">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="aa986-334">擷取這個屬性的值是 o （1） 運算，如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典; 否則就是 O (`n`) 運算，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-334">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-335">此程式碼範例顯示的最小的程式碼衍生的集合類別<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法，並提供公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-335">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="aa986-336">程式碼範例也示範許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-336">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="aa986-337">在程式碼範例會呼叫這兩<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType>屬性是唯讀的而且會擷取依索引鍵和<xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType>屬性，可加以設定，並依索引擷取。</span><span class="sxs-lookup"><span data-stu-id="aa986-337">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="aa986-338">它示範如何存取後者的屬性，當在衍生的集合中的物件具有整數索引鍵，無法區別整數索引擷取。</span><span class="sxs-lookup"><span data-stu-id="aa986-338">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="aa986-339">`SimpleOrder`類別是非常簡單的申請清單，其中包含`OrderItem`物件，每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-339">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="aa986-340">索引鍵`OrderItem`不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-340">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-341">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-341">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa986-342">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-342">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="aa986-343">An element with the specified key does not exist in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-343">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="aa986-344">The key of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-344">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa986-346">
            <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-346">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa986-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-348">元素的索引鍵也會移除從的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-348">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="aa986-349">如果項目數目已超過字典建立臨界值和<xref:System.Collections.ObjectModel.KeyedCollection%602>是使用查閱字典，它會繼續使用查閱字典，即使的項目數會再次低於閾值。</span><span class="sxs-lookup"><span data-stu-id="aa986-349">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-350">若要自訂此方法的行為，請覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-350">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="aa986-351">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-352">此程式碼範例顯示的最小的程式碼衍生的集合類別<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法，並提供公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="aa986-352">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="aa986-353">程式碼範例也示範許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-353">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="aa986-354">此範例會示範<xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>，以移除項目具有指定的索引鍵，以及<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>和<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法繼承自<xref:System.Collections.ObjectModel.Collection%601>，其分別移除的物件和索引。</span><span class="sxs-lookup"><span data-stu-id="aa986-354">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="aa986-355">`SimpleOrder`類別是非常簡單的申請清單，其中包含`OrderItem`物件，每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="aa986-355">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="aa986-356">索引鍵`OrderItem`不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="aa986-356">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="aa986-357">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-357">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa986-358">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-358">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="aa986-359">The index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-359">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-361">元素的索引鍵也會移除從的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-361">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="aa986-362">如果項目數目已超過字典建立臨界值和<xref:System.Collections.ObjectModel.KeyedCollection%602>是使用查閱字典，它會繼續使用查閱字典，即使的項目數會再次低於閾值。</span><span class="sxs-lookup"><span data-stu-id="aa986-362">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="aa986-363">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-363">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="aa986-364">實作者的附註</span><span class="sxs-lookup"><span data-stu-id="aa986-364">Notes for Implementers</span></span>  
 <span data-ttu-id="aa986-365">覆寫此方法以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29>並<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29>方法，繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別，而<xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-365">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="aa986-366">呼叫此方法，以從基礎集合中移除項目，並更新的查閱字典的基底類別實作。</span><span class="sxs-lookup"><span data-stu-id="aa986-366">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-367">本節包含示範如何覆寫的兩個程式碼範例<xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>方法，以提供自訂的行為集合中移除物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-367">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="aa986-368">第一個範例會將自訂的通知事件加入與第二個物件的集合提供支援，可變動的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-368">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="aa986-369">範例 1</span><span class="sxs-lookup"><span data-stu-id="aa986-369">Example 1</span></span>  
  
 <span data-ttu-id="aa986-370">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，以及<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="aa986-370">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="aa986-371">在此範例中提供的自訂行為是通知事件，名為`Changed`，這在每個覆寫方法結束時引發。</span><span class="sxs-lookup"><span data-stu-id="aa986-371">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="aa986-372">此程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>和代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="aa986-372">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="aa986-373">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="aa986-373">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="aa986-374">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別來包含事件資訊，以及列舉型別來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-374">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="aa986-375">在程式碼範例示範自訂行為，藉由在呼叫的屬性和方法的衍生類別中，`Main`方法的`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-375">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="aa986-376">此程式碼範例會使用不可變的索引鍵中的物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-376">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="aa986-377">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-377">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="aa986-378">範例 2</span><span class="sxs-lookup"><span data-stu-id="aa986-378">Example 2</span></span>  
  
 <span data-ttu-id="aa986-379">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動的索引鍵，以及如何覆寫保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以維護的索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="aa986-379">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="aa986-380">此程式碼範例會建立`MutableKeys`集合，它是衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，和`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-380">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="aa986-381">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-381">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="aa986-382">當新的金鑰指派給屬性時，會呼叫屬性 setter `internal` (`Friend` Visual Basic 中)`ChangeKey`方法來測試是否有新的金鑰會與現有的索引鍵衝突的集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-382">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="aa986-383">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="aa986-383">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="aa986-384">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，以防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend` Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="aa986-384">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="aa986-385">此欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-385">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="aa986-386">欄位會設定後的項目加入至集合中移除項目時清除。</span><span class="sxs-lookup"><span data-stu-id="aa986-386">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="aa986-387">The zero-based index of the item to be replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-387">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="aa986-388">The new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-388">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa986-389">Replaces the item at the specified index with the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa986-389">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa986-390">會隨之更新的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-390">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="aa986-391">亦即，被取代之項目的索引鍵移除查閱字典，並已加入新項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-391">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="aa986-392">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="aa986-392">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="aa986-393">實作者的附註</span><span class="sxs-lookup"><span data-stu-id="aa986-393">Notes for Implementers</span></span>  
 <span data-ttu-id="aa986-394">覆寫此方法以提供自訂的設定的行為<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-394">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa986-395">這個方法不會影響行為的<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType>屬性，這是唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="aa986-395">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="aa986-396">呼叫基底類別實作，這個方法來設定基礎集合中的項目並更新的查閱字典。</span><span class="sxs-lookup"><span data-stu-id="aa986-396">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa986-397">本節包含示範如何覆寫的兩個程式碼範例<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂行為設定<xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-397">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="aa986-398">第一個範例會將自訂的通知事件加入與第二個物件的集合提供支援，可變動的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="aa986-398">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="aa986-399">範例 1</span><span class="sxs-lookup"><span data-stu-id="aa986-399">Example 1</span></span>  
  
 <span data-ttu-id="aa986-400">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，以及<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供自訂的行為，如<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="aa986-400">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="aa986-401">在此範例中提供的自訂行為是通知事件，名為`Changed`，這在每個覆寫方法結束時引發。</span><span class="sxs-lookup"><span data-stu-id="aa986-401">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="aa986-402">此程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>和代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="aa986-402">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="aa986-403">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="aa986-403">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="aa986-404">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別來包含事件資訊，以及列舉型別來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="aa986-404">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="aa986-405">在程式碼範例示範自訂行為，藉由在呼叫的屬性和方法的衍生類別中，`Main`方法的`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-405">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="aa986-406">此程式碼範例會使用不可變的索引鍵中的物件。</span><span class="sxs-lookup"><span data-stu-id="aa986-406">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="aa986-407">使用可變動索引鍵的程式碼範例，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa986-407">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="aa986-408">範例 2</span><span class="sxs-lookup"><span data-stu-id="aa986-408">Example 2</span></span>  
  
 <span data-ttu-id="aa986-409">下列程式碼範例示範如何覆寫受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動的索引鍵，以及如何覆寫保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以維護的索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="aa986-409">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="aa986-410">此程式碼範例會建立`MutableKeys`集合，它是衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，和`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="aa986-410">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="aa986-411">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="aa986-411">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="aa986-412">當新的金鑰指派給屬性時，會呼叫屬性 setter `internal` (`Friend` Visual Basic 中)`ChangeKey`方法來測試是否有新的金鑰會與現有的索引鍵衝突的集合。</span><span class="sxs-lookup"><span data-stu-id="aa986-412">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="aa986-413">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="aa986-413">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="aa986-414">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，以防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend` Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="aa986-414">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="aa986-415">此欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa986-415">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="aa986-416">欄位會設定後的項目加入至集合中移除項目時清除。</span><span class="sxs-lookup"><span data-stu-id="aa986-416">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>