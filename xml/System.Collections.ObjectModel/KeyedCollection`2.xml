<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3375080ab008f35379a851d18f700db732edfd23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="e3f65-101">集合中的索引鍵類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3f65-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="e3f65-102">集合中項目的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3f65-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="e3f65-103">為內嵌在值之索引鍵的集合，提供抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3f65-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-104"><xref:System.Collections.ObjectModel.KeyedCollection%602>類別會提供這兩種 o （1） 的索引式擷取和擷取接近 o （1），做為索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="e3f65-105">它是抽象類型，或更精確地無限設定，抽象類型，因為其建構的泛型類型的每一個都是抽象的基底類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="e3f65-106">若要使用<xref:System.Collections.ObjectModel.KeyedCollection%602>，衍生自適當的建構類型的集合型別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="e3f65-107"><xref:System.Collections.ObjectModel.KeyedCollection%602>類別為基礎的集合之間的混合體<xref:System.Collections.Generic.IList%601>泛型介面和集合為基礎<xref:System.Collections.Generic.IDictionary%602>泛型介面。</span><span class="sxs-lookup"><span data-stu-id="e3f65-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="e3f65-108">要根據集合<xref:System.Collections.Generic.IList%601>泛型介面，<xref:System.Collections.ObjectModel.KeyedCollection%602>是索引的項目清單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="e3f65-109">要根據集合<xref:System.Collections.Generic.IDictionary%602>泛型介面，<xref:System.Collections.ObjectModel.KeyedCollection%602>具有每個項目相關聯的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="e3f65-110">不同於字典的項目<xref:System.Collections.ObjectModel.KeyedCollection%602>不是索引鍵/值組; 相反地，整個項目值，然後再將金鑰內嵌在值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="e3f65-111">例如，集合的項目衍生自`KeyedCollection\<String,String>`(`KeyedCollection(Of String, String)`在 Visual Basic 中) 可能是 「 John Doe Jr。 」</span><span class="sxs-lookup"><span data-stu-id="e3f65-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="e3f65-112">其中的值是"John Doe Jr。 」</span><span class="sxs-lookup"><span data-stu-id="e3f65-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="e3f65-113">機碼為"Doe";包含整數索引鍵的員工記錄的集合無法衍生自或`KeyedCollection\<int,Employee>`。</span><span class="sxs-lookup"><span data-stu-id="e3f65-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="e3f65-114">抽象<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法從項目擷取索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="e3f65-115">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含查閱字典，其中您可以取得與<xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="e3f65-116">當項目加入<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是一次擷取並儲存以加速搜尋查閱字典中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="e3f65-117">藉由指定字典建立臨界值，當您建立覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-118">第一次的元素數目超過臨界值時，會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="e3f65-119">如果您指定-1 做為臨界值時，永遠不會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-120">使用內部的查閱字典時，其中包含集合中的所有項目參考如果`TItem`是參考型別，或如果在集合中的所有項目的複製`TItem`是實值類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="e3f65-121">因此，查閱字典可能不適合使用如果`TItem`是實值類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="e3f65-122">您可以使用來存取依其索引或索引鍵的項目<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="e3f65-123">您可以加入項目沒有索引鍵，但後續可以只依索引存取這些項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-124">本節包含兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="e3f65-124">This section contains two code examples.</span></span> <span data-ttu-id="e3f65-125">第一個範例顯示的最小的程式碼，才能衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，並示範繼承的方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="e3f65-126">第二個範例示範如何覆寫的受保護的方法<xref:System.Collections.ObjectModel.KeyedCollection%602>提供自訂行為。</span><span class="sxs-lookup"><span data-stu-id="e3f65-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="e3f65-127">**範例 1**</span><span class="sxs-lookup"><span data-stu-id="e3f65-127">**Example 1**</span></span>  
  
 <span data-ttu-id="e3f65-128">這個程式碼範例顯示的最小的程式碼所需衍生集合類別，從<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並提供的公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="e3f65-129">程式碼範例也示範的許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="e3f65-130">`SimpleOrder`類別是非常簡單的必要條件清單，其中包含`OrderItem`物件，其中每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="e3f65-131">索引鍵`OrderItem`是不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-132">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="e3f65-133">**範例 2**</span><span class="sxs-lookup"><span data-stu-id="e3f65-133">**Example 2**</span></span>  
  
 <span data-ttu-id="e3f65-134">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供的自訂行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="e3f65-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="e3f65-135">在此範例中提供的自訂行為是名為將通知事件`Changed`，其引發的每個覆寫方法的結尾。</span><span class="sxs-lookup"><span data-stu-id="e3f65-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="e3f65-136">程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="e3f65-137">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="e3f65-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="e3f65-138">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別包含事件資訊，以及列舉來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="e3f65-139">程式碼範例示範自訂行為藉由在呼叫的屬性和方法在衍生類別`Main`方法`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="e3f65-140">這個程式碼範例會使用不可變的索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="e3f65-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="e3f65-141">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3f65-142">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3f65-143">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體，此執行個體使用預設的等號比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-144">A<xref:System.Collections.ObjectModel.KeyedCollection%602>建立與這個建構函式會使用預設的泛型等號比較子的索引鍵，類型取自<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e3f65-145">若要指定不同的泛型等號比較子，請使用<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29>建構函式或<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="e3f65-146">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目加入時，會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="e3f65-147">當項目加入<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是一次擷取並儲存以加速搜尋查閱字典中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="e3f65-148">使用覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式，並指定字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-149">因為<xref:System.Collections.ObjectModel.KeyedCollection%602>類別是抽象的 (`MustInherit`在 Visual Basic 中)，您必須衍生自它，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="e3f65-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="e3f65-150">在您的衍生類型的建構函式，呼叫適當<xref:System.Collections.ObjectModel.KeyedCollection%602>建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="e3f65-151">您不需要公開的相等比較子或字典建立臨界值，在您建構函式等的功能。</span><span class="sxs-lookup"><span data-stu-id="e3f65-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="e3f65-152">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-153">這個程式碼範例顯示的最小的程式碼所需衍生集合類別，從<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並提供的公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="e3f65-154">程式碼範例也示範的許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="e3f65-155">`SimpleOrder`類別是非常簡單的必要條件清單，其中包含`OrderItem`物件，其中每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="e3f65-156">索引鍵`OrderItem`是不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-157">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="e3f65-158">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面實作，或 <see langword="null" /> 表示為索引鍵型別使用預設等號比較子 (取自 <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-159">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體，此執行個體使用指定的等號比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-160">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目加入時，會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="e3f65-161">當項目加入<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是一次擷取並儲存以加速搜尋查閱字典中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="e3f65-162">使用覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式，並指定字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-163">因為<xref:System.Collections.ObjectModel.KeyedCollection%602>類別是抽象的 (`MustInherit`在 Visual Basic 中)，您必須衍生自它，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="e3f65-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="e3f65-164">在您的衍生類型的建構函式，呼叫適當<xref:System.Collections.ObjectModel.KeyedCollection%602>建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="e3f65-165">您不需要公開的相等比較子或字典建立臨界值，在您建構函式等的功能。</span><span class="sxs-lookup"><span data-stu-id="e3f65-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="e3f65-166">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="e3f65-167">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面實作，或 <see langword="null" /> 表示為索引鍵型別使用預設等號比較子 (取自 <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="e3f65-168">集合不必建立查閱字典就可以保存的項目數目 (當第一個項目加入後即建立查閱字典則為 0)，若指定不建立查閱字典則為 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-169">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體，此執行個體使用指定的等號比較子，並在超過指定的臨界值時，建立查閱字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-170">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目加入時，會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="e3f65-171">當項目加入<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是一次擷取並儲存以加速搜尋查閱字典中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="e3f65-172">這個建構函式可讓您覆寫行為。</span><span class="sxs-lookup"><span data-stu-id="e3f65-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="e3f65-173">指定建立字典，當加入第一個項目 0、 1 建立字典，當加入第二個元素，等等。</span><span class="sxs-lookup"><span data-stu-id="e3f65-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="e3f65-174">如果您指定-1 做為臨界值時，永遠不會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="e3f65-175">非常小的集合中擷取速度查閱字典所提供的改進可能不值得額外字典所需的記憶體。</span><span class="sxs-lookup"><span data-stu-id="e3f65-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="e3f65-176">設定臨界值，可讓您決定何時要做出取捨。</span><span class="sxs-lookup"><span data-stu-id="e3f65-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-177">因為<xref:System.Collections.ObjectModel.KeyedCollection%602>類別是抽象的 (`MustInherit`在 Visual Basic 中)，您必須衍生自它，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="e3f65-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="e3f65-178">在您的衍生類型的建構函式，呼叫適當<xref:System.Collections.ObjectModel.KeyedCollection%602>建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="e3f65-179">您不需要公開的相等比較子或字典建立臨界值，在您建構函式等的功能。</span><span class="sxs-lookup"><span data-stu-id="e3f65-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="e3f65-180">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-181">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供的自訂行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="e3f65-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="e3f65-182">在此範例中提供的自訂行為是名為將通知事件`Changed`，其引發的每個覆寫方法的結尾。</span><span class="sxs-lookup"><span data-stu-id="e3f65-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="e3f65-183">此程式碼範例會使用<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>與臨界值為 0 時，建構函式，讓內部字典會建立第一次的物件會加入至集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="e3f65-184">程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="e3f65-185">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="e3f65-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="e3f65-186">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別包含事件資訊，以及列舉來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="e3f65-187">程式碼範例示範自訂行為藉由在呼叫的屬性和方法在衍生類別`Main`方法`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="e3f65-188">這個程式碼範例會使用不可變的索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="e3f65-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="e3f65-189">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3f65-190">
            <paramref name="dictionaryCreationThreshold" /> 小於 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e3f65-191">要變更索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="e3f65-192">「項目」<c></c>的新索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-193">變更查閱字典中與指定的項目相關的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-194">這個方法不會修改金鑰內嵌在`item`; 它只會取代查閱字典中儲存的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="e3f65-195">因此，如果`newKey`內嵌在索引鍵不同`item`，您無法存取`item`使用所傳回之金鑰<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="e3f65-196">這個方法不會執行任何動作如果<xref:System.Collections.ObjectModel.KeyedCollection%602>沒有查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="e3f65-197">在每個索引鍵<xref:System.Collections.ObjectModel.KeyedCollection%602>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="e3f65-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="e3f65-198">金鑰不能`null`。</span><span class="sxs-lookup"><span data-stu-id="e3f65-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="e3f65-199">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="e3f65-200">實作者注意事項</span><span class="sxs-lookup"><span data-stu-id="e3f65-200">Notes for Implementers</span></span>  
 <span data-ttu-id="e3f65-201">修改機碼內嵌在項目之前，您必須呼叫這個方法，以更新查閱字典中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="e3f65-202">如果字典建立臨界值為 – 1，則不需要呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="e3f65-203">不會公開<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法為衍生類別的公用方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="e3f65-204">不當使用這個方法會將查閱字典同步的項目索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="e3f65-205">例如，若要設定機碼`null`並再將它設定為另一個值將多個索引鍵的項目加入至查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="e3f65-206">公開此方法在內部以允許可變動的項目索引鍵： 索引鍵的項目變更時，這個方法用來變更查閱字典中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-207">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動索引鍵，以及如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法來維護索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="e3f65-208">程式碼範例會建立`MutableKeys`集合，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，而`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="e3f65-209">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="e3f65-210">新的金鑰是指派給屬性時，會呼叫屬性 setter `internal` (`Friend`在 Visual Basic 中)`ChangeKey`方法來測試是否與現有的索引鍵衝突的新索引鍵的集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="e3f65-211">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="e3f65-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="e3f65-212">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，並防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend`在 Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="e3f65-213">這個欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="e3f65-214">項目加入至集合中，移除項目時，清除時，會設定欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e3f65-215">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e3f65-216">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-216">-or-</span>
          </span>
          <span data-ttu-id="e3f65-217">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-217">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e3f65-218">找不到 <paramref name="item" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-218">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="e3f65-219">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-219">-or-</span>
          </span>
          <span data-ttu-id="e3f65-220">
            <paramref name="key" /> 已存在於 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-220">
              <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3f65-221">移除 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中的所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-221">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-222">如果沒有查閱字典，這個方法會清除它，但不會刪除。</span><span class="sxs-lookup"><span data-stu-id="e3f65-222">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="e3f65-223">如果項目數目已超過字典建立臨界值和<xref:System.Collections.ObjectModel.KeyedCollection%602>是使用查閱字典，它將會繼續使用查閱字典，即使項目數目會再次低於閾值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-223">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="e3f65-224">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="e3f65-225">實作者注意事項</span><span class="sxs-lookup"><span data-stu-id="e3f65-225">Notes for Implementers</span></span>  
 <span data-ttu-id="e3f65-226">覆寫這個方法以提供自訂的行為<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>繼承自方法<xref:System.Collections.ObjectModel.Collection%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-226">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="e3f65-227">呼叫這個方法，以清除基礎的集合，並清除查閱字典的基底類別實作。</span><span class="sxs-lookup"><span data-stu-id="e3f65-227">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-228">本章節包含兩個程式碼範例示範如何覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>方法，以清除集合中的所有物件提供自訂行為。</span><span class="sxs-lookup"><span data-stu-id="e3f65-228">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="e3f65-229">第一個範例會加入自訂通知事件，第二個物件的集合提供支援可變動索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-229">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="e3f65-230">範例 1</span><span class="sxs-lookup"><span data-stu-id="e3f65-230">Example 1</span></span>  
  
 <span data-ttu-id="e3f65-231">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供的自訂行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="e3f65-231">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="e3f65-232">在此範例中提供的自訂行為是名為將通知事件`Changed`，其引發的每個覆寫方法的結尾。</span><span class="sxs-lookup"><span data-stu-id="e3f65-232">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="e3f65-233">程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-233">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="e3f65-234">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="e3f65-234">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="e3f65-235">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別包含事件資訊，以及列舉來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-235">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="e3f65-236">程式碼範例示範自訂行為藉由在呼叫的屬性和方法在衍生類別`Main`方法`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-236">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="e3f65-237">這個程式碼範例會使用不可變的索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="e3f65-237">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="e3f65-238">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-238">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="e3f65-239">範例 2</span><span class="sxs-lookup"><span data-stu-id="e3f65-239">Example 2</span></span>  
  
 <span data-ttu-id="e3f65-240">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動索引鍵，以及如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法來維護索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-240">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="e3f65-241">程式碼範例會建立`MutableKeys`集合，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，而`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-241">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="e3f65-242">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-242">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="e3f65-243">新的金鑰是指派給屬性時，會呼叫屬性 setter `internal` (`Friend`在 Visual Basic 中)`ChangeKey`方法來測試是否與現有的索引鍵衝突的新索引鍵的集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-243">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="e3f65-244">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="e3f65-244">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="e3f65-245">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，並防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend`在 Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-245">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="e3f65-246">這個欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-246">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="e3f65-247">項目加入至集合中，移除項目時，清除時，會設定欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-247">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3f65-248">取得用來判斷集合中索引鍵是否相等的泛型等號比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-248">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f65-249">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面的實作，用來判斷集合中索引鍵是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-249">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-250">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-250">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e3f65-251">要在 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-251">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-252">判斷集合是否包含具有指定之索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-252">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3f65-253">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-253">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-254">如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典，`key`用來搜尋的字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-254">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="e3f65-255">如果您沒有查閱字典，每個項目的索引鍵會擷取使用<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並使用指定的金鑰進行比較。</span><span class="sxs-lookup"><span data-stu-id="e3f65-255">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="e3f65-256">這個方法是 o （1） 運算，如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典; 否則為 O (`n`) 作業，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-256">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-257">這個程式碼範例顯示的最小的程式碼所需衍生集合類別，從<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並提供的公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-257">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="e3f65-258">程式碼範例也示範的許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-258">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="e3f65-259">`SimpleOrder`類別是非常簡單的必要條件清單，其中包含`OrderItem`物件，其中每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-259">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="e3f65-260">索引鍵`OrderItem`是不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-260">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-261">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-261">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e3f65-262">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-262">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3f65-263">取得 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 的查閱字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-263">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f65-264">
            <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 的查閱字典，如果有的話，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-264">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-265">根據預設，<xref:System.Collections.ObjectModel.KeyedCollection%602>包含第一個項目加入時，會建立查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-265">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="e3f65-266">當項目加入<xref:System.Collections.ObjectModel.KeyedCollection%602>，項目索引鍵是一次擷取並儲存以加速搜尋查閱字典中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-266">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="e3f65-267">使用覆寫這個行為<xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29>建構函式，並指定字典建立臨界值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-267">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="e3f65-268">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-268">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-269">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動索引鍵，以及如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法來維護索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-269">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="e3f65-270">程式碼範例會建立`MutableKeys`集合，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，而`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-270">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="e3f65-271">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-271">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="e3f65-272">新的金鑰是指派給屬性時，會呼叫屬性 setter `internal` (`Friend`在 Visual Basic 中)`ChangeKey`方法來測試是否與現有的索引鍵衝突的新索引鍵的集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-272">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="e3f65-273">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="e3f65-273">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="e3f65-274">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，並防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend`在 Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-274">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="e3f65-275">這個欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-275">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="e3f65-276">項目加入至集合中，移除項目時，清除時，會設定欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-276">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e3f65-277">要擷取索引鍵的來源項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-277">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-278">在衍生類別中實作時，從指定的項目擷取索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-278">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3f65-279">指定之項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-279">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-280">如果查閱字典中的機碼會內嵌在索引鍵不同`item`，您無法存取`item`使用所傳回之金鑰<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-280">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="e3f65-281">您可以實作此方法以傳回`null`包含沒有金鑰的項目集合，在此情況下存取的項目可以是僅由其索引。</span><span class="sxs-lookup"><span data-stu-id="e3f65-281">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="e3f65-282">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-282">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="e3f65-283">實作者注意事項</span><span class="sxs-lookup"><span data-stu-id="e3f65-283">Notes for Implementers</span></span>  
 <span data-ttu-id="e3f65-284">您必須覆寫這個方法以提供一種方式，從字典中的項目擷取索引鍵的字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-284">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="e3f65-285">在內部呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-285">This method is called internally.</span></span> <span data-ttu-id="e3f65-286">您不需要它設為公用。</span><span class="sxs-lookup"><span data-stu-id="e3f65-286">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-287">這個程式碼範例顯示的最小的程式碼所需衍生集合類別，從<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並提供的公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-287">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="e3f65-288">程式碼範例也示範的許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-288">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="e3f65-289">`SimpleOrder`類別是非常簡單的必要條件清單，其中包含`OrderItem`物件，其中每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-289">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="e3f65-290">索引鍵`OrderItem`是不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-290">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-291">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-291">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e3f65-292">應該插入 <c>item</c> 之以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-292">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="e3f65-293">要插入的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-293">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-294">將項目插入至 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中指定的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-294">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-295">如果`index`等於<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，`item`加入至結尾<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-295">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="e3f65-296">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-296">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="e3f65-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> 會呼叫<xref:System.Collections.ObjectModel.Collection%601.Add%2A>和<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="e3f65-298">實作者注意事項</span><span class="sxs-lookup"><span data-stu-id="e3f65-298">Notes for Implementers</span></span>  
 <span data-ttu-id="e3f65-299">覆寫這個方法以提供自訂的行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>和<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>方法繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-299">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="e3f65-300">呼叫這個方法將項目插入基礎的集合，並更新查閱字典的基底類別實作。</span><span class="sxs-lookup"><span data-stu-id="e3f65-300">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-301">本章節包含兩個程式碼範例示範如何覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法，以加入或插入至集合的物件提供自訂行為。</span><span class="sxs-lookup"><span data-stu-id="e3f65-301">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="e3f65-302">第一個範例會加入自訂通知事件，第二個物件的集合提供支援可變動索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-302">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="e3f65-303">範例 1</span><span class="sxs-lookup"><span data-stu-id="e3f65-303">Example 1</span></span>  
  
 <span data-ttu-id="e3f65-304">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供的自訂行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="e3f65-304">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="e3f65-305">在此範例中提供的自訂行為是名為將通知事件`Changed`，其引發的每個覆寫方法的結尾。</span><span class="sxs-lookup"><span data-stu-id="e3f65-305">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="e3f65-306">程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-306">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="e3f65-307">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="e3f65-307">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="e3f65-308">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別包含事件資訊，以及列舉來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-308">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="e3f65-309">程式碼範例示範自訂行為藉由在呼叫的屬性和方法在衍生類別`Main`方法`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-309">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="e3f65-310">這個程式碼範例會使用不可變的索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="e3f65-310">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="e3f65-311">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-311">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="e3f65-312">範例 2</span><span class="sxs-lookup"><span data-stu-id="e3f65-312">Example 2</span></span>  
  
 <span data-ttu-id="e3f65-313">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動索引鍵，以及如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法來維護索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-313">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="e3f65-314">程式碼範例會建立`MutableKeys`集合，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，而`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-314">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="e3f65-315">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-315">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="e3f65-316">新的金鑰是指派給屬性時，會呼叫屬性 setter `internal` (`Friend`在 Visual Basic 中)`ChangeKey`方法來測試是否與現有的索引鍵衝突的新索引鍵的集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-316">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="e3f65-317">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="e3f65-317">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="e3f65-318">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，並防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend`在 Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-318">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="e3f65-319">這個欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-319">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="e3f65-320">項目加入至集合中，移除項目時，清除時，會設定欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-320">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e3f65-321">
            <paramref name="index" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-321">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="e3f65-322">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-322">-or-</span>
          </span>
          <span data-ttu-id="e3f65-323">
            <paramref name="index" /> 大於 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-323">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e3f65-324">要取得的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-324">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-325">取得具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-325">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3f65-326">具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-326">The element with the specified key.</span>
          </span>
          <span data-ttu-id="e3f65-327">如果找不到具指定之索引鍵的項目，則會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-327">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-328">這個屬性會提供可以使用下列語法存取集合中的特定元素的能力： `myCollection[key]` (`myCollection(key)`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="e3f65-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-329">這個屬性是不同於繼承<xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType>屬性，取得與設定項目依數字索引。</span><span class="sxs-lookup"><span data-stu-id="e3f65-329">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="e3f65-330">不過，如果`TKey`的型別<xref:System.Int32>，這個屬性可以繼承的屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-330">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="e3f65-331">在此情況下，您可以存取繼承的屬性轉型<xref:System.Collections.ObjectModel.KeyedCollection%602>與其基底類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-331">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="e3f65-332">例如， `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)`在 Visual Basic 中`KeyedCollection<int, MyType^>`c + + 中) 可以轉換成`Collection<MyType>`(`Collection(Of MyType)`在 Visual Basic 中`Collection<MyType^>`c + + 中)。</span><span class="sxs-lookup"><span data-stu-id="e3f65-332">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="e3f65-333">如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典，`key`用來從字典中擷取的項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-333">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="e3f65-334">如果您沒有查閱字典，每個項目的索引鍵會擷取使用<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並使用指定的金鑰進行比較。</span><span class="sxs-lookup"><span data-stu-id="e3f65-334">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="e3f65-335">C# 語言使用關鍵字來定義索引，而不必實作<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-335">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="e3f65-336">Visual Basic 會將 <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="e3f65-336">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="e3f65-337">擷取這個屬性的值是一種 o （1） 運算，如果<xref:System.Collections.ObjectModel.KeyedCollection%602>查閱字典; 否則為 O (`n`) 作業，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-337">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-338">這個程式碼範例顯示的最小的程式碼所需衍生集合類別，從<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並提供的公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-338">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="e3f65-339">程式碼範例也示範的許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-339">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="e3f65-340">程式碼範例會呼叫兩者<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType>屬性是唯讀的而且索引鍵，以擷取和<xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType>屬性，這是可設定且依索引擷取。</span><span class="sxs-lookup"><span data-stu-id="e3f65-340">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="e3f65-341">它示範如何存取第二個屬性，當將衍生集合中的物件具有整數索引鍵，區別整數索引擷取。</span><span class="sxs-lookup"><span data-stu-id="e3f65-341">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="e3f65-342">`SimpleOrder`類別是非常簡單的必要條件清單，其中包含`OrderItem`物件，其中每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-342">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="e3f65-343">索引鍵`OrderItem`是不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-343">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-344">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-344">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e3f65-345">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-345">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="e3f65-346">具有指定之索引鍵的項目不存在於集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-346">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e3f65-347">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-347">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-348">將有指定索引鍵的項目從 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-348">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3f65-349">如果成功移除項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-349">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e3f65-350">如果在 <see langword="false" /> 中找不到 <paramref name="key" />，則這個方法也會傳回 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-350">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-351">元素索引鍵也會移除從查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-351">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="e3f65-352">如果項目數目已超過字典建立臨界值和<xref:System.Collections.ObjectModel.KeyedCollection%602>是使用查閱字典，它將會繼續使用查閱字典，即使項目數目會再次低於閾值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-352">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-353">若要自訂此方法的行為，請覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-353">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="e3f65-354">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-355">這個程式碼範例顯示的最小的程式碼所需衍生集合類別，從<xref:System.Collections.ObjectModel.KeyedCollection%602>： 覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>方法並提供的公用建構函式委派至基底類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="e3f65-355">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="e3f65-356">程式碼範例也示範的許多屬性和方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>和<xref:System.Collections.ObjectModel.Collection%601>類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-356">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="e3f65-357">此範例示範<xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>方法繼承自<xref:System.Collections.ObjectModel.KeyedCollection%602>，以移除項目具有指定索引鍵，以及<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>和<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法繼承自<xref:System.Collections.ObjectModel.Collection%601>，這分別移除物件和索引。</span><span class="sxs-lookup"><span data-stu-id="e3f65-357">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="e3f65-358">`SimpleOrder`類別是非常簡單的必要條件清單，其中包含`OrderItem`物件，其中每一個都代表訂單中行項目。</span><span class="sxs-lookup"><span data-stu-id="e3f65-358">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="e3f65-359">索引鍵`OrderItem`是不變，衍生自類別的一個重要考量<xref:System.Collections.ObjectModel.KeyedCollection%602>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-359">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="e3f65-360">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-360">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e3f65-361">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-361">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e3f65-362">要移除的項目索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-362">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-363">移除 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中指定之索引處的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-363">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-364">元素索引鍵也會移除從查閱字典。</span><span class="sxs-lookup"><span data-stu-id="e3f65-364">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="e3f65-365">如果項目數目已超過字典建立臨界值和<xref:System.Collections.ObjectModel.KeyedCollection%602>是使用查閱字典，它將會繼續使用查閱字典，即使項目數目會再次低於閾值。</span><span class="sxs-lookup"><span data-stu-id="e3f65-365">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="e3f65-366">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-366">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="e3f65-367">實作者注意事項</span><span class="sxs-lookup"><span data-stu-id="e3f65-367">Notes for Implementers</span></span>  
 <span data-ttu-id="e3f65-368">覆寫這個方法以提供自訂的行為<xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29>和<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29>方法繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別，而<xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-368">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="e3f65-369">呼叫這個方法，從基礎集合移除的項目，並更新查閱字典的基底類別實作。</span><span class="sxs-lookup"><span data-stu-id="e3f65-369">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-370">本章節包含兩個程式碼範例示範如何覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>方法，以從集合移除的物件提供自訂行為。</span><span class="sxs-lookup"><span data-stu-id="e3f65-370">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="e3f65-371">第一個範例會加入自訂通知事件，第二個物件的集合提供支援可變動索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-371">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="e3f65-372">範例 1</span><span class="sxs-lookup"><span data-stu-id="e3f65-372">Example 1</span></span>  
  
 <span data-ttu-id="e3f65-373">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供的自訂行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="e3f65-373">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="e3f65-374">在此範例中提供的自訂行為是名為將通知事件`Changed`，其引發的每個覆寫方法的結尾。</span><span class="sxs-lookup"><span data-stu-id="e3f65-374">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="e3f65-375">程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-375">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="e3f65-376">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="e3f65-376">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="e3f65-377">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別包含事件資訊，以及列舉來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-377">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="e3f65-378">程式碼範例示範自訂行為藉由在呼叫的屬性和方法在衍生類別`Main`方法`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-378">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="e3f65-379">這個程式碼範例會使用不可變的索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="e3f65-379">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="e3f65-380">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-380">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="e3f65-381">範例 2</span><span class="sxs-lookup"><span data-stu-id="e3f65-381">Example 2</span></span>  
  
 <span data-ttu-id="e3f65-382">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動索引鍵，以及如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法來維護索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-382">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="e3f65-383">程式碼範例會建立`MutableKeys`集合，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，而`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-383">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="e3f65-384">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-384">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="e3f65-385">新的金鑰是指派給屬性時，會呼叫屬性 setter `internal` (`Friend`在 Visual Basic 中)`ChangeKey`方法來測試是否與現有的索引鍵衝突的新索引鍵的集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-385">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="e3f65-386">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="e3f65-386">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="e3f65-387">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，並防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend`在 Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-387">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="e3f65-388">這個欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-388">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="e3f65-389">項目加入至集合中，移除項目時，清除時，會設定欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-389">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e3f65-390">要取代之項目的索引，而這個索引為以零為起始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-390">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="e3f65-391">新項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-391">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3f65-392">以指定的項目取代位於指定索引上的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3f65-392">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3f65-393">查閱字典會一併更新。</span><span class="sxs-lookup"><span data-stu-id="e3f65-393">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="e3f65-394">也就是說，查閱字典中，已移除的金鑰已被取代的項目，並加入新項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-394">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="e3f65-395">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="e3f65-395">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="e3f65-396">實作者注意事項</span><span class="sxs-lookup"><span data-stu-id="e3f65-396">Notes for Implementers</span></span>  
 <span data-ttu-id="e3f65-397">覆寫這個方法以提供自訂的設定的行為<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性繼承自<xref:System.Collections.ObjectModel.Collection%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-397">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3f65-398">這個方法不會影響行為<xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType>屬性，這是唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="e3f65-398">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="e3f65-399">呼叫這個方法，設定基礎集合中的項目，並更新查閱字典的基底類別實作。</span><span class="sxs-lookup"><span data-stu-id="e3f65-399">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3f65-400">本章節包含兩個程式碼範例示範如何覆寫<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法以提供自訂設定的行為<xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-400">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e3f65-401">第一個範例會加入自訂通知事件，第二個物件的集合提供支援可變動索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e3f65-401">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="e3f65-402">範例 1</span><span class="sxs-lookup"><span data-stu-id="e3f65-402">Example 1</span></span>  
  
 <span data-ttu-id="e3f65-403">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法，以提供的自訂行為<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，以及設定預設<xref:System.Collections.ObjectModel.Collection%601.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="e3f65-403">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="e3f65-404">在此範例中提供的自訂行為是名為將通知事件`Changed`，其引發的每個覆寫方法的結尾。</span><span class="sxs-lookup"><span data-stu-id="e3f65-404">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="e3f65-405">程式碼範例會建立`SimpleOrder`類別，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>代表簡單的訂單。</span><span class="sxs-lookup"><span data-stu-id="e3f65-405">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="e3f65-406">訂購表單包含`OrderItem`物件代表的項目排序。</span><span class="sxs-lookup"><span data-stu-id="e3f65-406">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="e3f65-407">程式碼範例也會建立`SimpleOrderChangedEventArgs`類別包含事件資訊，以及列舉來識別變更的類型。</span><span class="sxs-lookup"><span data-stu-id="e3f65-407">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="e3f65-408">程式碼範例示範自訂行為藉由在呼叫的屬性和方法在衍生類別`Main`方法`Demo`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-408">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="e3f65-409">這個程式碼範例會使用不可變的索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="e3f65-409">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="e3f65-410">程式碼範例會使用可變動的金鑰，請參閱<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="e3f65-410">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="e3f65-411">範例 2</span><span class="sxs-lookup"><span data-stu-id="e3f65-411">Example 2</span></span>  
  
 <span data-ttu-id="e3f65-412">下列程式碼範例示範如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>方法，以支援可變動索引鍵，以及如何覆寫的受保護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>， <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>，和<xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A>方法來維護索引鍵的完整性和集合中。</span><span class="sxs-lookup"><span data-stu-id="e3f65-412">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="e3f65-413">程式碼範例會建立`MutableKeys`集合，衍生自<xref:System.Collections.ObjectModel.KeyedCollection%602>，而`MutableKey`類別。</span><span class="sxs-lookup"><span data-stu-id="e3f65-413">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="e3f65-414">`MutableKey`類別具有可設定`Key`屬性。</span><span class="sxs-lookup"><span data-stu-id="e3f65-414">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="e3f65-415">新的金鑰是指派給屬性時，會呼叫屬性 setter `internal` (`Friend`在 Visual Basic 中)`ChangeKey`方法來測試是否與現有的索引鍵衝突的新索引鍵的集合。</span><span class="sxs-lookup"><span data-stu-id="e3f65-415">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="e3f65-416">如果是的話，會擲回例外狀況，且屬性值不會變更。</span><span class="sxs-lookup"><span data-stu-id="e3f65-416">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="e3f65-417">為了維護之間的連線`MutableKey`物件和`MutableKeys`集合，並防止物件被插入兩個集合`MutableKey`類別具有`internal`(`Friend`在 Visual Basic 中) `Collection`欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-417">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="e3f65-418">這個欄位由受保護的方法，提供自訂行為中新增和移除項目集合，例如維護<xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3f65-418">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="e3f65-419">項目加入至集合中，移除項目時，清除時，會設定欄位。</span><span class="sxs-lookup"><span data-stu-id="e3f65-419">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>