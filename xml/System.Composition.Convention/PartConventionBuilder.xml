<Type Name="PartConventionBuilder" FullName="System.Composition.Convention.PartConventionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2db64a21b17114b95f902965178ad7d89ff87da1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PartConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.PartConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PartConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartConventionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d6e29-101">將類型設定為 Managed Extensibility Framework (MEF) 組件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6e29-101">Configures a type as a Managed Extensibility Framework (MEF) part.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPartMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, Func&lt;Type,object&gt; getValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder AddPartMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; getValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPartMetadata (name As String, getValueFromPartType As Func(Of Type, Object)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ AddPartMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getValueFromPartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d6e29-102">要加入之中繼資料的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-102">The name of the metadata to add.</span>
          </span>
        </param>
        <param name="getValueFromPartType">
          <span data-ttu-id="d6e29-103">傳回組件類型上的中繼資料值的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-103">A function that returns the metadata value on the part type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-104">將具有指定之名稱及值的中繼資料加入至組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-104">Adds metadata that has the specified name and value to the part.</span>
          </span>
          <span data-ttu-id="d6e29-105">值是由函式所傳回，該函式將組件類型對應到中繼資料值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-105">The value is returned by a function that maps the part type to the metadata value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-106">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-106">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPartMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder AddPartMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPartMetadata (name As String, value As Object) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ AddPartMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d6e29-107">中繼資料名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-107">The metadata name.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d6e29-108">中繼資料值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-108">The metadata value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-109">將具有指定之名稱及值的中繼資料加入至組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-109">Adds metadata that has the specified name and value to the part.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-110">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-110">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export" />
      <MemberSignature Language="VB.NET" Value="Public Function Export () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Export();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6e29-111">將組件及其具象類型匯出為合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-111">Exports the part with its concrete type as the contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-112">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-112">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export (Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export(class System.Action`1&lt;class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (exportConfiguration As Action(Of ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Export(Action&lt;System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="exportConfiguration">
          <span data-ttu-id="d6e29-113">設定組件的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-113">An action that configures the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-114">匯出具有指定之組態的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-114">Exports the part that has the specified configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-115">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-115">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ Export();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d6e29-116">合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-116">The contract type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d6e29-117">匯出具有指定之合約類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-117">Exports the part that has the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-118">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-118">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export&lt;T&gt; (Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export&lt;T&gt;(class System.Action`1&lt;class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) (exportConfiguration As Action(Of ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ Export(Action&lt;System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d6e29-119">合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-119">The contract type.</span>
          </span>
        </typeparam>
        <param name="exportConfiguration">
          <span data-ttu-id="d6e29-120">設定組件的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-120">An action that configures the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-121">使用指定的組態，匯出具有指定之合約類型的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-121">Exports the part that has the specified contract type by using the specified configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-122">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-122">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6e29-123">選取要匯出之組件類型上的所有介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-123">Selects all interfaces on the part type to be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-124">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-124">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter">
          <span data-ttu-id="d6e29-125">指定要選取之介面的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-125">A predicate that specifies the interfaces to be selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-126">根據指定的篩選條件，選取要匯出之組件類型上的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-126">Selects interfaces on the part type to be exported according to the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-127">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-127">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter, Action&lt;Type,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter, class System.Action`2&lt;class System.Type, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type), exportConfiguration As Action(Of Type, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter, Action&lt;Type ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Type,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter">
          <span data-ttu-id="d6e29-128">指定要選取之介面的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-128">A predicate that specifies the interfaces to be selected.</span>
          </span>
        </param>
        <param name="exportConfiguration">
          <span data-ttu-id="d6e29-129">設定匯出的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-129">An action that configures the exports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-130">使用指定的匯出組態，根據指定的篩選條件，選取要匯出之組件類型上的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-130">Selects interfaces on the part type to be exported according to the specified filter, using the specified export configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-131">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-131">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-132">指定要匯出之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-132">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-133">根據指定的述詞，選取要匯出之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-133">Selects the properties on the part to export according to the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-134">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-134">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-135">指定要匯出之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-135">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <param name="exportConfiguration">
          <span data-ttu-id="d6e29-136">設定匯出的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-136">An action that configures the exports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-137">使用指定的匯出組態，根據指定的述詞，選取要匯出之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-137">Selects the properties on the part to export according to the specified predicate, using the specified export configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-138">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-138">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d6e29-139">合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-139">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-140">指定要匯出之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-140">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-141">使用指定的合約類型，根據指定的述詞，選取要匯出之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-141">Selects the properties on the part to export according to the specified predicate, using the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-142">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-142">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d6e29-143">合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-143">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-144">指定要匯出之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-144">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <param name="exportConfiguration">
          <span data-ttu-id="d6e29-145">設定匯出的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-145">An action that configures the exports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-146">使用指定的合約類型和匯出組態，根據指定的述詞，選取要匯出之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-146">Selects the properties on the part to export according to the specified predicate, using the specified contract type and export configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-147">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-147">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-148">指定要匯入之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-148">A predicate that specifies the properites to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-149">根據指定的述詞，選取要匯入之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-149">Selects the properties on the part to import according to the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-150">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-150">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-151">指定要匯入之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-151">A predicate that specifies the properites to import.</span>
          </span>
        </param>
        <param name="importConfiguration">
          <span data-ttu-id="d6e29-152">設定匯入的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-152">An action that configures the imports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-153">使用指定的匯入組態，根據指定的述詞，選取要匯入之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-153">Selects the properties on the part to import according to the specified predicate, using the specified import configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-154">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-154">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d6e29-155">合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-155">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-156">指定要匯入之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-156">A predicate that specifies the properties to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-157">使用指定的合約類型，根據指定的述詞，選取要匯入之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-157">Selects the properties on the part to import according to the specified predicate, using the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-158">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-158">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d6e29-159">合約類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-159">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="d6e29-160">指定要匯入之屬性的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-160">A predicate that specifies the properties to import.</span>
          </span>
        </param>
        <param name="importConfiguration">
          <span data-ttu-id="d6e29-161">設定匯入的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-161">An action that configures the imports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-162">使用指定的合約類型和匯入組態，根據指定的述詞，選取要匯入之組件上的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-162">Selects the properties on the part to import according to the specified predicate, using the specified contract type and import configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-163">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-163">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyImportsSatisfied">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied (Predicate&lt;System.Reflection.MethodInfo&gt; methodFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied(class System.Predicate`1&lt;class System.Reflection.MethodInfo&gt; methodFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function NotifyImportsSatisfied (methodFilter As Predicate(Of MethodInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ NotifyImportsSatisfied(Predicate&lt;System::Reflection::MethodInfo ^&gt; ^ methodFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodFilter" Type="System.Predicate&lt;System.Reflection.MethodInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="methodFilter">
          <span data-ttu-id="d6e29-164">選取方法的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-164">A predicate that selects the methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-165">選取要在組合完成時當做通知的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-165">Select methods to be used as a notification when composition is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-166">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-166">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt; constructorSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder SelectConstructor(class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.ConstructorInfo&gt;, class System.Reflection.ConstructorInfo&gt; constructorSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorSelector As Func(Of IEnumerable(Of ConstructorInfo), ConstructorInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ SelectConstructor(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorSelector" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorSelector">
          <span data-ttu-id="d6e29-167">傳回單一建構函式的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-167">A function that returns a single constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-168">使用指定的函式，選取用來初始化組件的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-168">Selects the constructor used to initialize the part by using the specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-169">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-169">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt; constructorSelector, Action&lt;System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder SelectConstructor(class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.ConstructorInfo&gt;, class System.Reflection.ConstructorInfo&gt; constructorSelector, class System.Action`2&lt;class System.Reflection.ParameterInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorSelector As Func(Of IEnumerable(Of ConstructorInfo), ConstructorInfo), importConfiguration As Action(Of ParameterInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ SelectConstructor(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorSelector, Action&lt;System::Reflection::ParameterInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorSelector" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorSelector">
          <span data-ttu-id="d6e29-170">傳回單一建構函式的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-170">A function that returns a single constructor.</span>
          </span>
        </param>
        <param name="importConfiguration">
          <span data-ttu-id="d6e29-171">設定建構函式匯入的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-171">A method that configures the constructor's imports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-172">使用指定的函式和匯入組態，選取用來初始化組件的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-172">Selects the constructor used to initialize the part by using the specified function and import configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-173">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-173">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Shared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Shared() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Function Shared () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Shared();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6e29-174">將這個組件標記為要在整個組合中共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-174">Marks the part as being shared throughout the entire composition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-175">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-175">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Shared (string sharingBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Shared(string sharingBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shared (sharingBoundary As String) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Shared(System::String ^ sharingBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingBoundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sharingBoundary">
          <span data-ttu-id="d6e29-176">界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-176">The boundary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6e29-177">將這個組件標記為要在指定的界限內共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-177">Marks the part as being shared within the specified boundary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6e29-178">可用於進一步設定組件的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6e29-178">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>