<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StackTrace.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552111dbb266fdea14b49a674f0fec8c61c22827d8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">111dbb266fdea14b49a674f0fec8c61c22827d8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackTrace">
          <source>Represents a stack trace, which is an ordered collection of one or more stack frames.</source>
          <target state="translated">表示堆疊追蹤，這是一個或多個堆疊框架的已排序集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> information will be most informative with Debug build configurations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 就會使用偵錯組建組態的資訊最多資訊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
          <target state="translated">根據預設，偵錯組建中包含偵錯符號，但不需要發行組建。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> objects.</source>
          <target state="translated">偵錯符號包含大部分的檔案、 方法名稱、 行號和資料行資訊用來建構<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> might not report as many method calls as expected, due to code transformations that occur during optimization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 可能不會報告為多個方法呼叫，如預期般，因為發生在最佳化期間的程式碼轉換。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>The following console application demonstrates how to create a simple <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> and iterate through its frames to obtain debugging and diagnostic information.</source>
          <target state="translated">下列主控台應用程式示範如何建立簡單<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>並逐一查看其框架以取得偵錯和診斷資訊。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>for the ability of inheritors to access unmanaged code.</source>
          <target state="translated">用於存取 unmanaged 程式碼繼承者的能力。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">這個類別無法被繼承，部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackTrace">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame.</source>
          <target state="translated">從呼叫端的框架來初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>建立與呼叫端的目前執行緒，而且不包含檔案名稱、 行號或資料行資訊。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>Use this default constructor when you want a complete trace with only summary method information about the call stack.</source>
          <target state="translated">當您想完成追蹤只摘要方法的呼叫堆疊的相關的資訊，請使用此預設建構函式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>The following code example displays the first and last function calls in a stack trace.</source>
          <target state="translated">下列程式碼範例顯示的第一個和最後一個函式呼叫中的堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取檔案名稱、行號和資料行編號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame, optionally capturing source information.</source>
          <target state="translated">從呼叫端的框架來初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體，可以選擇性地擷取來源資訊。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>建立與呼叫端的目前執行緒。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source>The following code example demonstrates various <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> constructor methods.</source>
          <target state="translated">下列程式碼範例示範各種<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>建構函式方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>The frame that the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> object should contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 物件應該含有的框架。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class that contains a single frame.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體，這個執行個體含有單一框架。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>Use this constructor when you do not want the overhead of a full stack trace.</source>
          <target state="translated">當您不想使用完整的堆疊追蹤的額外負荷，請使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>The following code example writes stack trace information to an event log entry.</source>
          <target state="translated">下列程式碼範例將堆疊追蹤資訊寫入事件記錄項目。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">例外狀況物件，從其中建構堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class using the provided exception object.</source>
          <target state="translated">使用提供的例外狀況物件初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>建立與呼叫端的目前執行緒，而且不包含檔案名稱、 行號或資料行資訊。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">產生的堆疊追蹤說明堆疊在例外狀況的時間。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">要開始追蹤的堆疊上的框架數。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame, skipping the specified number of frames.</source>
          <target state="translated">從呼叫端的框架初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體，略過指定的框架數。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>建立與呼叫端的目前執行緒，而且不包含檔案名稱、 行號或資料行資訊。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>會包含任何框架。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 參數為負數。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">例外狀況物件，從其中建構堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">要開始追蹤的堆疊上的框架數。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class using the provided exception object and skipping the specified number of frames.</source>
          <target state="translated">使用所提供的例外狀況物件初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體，並跳過指定數量的框架。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>不包含檔案名稱、 行號或資料行資訊。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">產生的堆疊追蹤說明堆疊在例外狀況的時間。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>會包含任何框架。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 參數為負數。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">要開始追蹤的堆疊上的框架數。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取檔案名稱、行號和資料行編號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</source>
          <target state="translated">使用呼叫端的框架初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體，並跳過指定數量的框架，亦可選擇性擷取來源資訊。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>會包含任何框架。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>The following code example demonstrates various <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> constructor methods.</source>
          <target state="translated">下列程式碼範例示範各種<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>建構函式方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 參數為負數。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>The thread whose stack trace is requested.</source>
          <target state="translated">堆疊追蹤受要求的執行緒。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取檔案名稱、行號和資料行編號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class for a specific thread, optionally capturing source information.</source>
          <target state="translated">為特定執行緒、並選擇性地擷取來源資訊，來初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>Do not use this constructor overload.</source>
          <target state="translated">不要使用這個建構函式多載。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>Do not use this constructor.</source>
          <target state="translated">請勿使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>It is obsolete, and there is no recommended alternative.</source>
          <target state="translated">已經過時，而且沒有任何建議的替代方案。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</source>
          <target state="translated">當您暫停執行緒時，您會有無從得知很容易發生何種程式碼執行時，它的死結。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> might be blocked.</source>
          <target state="translated">例如，如果您暫停執行緒，而安全性權限評估期間保留鎖定，其他的執行緒<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>可能封鎖。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>If you suspend a thread while it is executing a class constructor, other threads in the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> that attempt to use that class are blocked.</source>
          <target state="translated">如果類別建構函式執行時，您可以暫停執行緒，其他執行緒中<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>，嘗試使用封鎖的類別。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>The thread <ph id="ph1">&lt;paramref name="targetThread" /&gt;</ph> is not suspended.</source>
          <target state="translated">執行緒 <ph id="ph1">&lt;paramref name="targetThread" /&gt;</ph> 未暫止。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">例外狀況物件，從其中建構堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">要開始追蹤的堆疊上的框架數。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取檔案名稱、行號和資料行編號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</source>
          <target state="translated">使用所提供的例外狀況物件將 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體初始化，並跳過指定數量的框架，亦可選擇性擷取來源資訊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">產生的堆疊追蹤說明堆疊在例外狀況的時間。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>會包含任何框架。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 參數為負數。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">例外狀況物件，從其中建構堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取檔案名稱、行號和資料行編號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class, using the provided exception object and optionally capturing source information.</source>
          <target state="translated">使用提供的例外狀況物件，及選擇性地擷取來源資訊，來初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">產生的堆疊追蹤說明堆疊在例外狀況的時間。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.StackTrace.FrameCount">
          <source>Gets the number of frames in the stack trace.</source>
          <target state="translated">取得堆疊追蹤中的框架數。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.StackTrace.FrameCount">
          <source>The number of frames in the stack trace.</source>
          <target state="translated">堆疊追蹤裡的框架數。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.StackTrace.FrameCount">
          <source>The following code example displays the first and last function calls in a stack trace.</source>
          <target state="translated">下列程式碼範例顯示的第一個和最後一個函式呼叫中的堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>The index of the stack frame requested.</source>
          <target state="translated">要求的堆疊框架索引。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>Gets the specified stack frame.</source>
          <target state="translated">取得指定的堆疊框架。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>The specified stack frame.</source>
          <target state="translated">指定的堆疊框架。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>Stack frames are numbered starting at 0, which is the last stack frame pushed.</source>
          <target state="translated">堆疊框架的編號從 0，也就是最後一個推入堆疊框架。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>The following code example displays the first and last function calls in a stack trace.</source>
          <target state="translated">下列程式碼範例顯示的第一個和最後一個函式呼叫中的堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>Returns a copy of all stack frames in the current stack trace.</source>
          <target state="translated">傳回目前堆疊追蹤內的所有堆疊框架的複本。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> representing the function calls in the stack trace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 型別的陣列，表示堆疊追蹤中的函式呼叫。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>Use the returned <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> array to enumerate and examine function calls in the <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>.</source>
          <target state="translated">使用傳回<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>陣列列舉及檢查函式呼叫中<ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The length of the returned array is equal to the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> property value.</source>
          <target state="translated">傳回陣列的長度等於<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> array elements are in reverse chronological order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>陣列項目是依反向時間順序。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>陣列索引 0 表示最新函式呼叫中的堆疊追蹤和最後一個推入至呼叫堆疊的畫面格。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at array index <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>的陣列索引處<ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph>減 1 代表最舊函式呼叫中的堆疊追蹤和第一個推入至呼叫堆疊框架。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> method to obtain all stack frames in a stack trace; use the <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> method to obtain a specific stack frame in a stack trace.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph>方法，以取得所有的堆疊框架的堆疊追蹤，使用<ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph>方法，以取得特定的堆疊框架的堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> indexes are ordered alike by the two methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>索引會依照類似的兩種方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at index 0 in the array returned by <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> is equivalent to the <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> returned by <ph id="ph4">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> with an input index of 0.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>所傳回的陣列中位於索引 0<ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph>相當於<ph id="ph3">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>傳回<ph id="ph4">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph>輸入索引為 0。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The following code example demonstrates enumerating the frames in a <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何列舉中的框架<ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>Defines the default for the number of methods to omit from the stack trace.</source>
          <target state="translated">定義要從堆疊追蹤省略的方法數預設值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>This field is constant.</source>
          <target state="translated">這個欄位是常數。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>The default value for the number of methods to skip at the beginning of the stack trace.</source>
          <target state="translated">堆疊追蹤的開頭要略過的方法數字預設值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>The value of this constant is 0.</source>
          <target state="translated">這個常數的值為 0。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.ToString">
          <source>Builds a readable representation of the stack trace.</source>
          <target state="translated">建立堆疊追蹤的可讀取表示。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.ToString">
          <source>A readable representation of the stack trace.</source>
          <target state="translated">堆疊追蹤的可讀取表示。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.ToString">
          <source>The following code example writes stack trace information to an event log entry.</source>
          <target state="translated">下列程式碼範例將堆疊追蹤資訊寫入事件記錄項目。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>