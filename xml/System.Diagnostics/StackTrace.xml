<Type Name="StackTrace" FullName="System.Diagnostics.StackTrace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfcfcc464494d32b82f24347084a375b56c13653" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StackTrace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StackTrace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackTrace" />
  <TypeSignature Language="VB.NET" Value="Public Class StackTrace" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackTrace" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="48da5-101">表示堆疊追蹤，這是一個或多個堆疊框架的已排序集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48da5-101">Represents a stack trace, which is an ordered collection of one or more stack frames.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-102"><xref:System.Diagnostics.StackTrace> 就會使用偵錯組建組態的資訊最多資訊。</span><span class="sxs-lookup"><span data-stu-id="48da5-102"><xref:System.Diagnostics.StackTrace> information will be most informative with Debug build configurations.</span></span> <span data-ttu-id="48da5-103">根據預設，偵錯組建中包含偵錯符號，但不需要發行組建。</span><span class="sxs-lookup"><span data-stu-id="48da5-103">By default, Debug builds include debug symbols, while Release builds do not.</span></span> <span data-ttu-id="48da5-104">偵錯符號包含大部分的檔案、 方法名稱、 行號和資料行資訊用來建構<xref:System.Diagnostics.StackFrame>和<xref:System.Diagnostics.StackTrace>物件。</span><span class="sxs-lookup"><span data-stu-id="48da5-104">The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> and <xref:System.Diagnostics.StackTrace> objects.</span></span>  
  
 <span data-ttu-id="48da5-105"><xref:System.Diagnostics.StackTrace> 可能不會報告為多個方法呼叫，如預期般，因為發生在最佳化期間的程式碼轉換。</span><span class="sxs-lookup"><span data-stu-id="48da5-105"><xref:System.Diagnostics.StackTrace> might not report as many method calls as expected, due to code transformations that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-106">下列主控台應用程式示範如何建立簡單<xref:System.Diagnostics.StackTrace>並逐一查看其框架以取得偵錯和診斷資訊。</span><span class="sxs-lookup"><span data-stu-id="48da5-106">The following console application demonstrates how to create a simple <xref:System.Diagnostics.StackTrace> and iterate through its frames to obtain debugging and diagnostic information.</span></span>  
  
 [!code-cpp[StackTraceSample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample1/CPP/stacktracesample1.cpp#1)]
 [!code-csharp[StackTraceSample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample1/CS/stacktracesample1.cs#1)]
 [!code-vb[StackTraceSample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample1/VB/stacktracesample1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="48da5-107">用於存取 unmanaged 程式碼繼承者的能力。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48da5-107">for the ability of inheritors to access unmanaged code.</span>
      </span>
      <span data-ttu-id="48da5-108">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48da5-108">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      </span>
      <span data-ttu-id="48da5-109">這個類別無法被繼承，部分信任程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48da5-109">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <altmember cref="P:System.Exception.StackTrace" />
    <altmember cref="P:System.Environment.StackTrace" />
    <altmember cref="P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48da5-110">初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-110">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48da5-111">從呼叫端的框架來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-111">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-112"><xref:System.Diagnostics.StackTrace>建立與呼叫端的目前執行緒，而且不包含檔案名稱、 行號或資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="48da5-112">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="48da5-113">當您想完成追蹤只摘要方法的呼叫堆疊的相關的資訊，請使用此預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="48da5-113">Use this default constructor when you want a complete trace with only summary method information about the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-114">下列程式碼範例顯示的第一個和最後一個函式呼叫中的堆疊追蹤。</span><span class="sxs-lookup"><span data-stu-id="48da5-114">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(bool fNeedFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fNeedFileInfo">
          <span data-ttu-id="48da5-115">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-115">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-116">從呼叫端的框架來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，可以選擇性地擷取來源資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-116">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-117"><xref:System.Diagnostics.StackTrace>建立與呼叫端的目前執行緒。</span><span class="sxs-lookup"><span data-stu-id="48da5-117">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-118">下列程式碼範例示範各種<xref:System.Diagnostics.StackTrace>建構函式方法。</span><span class="sxs-lookup"><span data-stu-id="48da5-118">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Diagnostics.StackFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.StackFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (frame As StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Diagnostics::StackFrame ^ frame);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="System.Diagnostics.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="48da5-119">
            <see cref="T:System.Diagnostics.StackTrace" /> 物件應該含有的框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-119">The frame that the <see cref="T:System.Diagnostics.StackTrace" /> object should contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-120">初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，這個執行個體含有單一框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-120">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class that contains a single frame.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-121">當您不想使用完整的堆疊追蹤的額外負荷，請使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="48da5-121">Use this constructor when you do not want the overhead of a full stack trace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-122">下列程式碼範例將堆疊追蹤資訊寫入事件記錄項目。</span><span class="sxs-lookup"><span data-stu-id="48da5-122">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48da5-123">例外狀況物件，從其中建構堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-123">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-124">使用提供的例外狀況物件初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-124">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-125"><xref:System.Diagnostics.StackTrace>建立與呼叫端的目前執行緒，而且不包含檔案名稱、 行號或資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="48da5-125">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="48da5-126">產生的堆疊追蹤說明堆疊在例外狀況的時間。</span><span class="sxs-lookup"><span data-stu-id="48da5-126">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48da5-127">
            <paramref name="e" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-127">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipFrames">
          <span data-ttu-id="48da5-128">要開始追蹤的堆疊上的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-128">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-129">從呼叫端的框架初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，略過指定的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-129">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-130"><xref:System.Diagnostics.StackTrace>建立與呼叫端的目前執行緒，而且不包含檔案名稱、 行號或資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="48da5-130">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="48da5-131">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<xref:System.Diagnostics.StackTrace>會包含任何框架。</span><span class="sxs-lookup"><span data-stu-id="48da5-131">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="48da5-132">
            <paramref name="skipFrames" /> 參數為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-132">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48da5-133">例外狀況物件，從其中建構堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-133">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="skipFrames">
          <span data-ttu-id="48da5-134">要開始追蹤的堆疊上的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-134">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-135">使用所提供的例外狀況物件初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，並跳過指定數量的框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-135">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object and skipping the specified number of frames.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-136"><xref:System.Diagnostics.StackTrace>不包含檔案名稱、 行號或資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="48da5-136">The <xref:System.Diagnostics.StackTrace> does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="48da5-137">產生的堆疊追蹤說明堆疊在例外狀況的時間。</span><span class="sxs-lookup"><span data-stu-id="48da5-137">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="48da5-138">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<xref:System.Diagnostics.StackTrace>會包含任何框架。</span><span class="sxs-lookup"><span data-stu-id="48da5-138">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48da5-139">
            <paramref name="e" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-139">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="48da5-140">
            <paramref name="skipFrames" /> 參數為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-140">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames, bool fNeedFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipFrames">
          <span data-ttu-id="48da5-141">要開始追蹤的堆疊上的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-141">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="48da5-142">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-142">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-143">使用呼叫端的框架初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體，並跳過指定數量的框架，亦可選擇性擷取來源資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-143">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-144">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<xref:System.Diagnostics.StackTrace>會包含任何框架。</span><span class="sxs-lookup"><span data-stu-id="48da5-144">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-145">下列程式碼範例示範各種<xref:System.Diagnostics.StackTrace>建構函式方法。</span><span class="sxs-lookup"><span data-stu-id="48da5-145">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="48da5-146">
            <paramref name="skipFrames" /> 參數為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-146">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Thread targetThread, bool needFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetThread As Thread, needFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Threading::Thread ^ targetThread, bool needFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetThread" Type="System.Threading.Thread" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetThread">
          <span data-ttu-id="48da5-147">堆疊追蹤受要求的執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-147">The thread whose stack trace is requested.</span>
          </span>
        </param>
        <param name="needFileInfo">
          <span data-ttu-id="48da5-148">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-148">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-149">為特定執行緒、並選擇性地擷取來源資訊，來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-149">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class for a specific thread, optionally capturing source information.</span>
          </span>
          <span data-ttu-id="48da5-150">不要使用這個建構函式多載。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-150">Do not use this constructor overload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="48da5-151">請勿使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="48da5-151">Do not use this constructor.</span></span> <span data-ttu-id="48da5-152">已經過時，而且沒有任何建議的替代方案。</span><span class="sxs-lookup"><span data-stu-id="48da5-152">It is obsolete, and there is no recommended alternative.</span></span> <span data-ttu-id="48da5-153">當您暫停執行緒時，您會有無從得知很容易發生何種程式碼執行時，它的死結。</span><span class="sxs-lookup"><span data-stu-id="48da5-153">When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</span></span> <span data-ttu-id="48da5-154">例如，如果您暫停執行緒，而安全性權限評估期間保留鎖定，其他的執行緒<xref:System.AppDomain>可能封鎖。</span><span class="sxs-lookup"><span data-stu-id="48da5-154">For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="48da5-155">如果類別建構函式執行時，您可以暫停執行緒，其他執行緒中<xref:System.AppDomain>，嘗試使用封鎖的類別。</span><span class="sxs-lookup"><span data-stu-id="48da5-155">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="48da5-156">執行緒 <paramref name="targetThread" /> 未暫止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-156">The thread <paramref name="targetThread" /> is not suspended.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames, bool fNeedFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48da5-157">例外狀況物件，從其中建構堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-157">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="skipFrames">
          <span data-ttu-id="48da5-158">要開始追蹤的堆疊上的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-158">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="48da5-159">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-159">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-160">使用所提供的例外狀況物件將 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體初始化，並跳過指定數量的框架，亦可選擇性擷取來源資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-160">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-161">產生的堆疊追蹤說明堆疊在例外狀況的時間。</span><span class="sxs-lookup"><span data-stu-id="48da5-161">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="48da5-162">如果要略過的框架數目是否大於或等於總數時，呼叫堆疊上框架的執行個體建立時，<xref:System.Diagnostics.StackTrace>會包含任何框架。</span><span class="sxs-lookup"><span data-stu-id="48da5-162">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48da5-163">
            <paramref name="e" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-163">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="48da5-164">
            <paramref name="skipFrames" /> 參數為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-164">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, bool needFileInfo) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, bool fNeedFileInfo) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" FrameworkAlternate="netcore-2.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="needFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="48da5-165">例外狀況物件，從其中建構堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-165">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="48da5-166">若要擷取檔案名稱、行號和資料行編號，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-166">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="exception">To be added.</param>
        <param name="needFileInfo">To be added.</param>
        <summary>
          <span data-ttu-id="48da5-167">使用提供的例外狀況物件，及選擇性地擷取來源資訊，來初始化 <see cref="T:System.Diagnostics.StackTrace" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-167">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class, using the provided exception object and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-168">產生的堆疊追蹤說明堆疊在例外狀況的時間。</span><span class="sxs-lookup"><span data-stu-id="48da5-168">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48da5-169">
            <paramref name="e" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-169">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="FrameCount">
      <MemberSignature Language="C#" Value="public virtual int FrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrameCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.StackTrace.FrameCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FrameCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FrameCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48da5-170">取得堆疊追蹤中的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-170">Gets the number of frames in the stack trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48da5-171">堆疊追蹤裡的框架數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-171">The number of frames in the stack trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48da5-172">下列程式碼範例顯示的第一個和最後一個函式呼叫中的堆疊追蹤。</span><span class="sxs-lookup"><span data-stu-id="48da5-172">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrame (index As Integer) As StackFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::StackFrame ^ GetFrame(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="48da5-173">要求的堆疊框架索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-173">The index of the stack frame requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48da5-174">取得指定的堆疊框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-174">Gets the specified stack frame.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48da5-175">指定的堆疊框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-175">The specified stack frame.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-176">堆疊框架的編號從 0，也就是最後一個推入堆疊框架。</span><span class="sxs-lookup"><span data-stu-id="48da5-176">Stack frames are numbered starting at 0, which is the last stack frame pushed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-177">下列程式碼範例顯示的第一個和最後一個函式呼叫中的堆疊追蹤。</span><span class="sxs-lookup"><span data-stu-id="48da5-177">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrames" />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame[] GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame[] GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrames () As StackFrame()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::StackFrame ^&gt; ^ GetFrames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48da5-178">傳回目前堆疊追蹤內的所有堆疊框架的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-178">Returns a copy of all stack frames in the current stack trace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48da5-179">
            <see cref="T:System.Diagnostics.StackFrame" /> 型別的陣列，表示堆疊追蹤中的函式呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-179">An array of type <see cref="T:System.Diagnostics.StackFrame" /> representing the function calls in the stack trace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-180">使用傳回<xref:System.Diagnostics.StackFrame>陣列列舉及檢查函式呼叫中<xref:System.Diagnostics.StackTrace>。</span><span class="sxs-lookup"><span data-stu-id="48da5-180">Use the returned <xref:System.Diagnostics.StackFrame> array to enumerate and examine function calls in the <xref:System.Diagnostics.StackTrace>.</span></span> <span data-ttu-id="48da5-181">傳回陣列的長度等於<xref:System.Diagnostics.StackTrace.FrameCount%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="48da5-181">The length of the returned array is equal to the <xref:System.Diagnostics.StackTrace.FrameCount%2A> property value.</span></span>  
  
 <span data-ttu-id="48da5-182"><xref:System.Diagnostics.StackFrame>陣列項目是依反向時間順序。</span><span class="sxs-lookup"><span data-stu-id="48da5-182">The <xref:System.Diagnostics.StackFrame> array elements are in reverse chronological order.</span></span> <span data-ttu-id="48da5-183"><xref:System.Diagnostics.StackFrame>陣列索引 0 表示最新函式呼叫中的堆疊追蹤和最後一個推入至呼叫堆疊的畫面格。</span><span class="sxs-lookup"><span data-stu-id="48da5-183">The <xref:System.Diagnostics.StackFrame> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</span></span> <span data-ttu-id="48da5-184"><xref:System.Diagnostics.StackFrame>的陣列索引處<xref:System.Diagnostics.StackTrace.FrameCount%2A>減 1 代表最舊函式呼叫中的堆疊追蹤和第一個推入至呼叫堆疊框架。</span><span class="sxs-lookup"><span data-stu-id="48da5-184">The <xref:System.Diagnostics.StackFrame> at array index <xref:System.Diagnostics.StackTrace.FrameCount%2A> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</span></span>  
  
 <span data-ttu-id="48da5-185">使用<xref:System.Diagnostics.StackTrace.GetFrames%2A>方法，以取得所有的堆疊框架的堆疊追蹤，使用<xref:System.Diagnostics.StackTrace.GetFrame%2A>方法，以取得特定的堆疊框架的堆疊追蹤。</span><span class="sxs-lookup"><span data-stu-id="48da5-185">Use the <xref:System.Diagnostics.StackTrace.GetFrames%2A> method to obtain all stack frames in a stack trace; use the <xref:System.Diagnostics.StackTrace.GetFrame%2A> method to obtain a specific stack frame in a stack trace.</span></span> <span data-ttu-id="48da5-186"><xref:System.Diagnostics.StackFrame>索引會依照類似的兩種方法。</span><span class="sxs-lookup"><span data-stu-id="48da5-186">The <xref:System.Diagnostics.StackFrame> indexes are ordered alike by the two methods.</span></span> <span data-ttu-id="48da5-187">例如，<xref:System.Diagnostics.StackFrame>所傳回的陣列中位於索引 0<xref:System.Diagnostics.StackTrace.GetFrames%2A>相當於<xref:System.Diagnostics.StackFrame>傳回<xref:System.Diagnostics.StackTrace.GetFrame%2A>輸入索引為 0。</span><span class="sxs-lookup"><span data-stu-id="48da5-187">For example, the <xref:System.Diagnostics.StackFrame> at index 0 in the array returned by <xref:System.Diagnostics.StackTrace.GetFrames%2A> is equivalent to the <xref:System.Diagnostics.StackFrame> returned by <xref:System.Diagnostics.StackTrace.GetFrame%2A> with an input index of 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48da5-188">下列程式碼範例示範如何列舉中的框架<xref:System.Diagnostics.StackTrace>。</span><span class="sxs-lookup"><span data-stu-id="48da5-188">The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.</span></span>  
  
 [!code-cpp[StackTraceSample2#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample2/CPP/stacktracesample2.cpp#3)]
 [!code-csharp[StackTraceSample2#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample2/CS/stacktracesample2.cs#3)]
 [!code-vb[StackTraceSample2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample2/VB/stacktracesample2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="METHODS_TO_SKIP">
      <MemberSignature Language="C#" Value="public const int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 METHODS_TO_SKIP = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberSignature Language="VB.NET" Value="Public Const METHODS_TO_SKIP As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int METHODS_TO_SKIP = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="48da5-189">定義要從堆疊追蹤省略的方法數預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-189">Defines the default for the number of methods to omit from the stack trace.</span>
          </span>
          <span data-ttu-id="48da5-190">這個欄位是常數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-190">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48da5-191">堆疊追蹤的開頭要略過的方法數字預設值。</span><span class="sxs-lookup"><span data-stu-id="48da5-191">The default value for the number of methods to skip at the beginning of the stack trace.</span></span> <span data-ttu-id="48da5-192">這個常數的值為 0。</span><span class="sxs-lookup"><span data-stu-id="48da5-192">The value of this constant is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48da5-193">建立堆疊追蹤的可讀取表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-193">Builds a readable representation of the stack trace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48da5-194">堆疊追蹤的可讀取表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48da5-194">A readable representation of the stack trace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48da5-195">下列程式碼範例將堆疊追蹤資訊寫入事件記錄項目。</span><span class="sxs-lookup"><span data-stu-id="48da5-195">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>