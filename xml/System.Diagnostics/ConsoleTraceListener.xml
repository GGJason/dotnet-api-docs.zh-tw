<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConsoleTraceListener.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c460e5408087ef9310e95d0e12d7120856a3e454.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c460e5408087ef9310e95d0e12d7120856a3e454</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Directs tracing or debugging output to either the standard output or the standard error stream.</source>
          <target state="translated">將追蹤或偵錯輸出直接導向到標準輸出或標準錯誤資料流。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class to write trace and debugging messages to the console.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>類別來寫入追蹤和偵錯的訊息至主控台。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>You can initialize a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write trace messages to the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream or to the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">您可以初始化<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件寫入至追蹤訊息<ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>資料流或<ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source><ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 介面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a<ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph><ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When trace and debugging output is enabled, the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> messages are written to the specified <ph id="ph2">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> stream, which is similar to the way messages are written with the <ph id="ph3">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">當追蹤和偵錯輸出已啟用，<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>訊息會寫入至指定<ph id="ph2">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph>資料流，訊息會寫入使用方式很類似<ph id="ph3">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph4">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In a console application, the <ph id="ph1">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <ph id="ph2">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">在主控台應用程式中，<ph id="ph1">&lt;xref:System.Console?displayProperty=nameWithType&gt;</ph>輸出和錯誤資料流寫入訊息至現有的主控台視窗中，或寫入資料流將重新導向<ph id="ph2">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</source>
          <target state="translated">如果主控台不存在，如同在 Windows 架構應用程式時，不會顯示訊息寫入主控台。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the appropriate <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection if you want messages written through <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.Debug&gt;</ph> to be written to the console.</source>
          <target state="translated">新增<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>至適當的物件<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，如果您想要透過撰寫郵件<ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>， <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>，或<ph id="ph5">&lt;xref:System.Diagnostics.Debug&gt;</ph>寫入至主控台。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In addition, you can write messages directly to the console using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">此外，您可以寫入訊息直接主控台使用<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes share the same <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection, accessed through their respective <ph id="ph4">`Listeners`</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>類別共用相同<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>集合，透過其各自存取<ph id="ph4">`Listeners`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If you add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the collection using one of these classes, the other class automatically uses the same listener.</source>
          <target state="translated">如果您將加入<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>另一個類別會自動使用相同的接聽程式来使用其中一個類別，在集合的物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Most compilers enable trace and debug output through conditional compilation flags.</source>
          <target state="translated">大多數的編譯器會啟用追蹤和偵錯輸出透過條件式編譯旗標。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>If you do not enable tracing or debugging, the messages written through the <ph id="ph1">&lt;xref:System.Diagnostics.Debug?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph> classes are effectively ignored.</source>
          <target state="translated">如果您未啟用追蹤或偵錯訊息寫入到<ph id="ph1">&lt;xref:System.Diagnostics.Debug?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Trace?displayProperty=nameWithType&gt;</ph>類別會有效地被忽略。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">啟用追蹤和偵錯輸出的語法是特定; 編譯器如果您使用 C# 或 Visual Basic 以外的編譯器，請參閱編譯器的文件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To enable debugging in C#, add the <bpt id="p1">**</bpt>/d:DEBUG<ept id="p1">**</ept>flag to the compiler command line when you compile your code, or you can add <bpt id="p2">**</bpt>#define DEBUG<ept id="p2">**</ept> to the top of your file.</source>
          <target state="translated">若要啟用偵錯 C# 中，加入<bpt id="p1">**</bpt>/d: debug<ept id="p1">**</ept>旗標設為編譯器命令列，當您編譯程式碼，或者您可以加入<bpt id="p2">**</bpt>#define 偵錯<ept id="p2">**</ept>加入您的檔案頂端。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In Visual Basic, add the <bpt id="p1">**</bpt>/d:DEBUG=True<ept id="p1">**</ept> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，加入<bpt id="p1">**</bpt>/d: debug = True<ept id="p1">**</ept>編譯器命令列的旗標。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To enable tracing in C#, add the <bpt id="p1">**</bpt>/d:TRACE<ept id="p1">**</ept> flag to the compiler command line when you compile your code, or add <bpt id="p2">**</bpt>#define TRACE<ept id="p2">**</ept> to the top of your file.</source>
          <target state="translated">若要啟用追蹤，在 C# 中的，加入<bpt id="p1">**</bpt>/d:TRACE<ept id="p1">**</ept>旗標設為編譯器命令列，當您編譯程式碼，或新增<bpt id="p2">**</bpt>#define 追蹤<ept id="p2">**</ept>加入您的檔案頂端。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In Visual Basic, add the <bpt id="p1">**</bpt>/d:TRACE=True<ept id="p1">**</ept> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，加入<bpt id="p1">**</bpt>/d:TRACE = True<ept id="p1">**</ept>編譯器命令列的旗標。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>You can add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection in your code, or you can add a <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection through the application configuration file.</source>
          <target state="translated">您可以加入<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，您的程式碼，或者您可以加入<ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件<ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>透過應用程式組態檔的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object in your code to write messages for a specific code section or execution path.</source>
          <target state="translated">新增<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>來寫入訊息的特定程式碼區段或執行路徑的程式碼中的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Add the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</source>
          <target state="translated">新增<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>應用程式執行時，直接所有追蹤和偵錯您應用程式組態檔中的物件訊息至主控台。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To write trace and debug messages to the console for a specific section of code, initialize a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object and add it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">若要寫入追蹤和偵錯程式碼的特定區段的主控台訊息，初始化<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件，並將它加入至<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Instrument the section of code that contains messages using the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> classes.</source>
          <target state="translated">檢測包含訊息使用的程式碼區段<ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>At the end of the code section, remove the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, and call the <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> method on the <ph id="ph4">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">在程式碼區段結束時，移除<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件從<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，並呼叫<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>To direct all trace and debug messages to the console while the application executes, add a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to the application configuration file.</source>
          <target state="translated">若要直接所有追蹤和偵錯主控台訊息，應用程式執行時，新增<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>應用程式組態檔的物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Edit the configuration file that corresponds to the name of your application, or the app.config file in a <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> project.</source>
          <target state="translated">編輯對應到您的應用程式名稱的組態檔或 app.config 檔案中的<ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>專案。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>In this file, insert an element for a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">在此檔案中，插入的項目<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object named <ph id="ph2">`configConsoleListener`</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">下列範例會將<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>名為物件<ph id="ph2">`configConsoleListener`</ph>至<ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>For details about adding trace listeners in the application configuration file, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>listeners<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>.</source>
          <target state="translated">如需在應用程式組態檔中加入追蹤接聽項的詳細資訊，請參閱<bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>接聽程式<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The following code example implements a console application consisting of a class with two public methods.</source>
          <target state="translated">下列程式碼範例會實作的組成類別具有兩個公用方法的主控台應用程式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>The <ph id="ph1">`Main`</ph> method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法會檢查命令列引數，並判斷是否應該將追蹤輸出導向至標準錯誤資料流或標準輸出資料流。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source><ph id="ph1">`Main`</ph> creates and initializes a <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph3">&lt;xref:System.Console&gt;</ph> output stream, and adds this object to the trace listener collection.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 建立並初始化<ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件指定<ph id="ph3">&lt;xref:System.Console&gt;</ph>輸出資料流，並將此物件加入至追蹤接聽程式集合。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>It then calls the <ph id="ph1">`WriteEnvironmentInfoToTrace`</ph> method, which writes details about the executing environment and the trace listener configuration to the trace output.</source>
          <target state="translated">然後它會呼叫<ph id="ph1">`WriteEnvironmentInfoToTrace`</ph>方法，這個方法會寫入執行環境和追蹤輸出的追蹤接聽程式組態的相關詳細資料。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object.</source>
          <target state="translated">範例應用程式執行時，環境和追蹤組態詳細資料會寫入指定的主控台輸出資料流透過<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.ConsoleTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class with trace output written to the standard output stream.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> 類別的新執行個體，附追蹤輸出寫入至標準輸出資料流。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write messages to the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>要寫入訊息至物件<ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("").</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>屬性會初始化為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>The following code example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph2">&lt;xref:System.Console&gt;</ph> output stream and adds it to the trace listener collection.</source>
          <target state="translated">下列程式碼範例會初始化<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件指定<ph id="ph2">&lt;xref:System.Console&gt;</ph>輸出資料流，並將它加入追蹤接聽程式集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to write tracing and debugging output to the standard error stream; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to write tracing and debugging output to the standard output stream.</source>
          <target state="translated">如果是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，就表示要將追蹤與偵錯輸出寫入至標準錯誤資料流；如果是 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，則表示要寫入追蹤與偵錯輸出至標準輸出資料流。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> class with an option to write trace output to the standard output stream or the standard error stream.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.ConsoleTraceListener" /&gt;</ph> 類別的新執行個體，附寫入追蹤輸出至標準輸出資料流或標準錯誤資料流的選項。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object to write messages to either the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件，將訊息寫入 <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("").</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>屬性會初始化為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>The following code example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> object for the specified <ph id="ph2">&lt;xref:System.Console&gt;</ph> output stream and adds it to the trace listener collection.</source>
          <target state="translated">下列程式碼範例會初始化<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>物件指定<ph id="ph2">&lt;xref:System.Console&gt;</ph>輸出資料流，並將它加入追蹤接聽程式集合。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.ConsoleTraceListener.Close">
          <source>Closes the output to the stream specified for this trace listener.</source>
          <target state="translated">關閉輸出到為此追蹤接聽項所指定的資料流。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.ConsoleTraceListener.Close">
          <source>The stream specified for this <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> instance (either the <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph> stream or the <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> stream) is closed.</source>
          <target state="translated">這個指定之資料流<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>執行個體 (任一<ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>資料流或<ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph>資料流) 已關閉。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>