<Type Name="PerformanceCounterType" FullName="System.Diagnostics.PerformanceCounterType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="795e77f42b86e69226603d9859d95cdbc9616196" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53226843" /></Metadata><TypeSignature Language="C#" Value="public enum PerformanceCounterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PerformanceCounterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PerformanceCounterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PerformanceCounterType" />
  <TypeSignature Language="F#" Value="type PerformanceCounterType = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定用來計算 <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> 執行個體 (Instance) <see cref="T:System.Diagnostics.PerformanceCounter" /> 方法的公式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些計數器型別代表未經處理的資料，而其他項目代表一或多個計數器樣本為基礎的導出的值。 下列類別分類可用的計數器。  
  
-   平均︰ 測量值經過一段時間，並顯示最後兩個度量的平均值。 每個 」 平均計數器相關聯是基底計數器可追蹤所涉及的樣本數目。  
  
-   差異： 減一次的測量，從上一個，並顯示差異，如果它是正數;如果是負數，它們會顯示一個零。  
  
-   即時： 顯示最新的量。  
  
-   百分比： 會顯示成百分比的導出的值。  
  
-   速率： 範例經過一段時間的遞增的事件計數，並除以計數值的變更所顯示的活動率時間的變更。  
  
 當效能計數器資料，使用計數器型別，表示平均取樣可讓原始資料值供您使用有意義。 例如，未經處理資料計數器`NumberOfItems64`可以公開是相當隨機範例範例的資料。 平均計數器傳回的值計算的公式會 (X 0 + X 1 + X n) / n，其中每個 X 是未經處理計數器樣本。  
  
 速率計數器是類似於平均計數器，但使用的資源時，增加速率的情況下更有用。 快速計算平均值的公式是 ((X n X 0) / (T n-T 0)) / 頻率，而每個 X 是計數器樣本，而每個 T 是對應樣本的時間。 結果是每秒的平均使用率。  
  
> [!NOTE]
>  除非另有說明，基底的時間就會為秒。  
  
 在檢測應用程式 （建立並寫入自訂效能計數器），您可能會使用依賴隨附的基底計數器，可在計算中的效能計數器型別。 基底計數器必須緊接在其相關聯的計數器<xref:System.Diagnostics.CounterCreationDataCollection>應用程式所使用的集合。 下表列出基底計數器型別，以及其對應的效能計數器類型。  
  
|基底計數器型別|效能計數器類型|  
|-----------------------|-------------------------------|  
|`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|  
|`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|  
|`RawBase`|`RawFraction`|  
|`SampleBase`|`SampleFraction`|  
  
   
  
## Examples  
 下列範例示範數個中的計數器型別<xref:System.Diagnostics.PerformanceCounterType>列舉型別。  
  
 `AverageCount64`  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 `AverageTimer32`  
  
 [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CPP/averagetimer32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CS/averagetimer32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/VB/averagetimer32.vb#2)]  
  
 `ElapsedTime`  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 `NumberOfItems32`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CPP/numberofitems32.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CS/numberofitems32.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/VB/numberofitems32.vb#1)]  
  
 `NumberOfItems64`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CPP/numberofitems64.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CS/numberofitems64.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/VB/numberofitems64.vb#1)]  
  
 `SampleFraction`  
  
 [!code-csharp[PerformanceCounterType.SampleFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/CS/program.cs#1)]
 [!code-vb[PerformanceCounterType.SampleFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/VB/program.vb#1)]  
  
 `RateOfCountsPerSecond32`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CPP/rateofcountspersecond32.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CS/rateofcountspersecond32.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/VB/rateofcountspersecond32.vb#1)]  
  
 `RateOfCountsPerSecond64`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CPP/rateofcountspersecond64.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CS/rateofcountspersecond64.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/VB/rateofcountspersecond64.vb#1)]  
  
 `RawFraction`  
  
 [!code-cpp[PerformanceCounterType.RawFraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CPP/rawfraction.cpp#1)]
 [!code-csharp[PerformanceCounterType.RawFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CS/rawfraction.cs#1)]
 [!code-vb[PerformanceCounterType.RawFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RawFraction/VB/rawfraction.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
  </Docs>
  <Members>
    <Member MemberName="AverageBase">
      <MemberSignature Language="C#" Value="AverageBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageBase = int32(1073939458)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberSignature Language="VB.NET" Value="AverageBase" />
      <MemberSignature Language="C++ CLI" Value="AverageBase" />
      <MemberSignature Language="F#" Value="AverageBase = 1073939458" Usage="System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939458</MemberValue>
      <Docs>
        <summary>基底計數器型別，用於計算時間或計數平均，例如 <see langword="AverageTimer32" /> 和 <see langword="AverageCount64" />。 儲存計算計數器的分母，以表示「每個作業時間」或「每個作業次數」。</summary>
      </Docs>
    </Member>
    <Member MemberName="AverageCount64">
      <MemberSignature Language="C#" Value="AverageCount64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageCount64 = int32(1073874176)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberSignature Language="VB.NET" Value="AverageCount64" />
      <MemberSignature Language="C++ CLI" Value="AverageCount64" />
      <MemberSignature Language="F#" Value="AverageCount64 = 1073874176" Usage="System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073874176</MemberValue>
      <Docs>
        <summary>平均計數器，顯示在作業期間已處理項目的平均數量。 這個型別的計數器會顯示已處理項目對已完成作業數量的比例。 藉由比較最新間隔期間所處理的項目數量與最新間隔期間所完成的作業，可以計算比例 </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / (B 1-B 0)，其中 N 1 和 N 0 效能計數器的讀數，而在 B 1 和 0 B 及其對應`AverageBase`值。 因此，分子表示在取樣間隔時間期間處理的項目數量，所以分母代表在取樣間隔期間完成的作業數目。  
  
 這個型別的計數器包含 PhysicalDisk\ avg.磁碟位元組/傳送。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageTimer32">
      <MemberSignature Language="C#" Value="AverageTimer32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageTimer32 = int32(805438464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberSignature Language="VB.NET" Value="AverageTimer32" />
      <MemberSignature Language="C++ CLI" Value="AverageTimer32" />
      <MemberSignature Language="F#" Value="AverageTimer32 = 805438464" Usage="System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>805438464</MemberValue>
      <Docs>
        <summary>平均計數器，測量完成處理序或作業的平均使用時間。 這個型別的計數器會顯示樣本間隔的總耗用時間與此期間所完成處理序或作業數量的比例。 這個計數器型別會以系統時鐘的刻度為單位來測量時間 </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式: ((N 1-N 0) /F) / (B 1-B 0)，B 1 和 0 B N 1 和 N 0 為效能計數器的讀數時，為其對應`AverageBase`值和 F 是刻度秒數。 F 值納入方程式，以便可以顯示結果，以秒為單位。 因此，分子表示上一個取樣間隔期間的刻度計數的數字 F 代表刻度的頻率，所以分母代表在上一個取樣間隔期間完成的作業數目。  
  
 這個型別的計數器包含 PhysicalDisk\ avg.Disk sec/Transfer。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta32">
      <MemberSignature Language="C#" Value="CounterDelta32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta32 = int32(4195328)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberSignature Language="VB.NET" Value="CounterDelta32" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta32" />
      <MemberSignature Language="F#" Value="CounterDelta32 = 4195328" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195328</MemberValue>
      <Docs>
        <summary>差異計數器，顯示在最近兩次的樣本間隔間的測量屬性之變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：N 1-N 0，其中 N 1 和 N 0 是 效能計數器的讀數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta64">
      <MemberSignature Language="C#" Value="CounterDelta64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta64 = int32(4195584)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberSignature Language="VB.NET" Value="CounterDelta64" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta64" />
      <MemberSignature Language="F#" Value="CounterDelta64 = 4195584" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195584</MemberValue>
      <Docs>
        <summary>差異計數器，顯示在最近兩次的樣本間隔間的測量屬性之變更。 它和 <see langword="CounterDelta32" /> 計數器型別相同，但是它使用較大的欄位來容納較大的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：N 1-N 0，其中 N 1 和 N 0 是 效能計數器的讀數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiBase">
      <MemberSignature Language="C#" Value="CounterMultiBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiBase = int32(1107494144)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberSignature Language="VB.NET" Value="CounterMultiBase" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiBase" />
      <MemberSignature Language="F#" Value="CounterMultiBase = 1107494144" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1107494144</MemberValue>
      <Docs>
        <summary>基底計數器，表示取樣的項目數量。 當要取得多個類似項目的時間時，它會做為計算的分母來取得取樣項目的平均。 與 <see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" /> 和 <see langword="CounterMultiTimer100NsInverse" /> 一起使用。</summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer">
      <MemberSignature Language="C#" Value="CounterMultiTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer = int32(574686464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer" />
      <MemberSignature Language="F#" Value="CounterMultiTimer = 574686464" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>574686464</MemberValue>
      <Docs>
        <summary>百分比計數器，將一個或多個元件的作用時間顯示為樣本間隔的總時間百分比。 因為分子會記錄同時運作的元件的作用時間，所以產生的百分比可以超過 100 %。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此計數器是多重計時器。 多重計時器會從一個以上的元件執行個體收集資料，例如處理器或磁碟。 這個計數器型別不同於 `CounterMultiTimer100Ns`，因為它是以系統效能計時器的刻度為單位來測量時間，而不是以 100 奈秒 (Nanosecond) 為單位   
  
 公式: ((N 1-N 0) / (D 1-D 0)) x 100 B，其中 N 1 和 N 0 為效能計數器的讀數 D 1 和 D 0 是系統效能計時器的刻度為單位，其對應的時間讀數，B 變數代表受監視元件的基底的計數 （使用 bas型別的 e 計數器`CounterMultiBase`)。 因此，分子代表範例並的間隔期間監視的元件是作用中，所以分母代表總經過時間的取樣間隔時間的部分。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100Ns">
      <MemberSignature Language="C#" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100Ns = int32(575735040)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100Ns = 575735040" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>575735040</MemberValue>
      <Docs>
        <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 它會以 100 奈秒為單位來測量時間。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個計數器型別是多重計時器。 多重計時器是設計來監視一個以上的元件執行個體，例如處理器或磁碟   
  
 公式: ((N 1-N 0) / (D 1-D 0)) x 100 B，其中 N 1 和 N 0 為效能計數器的讀數 D 1 和 D 0 是以 100 奈秒為單位，其對應的時間讀數，B 變數代表受監視元件的基底的計數 （使用型別的基底計數器 `CounterMultiBase`). 因此，分子代表範例並的間隔期間監視的元件是作用中，所以分母代表總經過時間的取樣間隔時間的部分。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100NsInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100NsInverse = int32(592512256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100NsInverse = 592512256" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>592512256</MemberValue>
      <Docs>
        <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 這個型別的計數器會以 100 奈秒 (ns) 為單位來測量時間。 它們會藉由測量元件的非作用時間，並將 100 % 乘以監視物件數量的乘積減去非作用時間，來取得作用的時間。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個計數器型別是反向多重計時器。 多重計時器是設計來監視一個以上的元件執行個體，例如處理器或磁碟  反向計數器會測量元件處於非使用中的時間，並利用測得的閒置時間推算其作用時間  
  
 公式：(B-((N 1-N 0) / (D 1-D 0))) x 100，所以分母代表總經過時間的取樣間隔時間，分子代表的時間間隔期間監視的元件的非使用狀態和 B 代表受監視的元件數目使用基底計數器型別的`CounterMultiBase`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimerInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimerInverse = int32(591463680)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimerInverse = 591463680" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>591463680</MemberValue>
      <Docs>
        <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 它會藉由測量元件非作用時間，並將 100 % 乘以所監視物件數量的乘積減去非作用時間，來取得作用的時間。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個計數器型別是反向多重計時器。 多重計時器會監視一個以上的元件執行個體，例如處理器或磁碟。 反向計數器會測量元件處於非使用中的時間，並利用該測量推算其作用的時間。  
  
 這個計數器不同於 `CounterMultiTimer100NsInverse`，因為它是以系統效能計時器的刻度為單位來測量時間，而不是以 100 奈秒為單位   
  
 公式：(B-((N 1-N 0) / (D 1-D 0))) x 100，所以分母代表總經過時間的取樣間隔時間，分子代表的時間間隔期間監視的元件的非使用狀態和 B 代表受監視的元件數目使用基底計數器型別的`CounterMultiBase`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimer">
      <MemberSignature Language="C#" Value="CounterTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimer = int32(541132032)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberSignature Language="VB.NET" Value="CounterTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterTimer" />
      <MemberSignature Language="F#" Value="CounterTimer = 541132032" Usage="System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>541132032</MemberValue>
      <Docs>
        <summary>百分比計數器，將元件使用中的平均時間顯示為總耗用時間的百分比。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / (D 1-D 0)，其中 N 1 和 N 0 為效能計數器的讀數，以及 D 1 和 D 0 為其對應的時間讀數。 因此，分子代表範例並的間隔期間監視的元件是作用中，所以分母代表總經過時間的取樣間隔時間的部分。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimerInverse">
      <MemberSignature Language="C#" Value="CounterTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimerInverse = int32(557909248)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterTimerInverse" />
      <MemberSignature Language="F#" Value="CounterTimerInverse = 557909248" Usage="System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>557909248</MemberValue>
      <Docs>
        <summary>百分比計數器，顯示樣本間隔期間所觀察的作用時間之平均百分比。 這些計數器的值是由監視服務非作用時間百分比，並且將 100 % 減去該百分比所計算而來。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是反向計數器型別。 反向計數器測量的時間元件，請注意 作用中，並從測量值推算其作用時間。 此計數器型別是相同`CounterTimer100NsInv`不同之處在於它會測量系統效能計時器的刻度為單位，而不是以 100 奈秒為單位的時間。  
  
 公式：(1-((N 1-N 0) / (D 1-D 0))) x 100，其中分子代表的時間間隔期間當受監視的元件的非使用狀態，所以分母代表總經過時間的取樣間隔時間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval32">
      <MemberSignature Language="C#" Value="CountPerTimeInterval32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval32 = int32(4523008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval32" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval32" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval32 = 4523008" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523008</MemberValue>
      <Docs>
        <summary>平均計數器，設計來監視一段時間內資源的佇列平均長度。 它會顯示在最新的兩個樣本間隔期間，所觀察佇列長度之間的差異值，再除以間隔的持續時間。 這個計數器型別通常用於追蹤佇列或等候的項目數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / (D 1-D 0)，其中分子表示佇列中的項目數，所以分母代表時間在上一個取樣間隔期間的耗用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval64">
      <MemberSignature Language="C#" Value="CountPerTimeInterval64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval64 = int32(4523264)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval64" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval64" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval64 = 4523264" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523264</MemberValue>
      <Docs>
        <summary>平均計數器，監視一段時間內資源的佇列平均長度。 這個型別的計數器會顯示在最新的兩個樣本間隔期間，所觀察佇列長度之間的差異值，再除以間隔的持續時間。 這個計數器型別和 <see langword="CountPerTimeInterval32" /> 相同，但是它使用較大的欄位來容納較大的值。 這個計數器型別通常用於追蹤大量佇列或等候的項目數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / (D 1-D 0)，其中分子表示佇列中的項目數，所以分母代表時間耗用取樣間隔期間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElapsedTime">
      <MemberSignature Language="C#" Value="ElapsedTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType ElapsedTime = int32(807666944)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberSignature Language="VB.NET" Value="ElapsedTime" />
      <MemberSignature Language="C++ CLI" Value="ElapsedTime" />
      <MemberSignature Language="F#" Value="ElapsedTime = 807666944" Usage="System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>807666944</MemberValue>
      <Docs>
        <summary>差異計時器，顯示元件或處理序啟動時間和計算這個值的時間之間的總時間。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(D 0-N 0) / F，其中 D 0 代表目前的時間，N 0 表示的時間啟動的物件，而 F 代表每秒的時間單位的數目。 F 值納入方程式，以便可以顯示結果，以秒為單位。  
  
 這個型別的計數器包含系統系統運作時間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems32">
      <MemberSignature Language="C#" Value="NumberOfItems32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems32 = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems32" />
      <MemberSignature Language="F#" Value="NumberOfItems32 = 65536" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>顯示最近觀察到的值的即時計數器。 例如，用來維護項目或作業的簡單計數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：無。 不會顯示平均值，但會在收集時，顯示未經處理的資料。  
  
 這個型別的計數器包含 Memory\Available 位元組。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems64">
      <MemberSignature Language="C#" Value="NumberOfItems64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems64 = int32(65792)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems64" />
      <MemberSignature Language="F#" Value="NumberOfItems64 = 65792" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65792</MemberValue>
      <Docs>
        <summary>顯示最近觀察到的值的即時計數器。 例如，用來維護極大量項目或作業的簡單計數。 它和 <see langword="NumberOfItems32" /> 相同，但是它使用較大的欄位來容納較大的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：無。 不會顯示平均值，但會在收集時，顯示未經處理的資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX32">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX32 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX32 = 0" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>即時計數器，以十六進位格式顯示最近觀察到的值。 例如，用來維護項目或作業的簡單計數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：無。 不會顯示平均值，但會在收集時，顯示未經處理的資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX64">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX64 = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX64 = 256" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>顯示最近觀察到的值的即時計數器。 例如，用來維護極大量項目或作業的簡單計數。 它和 <see langword="NumberOfItemsHEX32" /> 相同，但是它使用較大的欄位來容納較大的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：無。 不會顯示平均值，但會在收集時，顯示未經處理資料  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond32">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond32 = int32(272696320)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond32 = 272696320" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696320</MemberValue>
      <Docs>
        <summary>差異計數器，顯示在樣本間隔每秒期間完成的作業平均數。 這個型別的計數器會以系統時鐘的刻度為單位來測量時間 </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / ((D 1-D 0) / F)，其中 N 1 和 N 0 為效能計數器的讀數、 D 1 和 D 0 為其對應的時間讀數，而 F 代表每秒的刻度數。 因此，分子表示上一個取樣間隔的刻度數共歷時上一個取樣間隔，分母代表在執行的作業數目，而 F 是刻度的頻率。 F 值納入方程式，以便可以顯示結果，以秒為單位。  
  
 這個型別的計數器包含系統檔案讀取作業數/秒。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond64">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond64 = int32(272696576)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond64 = 272696576" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696576</MemberValue>
      <Docs>
        <summary>差異計數器，顯示在樣本間隔每秒期間完成的作業平均數。 這個型別的計數器會以系統時鐘的刻度為單位來測量時間  這個計數器型別和 <see langword="RateOfCountsPerSecond32" /> 型別相同，但是它使用較大的欄位來容納較大的值，以便追蹤每秒大量的項目數或作業數，例如位元組傳輸速率。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / ((D 1-D 0) / F)，其中 N 1 和 N 0 為效能計數器的讀數、 D 1 和 D 0 為其對應的時間讀數，而 F 代表每秒的刻度數。 因此，分子表示上一個取樣間隔的刻度數共歷時上一個取樣間隔，分母代表在執行的作業數目，而 F 是刻度的頻率。 F 值納入方程式，以便可以顯示結果，以秒為單位。  
  
 這個型別的計數器包含系統檔案讀取位元組/秒。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawBase">
      <MemberSignature Language="C#" Value="RawBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawBase = int32(1073939459)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberSignature Language="VB.NET" Value="RawBase" />
      <MemberSignature Language="C++ CLI" Value="RawBase" />
      <MemberSignature Language="F#" Value="RawBase = 1073939459" Usage="System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939459</MemberValue>
      <Docs>
        <summary>基底計數器，儲存表示一般算術分數的計數器的分母。 請在將這個值當做 <see langword="RawFraction" /> 值計算中的分母之前，先檢查這個值是否大於零。</summary>
      </Docs>
    </Member>
    <Member MemberName="RawFraction">
      <MemberSignature Language="C#" Value="RawFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawFraction = int32(537003008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberSignature Language="VB.NET" Value="RawFraction" />
      <MemberSignature Language="C++ CLI" Value="RawFraction" />
      <MemberSignature Language="F#" Value="RawFraction = 537003008" Usage="System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>537003008</MemberValue>
      <Docs>
        <summary>即時百分比計數器，以百分比顯示子集對其集合的比例。 例如，它會比較磁碟的使用中位元組數和磁碟的總位元組數。 這個型別的計數器只會顯示目前的百分比，而不是一段時間的平均 </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 0 / D 0) x 100，其中 D 0 代表測量的屬性 (使用基底計數器型別的`RawBase`) 和 N 0 代表該屬性的一個元件。  
  
 這個型別的計數器包含分頁檔\\%使用率正達尖峰。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleBase">
      <MemberSignature Language="C#" Value="SampleBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleBase = int32(1073939457)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberSignature Language="VB.NET" Value="SampleBase" />
      <MemberSignature Language="C++ CLI" Value="SampleBase" />
      <MemberSignature Language="F#" Value="SampleBase = 1073939457" Usage="System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939457</MemberValue>
      <Docs>
        <summary>基底計數器型別，儲存取樣中斷數，並在取樣分數中做為分母。 取樣分數就是樣本數目，其對樣本中斷而言為 1 (或 <see langword="true" />)。 在將這個值當做 <see langword="SampleFraction" /> 計算中的分母之前，請先檢查這個值是否大於零。</summary>
      </Docs>
    </Member>
    <Member MemberName="SampleCounter">
      <MemberSignature Language="C#" Value="SampleCounter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleCounter = int32(4260864)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberSignature Language="VB.NET" Value="SampleCounter" />
      <MemberSignature Language="C++ CLI" Value="SampleCounter" />
      <MemberSignature Language="F#" Value="SampleCounter = 4260864" Usage="System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4260864</MemberValue>
      <Docs>
        <summary>平均計數器，顯示一秒鐘完成的作業平均數。 當這個型別的計數器取樣資料時，每個取樣中斷會傳回 1 或 0。 計數器資料是所取樣的數目。 它會以系統效能計時器的刻度為單位來測量時間。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / ((D 1-D 0) / F)，其中分子 (N) 表示已完成的作業數目，分母 (D) 表示的系統效能計時器的刻度為單位的經過時間，F 代表每秒的刻度數。 F 納入方程式，以便可以顯示結果，以秒為單位。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFraction">
      <MemberSignature Language="C#" Value="SampleFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleFraction = int32(549585920)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberSignature Language="VB.NET" Value="SampleFraction" />
      <MemberSignature Language="C++ CLI" Value="SampleFraction" />
      <MemberSignature Language="F#" Value="SampleFraction = 549585920" Usage="System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>549585920</MemberValue>
      <Docs>
        <summary>百分比計數器，顯示在最新兩次樣本間隔期間的對所有作業點擊的平均比例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式: ((N 1-N 0) / (D 1-D 0)) x 100，分子在上一個取樣間隔，表示成功的作業數目，所以分母代表範例期間所完成之所有作業數目 （測量的型別） 的變更使用型別的計數器的間隔`SampleBase`。  
  
 這個型別的計數器包含 Cache\Pin 讀取點擊 %。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timer100Ns">
      <MemberSignature Language="C#" Value="Timer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100Ns = int32(542180608)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberSignature Language="VB.NET" Value="Timer100Ns" />
      <MemberSignature Language="C++ CLI" Value="Timer100Ns" />
      <MemberSignature Language="F#" Value="Timer100Ns = 542180608" Usage="System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>542180608</MemberValue>
      <Docs>
        <summary>將一或多個元件的作用時間顯示為樣本間隔的總時間百分比的百分比計數器。 它會以 100 奈秒為單位來測量時間。 這個型別的計數器是設計來一次測量一個元件的活動 </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公式：(N 1-N 0) / (D 1-D 0) x 100，其中分子表示取樣間隔期間監視的元件是作用中的部分，所以分母代表總經過時間的取樣間隔時間。  
  
 這個型別的計數器包含 Processor\ %User Time。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timer100NsInverse">
      <MemberSignature Language="C#" Value="Timer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100NsInverse = int32(558957824)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="Timer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="Timer100NsInverse" />
      <MemberSignature Language="F#" Value="Timer100NsInverse = 558957824" Usage="System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>558957824</MemberValue>
      <Docs>
        <summary>百分比計數器，顯示樣本間隔期間所觀察的作用時間之平均百分比。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是反向計數器。 這個型別的計數器會計算作用中的時間是測量服務非作用時間，然後再減去 100%的作用中時間的百分比。  
  
 公式：(1-((N 1-N 0) / (D 1-D 0))) x 100，其中分子代表的時間間隔期間當受監視的元件的非使用狀態，所以分母代表總經過時間的取樣間隔時間。  
  
 這個型別的計數器包含 Processor\ %Processor Time。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>