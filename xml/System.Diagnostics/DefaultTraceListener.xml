<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fecfb03cfd81074ed7c6c40ebe2934781ef8a57" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34060718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eeda0-101">提供追蹤的預設輸出方法和行為。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeda0-101">Provides the default output methods and behavior for tracing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeda0-102">這個類別的執行個體自動加入至<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>和<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合。</span><span class="sxs-lookup"><span data-stu-id="eeda0-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="eeda0-103">明確加入第二個<xref:System.Diagnostics.DefaultTraceListener>原因重複偵錯工具的 [輸出] 視窗中的訊息並將重複的訊息方塊的判斷提示。</span><span class="sxs-lookup"><span data-stu-id="eeda0-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="eeda0-104">根據預設，<xref:System.Diagnostics.DefaultTraceListener.Write%2A>和<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>方法發出的訊息，Win32`OutputDebugString`函式和<xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="eeda0-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="eeda0-105">如需有關資訊`OutputDebugString`函式，請參閱 Platform SDK 或 MSDN。</span><span class="sxs-lookup"><span data-stu-id="eeda0-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="eeda0-106"><xref:System.Diagnostics.DefaultTraceListener.Fail%2A>方法，根據預設，會顯示訊息方塊在使用者介面模式下執行應用程式時，它同時會發出訊息使用<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="eeda0-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eeda0-107">訊息方塊顯示<xref:System.Diagnostics.Debug.Assert%2A>和<xref:System.Diagnostics.Debug.Fail%2A>方法呼叫取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="eeda0-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="eeda0-108">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="eeda0-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="eeda0-109"><xref:System.Diagnostics.DefaultTraceListener>可以移除[\<清除 > 項目](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 藉由[\<移除 > 項目](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="eeda0-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="eeda0-110">您必須啟用追蹤或偵錯才能使用追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="eeda0-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="eeda0-111">下列語法是特定的編譯器。</span><span class="sxs-lookup"><span data-stu-id="eeda0-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="eeda0-112">如果您使用 C# 或 Visual Basic 以外的編譯器，請參閱編譯器的文件。</span><span class="sxs-lookup"><span data-stu-id="eeda0-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="eeda0-113">若要啟用偵錯 C# 中，加入`/d:DEBUG`旗標設為編譯器命令列，當您編譯程式碼，或新增`#define DEBUG`加入您的檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="eeda0-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="eeda0-114">在 Visual Basic 中，加入`/d:DEBUG=True`編譯器命令列的旗標。</span><span class="sxs-lookup"><span data-stu-id="eeda0-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="eeda0-115">若要啟用追蹤，在 C# 中的，加入`/d:TRACE`旗標設為編譯器命令列，當您編譯程式碼，或新增`#define TRACE`加入您的檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="eeda0-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="eeda0-116">在 Visual Basic 中，加入`/d:TRACE=True`編譯器命令列的旗標。</span><span class="sxs-lookup"><span data-stu-id="eeda0-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="eeda0-117">若要加入追蹤接聽程式，請編輯對應到您的應用程式名稱的組態檔。</span><span class="sxs-lookup"><span data-stu-id="eeda0-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="eeda0-118">在這個檔案中，您可以加入接聽程式、 設定它的型別和它的參數，方法移除接聽程式，或清除所有先前設定的應用程式的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="eeda0-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="eeda0-119">組態檔應該類似下列的範例格式：</span><span class="sxs-lookup"><span data-stu-id="eeda0-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```xml  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="eeda0-120">下列程式碼範例會計算機率和統計資料中所用的值的二項式係數。</span><span class="sxs-lookup"><span data-stu-id="eeda0-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="eeda0-121">這個範例會使用<xref:System.Diagnostics.DefaultTraceListener>追蹤結果，並記錄錯誤。</span><span class="sxs-lookup"><span data-stu-id="eeda0-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="eeda0-122">它會建立新<xref:System.Diagnostics.DefaultTraceListener>，將它加入至<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合和集<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A>命令列引數中指定的記錄檔的屬性。</span><span class="sxs-lookup"><span data-stu-id="eeda0-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="eeda0-123">如果偵測到錯誤時正在處理的輸入的參數，或如果`CalcBinomial`函式擲回例外狀況，<xref:System.Diagnostics.DefaultTraceListener.Fail%2A>方法記錄，並顯示錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="eeda0-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="eeda0-124">如果<xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A>屬性是`false`，錯誤訊息也會寫入至主控台。</span><span class="sxs-lookup"><span data-stu-id="eeda0-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="eeda0-125">成功時，計算結果時<xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29>和<xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29>方法將結果寫入至記錄檔。</span><span class="sxs-lookup"><span data-stu-id="eeda0-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="eeda0-126"><xref:System.Diagnostics.DefaultTraceListener.Fail%2A>， <xref:System.Diagnostics.DefaultTraceListener.Write%2A>，和<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>方法會導致只寫入追蹤資訊<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="eeda0-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="eeda0-127">若要寫入追蹤資訊中的所有接聽項<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合，使用<xref:System.Diagnostics.Trace.Fail%2A>， <xref:System.Diagnostics.Trace.Write%2A>，和<xref:System.Diagnostics.Trace.WriteLine%2A>方法<xref:System.Diagnostics.Trace>類別。</span><span class="sxs-lookup"><span data-stu-id="eeda0-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="eeda0-128">這個類別是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeda0-128">This class is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeda0-129">將 <see cref="T:System.Diagnostics.DefaultTraceListener" /> 類別的新執行個體初始化 (將此執行個體的 <see cref="P:System.Diagnostics.TraceListener.Name" /> 屬性值設為 "Default")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eeda0-130">下列程式碼範例移除<xref:System.Diagnostics.DefaultTraceListener>從應用程式提供<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合，然後建立新<xref:System.Diagnostics.DefaultTraceListener>並將它加入<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合。</span><span class="sxs-lookup"><span data-stu-id="eeda0-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeda0-131">取得或設定值，表示應用程式是否正在使用者介面模式下執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeda0-132">如果具有使用者介面模式，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-132">
              <see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eeda0-133">下列程式碼範例會呼叫函式呼叫<xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29>方法，以記錄錯誤訊息，如果函式會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="eeda0-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="eeda0-134">如果<xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A>屬性是`false`，此方法也會將錯誤訊息寫入主控台。</span><span class="sxs-lookup"><span data-stu-id="eeda0-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eeda0-135">發出或顯示判斷提示 (Assertion) 總是失敗的訊息和堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-135">Emits or displays a message and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eeda0-136">要發出或顯示的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-136">The message to emit or display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeda0-137">發出或顯示判斷提示 (Assertion) 總是失敗的訊息和堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-137">Emits or displays a message and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeda0-138">根據預設，這個方法會傳送`message`參數和堆疊追蹤至 messagebox （當使用者介面模式中執行應用程式） 和<xref:System.Diagnostics.DefaultTraceListener>執行個體。</span><span class="sxs-lookup"><span data-stu-id="eeda0-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeda0-139">下列程式碼範例會將錯誤訊息寫入<xref:System.Diagnostics.DefaultTraceListener>使用<xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="eeda0-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="eeda0-140">如果不提供使用者介面，方法會將訊息也寫入至主控台。</span><span class="sxs-lookup"><span data-stu-id="eeda0-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eeda0-141">要發出或顯示的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-141">The message to emit or display.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="eeda0-142">要發出或顯示的詳細訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-142">The detailed message to emit or display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeda0-143">發出或顯示判斷提示總是失敗的詳細訊息和堆疊追蹤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeda0-144">根據預設，這個方法會傳送`message`參數，`detailMessage`參數和堆疊追蹤至 messagebox （當使用者介面模式中執行應用程式） 和<xref:System.Diagnostics.DefaultTraceListener>執行個體。</span><span class="sxs-lookup"><span data-stu-id="eeda0-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeda0-145">下列程式碼範例會呼叫函式呼叫<xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29>記錄詳細的錯誤訊息，如果函式擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="eeda0-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="eeda0-146">如果不提供使用者介面，方法會將訊息寫入主控台。</span><span class="sxs-lookup"><span data-stu-id="eeda0-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeda0-147">取得或設定要寫入追蹤或偵錯訊息的記錄檔名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-147">Gets or sets the name of a log file to write trace or debug messages to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeda0-148">要寫入追蹤或偵錯訊息的記錄檔名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-148">The name of a log file to write trace or debug messages to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eeda0-149">下列程式碼範例會建立新<xref:System.Diagnostics.DefaultTraceListener>，將它加入至<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合和集<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A>命令列引數中指定的記錄檔的屬性。</span><span class="sxs-lookup"><span data-stu-id="eeda0-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eeda0-150">要寫入 <see langword="OutputDebugString" /> 和 <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeda0-151">將輸出寫入 <see langword="OutputDebugString" /> 函示和 <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeda0-152">如需 Win32`OutputDebugString`偵錯函式，請參閱 MSDN Platform SDK 中的"OutputDebugString"。</span><span class="sxs-lookup"><span data-stu-id="eeda0-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeda0-153">下列程式碼範例會格式化函式的結果，並使用<xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29>方法寫入至訊息的第一個部分<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="eeda0-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eeda0-154">要寫入 <see langword="OutputDebugString" /> 和 <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> 的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeda0-155">將輸出寫入 <see langword="OutputDebugString" /> 函式和 <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> 方法，後面接著歸位字元和換行符號 (\r\n)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeda0-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeda0-156">預設行結束字元為後面接著換行符號 (\r\n) 的歸位字元。</span><span class="sxs-lookup"><span data-stu-id="eeda0-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="eeda0-157">如需 Win32`OutputDebugString`偵錯函式，請參閱 Platform SDK 或 MSDN。</span><span class="sxs-lookup"><span data-stu-id="eeda0-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="eeda0-158">這個方法會設定<xref:System.Diagnostics.TraceListener.NeedIndent%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="eeda0-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeda0-159">下列程式碼範例會格式化函式的結果，並使用<xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29>方法寫入至訊息的最後一部分<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="eeda0-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>