<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultTraceListener.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e581445bf8b73278f54dd2d25bd773d01ccd85e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e581445bf8b73278f54dd2d25bd773d01ccd85e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Provides the default output methods and behavior for tracing.</source>
          <target state="translated">提供追蹤的預設輸出方法和行為。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>An instance of this class is automatically added to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections.</source>
          <target state="translated">這個類別的執行個體自動加入至<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Explicitly adding a second <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</source>
          <target state="translated">明確加入第二個<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>原因重複偵錯工具的 [輸出] 視窗中的訊息並將重複的訊息方塊的判斷提示。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods emit the message to the Win32 <ph id="ph3">`OutputDebugString`</ph> function and to the <ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>方法發出的訊息，Win32<ph id="ph3">`OutputDebugString`</ph>函式和<ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>For information about the <ph id="ph1">`OutputDebugString`</ph> function, see the Platform SDK or MSDN.</source>
          <target state="translated">如需有關資訊<ph id="ph1">`OutputDebugString`</ph>函式，請參閱 Platform SDK 或 MSDN。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>方法，根據預設，會顯示訊息方塊在使用者介面模式下執行應用程式時，它同時會發出訊息使用<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The display of the message box for <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method calls depends on the presence of the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">訊息方塊顯示<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>方法呼叫取決於是否存在<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>clear&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, by the <bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>remove&gt; element<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>清除 &gt; 項目<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 藉由<bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>移除 &gt; 項目<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">您必須啟用追蹤或偵錯才能使用追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">下列語法是特定的編譯器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">如果您使用 C# 或 Visual Basic 以外的編譯器，請參閱編譯器的文件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">若要啟用偵錯 C# 中，加入<ph id="ph1">`/d:DEBUG`</ph>旗標設為編譯器命令列，當您編譯程式碼，或新增<ph id="ph2">`#define DEBUG`</ph>加入您的檔案頂端。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，加入<ph id="ph1">`/d:DEBUG=True`</ph>編譯器命令列的旗標。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">若要啟用追蹤，在 C# 中的，加入<ph id="ph1">`/d:TRACE`</ph>旗標設為編譯器命令列，當您編譯程式碼，或新增<ph id="ph2">`#define TRACE`</ph>加入您的檔案頂端。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，加入<ph id="ph1">`/d:TRACE=True`</ph>編譯器命令列的旗標。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">若要加入追蹤接聽程式，請編輯對應到您的應用程式名稱的組態檔。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">在這個檔案中，您可以加入接聽程式、 設定它的型別和它的參數，方法移除接聽程式，或清除所有先前設定的應用程式的接聽程式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The configuration file should be formatted similar to the following example:</source>
          <target state="translated">組態檔應該類似下列的範例格式：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following code example calculates binomial coefficients, which are values used in probability and statistics.</source>
          <target state="translated">下列程式碼範例會計算機率和統計資料中所用的值的二項式係數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This example uses a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> to trace results and log errors.</source>
          <target state="translated">這個範例會使用<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>追蹤結果，並記錄錯誤。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>It creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">它會建立新<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>，將它加入至<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合和集<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph>命令列引數中指定的記錄檔的屬性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If an error is detected while processing the input parameter, or if the <ph id="ph1">`CalcBinomial`</ph> function throws an exception, the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method logs and displays an error message.</source>
          <target state="translated">如果偵測到錯誤時正在處理的輸入的參數，或如果<ph id="ph1">`CalcBinomial`</ph>函式擲回例外狀況，<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>方法記錄，並顯示錯誤訊息。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the error message is also written to the console.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph>屬性是<ph id="ph2">`false`</ph>，錯誤訊息也會寫入至主控台。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>When the result is calculated successfully, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> methods write the results to the log file.</source>
          <target state="translated">成功時，計算結果時<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph>方法將結果寫入至記錄檔。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods cause trace information to be written only to the <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>方法會導致只寫入追蹤資訊<ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To write trace information to all listeners in the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> methods of the <ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph> class.</source>
          <target state="translated">若要寫入追蹤資訊中的所有接聽項<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合，使用<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph>方法<ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This class is thread safe.</source>
          <target state="translated">這個類別是安全執行緒。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> class with "Default" as its <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> property value.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> 類別的新執行個體初始化 (將此執行個體的 <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> 屬性值設為 "Default")。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>The following code example removes the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> provided by the application from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection and then creates a new <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and adds it to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">下列程式碼範例移除<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>從應用程式提供<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合，然後建立新<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>並將它加入<ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>Gets or sets a value indicating whether the application is running in user-interface mode.</source>
          <target state="translated">取得或設定值，表示應用程式是否正在使用者介面模式下執行。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if user-interface mode is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果具有使用者介面模式，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log an error message if the function throws an exception.</source>
          <target state="translated">下列程式碼範例會呼叫函式呼叫<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph>方法，以記錄錯誤訊息，如果函式會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the method also writes the error message to the console.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph>屬性是<ph id="ph2">`false`</ph>，此方法也會將錯誤訊息寫入主控台。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">發出或顯示判斷提示 (Assertion) 總是失敗的訊息和堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">要發出或顯示的訊息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">發出或顯示判斷提示 (Assertion) 總是失敗的訊息和堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">根據預設，這個方法會傳送<ph id="ph1">`message`</ph>參數和堆疊追蹤至 messagebox （當使用者介面模式中執行應用程式） 和<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The following code example writes an error message to a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例會將錯誤訊息寫入<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>使用<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The method also writes the message to the console if a user interface is not available.</source>
          <target state="translated">如果不提供使用者介面，方法會將訊息也寫入至主控台。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">要發出或顯示的訊息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The detailed message to emit or display.</source>
          <target state="translated">要發出或顯示的詳細訊息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>Emits or displays detailed messages and a stack trace for an assertion that always fails.</source>
          <target state="translated">發出或顯示判斷提示總是失敗的詳細訊息和堆疊追蹤。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter, the <ph id="ph2">`detailMessage`</ph> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">根據預設，這個方法會傳送<ph id="ph1">`message`</ph>參數，<ph id="ph2">`detailMessage`</ph>參數和堆疊追蹤至 messagebox （當使用者介面模式中執行應用程式） 和<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log a detailed error message if the function throws an exception.</source>
          <target state="translated">下列程式碼範例會呼叫函式呼叫<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph>記錄詳細的錯誤訊息，如果函式擲回例外狀況的方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The method writes the message to the console if a user interface is not available.</source>
          <target state="translated">如果不提供使用者介面，方法會將訊息寫入主控台。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>Gets or sets the name of a log file to write trace or debug messages to.</source>
          <target state="translated">取得或設定要寫入追蹤或偵錯訊息的記錄檔名稱。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The name of a log file to write trace or debug messages to.</source>
          <target state="translated">要寫入追蹤或偵錯訊息的記錄檔名稱。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">下列程式碼範例會建立新<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>，將它加入至<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合和集<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph>命令列引數中指定的記錄檔的屬性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated">要寫入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 的訊息。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method.</source>
          <target state="translated">將輸出寫入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 函示和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</source>
          <target state="translated">如需 Win32<ph id="ph1">`OutputDebugString`</ph>偵錯函式，請參閱 MSDN Platform SDK 中的"OutputDebugString"。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> method to write the first part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">下列程式碼範例會格式化函式的結果，並使用<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph>方法寫入至訊息的第一個部分<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated">要寫入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 的訊息。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method, followed by a carriage return and line feed (\r\n).</source>
          <target state="translated">將輸出寫入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 函式和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 方法，後面接著歸位字元和換行符號 (\r\n)。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">預設行結束字元為後面接著換行符號 (\r\n) 的歸位字元。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see the Platform SDK or MSDN.</source>
          <target state="translated">如需 Win32<ph id="ph1">`OutputDebugString`</ph>偵錯函式，請參閱 Platform SDK 或 MSDN。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">這個方法會設定<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> method to write the last part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">下列程式碼範例會格式化函式的結果，並使用<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph>方法寫入至訊息的最後一部分<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>