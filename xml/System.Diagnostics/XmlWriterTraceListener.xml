<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="947a1f9fa7d052610f5006e95373c72b4f3aae6c" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52231196" /></Metadata><TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5973-101">將追蹤或偵錯輸出做為 XML 編碼資料導向 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.IO.Stream" />，例如做為 <see cref="T:System.IO.FileStream" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a5973-102">您必須具備 unmanaged 程式碼建立的執行個體的權限<xref:System.Diagnostics.XmlWriterTraceListener>類別。</span><span class="sxs-lookup"><span data-stu-id="a5973-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="a5973-103"><xref:System.Diagnostics.XmlWriterTraceListener>類別將追蹤和偵錯資訊的 XML 編碼的文字資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="a5973-104">後面的表格，會顯示 XML 輸出的描述。</span><span class="sxs-lookup"><span data-stu-id="a5973-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="a5973-105">您可以使用[Service Trace Viewer Tool (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129)來顯示 XML 輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="a5973-106">您可以啟用或停用<xref:System.Diagnostics.XmlWriterTraceListener>應用程式組態檔，然後使用已設定透過<xref:System.Diagnostics.XmlWriterTraceListener>應用程式中。</span><span class="sxs-lookup"><span data-stu-id="a5973-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="a5973-107">或者，您可以在其中建立<xref:System.Diagnostics.XmlWriterTraceListener>程式碼中。</span><span class="sxs-lookup"><span data-stu-id="a5973-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="a5973-108">若要設定<xref:System.Diagnostics.XmlWriterTraceListener>，編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="a5973-109">在此檔案中，您可以新增或移除接聽程式、 設定接聽程式的屬性或移除接聽程式。</span><span class="sxs-lookup"><span data-stu-id="a5973-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="a5973-110">組態檔的格式應該類似下列的範例。</span><span class="sxs-lookup"><span data-stu-id="a5973-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="a5973-111"><xref:System.Diagnostics.XmlWriterTraceListener>類別會繼承<xref:System.Diagnostics.TraceListener.Filter%2A>屬性的基底類別從<xref:System.Diagnostics.TraceListener>。</span><span class="sxs-lookup"><span data-stu-id="a5973-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="a5973-112"><xref:System.Diagnostics.TraceListener.Filter%2A>屬性可讓一層額外的接聽程式在篩選的追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="a5973-113">如果有的話`Trace`追蹤接聽程式呼叫的方法<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>方法的篩選，以判斷是否要發出追蹤。</span><span class="sxs-lookup"><span data-stu-id="a5973-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5973-114">如果嘗試寫入檔案正在使用或無法使用，檔案名稱自動的前置詞的 GUID。</span><span class="sxs-lookup"><span data-stu-id="a5973-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5973-115">接聽程式的方法是由方法呼叫<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別。</span><span class="sxs-lookup"><span data-stu-id="a5973-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="a5973-116">接聽程式的方法不打算直接從應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5973-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="a5973-117"><xref:System.Diagnostics.XmlWriterTraceListener>接聽程式主要是供<xref:System.Diagnostics.TraceSource>類別。</span><span class="sxs-lookup"><span data-stu-id="a5973-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="a5973-118"><xref:System.Diagnostics.XmlWriterTraceListener.Write%2A>和<xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A>可以呼叫方法<xref:System.Diagnostics.Trace>並<xref:System.Diagnostics.Debug>類別和預設值，可供 XML 項目，<xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.Debug>不提供的值。</span><span class="sxs-lookup"><span data-stu-id="a5973-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="a5973-119">下表描述的元素和屬性的 XML 輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="a5973-120">元素</span><span class="sxs-lookup"><span data-stu-id="a5973-120">Element</span></span>|<span data-ttu-id="a5973-121">屬性</span><span class="sxs-lookup"><span data-stu-id="a5973-121">Attributes</span></span>|<span data-ttu-id="a5973-122">輸出</span><span class="sxs-lookup"><span data-stu-id="a5973-122">Output</span></span>|<span data-ttu-id="a5973-123">注意</span><span class="sxs-lookup"><span data-stu-id="a5973-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="a5973-124">無</span><span class="sxs-lookup"><span data-stu-id="a5973-124">None</span></span>|<span data-ttu-id="a5973-125">取決於是否存在<xref:System.Diagnostics.TraceOptions.Callstack>加上旗標在<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a5973-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a5973-126">特殊字元，例如 > 或 < 逸出序列就會被取代。</span><span class="sxs-lookup"><span data-stu-id="a5973-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="a5973-127">請參閱逸出的字元轉譯表格所示。</span><span class="sxs-lookup"><span data-stu-id="a5973-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="a5973-128">無</span><span class="sxs-lookup"><span data-stu-id="a5973-128">None</span></span>|<span data-ttu-id="a5973-129">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-129">Always present.</span></span>|<span data-ttu-id="a5973-130"><xref:System.Environment.MachineName%2A> 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a5973-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="a5973-131">永遠存在</span><span class="sxs-lookup"><span data-stu-id="a5973-131">Always present</span></span>|<span data-ttu-id="a5973-132">如果未指定，預設值是空的 GUID。</span><span class="sxs-lookup"><span data-stu-id="a5973-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="a5973-133">取決於是否存在`relatedActivityId`追蹤方法呼叫中的參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="a5973-134"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> 方法的 `relatedActivityId` 參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="a5973-135">無</span><span class="sxs-lookup"><span data-stu-id="a5973-135">None</span></span>|<span data-ttu-id="a5973-136">取決於`data`參數<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a5973-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="a5973-137">這個項目可以包含在陣列的項目或一個項目，因此這些值寫入為一組`DataItem`下的節點`TraceData`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="a5973-138">資料輸出使用`ToString`傳入的資料物件的方法。</span><span class="sxs-lookup"><span data-stu-id="a5973-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="a5973-139">無</span><span class="sxs-lookup"><span data-stu-id="a5973-139">None</span></span>|<span data-ttu-id="a5973-140">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-140">Always present.</span></span>|<span data-ttu-id="a5973-141">參數的輸入 (`id`)。</span><span class="sxs-lookup"><span data-stu-id="a5973-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="a5973-142">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-142">Always present.</span></span>|<span data-ttu-id="a5973-143">從<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="a5973-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="a5973-144">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-144">Always present.</span></span>|<span data-ttu-id="a5973-145">從<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="a5973-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="a5973-146">在 Windows 98 和 Windows Me 作業系統中，如果`ProcessID`大於的 2,147,483,647 它是負數的正面表示法，並且應該轉換來取得正確的處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="a5973-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="a5973-147">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-147">Always present.</span></span>|<span data-ttu-id="a5973-148">從<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="a5973-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="a5973-149">無</span><span class="sxs-lookup"><span data-stu-id="a5973-149">None</span></span>|<span data-ttu-id="a5973-150">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-150">Always present.</span></span>|<span data-ttu-id="a5973-151">參數的輸入 (數值`eventType`)。</span><span class="sxs-lookup"><span data-stu-id="a5973-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="a5973-152">參數大於 255 的值會輸出為 255。</span><span class="sxs-lookup"><span data-stu-id="a5973-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="a5973-153">無</span><span class="sxs-lookup"><span data-stu-id="a5973-153">None</span></span>|<span data-ttu-id="a5973-154">取決於是否存在<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>加上旗標在<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a5973-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a5973-155">可以有一個以上的邏輯作業，因此這些值做為寫入`LogicalOperation`下的節點`LogicalOperationStack`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="a5973-156">無</span><span class="sxs-lookup"><span data-stu-id="a5973-156">None</span></span>|<span data-ttu-id="a5973-157">必須要有的追蹤方法呼叫中的訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="a5973-158">如果提供格式化的引數，此元素會將格式化的訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="a5973-159">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-159">Always present.</span></span>|<span data-ttu-id="a5973-160">輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="a5973-161">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-161">Always present.</span></span>|<span data-ttu-id="a5973-162">輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="a5973-163">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-163">Always present.</span></span>|<span data-ttu-id="a5973-164">如果不存在於<xref:System.Diagnostics.TraceEventCache>，預設值是目前的時間。</span><span class="sxs-lookup"><span data-stu-id="a5973-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="a5973-165">無</span><span class="sxs-lookup"><span data-stu-id="a5973-165">None</span></span>|<span data-ttu-id="a5973-166">取決於是否存在<xref:System.Diagnostics.TraceOptions.Timestamp>加上旗標在<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a5973-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="a5973-167">從<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="a5973-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="a5973-168">無</span><span class="sxs-lookup"><span data-stu-id="a5973-168">None</span></span>|<span data-ttu-id="a5973-169">永遠存在。</span><span class="sxs-lookup"><span data-stu-id="a5973-169">Always present.</span></span>|<span data-ttu-id="a5973-170">永遠值 3。</span><span class="sxs-lookup"><span data-stu-id="a5973-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="a5973-171">下表會顯示在 XML 輸出逸出字元。</span><span class="sxs-lookup"><span data-stu-id="a5973-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="a5973-172">逸出發生中的所有項目和屬性除了`DataItem`項目，如果物件傳遞至未逸出`data`的參數<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法是<xref:System.Xml.XPath.XPathNavigator>物件。</span><span class="sxs-lookup"><span data-stu-id="a5973-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="a5973-173">如果<xref:System.Xml.XPath.XPathNavigator>使用於資料物件，<xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A>方法呼叫，且整個根節點追蹤做為未逸出的資料。</span><span class="sxs-lookup"><span data-stu-id="a5973-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="a5973-174">逸出的字元</span><span class="sxs-lookup"><span data-stu-id="a5973-174">Escaped character</span></span>|<span data-ttu-id="a5973-175">值</span><span class="sxs-lookup"><span data-stu-id="a5973-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="a5973-176">"</span><span class="sxs-lookup"><span data-stu-id="a5973-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="a5973-177">0xD</span><span class="sxs-lookup"><span data-stu-id="a5973-177">0xD</span></span>|<span data-ttu-id="a5973-178">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="a5973-178">&\#xD;</span></span>|  
|<span data-ttu-id="a5973-179">0xA</span><span class="sxs-lookup"><span data-stu-id="a5973-179">0xA</span></span>|<span data-ttu-id="a5973-180">&\#xA;</span><span class="sxs-lookup"><span data-stu-id="a5973-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a5973-181">下列程式碼範例示範使用<xref:System.Diagnostics.XmlWriterTraceListener>逸出和非逸出的資料寫入檔案記錄的類別。</span><span class="sxs-lookup"><span data-stu-id="a5973-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-182">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-182">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-183">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-183">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5973-184">初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a5973-185"><see cref="T:System.IO.Stream" />，表示追蹤接聽程式所寫入的資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-185">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <summary><span data-ttu-id="a5973-186">使用指定的資料流做為偵錯和追蹤輸出的接收者，初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-186">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-187"><xref:System.Diagnostics.TraceListener.Name%2A>屬性會初始化為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a5973-187">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5973-188"><paramref name="stream" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-188"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-189">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-189">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-190">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-190">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5973-191"><see cref="T:System.IO.TextWriter" />，從追蹤接聽程式接收輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-191">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <summary><span data-ttu-id="a5973-192">使用指定的寫入器做為偵錯和追蹤輸出的接收者，初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-193"><xref:System.Diagnostics.TraceListener.Name%2A>屬性會初始化為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a5973-193">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5973-194"><paramref name="writer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-194"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-195">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-195">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-196">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-196">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="a5973-197">要寫入的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-197">The name of the file to write to.</span></span></param>
        <summary><span data-ttu-id="a5973-198">使用指定的檔案做為偵錯和追蹤輸出的接收者，初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-198">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-199">這個建構函式初始化的新執行個體<xref:System.IO.StreamWriter>所指定的檔案，為指定的路徑上的類別使用<xref:System.Text.Encoding.UTF8%2A>編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a5973-199">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="a5973-200">如果檔案存在，它會附加至。</span><span class="sxs-lookup"><span data-stu-id="a5973-200">If the file exists, it is appended to.</span></span> <span data-ttu-id="a5973-201">如果檔案不存在，則會建立新的檔案。</span><span class="sxs-lookup"><span data-stu-id="a5973-201">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5973-202">若要減少例外狀況的機會，可能會使輸出的任何字元會取代"？"字元。</span><span class="sxs-lookup"><span data-stu-id="a5973-202">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="a5973-203"><xref:System.Diagnostics.TraceListener.Name%2A>屬性會初始化為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a5973-203">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5973-204"><paramref name="filename" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-204"><paramref name="filename" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-205">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-205">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-206">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-206">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a5973-207"><see cref="T:System.IO.Stream" />，表示追蹤接聽程式所寫入的資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-207">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <param name="name"><span data-ttu-id="a5973-208">新執行個體的名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-208">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="a5973-209">使用指定的資料流做為偵錯和追蹤輸出的接收者，以指定的名稱初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-209">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-210">這個建構函式初始化<xref:System.Diagnostics.TraceListener.Name%2A>屬性，以`name`參數值或空字串 ("") 如果`name`參數是`null`。</span><span class="sxs-lookup"><span data-stu-id="a5973-210">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="a5973-211">名稱可以當做索引<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>要以程式設計方式變更接聽程式的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="a5973-211">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="a5973-212">例如，下列程式碼設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>執行個體的屬性<xref:System.Diagnostics.XmlWriterTraceListener>其<xref:System.Diagnostics.TraceListener.Name%2A>屬性是 「 xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="a5973-212">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5973-213"><paramref name="stream" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-213"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-214">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-214">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-215">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-215">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a5973-216"><see cref="T:System.IO.TextWriter" />，從追蹤接聽程式接收輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-216">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <param name="name"><span data-ttu-id="a5973-217">新執行個體的名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-217">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="a5973-218">使用指定的寫入器做為偵錯和追蹤輸出的接收者，以指定的名稱初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-218">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-219">這個建構函式初始化<xref:System.Diagnostics.TraceListener.Name%2A>屬性，以`name`參數值或空字串 ("") 如果`name`參數是`null`。</span><span class="sxs-lookup"><span data-stu-id="a5973-219">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="a5973-220">名稱可以當做索引<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>要以程式設計方式變更接聽程式的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="a5973-220">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="a5973-221">例如，下列程式碼設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>執行個體的屬性<xref:System.Diagnostics.XmlWriterTraceListener>其<xref:System.Diagnostics.TraceListener.Name%2A>屬性是 「 xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="a5973-221">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5973-222"><paramref name="writer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-222"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-223">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-223">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-224">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-224">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="a5973-225">要寫入的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-225">The name of the file to write to.</span></span></param>
        <param name="name"><span data-ttu-id="a5973-226">新執行個體的名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-226">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="a5973-227">使用指定的檔案做為偵錯和追蹤輸出的接收者，以指定的名稱初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a5973-227">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-228">這個建構函式初始化的新執行個體<xref:System.IO.StreamWriter>所指定的檔案，為指定的路徑上的類別使用<xref:System.Text.Encoding.UTF8%2A>編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a5973-228">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="a5973-229">如果檔案存在，它會附加至。</span><span class="sxs-lookup"><span data-stu-id="a5973-229">If the file exists, it is appended to.</span></span> <span data-ttu-id="a5973-230">如果檔案不存在，則會建立新的檔案。</span><span class="sxs-lookup"><span data-stu-id="a5973-230">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5973-231">若要減少例外狀況的機會，可能會使輸出的任何字元會取代"？"字元。</span><span class="sxs-lookup"><span data-stu-id="a5973-231">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="a5973-232"><xref:System.Diagnostics.TraceListener.Name%2A>屬性設定為`name`參數值或空字串 ("") 如果`name`參數是`null`。</span><span class="sxs-lookup"><span data-stu-id="a5973-232">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="a5973-233">名稱可以當做索引<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>要以程式設計方式變更接聽程式的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="a5973-233">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="a5973-234">例如，下列程式碼設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>執行個體的屬性<xref:System.Diagnostics.XmlWriterTraceListener>其<xref:System.Diagnostics.TraceListener.Name%2A>屬性是 「 xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="a5973-234">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5973-235"><paramref name="stream" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-235"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-236">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-236">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-237">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-237">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5973-238">關閉這個接聽程式的 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />，使其不再接收追蹤或偵錯輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-238">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a5973-239">要寫入的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-239">The error message to write.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="a5973-240">要附加至錯誤訊息的詳細錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-240">The detailed error message to append to the error message.</span></span></param>
        <summary><span data-ttu-id="a5973-241">寫入包括錯誤訊息的追蹤資訊，以及詳細的錯誤訊息至檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-241">Writes trace information including an error message and a detailed error message to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-242">預設行為是以訊息和詳細的訊息顯示在訊息方塊中，在使用者介面模式中，以及執行應用程式時<xref:System.Diagnostics.TraceListener>執行個體在<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合。</span><span class="sxs-lookup"><span data-stu-id="a5973-242">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="a5973-243">根據預設，集合包含的執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="a5973-243">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="a5973-244">您可以藉由新增或移除自訂此行為<xref:System.Diagnostics.TraceListener>從集合。</span><span class="sxs-lookup"><span data-stu-id="a5973-244">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-245">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-245">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-246">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-246">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5973-247">將追蹤資料寫入輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-247">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a5973-248"><see cref="T:System.Diagnostics.TraceEventCache" />，包含目前處理序 ID、執行緒 ID 和堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="a5973-248">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a5973-249">來源名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-249">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="a5973-250">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a5973-250">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="a5973-251">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="a5973-251">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="a5973-252">要發出的資料物件。</span><span class="sxs-lookup"><span data-stu-id="a5973-252">A data object to emit.</span></span></param>
        <summary><span data-ttu-id="a5973-253">寫入追蹤資訊，及事件資訊至檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-253">Writes trace information, a data object, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-254">`eventCache`， `source`， `eventType`，和`id`頁首和頁尾的追蹤會使用參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-254">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="a5973-255">`id`參數會轉換成不帶正負號的整數寫入之前，因此負數`id`會寫成一個大型的正整數。</span><span class="sxs-lookup"><span data-stu-id="a5973-255">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="a5973-256">`data`參數以寫入`DataItem`中的節點`TraceData`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-256">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="a5973-257">`ToString`資料物件的方法用來將物件轉換為字串。</span><span class="sxs-lookup"><span data-stu-id="a5973-257">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5973-258">這個方法不是直接由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5973-258">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="a5973-259">它會呼叫的方法<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別來寫入追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="a5973-259">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-260">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-260">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-261">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-261">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a5973-262"><see cref="T:System.Diagnostics.TraceEventCache" />，包含目前處理序 ID、執行緒 ID 和堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="a5973-262">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a5973-263">來源名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-263">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="a5973-264">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a5973-264">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="a5973-265">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="a5973-265">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="a5973-266">要發出的資料物件陣列。</span><span class="sxs-lookup"><span data-stu-id="a5973-266">An array of data objects to emit.</span></span></param>
        <summary><span data-ttu-id="a5973-267">寫入追蹤資訊、資料物件，以及事件資訊至檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-267">Writes trace information, data objects, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-268">`eventCache`， `source`， `eventType`，和`id`頁首和頁尾的追蹤會使用參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-268">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="a5973-269">`id`參數會轉換成不帶正負號的整數寫入之前，因此負數`id`會寫成一個大型的正整數。</span><span class="sxs-lookup"><span data-stu-id="a5973-269">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="a5973-270">中的物件`data`參數陣列會做為寫入`DataItem`中的節點`TraceData`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-270">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="a5973-271">`ToString`的每個資料物件的方法用來將物件轉換為字串。</span><span class="sxs-lookup"><span data-stu-id="a5973-271">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5973-272">這個方法不是直接由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5973-272">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="a5973-273">它會呼叫的方法<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別來寫入追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="a5973-273">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-274">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-274">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-275">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-275">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5973-276">將事件追蹤資訊寫入輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-276">Writes event trace information to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a5973-277"><see cref="T:System.Diagnostics.TraceEventCache" />，包含目前處理序 ID、執行緒 ID 和堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="a5973-277">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a5973-278">來源名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-278">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="a5973-279">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a5973-279">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="a5973-280">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="a5973-280">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="a5973-281">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-281">The message to write.</span></span></param>
        <summary><span data-ttu-id="a5973-282">寫入追蹤資訊、訊息，以及事件資訊至檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-282">Writes trace information, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-283">`eventCache`， `source`， `eventType`，和`id`頁首和頁尾的追蹤會使用參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-283">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="a5973-284">`id`參數會轉換成不帶正負號的整數寫入之前，因此負數`id`會寫成一個大型的正整數。</span><span class="sxs-lookup"><span data-stu-id="a5973-284">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="a5973-285">`message`參數會撰寫為`Message`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-285">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5973-286">這個方法不是直接由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5973-286">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="a5973-287">它會呼叫的方法<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別來寫入追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="a5973-287">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-288">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-288">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-289">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-289">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a5973-290"><see cref="T:System.Diagnostics.TraceEventCache" />，包含目前處理序 ID、執行緒 ID 和堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="a5973-290">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a5973-291">來源名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-291">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="a5973-292">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a5973-292">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="a5973-293">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="a5973-293">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="a5973-294">包含零或多個格式項目的格式字串，這些項目與 <paramref name="args" /> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="a5973-294">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="a5973-295">物件陣列，包含零個或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="a5973-295">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="a5973-296">寫入追蹤資訊、格式化訊息，以及事件資訊至檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-296">Writes trace information, a formatted message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-297">`eventCache`， `source`， `eventType`，和`id`頁首和頁尾的追蹤會使用參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-297">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="a5973-298">`id`參數會轉換成不帶正負號的整數寫入之前，因此負數`id`會寫成一個大型的正整數。</span><span class="sxs-lookup"><span data-stu-id="a5973-298">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="a5973-299"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>呼叫方法時，傳入`format`字串並`args`陣列做為參數，來格式化`args`物件的陣列，做為`Message`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-299">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5973-300">這個方法不是直接由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5973-300">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="a5973-301">它會呼叫的方法<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別來寫入追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="a5973-301">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-302">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-302">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-303">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-303">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="a5973-304"><see cref="T:System.Diagnostics.TraceEventCache" />，包含目前處理序 ID、執行緒 ID 和堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="a5973-304">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="a5973-305">來源名稱。</span><span class="sxs-lookup"><span data-stu-id="a5973-305">The source name.</span></span></param>
        <param name="id"><span data-ttu-id="a5973-306">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="a5973-306">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="a5973-307">要寫入的追蹤訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-307">A trace message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="a5973-308"><see cref="T:System.Guid" /> 結構，辨識相關活動。</span><span class="sxs-lookup"><span data-stu-id="a5973-308">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span></span></param>
        <summary><span data-ttu-id="a5973-309">寫入包含相關活動之識別的追蹤資訊、訊息，以及事件資訊至檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="a5973-309">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-310"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>方法適用於相關的追蹤的相互關聯。</span><span class="sxs-lookup"><span data-stu-id="a5973-310">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="a5973-311">`eventCache`， `source`， `id`，和`relatedActivityId`頁首和頁尾的追蹤會使用參數。</span><span class="sxs-lookup"><span data-stu-id="a5973-311">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="a5973-312">`id`參數會轉換成不帶正負號的整數寫入之前，因此負數`id`會寫成一個大型的正整數。</span><span class="sxs-lookup"><span data-stu-id="a5973-312">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="a5973-313">`message`參數會撰寫為`Message`項目。</span><span class="sxs-lookup"><span data-stu-id="a5973-313">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="a5973-314"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType>方法呼叫以將轉換`relatedActivityId`"B"的值格式化字串，就會出現在標頭。</span><span class="sxs-lookup"><span data-stu-id="a5973-314">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="a5973-315">`SubTypeName`在頁尾中的項目會識別為追蹤事件類型<xref:System.Diagnostics.TraceEventType.Transfer>。</span><span class="sxs-lookup"><span data-stu-id="a5973-315">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5973-316"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>方法不是由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="a5973-316">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="a5973-317">它可能是由呼叫<xref:System.Diagnostics.TraceSource>發出的追蹤資訊的物件及其<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a5973-317">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-318">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-318">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-319">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-319">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a5973-320">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-320">The message to write.</span></span></param>
        <summary><span data-ttu-id="a5973-321">寫入逐字規範訊息至檔案或資料流，不加任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="a5973-321">Writes a verbatim message without any additional context information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-322">使用<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法以包含內容資訊的記錄輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-322">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-323">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-323">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-324">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-324">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a5973-325">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="a5973-325">The message to write.</span></span></param>
        <summary><span data-ttu-id="a5973-326">寫入逐字規範訊息至檔案或資料流，不加任何其他內容資訊，後面附上目前的行結束字元。</span><span class="sxs-lookup"><span data-stu-id="a5973-326">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5973-327">使用<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法以包含內容資訊的記錄輸出。</span><span class="sxs-lookup"><span data-stu-id="a5973-327">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5973-328">提供呼叫 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="a5973-328">for the ability to call unmanaged code.</span></span> <span data-ttu-id="a5973-329">關聯的列舉型別：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="a5973-329">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>