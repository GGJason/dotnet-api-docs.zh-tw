<Type Name="ProcessModule" FullName="System.Diagnostics.ProcessModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f2fb2bb49c25e8fbac8fdef6063a95ce8221994" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39862669" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProcessModule : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProcessModule extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessModule" />
  <TypeSignature Language="VB.NET" Value="Public Class ProcessModule&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessModule : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ProcessModule = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Diagnostics.Design.ProcessModuleDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Diagnostics.Design.ProcessModuleDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Diagnostics.Design.ProcessModuleDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("System.Diagnostics.Design.ProcessModuleDesigner, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="04879-101">表示載入至特定處理序的 .dll 或 .exe 檔。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04879-101">Represents a.dll or .exe file that is loaded into a particular process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04879-102">模組是可執行檔或動態連結程式庫 (DLL)。</span><span class="sxs-lookup"><span data-stu-id="04879-102">A module is an executable file or a dynamic link library (DLL).</span></span> <span data-ttu-id="04879-103">每個處理序是由一個或多個模組所組成。</span><span class="sxs-lookup"><span data-stu-id="04879-103">Each process consists of one or more modules.</span></span> <span data-ttu-id="04879-104">您可以使用這個類別來取得模組的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="04879-104">You can use this class to get information about the module.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04879-105">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="04879-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="04879-106">當您完成使用型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="04879-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="04879-107">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="04879-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="04879-108">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="04879-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="04879-109">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="04879-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04879-110">下列程式碼範例示範如何使用<xref:System.Diagnostics.ProcessModule>取得並顯示 Notepad.exe 應用程式所使用的所有模組的相關資訊的類別。</span><span class="sxs-lookup"><span data-stu-id="04879-110">The following code sample demonstrates how to use the <xref:System.Diagnostics.ProcessModule> class to get and display information about all the modules that are used by the Notepad.exe application.</span></span>  
  
 [!code-cpp[ProcessModule#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule/CPP/processmodule.cpp#1)]
 [!code-csharp[ProcessModule#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule/CS/processmodule.cs#1)]
 [!code-vb[ProcessModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule/VB/processmodule.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="04879-111">針對完全信任立即呼叫端。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04879-111">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="04879-112">這個類別不能由部分信任的程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04879-112">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="04879-113">針對繼承者完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04879-113">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="04879-114">這個類別無法繼承由部分信任的程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04879-114">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public IntPtr BaseAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessModule.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseAddress As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr BaseAddress { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : nativeint" Usage="System.Diagnostics.ProcessModule.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The base memory address of this module")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcModBaseAddress")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04879-115">取得模組載入的記憶體位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-115">Gets the memory address where the module was loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04879-116">模組的載入位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-116">The load address of the module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04879-117">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-117">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-118">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-118">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-119"><xref:System.Diagnostics.ProcessModule.ModuleName%2A>和<xref:System.Diagnostics.ProcessModule.BaseAddress%2A>屬性用來顯示模組名稱] 和 [記憶體位址的每個模組載入的位置。</span><span class="sxs-lookup"><span data-stu-id="04879-119">The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and  <xref:System.Diagnostics.ProcessModule.BaseAddress%2A> properties are used to display the module name and the memory address where each module was loaded.</span></span>  
  
 [!code-cpp[ProcessModule_BaseAddress#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_BaseAddress/CPP/processmodule_baseaddress.cpp#1)]
 [!code-csharp[ProcessModule_BaseAddress#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_BaseAddress/CS/processmodule_baseaddress.cs#1)]
 [!code-vb[ProcessModule_BaseAddress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_BaseAddress/VB/processmodule_baseaddress.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryPointAddress">
      <MemberSignature Language="C#" Value="public IntPtr EntryPointAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int EntryPointAddress" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessModule.EntryPointAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPointAddress As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr EntryPointAddress { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPointAddress : nativeint" Usage="System.Diagnostics.ProcessModule.EntryPointAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The base memory address of the entry point of this module")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcModEntryPointAddress")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04879-120">取得系統載入和執行模組時所執行的函式記憶體位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-120">Gets the memory address for the function that runs when the system loads and runs the module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04879-121">模組的進入點 (Entry Point)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-121">The entry point of the module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04879-122">模組的進入點是處理序啟動、 執行緒啟動、 關閉處理序和執行緒關機期間呼叫的函式的位置。</span><span class="sxs-lookup"><span data-stu-id="04879-122">The module's entry point is the location of the function that is called during process startup, thread startup, process shutdown, and thread shutdown.</span></span> <span data-ttu-id="04879-123">雖然的進入點不 DllMain 函式的位址，但它應該是關閉大多數的用途。</span><span class="sxs-lookup"><span data-stu-id="04879-123">While the entry point is not the address of the DllMain function, it should be close enough for most purposes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04879-124">因為 Windows 會載入組件的方式變更<xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A>上一律會傳回 0[!INCLUDE[win8](~/includes/win8-md.md)]或[!INCLUDE[win81](~/includes/win81-md.md)]和不應依賴在該平台。</span><span class="sxs-lookup"><span data-stu-id="04879-124">Due to changes in the way that Windows loads assemblies, <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> will always return 0 on [!INCLUDE[win8](~/includes/win8-md.md)] or [!INCLUDE[win81](~/includes/win81-md.md)] and should not be relied on for those platforms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04879-125">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-125">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-126">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-126">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-127"><xref:System.Diagnostics.ProcessModule.ModuleName%2A>和<xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A>屬性用來顯示的名稱和每個模組的進入點位址。</span><span class="sxs-lookup"><span data-stu-id="04879-127">The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> properties are used to display the name and the entry point address for each module.</span></span>  
  
 [!code-cpp[ProcessModule_EntryPoint#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_EntryPoint/CPP/processmodule_entrypoint.cpp#1)]
 [!code-csharp[ProcessModule_EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_EntryPoint/CS/processmodule_entrypoint.cs#1)]
 [!code-vb[ProcessModule_EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_EntryPoint/VB/processmodule_entrypoint.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessModule.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Diagnostics.ProcessModule.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The file name of this module")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcModFileName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04879-128">取得通往模組的完整路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-128">Gets the full path to the module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04879-129">完整路徑，定義模組的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-129">The fully qualified path that defines the location of the module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04879-130">如果檔案名稱長度超過允許的字元數目上限，則會截斷的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="04879-130">If the file name is longer than the maximum number of characters allowed, the file name is truncated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04879-131">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-131">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-132">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-132">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-133"><xref:System.Diagnostics.ProcessModule.ModuleName%2A>和<xref:System.Diagnostics.ProcessModule.FileName%2A>屬性用來顯示模組名稱和每個模組的完整路徑資訊。</span><span class="sxs-lookup"><span data-stu-id="04879-133">The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.FileName%2A> properties are used to display the module name and the full path information for each module.</span></span>  
  
 [!code-cpp[ProcessModule_FileName#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_FileName/CPP/processmodule_filename.cpp#1)]
 [!code-csharp[ProcessModule_FileName#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_FileName/CS/processmodule_filename.cs#1)]
 [!code-vb[ProcessModule_FileName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_FileName/VB/processmodule_filename.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileVersionInfo">
      <MemberSignature Language="C#" Value="public System.Diagnostics.FileVersionInfo FileVersionInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.FileVersionInfo FileVersionInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessModule.FileVersionInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileVersionInfo As FileVersionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::FileVersionInfo ^ FileVersionInfo { System::Diagnostics::FileVersionInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileVersionInfo : System.Diagnostics.FileVersionInfo" Usage="System.Diagnostics.ProcessModule.FileVersionInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.FileVersionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04879-134">取得模組的相關版本資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-134">Gets version information about the module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04879-135">
            <see cref="T:System.Diagnostics.FileVersionInfo" />，包含模組的版本資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-135">A <see cref="T:System.Diagnostics.FileVersionInfo" /> that contains the module's version information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04879-136">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-136">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-137">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-137">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-138"><xref:System.Diagnostics.ProcessModule.ModuleName%2A>和<xref:System.Diagnostics.ProcessModule.FileVersionInfo%2A>屬性用來顯示模組名稱和每個模組的檔案版本資訊。</span><span class="sxs-lookup"><span data-stu-id="04879-138">The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.FileVersionInfo%2A> properties are used to display the module name and the file version information for each module.</span></span>  
  
 [!code-cpp[ProcessModule_FileVersionInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_FileVersionInfo/CPP/processmodule_fileversioninfo.cpp#1)]
 [!code-csharp[ProcessModule_FileVersionInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_FileVersionInfo/CS/processmodule_fileversioninfo.cs#1)]
 [!code-vb[ProcessModule_FileVersionInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_FileVersionInfo/VB/processmodule_fileversioninfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleMemorySize">
      <MemberSignature Language="C#" Value="public int ModuleMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ModuleMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessModule.ModuleMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModuleMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ModuleMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleMemorySize : int" Usage="System.Diagnostics.ProcessModule.ModuleMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The memory needed by this module")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcModModuleMemorySize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04879-139">取得載入模組所需的記憶體數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-139">Gets the amount of memory that is required to load the module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04879-140">模組所佔有的記憶體大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-140">The size, in bytes, of the memory that the module occupies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04879-141"><xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> 不包含任何額外的記憶體配置，此模組可讓執行;它包含模組檔案中的靜態程式碼和資料的大小。</span><span class="sxs-lookup"><span data-stu-id="04879-141"><xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> does not include any additional memory allocations that the module makes once it is running; it includes only the size of the static code and data in the module file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04879-142">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-142">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-143">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-143">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-144"><xref:System.Diagnostics.ProcessModule.ModuleName%2A>和<xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A>屬性用來顯示模組名稱和每個模組所需的記憶體數量。</span><span class="sxs-lookup"><span data-stu-id="04879-144">The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> properties are used to display the module name and the amount of memory needed for each module.</span></span>  
  
 [!code-cpp[ProcessModule_ModuleMemorySize#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_ModuleMemorySize/CPP/processmodule_modulememorysize.cpp#1)]
 [!code-csharp[ProcessModule_ModuleMemorySize#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_ModuleMemorySize/CS/processmodule_modulememorysize.cs#1)]
 [!code-vb[ProcessModule_ModuleMemorySize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_ModuleMemorySize/VB/processmodule_modulememorysize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleName">
      <MemberSignature Language="C#" Value="public string ModuleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModuleName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessModule.ModuleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModuleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModuleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleName : string" Usage="System.Diagnostics.ProcessModule.ModuleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of this module")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcModModuleName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04879-145">取得處理序模組的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-145">Gets the name of the process module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04879-146">模組的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-146">The name of the module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04879-147">如果名稱長度超過允許的字元數目上限，則會遭到截斷。</span><span class="sxs-lookup"><span data-stu-id="04879-147">If the name is longer than the maximum number of characters allowed, it is truncated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04879-148">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-148">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-149">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-149">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-150"><xref:System.Diagnostics.ProcessModule.ModuleName%2A>屬性用來顯示每個模組的名稱。</span><span class="sxs-lookup"><span data-stu-id="04879-150">The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> property is used to display the name of each module.</span></span>  
  
 [!code-cpp[ProcessModule_ModuleName#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_ModuleName/CPP/processmodule_modulename.cpp#1)]
 [!code-csharp[ProcessModule_ModuleName#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_ModuleName/CS/processmodule_modulename.cs#1)]
 [!code-vb[ProcessModule_ModuleName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_ModuleName/VB/processmodule_modulename.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessModule.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="processModule.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04879-151">將模組名稱轉換為字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-151">Converts the name of the module to a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04879-152">
            <see cref="P:System.Diagnostics.ProcessModule.ModuleName" /> 屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04879-152">The value of the <see cref="P:System.Diagnostics.ProcessModule.ModuleName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04879-153">下列程式碼範例會建立 Notepad.exe 應用程式的新處理序。</span><span class="sxs-lookup"><span data-stu-id="04879-153">The following code example creates a new process for the Notepad.exe application.</span></span> <span data-ttu-id="04879-154">程式碼會逐一<xref:System.Diagnostics.ProcessModuleCollection>類別來取得<xref:System.Diagnostics.ProcessModule>集合中每個模組的物件。</span><span class="sxs-lookup"><span data-stu-id="04879-154">The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection.</span></span> <span data-ttu-id="04879-155"><xref:System.Diagnostics.ProcessModule.ToString%2A>方法用來顯示每個模組的名稱。</span><span class="sxs-lookup"><span data-stu-id="04879-155">The <xref:System.Diagnostics.ProcessModule.ToString%2A> method is used to display the name for each module.</span></span>  
  
 [!code-cpp[ProcessModule_ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_ToString/CPP/processmodule_tostring.cpp#1)]
 [!code-csharp[ProcessModule_ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_ToString/CS/processmodule_tostring.cs#1)]
 [!code-vb[ProcessModule_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_ToString/VB/processmodule_tostring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>