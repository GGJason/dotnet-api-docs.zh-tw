<Type Name="UnescapedXmlDiagnosticData" FullName="System.Diagnostics.UnescapedXmlDiagnosticData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8891ef929be65c47c45479eb22661cd76abc0bc6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37662574" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnescapedXmlDiagnosticData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
  <TypeSignature Language="VB.NET" Value="Public Class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="F#" Value="type UnescapedXmlDiagnosticData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供未逸出的 XML 資料，用於登錄使用者提供的追蹤資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此類別由<xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A>方法。 它也可用來將 XML 資料來傳遞<xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A>方法。  
  
> [!NOTE]
>  使用者提供的資料不會檢查結構描述的有效性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Diagnostics.UnescapedXmlDiagnosticData>類別。 此程式碼範例是針對所提供之較大範例的一部分<xref:System.Diagnostics.EventSchemaTraceListener>類別。  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnescapedXmlDiagnosticData (string xmlPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlPayload As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnescapedXmlDiagnosticData(System::String ^ xmlPayload);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.UnescapedXmlDiagnosticData : string -&gt; System.Diagnostics.UnescapedXmlDiagnosticData" Usage="new System.Diagnostics.UnescapedXmlDiagnosticData xmlPayload" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlPayload">要記錄至事件結構描述 <see langword="UserData" /> 節點的 XML 資料。</param>
        <summary>使用指定的 XML 資料字串，初始化 <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要端對端的程式碼結構描述符合規範，`xmlPayload`參數必須是可針對端對端事件結構描述進行驗證的 XML 片段。 如果`xmlPayload`已`null`，則<xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A>屬性為空字串。  
  
> [!NOTE]
>  `xmlPayload` 不會檢查 XML 有效。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Diagnostics.UnescapedXmlDiagnosticData.%23ctor%2A>建構函式。 此程式碼範例是針對所提供之較大範例的一部分<xref:System.Diagnostics.EventSchemaTraceListener>類別。  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="unescapedXmlDiagnosticData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> 物件的字串表示。</summary>
        <returns>
          <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> 物件的字串表示。 如果物件是 <see langword="null" />，則這個方法會傳回空的字串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapedXml">
      <MemberSignature Language="C#" Value="public string UnescapedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnescapedXml" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property UnescapedXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnescapedXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnescapedXml : string with get, set" Usage="System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定未逸出的 XML 資料字串。</summary>
        <value>未逸出的 XML 字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要端對端的程式碼結構描述符合規範，<xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A>屬性值必須是可針對端對端事件結構描述進行驗證的 XML 片段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>