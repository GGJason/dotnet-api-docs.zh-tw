<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="331d1e20f17d7065dd117481b3458a017c3f98b4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b07e6-101">提供一組方法和屬性，可協助偵錯程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b07e6-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-102">如果您使用中的方法<xref:System.Diagnostics.Debug>類別列印偵錯資訊，請檢查您的邏輯，判斷提示，您可以讓您的程式碼更穩固而不會影響效能和程式碼的大小傳送產品。</span><span class="sxs-lookup"><span data-stu-id="b07e6-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="b07e6-103">這個類別會提供方法來顯示<xref:System.Diagnostics.Debug.Assert%2A>對話方塊中，並發出將一律失敗的判斷提示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="b07e6-104">這個類別會提供寫入方法中的下列差異： <xref:System.Diagnostics.Debug.Write%2A>， <xref:System.Diagnostics.Debug.WriteLine%2A>，<xref:System.Diagnostics.Debug.WriteIf%2A>和<xref:System.Diagnostics.Debug.WriteLineIf%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="b07e6-105"><xref:System.Diagnostics.BooleanSwitch>和<xref:System.Diagnostics.TraceSwitch>類別提供方法以動態方式控制追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="b07e6-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="b07e6-106">您可以修改這些參數的值不需要重新編譯您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="b07e6-107">如需使用組態檔來設定參數資訊，請參閱<xref:System.Diagnostics.Switch>類別和[追蹤參數](~/docs/framework/debug-trace-profile/trace-switches.md)主題。</span><span class="sxs-lookup"><span data-stu-id="b07e6-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="b07e6-108">您可以新增自訂追蹤輸出的目標<xref:System.Diagnostics.TraceListener>執行個體，或移除執行個體從<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="b07e6-109"><xref:System.Diagnostics.Debug.Listeners%2A>集合由兩者共用<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>類別; 加入其中一個類別的追蹤接聽程式將接聽程式加入至兩者。</span><span class="sxs-lookup"><span data-stu-id="b07e6-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="b07e6-110">根據預設，<xref:System.Diagnostics.DefaultTraceListener>類別就會發出追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="b07e6-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-111">加入追蹤接聽程式，<xref:System.Diagnostics.Debug.Listeners%2A>集合可能會造成追蹤，時擲回例外狀況，如果追蹤接聽程式所使用的資源無法使用。</span><span class="sxs-lookup"><span data-stu-id="b07e6-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="b07e6-112">條件和擲回的例外狀況取決於追蹤接聽項，且無法列舉本主題中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="b07e6-113">可能很有用呼叫<xref:System.Diagnostics.Debug>方法`try` / `catch`區塊偵測和處理來自追蹤接聽程式的任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b07e6-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="b07e6-114">您可以修改的層級的縮排使用<xref:System.Diagnostics.Debug.Indent%2A>方法或<xref:System.Diagnostics.Debug.IndentLevel%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b07e6-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="b07e6-115">若要修改的縮排的間距，請使用<xref:System.Diagnostics.Debug.IndentSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b07e6-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="b07e6-116">您可以指定是否自動在每次寫入後清除輸出緩衝區，藉由設定<xref:System.Diagnostics.Debug.AutoFlush%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="b07e6-117">若要設定<xref:System.Diagnostics.Debug.AutoFlush%2A>和<xref:System.Diagnostics.Debug.IndentSize%2A>如<xref:System.Diagnostics.Debug>，您可以編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="b07e6-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="b07e6-118">組態檔應該格式化，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="b07e6-119"><xref:System.Diagnostics.ConditionalAttribute>屬性會套用至方法的<xref:System.Diagnostics.Debug>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="b07e6-120">支援的編譯器<xref:System.Diagnostics.ConditionalAttribute>忽略呼叫這些方法，除非 「 偵錯 」 定義為條件式編譯符號。</span><span class="sxs-lookup"><span data-stu-id="b07e6-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="b07e6-121">請參閱編譯器的文件，以判斷是否<xref:System.Diagnostics.ConditionalAttribute>支援，以及定義條件式編譯符號的語法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="b07e6-122">在 Visual Studio C# 和 Visual Basic 專案中，依預設，[偵錯] 條件式編譯符號定義偵錯組建，而"TRACE"符號的同時進行偵錯和發行的組建定義。</span><span class="sxs-lookup"><span data-stu-id="b07e6-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="b07e6-123">如需如何停用此行為，請參閱 Visual Studio 文件。</span><span class="sxs-lookup"><span data-stu-id="b07e6-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="b07e6-124">如需 Visual c + + 中的條件式偵錯資訊，請參閱[Debug 類別 (C + + /CLI)](/cpp/dotnet/debug-class-cpp-cli)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="b07e6-125">若要定義"DEBUG"條件式編譯符號在 C# 中，加入`/d:DEBUG`編譯器命令列選項，當您編譯程式碼使用命令列，或新增`#define DEBUG`加入您的檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="b07e6-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="b07e6-126">在 Visual Basic 中，加入`/d:DEBUG=True`編譯器命令列選項，或新增`#Const DEBUG=True`檔案。</span><span class="sxs-lookup"><span data-stu-id="b07e6-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-127">下列範例會使用<xref:System.Diagnostics.Debug>表示的開頭和結尾程式的執行。</span><span class="sxs-lookup"><span data-stu-id="b07e6-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="b07e6-128">此範例也會使用<xref:System.Diagnostics.Debug.Indent%2A>和<xref:System.Diagnostics.Debug.Unindent%2A>區別追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="b07e6-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b07e6-129">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b07e6-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-130">檢查條件；如果條件為 <see langword="false" />，則輸出訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-131">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-132">如果條件為 <see langword="true" />，就不會傳送失敗的訊息，也不會顯示訊息方塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-133">檢查條件；如果條件為 <see langword="false" />，則顯示訊息方塊，該方塊會顯示呼叫堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-134">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b07e6-135">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要執行判斷提示，發行組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b07e6-136">如需詳細資訊，請參閱[Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b07e6-137">`Assert`方法不適用於[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]應用程式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="b07e6-138">一般而言，<xref:System.Diagnostics.Debug.Assert%28System.Boolean%29>方法用來在程式開發期間識別出邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="b07e6-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b07e6-139"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="b07e6-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="b07e6-140">如果結果為`false`，它會傳送失敗訊息給<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="b07e6-141">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b07e6-142">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b07e6-143">訊息方塊包含三個按鈕：**中止**，**重試**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="b07e6-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b07e6-144">按一下**中止**按鈕結束應用程式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b07e6-145">按一下**重試**如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="b07e6-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b07e6-146">按一下**忽略**會繼續進行下一個指令碼中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="b07e6-147"> 應用程式不支援強制回應對話方塊，讓它們的行為相同的使用者介面模式和非使用者介面模式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="b07e6-148">將訊息寫入到使用中的追蹤接聽程式在偵錯模式中，或在發行模式中寫入任何訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-149">訊息方塊的顯示取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-150">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b07e6-151"><xref:System.Diagnostics.DefaultTraceListener>可以移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b07e6-152">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>對應至您的應用程式名稱的組態檔中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b07e6-153">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="b07e6-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b07e6-154">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="b07e6-154">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-155">下列範例會建立陣列的索引、 執行某項動作來設定索引的值，然後呼叫<xref:System.Diagnostics.Debug.Assert%2A>確認索引值有效。</span><span class="sxs-lookup"><span data-stu-id="b07e6-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="b07e6-156">如果不是有效的<xref:System.Diagnostics.Debug.Assert%2A>輸出呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-157">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-158">如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-159">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-160">檢查條件；如果條件為 <see langword="false" />，則輸出指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-161">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b07e6-162">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要執行判斷提示，發行組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b07e6-163">如需詳細資訊，請參閱[Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="b07e6-164">一般而言，<xref:System.Diagnostics.Debug.Assert%2A>方法用來在程式開發期間識別出邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="b07e6-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b07e6-165"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="b07e6-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="b07e6-166">如果結果為`false`，它會傳送至指定的診斷訊息<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="b07e6-167">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b07e6-168">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b07e6-169">訊息方塊包含三個按鈕：**中止**，**重試**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="b07e6-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b07e6-170">按一下**中止**按鈕結束應用程式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b07e6-171">按一下**重試**如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="b07e6-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b07e6-172">按一下**忽略**會繼續進行下一個指令碼中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-173">訊息方塊的顯示取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-174">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b07e6-175"><xref:System.Diagnostics.DefaultTraceListener>可以移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b07e6-176">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>對應至您的應用程式名稱的組態檔中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b07e6-177">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="b07e6-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b07e6-178">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="b07e6-178">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-179">下列範例會檢查是否`type`參數才有效。</span><span class="sxs-lookup"><span data-stu-id="b07e6-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="b07e6-180">如果`type`是`null`，<xref:System.Diagnostics.Trace.Assert%2A>輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-181">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-182">如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-183">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="b07e6-184">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的詳細訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-185">檢查條件；如果條件為 <see langword="false" />，則輸出兩個指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-186">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b07e6-187">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要執行判斷提示，發行組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b07e6-188">如需詳細資訊，請參閱[Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="b07e6-189">一般而言，<xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29>方法用來在程式開發期間識別出邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="b07e6-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b07e6-190"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="b07e6-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="b07e6-191">如果結果為`false`，它會傳送指定的診斷訊息和要詳細的訊息<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="b07e6-192">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b07e6-193">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b07e6-194">訊息方塊包含三個按鈕：**中止**，**重試**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="b07e6-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b07e6-195">按一下**中止**按鈕結束應用程式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b07e6-196">按一下**重試**如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="b07e6-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b07e6-197">按一下**忽略**會繼續進行下一個指令碼中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-198">訊息方塊的顯示取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-199">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b07e6-200"><xref:System.Diagnostics.DefaultTraceListener>可以移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b07e6-201">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>對應至您的應用程式名稱的組態檔中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b07e6-202">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="b07e6-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b07e6-203">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="b07e6-203">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-204">下列範例會檢查是否`type`參數才有效。</span><span class="sxs-lookup"><span data-stu-id="b07e6-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="b07e6-205">如果`type`是`null`，<xref:System.Diagnostics.Trace.Assert%2A>輸出兩個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-206">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-207">如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-208">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="b07e6-209">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的複合格式字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="b07e6-210">這個訊息包含混合零或多個格式項目的文字，而這些格式項目與 <c>args</c> 陣列中的物件相對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="b07e6-211">物件陣列，包含零或多個要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-212">檢查條件；如果條件為 <see langword="false" />，則會輸出兩個訊息 (簡單和格式化) 並且顯示列出呼叫堆疊的訊息方塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-213">這個方法會使用.NET framework 物件的值轉換成它的文字表示，並將該表示內嵌在字串中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="b07e6-214">產生的字串傳送至<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b07e6-215">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="b07e6-216">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要執行判斷提示，發行組建。</span><span class="sxs-lookup"><span data-stu-id="b07e6-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="b07e6-217">如需詳細資訊，請參閱[Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="b07e6-218">一般而言，<xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29>方法用來在程式開發期間識別出邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="b07e6-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="b07e6-219"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="b07e6-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="b07e6-220">如果結果為`false`、<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法呼叫和`detailMessageFormat`字串和`args`陣列會在當做參數傳遞。</span><span class="sxs-lookup"><span data-stu-id="b07e6-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="b07e6-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> 然後會傳送指定的文字訊息和格式化的文字訊息<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="b07e6-222">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="b07e6-223">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="b07e6-224">訊息方塊包含三個按鈕：**中止**，**重試**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="b07e6-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="b07e6-225">按一下**中止**按鈕結束應用程式。</span><span class="sxs-lookup"><span data-stu-id="b07e6-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="b07e6-226">按一下**重試**如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="b07e6-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="b07e6-227">按一下**忽略**會繼續進行下一個指令碼中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-228">顯示訊息方塊是取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-229">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b07e6-230"><xref:System.Diagnostics.DefaultTraceListener>可以移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b07e6-231">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>對應至您的應用程式名稱的組態檔中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b07e6-232">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="b07e6-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b07e6-233">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="b07e6-233">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-234">取得或設定數值，表示每次寫入後是否要在 <see cref="M:System.Diagnostics.Debug.Flush" /> 上呼叫 <see cref="P:System.Diagnostics.Debug.Listeners" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b07e6-235">如果每次寫入後會在 <see cref="P:System.Diagnostics.Debug.Listeners" /> 上呼叫 <see cref="M:System.Diagnostics.Debug.Flush" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-236">預設值為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="b07e6-237">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<xref:System.Diagnostics.Debug.Flush%2A>或<xref:System.Diagnostics.Debug.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="b07e6-238">設定<xref:System.Diagnostics.Debug.AutoFlush%2A>至`true`表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</span><span class="sxs-lookup"><span data-stu-id="b07e6-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b07e6-239">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b07e6-240">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</span><span class="sxs-lookup"><span data-stu-id="b07e6-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="b07e6-241">若要設定<xref:System.Diagnostics.Debug.AutoFlush%2A>和<xref:System.Diagnostics.Debug.IndentSize%2A>如<xref:System.Diagnostics.Debug>，您也可以編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="b07e6-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="b07e6-242">組態檔應該格式化，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b07e6-243">用於與 unmanaged 程式碼的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b07e6-244">要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-245">清除輸出緩衝區，然後對每個 <see cref="P:System.Diagnostics.Debug.Listeners" /> 呼叫 <see langword="Close" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-246">使用這個方法會輸出到檔案，例如至<xref:System.Diagnostics.TextWriterTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-247">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<xref:System.Diagnostics.Debug.Flush%2A>或<xref:System.Diagnostics.Debug.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="b07e6-248">設定<xref:System.Diagnostics.Debug.AutoFlush%2A>至`true`表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</span><span class="sxs-lookup"><span data-stu-id="b07e6-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b07e6-249">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b07e6-250">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</span><span class="sxs-lookup"><span data-stu-id="b07e6-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-251">下列範例會建立<xref:System.Diagnostics.TextWriterTraceListener>名為`myTextListener`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="b07e6-252">`myTextListener` 使用<xref:System.IO.StreamWriter>呼叫`myOutputWriter`寫入到名為`TestFile.txt`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="b07e6-253">此範例建立檔案、 串流和文字寫入器、 將一行文字寫入檔案，然後清除和關閉輸出。</span><span class="sxs-lookup"><span data-stu-id="b07e6-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b07e6-254">用於與 unmanaged 程式碼的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b07e6-255">要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-256">發出錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-257">要發出的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-258">發出指定的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-259">預設行為是，<xref:System.Diagnostics.DefaultTraceListener>輸出訊息至訊息方塊，當執行應用程式時使用者介面模式以及<xref:System.Diagnostics.TraceListener>中執行個體<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-260">顯示訊息方塊是取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-261">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b07e6-262"><xref:System.Diagnostics.DefaultTraceListener>可以移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b07e6-263">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-264">下列範例會使用<xref:System.Diagnostics.Debug.Fail%2A>例外狀況處理期間列印一則訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b07e6-265">您也可以使用<xref:System.Diagnostics.Debug.Fail%2A>switch 陳述式中的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-266">要發出的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="b07e6-267">要發出的詳細訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-268">發出錯誤訊息和詳細錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-269">預設行為是，<xref:System.Diagnostics.DefaultTraceListener>輸出訊息至訊息方塊，當執行應用程式時使用者介面模式以及<xref:System.Diagnostics.TraceListener>中執行個體<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-270">顯示訊息方塊是取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-271">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b07e6-272"><xref:System.Diagnostics.DefaultTraceListener>可以移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="b07e6-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b07e6-273">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="b07e6-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-274">下列範例會使用<xref:System.Diagnostics.Debug.Fail%2A>例外狀況處理期間列印一則訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b07e6-275">您也可以使用<xref:System.Diagnostics.Debug.Fail%2A>switch 陳述式中的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-276">清除輸出緩衝區並造成緩衝資料寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-277">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<xref:System.Diagnostics.Debug.Flush%2A>或<xref:System.Diagnostics.Debug.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="b07e6-278">設定<xref:System.Diagnostics.Debug.AutoFlush%2A>至`true`表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</span><span class="sxs-lookup"><span data-stu-id="b07e6-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b07e6-279">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</span><span class="sxs-lookup"><span data-stu-id="b07e6-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b07e6-280">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</span><span class="sxs-lookup"><span data-stu-id="b07e6-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-281">下列範例會建立<xref:System.Diagnostics.TextWriterTraceListener>名為`myTextListener`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="b07e6-282">`myTextListener` 使用<xref:System.IO.FileStream>呼叫`myFileStream`寫入到名為`TestFile.txt`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="b07e6-283">這個範例會建立資料流、 開啟檔案，如果它存在或建立一個新、 將一行文字寫入檔案，然後清除和關閉輸出。</span><span class="sxs-lookup"><span data-stu-id="b07e6-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-284">將目前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 增加一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b07e6-285">下列範例會設定縮排層級，並發出偵錯訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b07e6-286">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="b07e6-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-287">取得或設定縮排層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b07e6-288">縮排層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-288">The indent level.</span>
          </span>
          <span data-ttu-id="b07e6-289">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-290"><xref:System.Diagnostics.Debug.IndentLevel%2A>屬性表示的次數大小的縮排<xref:System.Diagnostics.Debug.IndentSize%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="b07e6-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-291">下列範例會設定縮排層級，並發出偵錯訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b07e6-292">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="b07e6-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-293">取得或設定縮排的空格數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b07e6-294">縮排中的空格數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="b07e6-295">預設值為 4。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-296">A<xref:System.Diagnostics.TextWriterTraceListener>將這個數字解譯為空格。</span><span class="sxs-lookup"><span data-stu-id="b07e6-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="b07e6-297"><xref:System.Diagnostics.EventLogTraceListener>會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="b07e6-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="b07e6-298">若要設定<xref:System.Diagnostics.Debug.AutoFlush%2A>和<xref:System.Diagnostics.Debug.IndentSize%2A>如<xref:System.Diagnostics.Debug>，您也可以編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="b07e6-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="b07e6-299">組態檔應該格式化，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="b07e6-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-300">取得監視偵錯輸出的接聽項的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b07e6-301">
            <see cref="T:System.Diagnostics.TraceListenerCollection" />，表示監視偵錯輸出的 <see cref="T:System.Diagnostics.TraceListener" /> 型別的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-302">接聽程式會產生偵錯輸出中的格式化的輸出。</span><span class="sxs-lookup"><span data-stu-id="b07e6-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="b07e6-303">根據預設，集合包含的執行個體<xref:System.Diagnostics.DefaultTraceListener>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="b07e6-304">若要移除預設接聽程式，請呼叫<xref:System.Diagnostics.TraceListenerCollection.Remove%2A>方法，並將它傳遞的執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b07e6-305">若要將輸出重新導向至主控台視窗中，執行個體加入<xref:System.Diagnostics.ConsoleTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="b07e6-306">若要將輸出重新導向至檔案或資料流，將加入的執行個體<xref:System.Diagnostics.TextWriterTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b07e6-307"><xref:System.Diagnostics.Debug.Listeners%2A>集合由兩者共用<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>類別; 加入其中一個類別的追蹤接聽程式將接聽程式加入至兩者。</span><span class="sxs-lookup"><span data-stu-id="b07e6-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-308">下列範例會建立<xref:System.Diagnostics.TextWriterTraceListener>，輸出至主控台畫面。</span><span class="sxs-lookup"><span data-stu-id="b07e6-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="b07e6-309">程式碼會再加入新的接聽程式<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b07e6-310">用於與 unmanaged 程式碼的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b07e6-311">要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-312">將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-313">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-314">將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-315">預設行結束字元是歸位字元後面接著換行字元。</span><span class="sxs-lookup"><span data-stu-id="b07e6-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="b07e6-316">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b07e6-317">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <c>args</c> 陣列中的物件相對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="b07e6-318">物件陣列，包含零個或多個要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-319">將後面接著行結束字元的格式化字串寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-320">這個方法會使用.NET framework 物件的值轉換成它的文字表示，並將該表示內嵌在字串中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="b07e6-321">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b07e6-322">
            <paramref name="format" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b07e6-323">
            <paramref name="format" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="b07e6-324">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-324">-or-</span>
          </span>
          <span data-ttu-id="b07e6-325">用來指示要格式化的引數的數目小於零，或者大於或等於要格式化的指定物件數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-325">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-326">將目前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 減少一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-326">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b07e6-327">下列範例會設定縮排層級，並發出偵錯訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-327">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b07e6-328">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="b07e6-328">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-329">將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-329">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b07e6-330">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-330">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-331">將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-331">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-332">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-332">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-333">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-333">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-334">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-334">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-335">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-335">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-336">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-336">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-337">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-337">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-338">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-338">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-339">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-339">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-340">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-340">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-341">將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-341">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-342">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-342">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-343">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-343">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-344">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-344">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-345">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-345">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-346">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-346">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-347">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-347">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-348">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-348">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-349">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-349">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b07e6-350">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-350">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-351">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-351">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-352">將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-352">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-353">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-353">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-354">使用`category`群組的參數輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-354">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-355">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-355">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-356">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-356">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-357">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-357">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-358">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-358">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-359">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-359">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-360">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-360">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-361">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-361">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-362">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-362">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-363">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-363">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-364">將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-364">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-365">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-366">使用`category`群組的參數輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-366">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-367">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-367">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-368">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-368">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-369">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-369">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-370">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-370">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-371">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-371">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-372">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-372">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-373">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-373">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-374">如果條件為 <see langword="true" />，將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-374">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-375">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-375">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-376">如果條件為 <see langword="true" />，則將值寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-376">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b07e6-377">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-377">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-378">如果條件為 <see langword="true" />，則將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-378">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-379">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-379">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-380">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-380">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-381">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-381">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-382">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-382">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-383">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出值參數的名字<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-383">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-384">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-384">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-385">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第一個訊息的同一行上的訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-385">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-386">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-386">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-387">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-387">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-388">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-388">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-389">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-389">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-390">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-390">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-391">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-391">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-392">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-392">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-393">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-393">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-394">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-394">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-395">如果條件為 <see langword="true" />，則將訊息寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-395">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-396">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-396">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-397">如果條件為 <see langword="true" />，則將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-397">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-398">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-398">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-399">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-399">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-400">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-400">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-401">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-401">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-402">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-402">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-403">如需加入至接聽程式<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-403">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-404">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-404">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-405">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-405">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-406">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-406">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-407">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-407">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-408">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-408">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-409">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-409">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-410">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-410">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-411">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-411">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-412">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-412">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-413">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-413">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-414">如果條件為 <see langword="true" />，則將分類名稱和值寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-414">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b07e6-415">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-415">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-416">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-416">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-417">如果條件為 <see langword="true" />，則將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-417">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-418">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-418">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-419">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-419">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-420">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-420">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-421">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-421">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-422">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-422">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-423">如果切換設定為<xref:System.Diagnostics.TraceLevel> `Verbose`，此範例輸出的名稱`myObject`和`category`至<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-423">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-424">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-424">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-425">如果<xref:System.Diagnostics.TraceLevel>設`Error`或更新版本中，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-425">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-426">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-426">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-427">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-427">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-428">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-428">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-429">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-429">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-430">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-430">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-431">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-431">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-432">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-432">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-433">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-433">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-434">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-434">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-435">如果條件為 <see langword="true" />，則將分類名稱和訊息寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-435">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-436">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-436">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-437">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-437">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-438">如果條件是 <see langword="true" />，則將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-438">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-439">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-439">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-440">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-440">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-441">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-441">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-442">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-442">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-443">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-443">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-444">如果切換設定為<xref:System.Diagnostics.TraceLevel> `Verbose`，範例會輸出第一個錯誤訊息至<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-444">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-445">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-445">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-446">如果<xref:System.Diagnostics.TraceLevel>設`Error`或更新版本中，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-446">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-447">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-447">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-448">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-448">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-449">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-449">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-450">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-450">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-451">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-451">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-452">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-452">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-453">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-453">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-454">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-454">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-455">將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-455">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b07e6-456">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-456">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-457">將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-457">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-458">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-458">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-459">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-459">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-460">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-460">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-461">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-461">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-462">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-462">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-463">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-463">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-464">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第一個訊息的同一行上之物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="b07e6-464">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="b07e6-465">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-465">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-466">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-466">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-467">將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-467">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-468">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-468">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-469">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-469">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-470">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-470">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-471">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-471">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-472">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-472">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-473">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-473">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-474">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-474">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-475">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-475">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b07e6-476">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-476">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-477">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-477">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-478">將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-478">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-479">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-479">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-480">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-480">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-481">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-481">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-482">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-482">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-483">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-483">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-484">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-484">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-485">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-485">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-486">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-486">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-487">第二個訊息後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="b07e6-487">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b07e6-488">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <c>args</c> 陣列中的物件相對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-488">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="b07e6-489">物件陣列，包含零或多個要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-489">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-490">將後面接著行結束字元的格式化訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-490">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-491">這個方法會使用.NET framework 物件的值轉換成它的文字表示，並將該表示內嵌在字串中。</span><span class="sxs-lookup"><span data-stu-id="b07e6-491">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="b07e6-492">這個方法的語法中的關鍵字表示的物件陣列可以是單一值。</span><span class="sxs-lookup"><span data-stu-id="b07e6-492">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="b07e6-493">這個例外狀況是<xref:System.String>物件。</span><span class="sxs-lookup"><span data-stu-id="b07e6-493">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="b07e6-494">明確的多載會接受優先順序，因此`arg`單一字串值將會預設為<xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="b07e6-494">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="b07e6-495">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-495">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-496">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-496">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b07e6-497">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-497">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-498">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-498">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-499">將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-499">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-500">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-500">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-501">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-501">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-502">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-502">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-503">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-503">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-504">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-504">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-505">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-505">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-506">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-506">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-507">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息和`category`第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-507">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="b07e6-508">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-508">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b07e6-509">如果條件為 <see langword="true" />，將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-509">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-510">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-510">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-511">如果條件為 <see langword="true" />，則將值寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-511">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b07e6-512">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-512">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-513">如果條件為 <see langword="true" />，則將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-513">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-514">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-514">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-515">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-515">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-516">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-516">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-517">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-517">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-518">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-518">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-519">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-519">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-520">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第一個訊息的同一行上之物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="b07e6-520">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="b07e6-521">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-521">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-522">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-522">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-523">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-523">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-524">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-524">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-525">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-525">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-526">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-526">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-527">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-527">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-528">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-528">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-529">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-529">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-530">如果條件為 <see langword="true" />，則將訊息寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-530">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-531">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-531">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-532">如果條件為 <see langword="true" />，則將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-532">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-533">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-533">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-534">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-534">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-535">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-535">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-536">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-536">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-537">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-537">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-538">如需加入至接聽程式<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-538">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-539">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-539">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-540">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-540">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-541">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-541">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-542">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-542">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-543">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-543">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-544">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-544">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-545">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-545">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-546">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-546">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-547">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-547">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-548">要評估的條件運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-548">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="b07e6-549">如果條件為 <see langword="true" />，則將分類名稱和值寫入集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-549">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b07e6-550">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-550">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-551">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-551">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-552">如果條件為 <see langword="true" />，則將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-552">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-553">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-554">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-554">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-555">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-555">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-556">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-556">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-557">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-557">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-558">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-558">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-559">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-559">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-560">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-560">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="b07e6-561">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-561">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-562">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-562">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-563">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-563">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-564">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-564">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-565">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-565">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-566">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-566">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-567">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-567">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-568">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-568">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="b07e6-569">
            <see langword="true" /> 會寫入訊息，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-569">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="b07e6-570">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-570">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="b07e6-571">用來組織輸出的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-571">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b07e6-572">如果條件是 <see langword="true" />，則將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b07e6-572">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b07e6-573">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-573">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="b07e6-574">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-574">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="b07e6-575">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="b07e6-575">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b07e6-576">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="b07e6-576">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="b07e6-577">這個參數會設定外部程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b07e6-577">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="b07e6-578">如果切換設定為<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，此範例輸出的第一個錯誤訊息， <xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="b07e6-578">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="b07e6-579">如需將加入至接聽程式的資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="b07e6-579">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="b07e6-580">如果<xref:System.Diagnostics.TraceLevel>設`Verbose`，範例會輸出第二個錯誤訊息和`category`第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="b07e6-580">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="b07e6-581">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="b07e6-581">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b07e6-582">您可以使用來檢測應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-582">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="b07e6-583">下列兩個程式碼範例會傳送相同的偵錯訊息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-583">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="b07e6-584">但是，第一個範例時，更快速追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，請勿呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-584">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="b07e6-585">第二個範例會一律呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-585">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="b07e6-586">這會導致不必要執行複雜的程式碼。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-586">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="b07e6-587">第一個範例：</span>
            <span class="sxs-lookup">
              <span data-stu-id="b07e6-587">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="b07e6-588">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="b07e6-588">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>