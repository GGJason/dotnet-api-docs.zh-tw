<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Debug.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5331d1e20f17d7065dd117481b3458a017c3f98b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">331d1e20f17d7065dd117481b3458a017c3f98b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Provides a set of methods and properties that help debug your code.</source>
          <target state="translated">提供一組方法和屬性，可協助偵錯程式碼。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>If you use methods in the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</source>
          <target state="translated">如果您使用中的方法<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>類別列印偵錯資訊，請檢查您的邏輯，判斷提示，您可以讓您的程式碼更穩固而不會影響效能和程式碼的大小傳送產品。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides methods to display an <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always fail.</source>
          <target state="translated">這個類別會提供方法來顯示<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>對話方塊中，並發出將一律失敗的判斷提示。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides write methods in the following variations: <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>.</source>
          <target state="translated">這個類別會提供寫入方法中的下列差異： <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>類別提供方法以動態方式控制追蹤輸出。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the values of these switches without recompiling your application.</source>
          <target state="translated">您可以修改這些參數的值不需要重新編譯您的應用程式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information on using the configuration file to set a switch, see the <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id="p1">[</bpt>Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> topic.</source>
          <target state="translated">如需使用組態檔來設定參數資訊，請參閱<ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph>類別和<bpt id="p1">[</bpt>追蹤參數<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept>主題。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can customize the tracing output's target by adding <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以新增自訂追蹤輸出的目標<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>執行個體，或移除執行個體從<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合由兩者共用<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>類別; 加入其中一個類別的追蹤接聽程式將接聽程式加入至兩者。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class emits trace output.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>類別就會發出追蹤輸出。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
          <target state="translated">加入追蹤接聽程式，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合可能會造成追蹤，時擲回例外狀況，如果追蹤接聽程式所使用的資源無法使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
          <target state="translated">條件和擲回的例外狀況取決於追蹤接聽項，且無法列舉本主題中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
          <target state="translated">可能很有用呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊偵測和處理來自追蹤接聽程式的任何例外狀況。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the level of indentation using the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property.</source>
          <target state="translated">您可以修改的層級的縮排使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To modify the indent spacing, use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> property.</source>
          <target state="translated">若要修改的縮排的間距，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can specify whether to automatically flush the output buffer after each write by setting the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">您可以指定是否自動在每次寫入後清除輸出緩衝區，藉由設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">若要設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>，您可以編輯組態檔對應到您的應用程式的名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">組態檔應該格式化，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>屬性會套用至方法的<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Compilers that support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</source>
          <target state="translated">支援的編譯器<ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>忽略呼叫這些方法，除非 「 偵錯 」 定義為條件式編譯符號。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Refer to a compiler's documentation to determine whether <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.</source>
          <target state="translated">請參閱編譯器的文件，以判斷是否<ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>支援，以及定義條件式編譯符號的語法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
          <target state="translated">在 Visual Studio C# 和 Visual Basic 專案中，依預設，[偵錯] 條件式編譯符號定義偵錯組建，而"TRACE"符號的同時進行偵錯和發行的組建定義。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
          <target state="translated">如需如何停用此行為，請參閱 Visual Studio 文件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about conditional debugging in Visual C++, see <bpt id="p1">[</bpt>Debug Class (C++/CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>.</source>
          <target state="translated">如需 Visual c + + 中的條件式偵錯資訊，請參閱<bpt id="p1">[</bpt>Debug 類別 (C + + /CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To define the "DEBUG" conditional compilation symbol in C#, add the <ph id="ph1">`/d:DEBUG`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">若要定義"DEBUG"條件式編譯符號在 C# 中，加入<ph id="ph1">`/d:DEBUG`</ph>編譯器命令列選項，當您編譯程式碼使用命令列，或新增<ph id="ph2">`#define DEBUG`</ph>加入您的檔案頂端。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const DEBUG=True`</ph> to the file.</source>
          <target state="translated">在 Visual Basic 中，加入<ph id="ph1">`/d:DEBUG=True`</ph>編譯器命令列選項，或新增<ph id="ph2">`#Const DEBUG=True`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> to indicate the beginning and end of a program's execution.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>表示的開頭和結尾程式的執行。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The example also uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph> to distinguish the tracing output.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph>區別追蹤輸出。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This type is thread safe.</source>
          <target state="translated">此型別具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs messages and displays a message box that shows the call stack.</source>
          <target state="translated">檢查條件；如果條件為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則輸出訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, a failure message is not sent and the message box is not displayed.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，就不會傳送失敗的訊息，也不會顯示訊息方塊。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, displays a message box that shows the call stack.</source>
          <target state="translated">檢查條件；如果條件為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則顯示訊息方塊，該方塊會顯示呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法只適用於偵錯組建。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>方法，如果您想要執行判斷提示，發行組建。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Managed 程式碼中的判斷提示<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">`Assert`</ph> methods are not available for <ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps.</source>
          <target state="translated"><ph id="ph1">`Assert`</ph>方法不適用於<ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">一般而言，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph>方法用來在程式開發期間識別出邏輯錯誤。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 評估條件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends a failure message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">如果結果為<ph id="ph1">`false`</ph>，它會傳送失敗訊息給<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以自訂此行為，藉由新增<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，或移除，<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">訊息方塊包含三個按鈕：<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>，<bpt id="p2">**</bpt>重試<ept id="p2">**</ept>，和<bpt id="p3">**</bpt>忽略<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>按鈕結束應用程式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>重試<ept id="p1">**</ept>如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>忽略<ept id="p1">**</ept>會繼續進行下一個指令碼中。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> 應用程式不支援強制回應對話方塊，讓它們的行為相同的使用者介面模式和非使用者介面模式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</source>
          <target state="translated">將訊息寫入到使用中的追蹤接聽程式在偵錯模式中，或在發行模式中寫入任何訊息。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">訊息方塊的顯示取決於是否存在<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>清除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>移除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">您可以變更的行為<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>對應至您的應用程式名稱的組態檔中。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">組態檔的格式應該如下：</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The following example creates an index for an array, performs some action to set the value of the index, and then calls <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> to confirm that the index value is valid.</source>
          <target state="translated">下列範例會建立陣列的索引、 執行某項動作來設定索引的值，然後呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>確認索引值有效。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If it is not valid, <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> outputs the call stack.</source>
          <target state="translated">如果不是有效的<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>輸出呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified message is not sent and the message box is not displayed.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，就不會傳送指定的訊息，也不會顯示訊息方塊。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">要傳送給 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 集合的訊息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs a specified message and displays a message box that shows the call stack.</source>
          <target state="translated">檢查條件；如果條件為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則輸出指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法只適用於偵錯組建。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>方法，如果您想要執行判斷提示，發行組建。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Managed 程式碼中的判斷提示<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">一般而言，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>方法用來在程式開發期間識別出邏輯錯誤。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 評估條件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">如果結果為<ph id="ph1">`false`</ph>，它會傳送至指定的診斷訊息<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以自訂此行為，藉由新增<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，或移除，<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">訊息方塊包含三個按鈕：<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>，<bpt id="p2">**</bpt>重試<ept id="p2">**</ept>，和<bpt id="p3">**</bpt>忽略<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>按鈕結束應用程式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>重試<ept id="p1">**</ept>如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>忽略<ept id="p1">**</ept>會繼續進行下一個指令碼中。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">訊息方塊的顯示取決於是否存在<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>清除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>移除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">您可以變更的行為<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>對應至您的應用程式名稱的組態檔中。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">組態檔的格式應該如下：</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">下列範例會檢查是否<ph id="ph1">`type`</ph>參數才有效。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs a message.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph>輸出訊息。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，就不會傳送指定的訊息，也不會顯示訊息方塊。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">要傳送給 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 集合的訊息。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The detailed message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">要傳送給 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 集合的詳細訊息。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two specified messages and displays a message box that shows the call stack.</source>
          <target state="translated">檢查條件；如果條件為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則輸出兩個指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法只適用於偵錯組建。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>方法，如果您想要執行判斷提示，發行組建。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Managed 程式碼中的判斷提示<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">一般而言，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph>方法用來在程式開發期間識別出邏輯錯誤。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 評估條件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">如果結果為<ph id="ph1">`false`</ph>，它會傳送指定的診斷訊息和要詳細的訊息<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以自訂此行為，藉由新增<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，或移除，<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">訊息方塊包含三個按鈕：<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>，<bpt id="p2">**</bpt>重試<ept id="p2">**</ept>，和<bpt id="p3">**</bpt>忽略<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>按鈕結束應用程式。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>重試<ept id="p1">**</ept>如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>忽略<ept id="p1">**</ept>會繼續進行下一個指令碼中。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">訊息方塊的顯示取決於是否存在<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>清除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>移除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">您可以變更的行為<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>對應至您的應用程式名稱的組態檔中。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">組態檔的格式應該如下：</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">下列範例會檢查是否<ph id="ph1">`type`</ph>參數才有效。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs two messages.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph>輸出兩個訊息。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，就不會傳送指定的訊息，也不會顯示訊息方塊。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">要傳送給 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 集合的訊息。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The composite format string to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">要傳送給 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 集合的複合格式字串。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This message contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">這個訊息包含混合零或多個格式項目的文字，而這些格式項目與 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 陣列中的物件相對應。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">物件陣列，包含零或多個要格式化的物件。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</source>
          <target state="translated">檢查條件；如果條件為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則會輸出兩個訊息 (簡單和格式化) 並且顯示列出呼叫堆疊的訊息方塊。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">這個方法會使用.NET framework 物件的值轉換成它的文字表示，並將該表示內嵌在字串中。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The resulting string is sent to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">產生的字串傳送至<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法只適用於偵錯組建。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>方法，如果您想要執行判斷提示，發行組建。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Managed 程式碼中的判斷提示<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">一般而言，<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph>方法用來在程式開發期間識別出邏輯錯誤。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 評估條件。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the result is <ph id="ph1">`false`</ph>, The <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method is called and the <ph id="ph3">`detailMessageFormat`</ph> string and <ph id="ph4">`args`</ph> array are passed in as parameters.</source>
          <target state="translated">如果結果為<ph id="ph1">`false`</ph>、<ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法呼叫和<ph id="ph3">`detailMessageFormat`</ph>字串和<ph id="ph4">`args`</ph>陣列會在當做參數傳遞。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> then sends the specified text message and the formatted text message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> 然後會傳送指定的文字訊息和格式化的文字訊息<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以自訂此行為，藉由新增<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，或移除，<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">訊息方塊包含三個按鈕：<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>，<bpt id="p2">**</bpt>重試<ept id="p2">**</ept>，和<bpt id="p3">**</bpt>忽略<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>按鈕結束應用程式。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>重試<ept id="p1">**</ept>如果您的應用程式正在執行中偵錯工具，或詢問您是否要開啟偵錯工具，如果不是傳送至偵錯工具中的程式碼。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">按一下<bpt id="p1">**</bpt>忽略<ept id="p1">**</ept>會繼續進行下一個指令碼中。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">顯示訊息方塊是取決於是否存在<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>清除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>移除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">您可以變更的行為<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>對應至您的應用程式名稱的組態檔中。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">組態檔的格式應該如下：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> should be called on the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write.</source>
          <target state="translated">取得或設定數值，表示每次寫入後是否要在 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> 上呼叫 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> is called on the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果每次寫入後會在 <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 上呼叫 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">若要設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>，您也可以編輯組態檔對應到您的應用程式的名稱。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">組態檔應該格式化，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>for operating with unmanaged code.</source>
          <target state="translated">用於與 unmanaged 程式碼的作業。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">要求值<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 相關聯的列舉型別： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushes the output buffer and then calls the <ph id="ph1">&lt;see langword="Close" /&gt;</ph> method on each of the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">清除輸出緩衝區，然後對每個 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 呼叫 <ph id="ph1">&lt;see langword="Close" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Use this method when the output goes to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">使用這個方法會輸出到檔案，例如至<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>名為<ph id="ph2">`myTextListener`</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> 使用<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>呼叫<ph id="ph3">`myOutputWriter`</ph>寫入到名為<ph id="ph4">`TestFile.txt`</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">此範例建立檔案、 串流和文字寫入器、 將一行文字寫入檔案，然後清除和關閉輸出。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>for operating with unmanaged code.</source>
          <target state="translated">用於與 unmanaged 程式碼的作業。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">要求值<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 相關聯的列舉型別： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Emits an error message.</source>
          <target state="translated">發出錯誤訊息。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">要發出的訊息。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>Emits the specified error message.</source>
          <target state="translated">發出指定的錯誤訊息。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">預設行為是，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>輸出訊息至訊息方塊，當執行應用程式時使用者介面模式以及<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>中執行個體<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">顯示訊息方塊是取決於是否存在<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>清除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>移除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以自訂此行為，藉由新增<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，或移除，<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>例外狀況處理期間列印一則訊息的方法。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>switch 陳述式中的方法。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">要發出的訊息。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">要發出的詳細訊息。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message.</source>
          <target state="translated">發出錯誤訊息和詳細錯誤訊息。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">預設行為是，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>輸出訊息至訊息方塊，當執行應用程式時使用者介面模式以及<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>中執行個體<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">顯示訊息方塊是取決於是否存在<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，訊息方塊不會顯示。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以移除<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>清除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>移除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或藉由呼叫<ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>屬性 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">您可以自訂此行為，藉由新增<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，或移除，<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>例外狀況處理期間列印一則訊息的方法。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>switch 陳述式中的方法。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushes the output buffer and causes buffered data to write to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">清除輸出緩衝區並造成緩衝資料寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>名為<ph id="ph2">`myTextListener`</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> called <ph id="ph3">`myFileStream`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> 使用<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>呼叫<ph id="ph3">`myFileStream`</ph>寫入到名為<ph id="ph4">`TestFile.txt`</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">這個範例會建立資料流、 開啟檔案，如果它存在或建立一個新、 將一行文字寫入檔案，然後清除和關閉輸出。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Indent">
          <source>Increases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">將目前的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> 增加一。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">下列範例會設定縮排層級，並發出偵錯訊息。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">取得或設定縮排層級。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">縮排層級。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The default is 0.</source>
          <target state="translated">預設值為 0。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph>屬性表示的次數大小的縮排<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>套用。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">下列範例會設定縮排層級，並發出偵錯訊息。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">取得或設定縮排的空格數目。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">縮排中的空格數目。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The default is four.</source>
          <target state="translated">預設值為 4。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>將這個數字解譯為空格。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>會忽略此值。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">若要設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>，您也可以編輯組態檔對應到您的應用程式的名稱。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">組態檔應該格式化，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Gets the collection of listeners that is monitoring the debug output.</source>
          <target state="translated">取得監視偵錯輸出的接聽項的集合。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> representing a collection of type <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> that monitors the debug output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph>，表示監視偵錯輸出的 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 型別的集合。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The listeners produce formatted output from the debug output.</source>
          <target state="translated">接聽程式會產生偵錯輸出中的格式化的輸出。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>By default, the collection contains an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
          <target state="translated">根據預設，集合包含的執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To remove the default listener, call the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">若要移除預設接聽程式，請呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph>方法，並將它傳遞的執行個體<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to the console window, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">若要將輸出重新導向至主控台視窗中，執行個體加入<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to a file or stream, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">若要將輸出重新導向至檔案或資料流，將加入的執行個體<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合由兩者共用<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>類別; 加入其中一個類別的追蹤接聽程式將接聽程式加入至兩者。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> that outputs to the console screen.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>，輸出至主控台畫面。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The code then adds the new listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">程式碼會再加入新的接聽程式<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>for operating with unmanaged code.</source>
          <target state="translated">用於與 unmanaged 程式碼的作業。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">要求值<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 相關聯的列舉型別： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將後面接著行結束字元的訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將後面接著行結束字元的訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed.</source>
          <target state="translated">預設行結束字元是歸位字元後面接著換行字元。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 陣列中的物件相對應。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>An object array containing zero or more objects to format.</source>
          <target state="translated">物件陣列，包含零個或多個要格式化的物件。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>Writes a formatted string followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將後面接著行結束字元的格式化字串寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">這個方法會使用.NET framework 物件的值轉換成它的文字表示，並將該表示內嵌在字串中。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 無效。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</source>
          <target state="translated">用來指示要格式化的引數的數目小於零，或者大於或等於要格式化的指定物件數目。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Unindent">
          <source>Decreases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">將目前的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> 減少一。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">下列範例會設定縮排層級，並發出偵錯訊息。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將有關偵錯的資訊寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將物件的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將物件之 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法的分類名稱和值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">使用<ph id="ph1">`category`</ph>群組的參數輸出訊息。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將分類名稱和訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">使用<ph id="ph1">`category`</ph>群組的參數輸出訊息。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，將有關偵錯的資訊寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將值寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，則將物件的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first name of the value parameter to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出值參數的名字<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs a message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第一個訊息的同一行上的訊息。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將訊息寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，則將訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需加入至接聽程式<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將分類名稱和值寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，則將物件之 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法的分類名稱和值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>參數可以用來群組輸出訊息。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the name of the <ph id="ph3">`myObject`</ph> and the <ph id="ph4">`category`</ph> to the <ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>，此範例輸出的名稱<ph id="ph3">`myObject`</ph>和<ph id="ph4">`category`</ph>至<ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Error`</ph>或更新版本中，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and message are written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將分類名稱和訊息寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件是 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，則將分類名稱和訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>參數可以用來群組輸出訊息。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>，範例會輸出第一個錯誤訊息至<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Error`</ph>或更新版本中，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將有關偵錯的資訊寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將物件的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第一個訊息的同一行上之物件的名稱。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將後面接著行結束字元的訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將物件之 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法的分類名稱和值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>參數可以用來群組輸出訊息。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">第二個訊息後面接著行結束字元。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 陣列中的物件相對應。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">物件陣列，包含零或多個要格式化的物件。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Writes a formatted message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將後面接著行結束字元的格式化訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">這個方法會使用.NET framework 物件的值轉換成它的文字表示，並將該表示內嵌在字串中。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The  keyword in the syntax for this method implies that the object array can be a single value.</source>
          <target state="translated">這個方法的語法中的關鍵字表示的物件陣列可以是單一值。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The exception to this is the <ph id="ph1">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">這個例外狀況是<ph id="ph1">&lt;xref:System.String&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Explicit overloads take precedence, so an <ph id="ph1">`arg`</ph> value of a single string will default to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">明確的多載會接受優先順序，因此<ph id="ph1">`arg`</ph>單一字串值將會預設為<ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">將分類名稱和訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>參數可以用來群組輸出訊息。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息和<ph id="ph3">`category`</ph>第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，將有關偵錯的資訊寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將值寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，則將物件的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第一個訊息的同一行上之物件的名稱。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將訊息寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，則將訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需加入至接聽程式<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">要評估的條件運算式。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">如果條件為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則將分類名稱和值寫入集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名稱要傳送至 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，則將物件之 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法的分類名稱和值寫入 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>參數可以用來群組輸出訊息。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 會寫入訊息，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">要寫入的訊息。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用來組織輸出的類別名稱。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果條件是 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，則將分類名稱和訊息寫入 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 集合中的追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">根據預設，輸出會寫入執行個體<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>參數可以用來群組輸出訊息。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph>追蹤接聽項的方法。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>名為<ph id="ph2">`generalSwitch`</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">這個參數會設定外部程式碼範例。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">如果切換設定為<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph>或更高版本，此範例輸出的第一個錯誤訊息， <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">如需將加入至接聽程式的資訊<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>集合，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>設<ph id="ph2">`Verbose`</ph>，範例會輸出第二個錯誤訊息和<ph id="ph3">`category`</ph>第一個訊息的同一行上。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行結束字元會遵循第二個訊息。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">您可以使用來檢測應用程式的效能負面影響降至最低<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>陳述式，而不是使用<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">下列兩個程式碼範例會傳送相同的偵錯訊息。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">但是，第一個範例時，更快速追蹤已關閉，因為如果<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>評估為<ph id="ph1">&lt;see langword="false" /&gt;</ph>，請勿呼叫<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">第二個範例會一律呼叫<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>，即使<bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept>是<ph id="ph2">&lt;see langword="false" /&gt;</ph>並會產生任何追蹤輸出。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">這會導致不必要執行複雜的程式碼。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">第一個範例：</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">第二個範例：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>