<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adb12a02f62067bb62bcda3b7ad39d7f1469d292" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52219106" /></Metadata><TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <TypeSignature Language="F#" Value="type Debug = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="125b3-101">提供一組方法和屬性，可協助偵錯程式碼。</span><span class="sxs-lookup"><span data-stu-id="125b3-101">Provides a set of methods and properties that help debug your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-102">如果您使用中的方法<xref:System.Diagnostics.Debug>類別來列印偵錯的資訊和檢查您的邏輯，判斷提示中，您可以讓您的程式碼更穩固而不會影響您運送的產品的效能和程式碼大小。</span><span class="sxs-lookup"><span data-stu-id="125b3-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="125b3-103">這個類別會提供方法以顯示<xref:System.Diagnostics.Debug.Assert%2A> 對話方塊中，並發出判斷提示，將一律失敗。</span><span class="sxs-lookup"><span data-stu-id="125b3-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="125b3-104">這個類別會提供寫入方法，下列變化中： <xref:System.Diagnostics.Debug.Write%2A>， <xref:System.Diagnostics.Debug.WriteLine%2A>，<xref:System.Diagnostics.Debug.WriteIf%2A>和<xref:System.Diagnostics.Debug.WriteLineIf%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="125b3-105"><xref:System.Diagnostics.BooleanSwitch>和<xref:System.Diagnostics.TraceSwitch>類別提供以動態方式控制追蹤輸出的方式。</span><span class="sxs-lookup"><span data-stu-id="125b3-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="125b3-106">您可以修改這些參數的值，不需要重新編譯您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="125b3-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="125b3-107">如需使用組態檔來設定參數資訊，請參閱<xref:System.Diagnostics.Switch>類別和[追蹤參數](~/docs/framework/debug-trace-profile/trace-switches.md)主題。</span><span class="sxs-lookup"><span data-stu-id="125b3-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="125b3-108">您可以藉由新增自訂的追蹤輸出的目標<xref:System.Diagnostics.TraceListener>執行個體，或移除執行個體從<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="125b3-109"><xref:System.Diagnostics.Debug.Listeners%2A>集合由兩者共用<xref:System.Diagnostics.Debug>而<xref:System.Diagnostics.Trace>類別; 新增任一類別的追蹤接聽程式將接聽程式加入至兩者。</span><span class="sxs-lookup"><span data-stu-id="125b3-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="125b3-110">根據預設，<xref:System.Diagnostics.DefaultTraceListener>類別會發出追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-111">加入追蹤接聽程式，<xref:System.Diagnostics.Debug.Listeners%2A>集合可能會導致在追蹤時擲回例外狀況，如果追蹤接聽程式所使用的資源無法使用。</span><span class="sxs-lookup"><span data-stu-id="125b3-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="125b3-112">條件並擲回的例外狀況取決於追蹤接聽程式，並無法在本主題中列舉。</span><span class="sxs-lookup"><span data-stu-id="125b3-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="125b3-113">它可能會很有用的呼叫置於<xref:System.Diagnostics.Debug>中的方法`try` / `catch`來偵測並處理從追蹤接聽項的任何例外狀況區塊。</span><span class="sxs-lookup"><span data-stu-id="125b3-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="125b3-114">您可以修改使用縮排層級<xref:System.Diagnostics.Debug.Indent%2A>方法或<xref:System.Diagnostics.Debug.IndentLevel%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="125b3-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="125b3-115">若要修改 縮排的間距，請使用<xref:System.Diagnostics.Debug.IndentSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="125b3-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="125b3-116">您可以指定是否要自動在每次寫入後清除輸出緩衝區，藉由設定<xref:System.Diagnostics.Debug.AutoFlush%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="125b3-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="125b3-117">若要設定<xref:System.Diagnostics.Debug.AutoFlush%2A>並<xref:System.Diagnostics.Debug.IndentSize%2A>如<xref:System.Diagnostics.Debug>，您可以編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="125b3-118">組態檔應該格式化，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="125b3-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="125b3-119"><xref:System.Diagnostics.ConditionalAttribute>屬性會套用至方法的<xref:System.Diagnostics.Debug>。</span><span class="sxs-lookup"><span data-stu-id="125b3-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="125b3-120">支援的編譯器<xref:System.Diagnostics.ConditionalAttribute>忽略這些方法的呼叫，除非 「 偵錯 」 定義為條件式編譯符號。</span><span class="sxs-lookup"><span data-stu-id="125b3-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="125b3-121">請參閱編譯器的文件，以判斷是否<xref:System.Diagnostics.ConditionalAttribute>支援，以及定義條件式編譯符號的語法。</span><span class="sxs-lookup"><span data-stu-id="125b3-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="125b3-122">在 Visual Studio C# 和 Visual Basic 專案中，根據預設，"DEBUG"條件式編譯符號定義偵錯組建，而且已定義 「 追蹤 」 符號，同時偵錯和發行組建。</span><span class="sxs-lookup"><span data-stu-id="125b3-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="125b3-123">如需有關如何停用此行為的資訊，請參閱 Visual Studio 文件。</span><span class="sxs-lookup"><span data-stu-id="125b3-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="125b3-124">如需在 Visual c + + 中的條件式偵錯資訊，請參閱[Debug 類別 (C + + /cli CLI)](/cpp/dotnet/debug-class-cpp-cli)。</span><span class="sxs-lookup"><span data-stu-id="125b3-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="125b3-125">若要定義的"DEBUG"條件式編譯符號在 C# 中，新增`/d:DEBUG`至編譯器命令列選項，當您編譯您的程式碼使用命令列，或新增`#define DEBUG`至檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="125b3-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="125b3-126">在 Visual Basic 中，新增`/d:DEBUG=True`至編譯器命令列選項，或新增`#Const DEBUG=True`檔案。</span><span class="sxs-lookup"><span data-stu-id="125b3-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-127">下列範例會使用<xref:System.Diagnostics.Debug>表示開頭和結尾的程式執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="125b3-128">此範例也會使用<xref:System.Diagnostics.Debug.Indent%2A>和<xref:System.Diagnostics.Debug.Unindent%2A>來區別追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="125b3-129">此型別具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="125b3-129">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-130">檢查條件；如果條件為 <see langword="false" />，則輸出訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Debug.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-131">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-131">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-132">如果條件為 <see langword="true" />，就不會傳送失敗的訊息，也不會顯示訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="125b3-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span></span></param>
        <summary><span data-ttu-id="125b3-133">檢查條件；如果條件為 <see langword="false" />，則顯示訊息方塊，該方塊會顯示呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-134">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="125b3-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="125b3-135">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要在版本中的判斷提示。</span><span class="sxs-lookup"><span data-stu-id="125b3-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="125b3-136">如需詳細資訊，請參閱 < [Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="125b3-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="125b3-137">`Assert`方法不適用於[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]應用程式。</span><span class="sxs-lookup"><span data-stu-id="125b3-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="125b3-138">一般而言，<xref:System.Diagnostics.Debug.Assert%28System.Boolean%29>方法用來找出程式開發期間的邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="125b3-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="125b3-139"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="125b3-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="125b3-140">如果結果是`false`，它會傳送失敗訊息給<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="125b3-141">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除其中一個，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="125b3-142">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="125b3-143">訊息方塊包含三個按鈕：**中止**，**重試一次**，並**忽略**。</span><span class="sxs-lookup"><span data-stu-id="125b3-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="125b3-144">按一下 **中止**按鈕終止應用程式。</span><span class="sxs-lookup"><span data-stu-id="125b3-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="125b3-145">按一下 **重試**您傳送到偵錯工具中的程式碼，如果您的應用程式正在執行以偵錯工具，或如果不是開啟偵錯工具會提供。</span><span class="sxs-lookup"><span data-stu-id="125b3-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="125b3-146">按一下 **忽略**會繼續進行下一個指令程式碼中。</span><span class="sxs-lookup"><span data-stu-id="125b3-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="125b3-147">應用程式不支援強制回應對話方塊，讓它們的行為相同的使用者介面模式和非使用者介面模式。</span><span class="sxs-lookup"><span data-stu-id="125b3-147">apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="125b3-148">將訊息寫入到在偵錯模式中，使用中的追蹤接聽程式，或在發行模式中寫入任何訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-149">訊息方塊的顯示取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-150">如果<xref:System.Diagnostics.DefaultTraceListener>不是處於<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="125b3-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="125b3-151"><xref:System.Diagnostics.DefaultTraceListener>可以藉由移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)，則[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="125b3-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="125b3-152">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>在組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="125b3-153">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="125b3-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="125b3-154">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="125b3-154">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="125b3-155">下列範例會建立陣列的索引，會執行某些動作，若要設定的索引值，然後呼叫<xref:System.Diagnostics.Debug.Assert%2A>確認索引值是否有效。</span><span class="sxs-lookup"><span data-stu-id="125b3-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="125b3-156">如果不是有效的<xref:System.Diagnostics.Debug.Assert%2A>輸出呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-157">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-157">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-158">如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="125b3-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-159">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="125b3-160">檢查條件；如果條件為 <see langword="false" />，則輸出指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-161">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="125b3-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="125b3-162">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要在版本中的判斷提示。</span><span class="sxs-lookup"><span data-stu-id="125b3-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="125b3-163">如需詳細資訊，請參閱 < [Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="125b3-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="125b3-164">一般而言，<xref:System.Diagnostics.Debug.Assert%2A>方法用來找出程式開發期間的邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="125b3-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="125b3-165"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="125b3-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="125b3-166">如果結果是`false`，它會傳送至指定的診斷訊息<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="125b3-167">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除其中一個，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="125b3-168">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="125b3-169">訊息方塊包含三個按鈕：**中止**，**重試一次**，並**忽略**。</span><span class="sxs-lookup"><span data-stu-id="125b3-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="125b3-170">按一下 **中止**按鈕終止應用程式。</span><span class="sxs-lookup"><span data-stu-id="125b3-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="125b3-171">按一下 **重試**您傳送到偵錯工具中的程式碼，如果您的應用程式正在執行以偵錯工具，或如果不是開啟偵錯工具會提供。</span><span class="sxs-lookup"><span data-stu-id="125b3-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="125b3-172">按一下 **忽略**會繼續進行下一個指令程式碼中。</span><span class="sxs-lookup"><span data-stu-id="125b3-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-173">訊息方塊的顯示取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-174">如果<xref:System.Diagnostics.DefaultTraceListener>不是處於<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="125b3-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="125b3-175"><xref:System.Diagnostics.DefaultTraceListener>可以藉由移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)，則[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="125b3-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="125b3-176">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>在組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="125b3-177">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="125b3-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="125b3-178">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="125b3-178">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="125b3-179">下列範例會檢查是否`type`參數才有效。</span><span class="sxs-lookup"><span data-stu-id="125b3-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="125b3-180">如果`type`已`null`，<xref:System.Diagnostics.Trace.Assert%2A>輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-181">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-181">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-182">如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="125b3-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-183">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="125b3-184">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的詳細訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="125b3-185">檢查條件；如果條件為 <see langword="false" />，則輸出兩個指定的訊息，並顯示訊息方塊，該方塊會顯示呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-186">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="125b3-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="125b3-187">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要在版本中的判斷提示。</span><span class="sxs-lookup"><span data-stu-id="125b3-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="125b3-188">如需詳細資訊，請參閱 < [Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="125b3-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="125b3-189">一般而言，<xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29>方法用來找出程式開發期間的邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="125b3-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="125b3-190"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="125b3-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="125b3-191">如果結果是`false`，它會傳送指定的診斷訊息和詳細的訊息<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="125b3-192">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除其中一個，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="125b3-193">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="125b3-194">訊息方塊包含三個按鈕：**中止**，**重試一次**，並**忽略**。</span><span class="sxs-lookup"><span data-stu-id="125b3-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="125b3-195">按一下 **中止**按鈕終止應用程式。</span><span class="sxs-lookup"><span data-stu-id="125b3-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="125b3-196">按一下 **重試**您傳送到偵錯工具中的程式碼，如果您的應用程式正在執行以偵錯工具，或如果不是開啟偵錯工具會提供。</span><span class="sxs-lookup"><span data-stu-id="125b3-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="125b3-197">按一下 **忽略**會繼續進行下一個指令程式碼中。</span><span class="sxs-lookup"><span data-stu-id="125b3-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-198">訊息方塊的顯示取決於是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-199">如果<xref:System.Diagnostics.DefaultTraceListener>不是處於<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="125b3-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="125b3-200"><xref:System.Diagnostics.DefaultTraceListener>可以藉由移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)，則[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="125b3-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="125b3-201">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>在組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="125b3-202">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="125b3-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="125b3-203">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="125b3-203">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="125b3-204">下列範例會檢查是否`type`參數才有效。</span><span class="sxs-lookup"><span data-stu-id="125b3-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="125b3-205">如果`type`已`null`，<xref:System.Diagnostics.Trace.Assert%2A>輸出兩個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-206">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-206">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-207">如果條件為 <see langword="true" />，就不會傳送指定的訊息，也不會顯示訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="125b3-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-208">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessageFormat"><span data-ttu-id="125b3-209">要傳送給 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的複合格式字串。</span><span class="sxs-lookup"><span data-stu-id="125b3-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span> <span data-ttu-id="125b3-210">這個訊息包含混合零個或多個格式項目的文字，而這些格式項目與 <paramref name="args" /> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="125b3-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="125b3-211">物件陣列，包含零或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-211">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="125b3-212">檢查條件；如果條件為 <see langword="false" />，則會輸出兩個訊息 (簡單和格式化) 並且顯示列出呼叫堆疊的訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="125b3-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-213">這個方法會使用.NET framework 物件的值轉換成其文字表示，並在字串中內嵌該表示法。</span><span class="sxs-lookup"><span data-stu-id="125b3-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="125b3-214">產生的字串傳送至<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="125b3-215">根據預設，<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法只適用於偵錯組建。</span><span class="sxs-lookup"><span data-stu-id="125b3-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="125b3-216">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法，如果您想要在版本中的判斷提示。</span><span class="sxs-lookup"><span data-stu-id="125b3-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="125b3-217">如需詳細資訊，請參閱 < [Managed 程式碼中的判斷提示](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="125b3-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="125b3-218">一般而言，<xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29>方法用來找出程式開發期間的邏輯錯誤。</span><span class="sxs-lookup"><span data-stu-id="125b3-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="125b3-219"><xref:System.Diagnostics.Debug.Assert%2A> 評估條件。</span><span class="sxs-lookup"><span data-stu-id="125b3-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="125b3-220">如果結果是`false`，則<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法呼叫而`detailMessageFormat`字串和`args`陣列會傳遞為參數。</span><span class="sxs-lookup"><span data-stu-id="125b3-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="125b3-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> 接著會傳送指定的文字訊息和格式化的文字訊息至<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="125b3-222">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除其中一個，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="125b3-223">當應用程式在使用者介面模式下執行時，它會顯示訊息方塊，顯示帶有檔案和行號的呼叫堆疊。</span><span class="sxs-lookup"><span data-stu-id="125b3-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="125b3-224">訊息方塊包含三個按鈕：**中止**，**重試一次**，並**忽略**。</span><span class="sxs-lookup"><span data-stu-id="125b3-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="125b3-225">按一下 **中止**按鈕終止應用程式。</span><span class="sxs-lookup"><span data-stu-id="125b3-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="125b3-226">按一下 **重試**您傳送到偵錯工具中的程式碼，如果您的應用程式正在執行以偵錯工具，或如果不是開啟偵錯工具會提供。</span><span class="sxs-lookup"><span data-stu-id="125b3-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="125b3-227">按一下 **忽略**會繼續進行下一個指令程式碼中。</span><span class="sxs-lookup"><span data-stu-id="125b3-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-228">視是否存在而定的訊息方塊顯示<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-229">如果<xref:System.Diagnostics.DefaultTraceListener>不是處於<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="125b3-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="125b3-230"><xref:System.Diagnostics.DefaultTraceListener>可以藉由移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)，則[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="125b3-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="125b3-231">您可以變更的行為<xref:System.Diagnostics.DefaultTraceListener>在組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="125b3-232">在此檔案中，您可以啟用和停用判斷提示訊息方塊或設定<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="125b3-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="125b3-233">組態檔的格式應該如下：</span><span class="sxs-lookup"><span data-stu-id="125b3-233">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Debug.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="125b3-234">取得或設定數值，表示每次寫入後是否要在 <see cref="M:System.Diagnostics.Debug.Flush" /> 上呼叫 <see cref="P:System.Diagnostics.Debug.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span></span></summary>
        <value><span data-ttu-id="125b3-235">如果每次寫入後會在 <see cref="P:System.Diagnostics.Debug.Listeners" /> 上呼叫 <see cref="M:System.Diagnostics.Debug.Flush" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-235"><see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-236">預設值為 `false`。</span><span class="sxs-lookup"><span data-stu-id="125b3-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="125b3-237">排清資料流不會清除其基礎的編碼器，除非您明確地呼叫<xref:System.Diagnostics.Debug.Flush%2A>或<xref:System.Diagnostics.Debug.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="125b3-238">設定<xref:System.Diagnostics.Debug.AutoFlush%2A>至`true`表示資料會從排清緩衝區資料流，但並不會清除編碼器的狀態。</span><span class="sxs-lookup"><span data-stu-id="125b3-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="125b3-239">這可讓編碼器，讓它可以正確編碼字元的下一個區塊保持其狀態 （部分的字元）。</span><span class="sxs-lookup"><span data-stu-id="125b3-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="125b3-240">UTF8，UTF7，其中某些字元可以只編碼編碼器接收或多個相鄰的字元後，會影響此案例。</span><span class="sxs-lookup"><span data-stu-id="125b3-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="125b3-241">若要設定<xref:System.Diagnostics.Debug.AutoFlush%2A>並<xref:System.Diagnostics.Debug.IndentSize%2A>如<xref:System.Diagnostics.Debug>，您也可以編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="125b3-242">組態檔應該格式化，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="125b3-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="125b3-243">操作與 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="125b3-243">for operating with unmanaged code.</span></span> <span data-ttu-id="125b3-244">要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Debug.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="125b3-245">清除輸出緩衝區，然後對每個 <see cref="P:System.Diagnostics.Debug.Listeners" /> 呼叫 <see langword="Close" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-246">當輸出移至檔案，例如若要使用這個方法<xref:System.Diagnostics.TextWriterTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-247">排清資料流不會清除其基礎的編碼器，除非您明確地呼叫<xref:System.Diagnostics.Debug.Flush%2A>或<xref:System.Diagnostics.Debug.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="125b3-248">設定<xref:System.Diagnostics.Debug.AutoFlush%2A>至`true`表示資料會從排清緩衝區資料流，但並不會清除編碼器的狀態。</span><span class="sxs-lookup"><span data-stu-id="125b3-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="125b3-249">這可讓編碼器，讓它可以正確編碼字元的下一個區塊保持其狀態 （部分的字元）。</span><span class="sxs-lookup"><span data-stu-id="125b3-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="125b3-250">UTF8，UTF7，其中某些字元可以只編碼編碼器接收或多個相鄰的字元後，會影響此案例。</span><span class="sxs-lookup"><span data-stu-id="125b3-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-251">下列範例會建立<xref:System.Diagnostics.TextWriterTraceListener>名為`myTextListener`。</span><span class="sxs-lookup"><span data-stu-id="125b3-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="125b3-252">`myTextListener` 會使用<xref:System.IO.StreamWriter>名`myOutputWriter`寫入到名為`TestFile.txt`。</span><span class="sxs-lookup"><span data-stu-id="125b3-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="125b3-253">此範例會建立檔案、 串流和文字寫入器、 將一行文字寫入至檔案，然後清除並關閉 輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="125b3-254">操作與 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="125b3-254">for operating with unmanaged code.</span></span> <span data-ttu-id="125b3-255">要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-256">發出錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-256">Emits an error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Debug.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-257">要發出的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-257">A message to emit.</span></span></param>
        <summary><span data-ttu-id="125b3-258">發出指定的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-258">Emits the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-259">預設行為是，<xref:System.Diagnostics.DefaultTraceListener>使用者介面模式以及執行應用程式時，輸出訊息至訊息方塊<xref:System.Diagnostics.TraceListener>執行個體在<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-260">視是否存在而定的訊息方塊顯示<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-261">如果<xref:System.Diagnostics.DefaultTraceListener>不是處於<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="125b3-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="125b3-262"><xref:System.Diagnostics.DefaultTraceListener>可以藉由移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)，則[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="125b3-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="125b3-263">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除其中一個，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-264">下列範例會使用<xref:System.Diagnostics.Debug.Fail%2A>例外狀況處理時列印一則訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="125b3-265">您也可以使用<xref:System.Diagnostics.Debug.Fail%2A>switch 陳述式中的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-266">要發出的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-266">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="125b3-267">要發出的詳細訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-267">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="125b3-268">發出錯誤訊息和詳細錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-268">Emits an error message and a detailed error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-269">預設行為是，<xref:System.Diagnostics.DefaultTraceListener>使用者介面模式以及執行應用程式時，輸出訊息至訊息方塊<xref:System.Diagnostics.TraceListener>執行個體在<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-270">視是否存在而定的訊息方塊顯示<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-271">如果<xref:System.Diagnostics.DefaultTraceListener>不是處於<xref:System.Diagnostics.Trace.Listeners%2A>集合，訊息方塊不會顯示。</span><span class="sxs-lookup"><span data-stu-id="125b3-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="125b3-272"><xref:System.Diagnostics.DefaultTraceListener>可以藉由移除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)，則[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或藉由呼叫<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>屬性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="125b3-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="125b3-273">您可以自訂此行為，藉由新增<xref:System.Diagnostics.TraceListener>，或移除其中一個，<xref:System.Diagnostics.Debug.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-274">下列範例會使用<xref:System.Diagnostics.Debug.Fail%2A>例外狀況處理時列印一則訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="125b3-275">您也可以使用<xref:System.Diagnostics.Debug.Fail%2A>switch 陳述式中的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Debug.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="125b3-276">清除輸出緩衝區，讓緩衝的資料寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-277">排清資料流不會清除其基礎的編碼器，除非您明確地呼叫<xref:System.Diagnostics.Debug.Flush%2A>或<xref:System.Diagnostics.Debug.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="125b3-278">設定<xref:System.Diagnostics.Debug.AutoFlush%2A>至`true`表示資料會從排清緩衝區資料流，但並不會清除編碼器的狀態。</span><span class="sxs-lookup"><span data-stu-id="125b3-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="125b3-279">這可讓編碼器，讓它可以正確編碼字元的下一個區塊保持其狀態 （部分的字元）。</span><span class="sxs-lookup"><span data-stu-id="125b3-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="125b3-280">UTF8，UTF7，其中某些字元可以只編碼編碼器接收或多個相鄰的字元後，會影響此案例。</span><span class="sxs-lookup"><span data-stu-id="125b3-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-281">下列範例會建立<xref:System.Diagnostics.TextWriterTraceListener>名為`myTextListener`。</span><span class="sxs-lookup"><span data-stu-id="125b3-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="125b3-282">`myTextListener` 會使用<xref:System.IO.FileStream>名`myFileStream`寫入到名為`TestFile.txt`。</span><span class="sxs-lookup"><span data-stu-id="125b3-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="125b3-283">此範例會建立資料流，開啟檔案，如果它存在或建立一個新、 將一行文字寫入至檔案，然後清除並關閉 輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="125b3-284">將目前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 增加一。</span><span class="sxs-lookup"><span data-stu-id="125b3-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="125b3-285">下列範例會設定縮排層級，並發出偵錯訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="125b3-286">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="125b3-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Debug.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="125b3-287">取得或設定縮排層級。</span><span class="sxs-lookup"><span data-stu-id="125b3-287">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="125b3-288">縮排層級。</span><span class="sxs-lookup"><span data-stu-id="125b3-288">The indent level.</span></span> <span data-ttu-id="125b3-289">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="125b3-289">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-290"><xref:System.Diagnostics.Debug.IndentLevel%2A>屬性表示的次數大小的縮排<xref:System.Diagnostics.Debug.IndentSize%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="125b3-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-291">下列範例會設定縮排層級，並發出偵錯訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="125b3-292">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="125b3-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Debug.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="125b3-293">取得或設定縮排的空格數目。</span><span class="sxs-lookup"><span data-stu-id="125b3-293">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="125b3-294">縮排中的空格數目。</span><span class="sxs-lookup"><span data-stu-id="125b3-294">The number of spaces in an indent.</span></span> <span data-ttu-id="125b3-295">預設值為 4。</span><span class="sxs-lookup"><span data-stu-id="125b3-295">The default is four.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-296">A<xref:System.Diagnostics.TextWriterTraceListener>將這個數字解譯成空格。</span><span class="sxs-lookup"><span data-stu-id="125b3-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="125b3-297"><xref:System.Diagnostics.EventLogTraceListener>會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="125b3-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="125b3-298">若要設定<xref:System.Diagnostics.Debug.AutoFlush%2A>並<xref:System.Diagnostics.Debug.IndentSize%2A>如<xref:System.Diagnostics.Debug>，您也可以編輯組態檔對應到您的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="125b3-299">組態檔應該格式化，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="125b3-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Debug.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="125b3-300">取得監視偵錯輸出的接聽項的集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-300">Gets the collection of listeners that is monitoring the debug output.</span></span></summary>
        <value><span data-ttu-id="125b3-301"><see cref="T:System.Diagnostics.TraceListenerCollection" />，表示監視偵錯輸出的 <see cref="T:System.Diagnostics.TraceListener" /> 型別的集合。</span><span class="sxs-lookup"><span data-stu-id="125b3-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-302">接聽程式產生偵錯輸出的格式化的的輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="125b3-303">根據預設，集合包含的執行個體<xref:System.Diagnostics.DefaultTraceListener>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="125b3-304">若要移除預設的接聽程式，請呼叫<xref:System.Diagnostics.TraceListenerCollection.Remove%2A>方法，並將其傳遞執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="125b3-305">若要將輸出重新導向至主控台視窗，將新增的執行個體<xref:System.Diagnostics.ConsoleTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="125b3-306">若要將輸出重新導向至檔案或資料流，將新增的執行個體<xref:System.Diagnostics.TextWriterTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="125b3-307"><xref:System.Diagnostics.Debug.Listeners%2A>集合由兩者共用<xref:System.Diagnostics.Debug>而<xref:System.Diagnostics.Trace>類別; 新增任一類別的追蹤接聽程式將接聽程式加入至兩者。</span><span class="sxs-lookup"><span data-stu-id="125b3-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-308">下列範例會建立<xref:System.Diagnostics.TextWriterTraceListener>輸出至主控台畫面。</span><span class="sxs-lookup"><span data-stu-id="125b3-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="125b3-309">程式碼，然後新增新的接聽程式<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="125b3-310">操作與 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="125b3-310">for operating with unmanaged code.</span></span> <span data-ttu-id="125b3-311">要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-312">將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Print : string -&gt; unit" Usage="System.Diagnostics.Debug.Print message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-313">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-313">The message to write.</span></span></param>
        <summary><span data-ttu-id="125b3-314">將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-315">預設行結束字元為歸位字元後面接著換行字元。</span><span class="sxs-lookup"><span data-stu-id="125b3-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="125b3-316">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Print : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Print (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="125b3-317">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <paramref name="args" /> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="125b3-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="125b3-318">物件陣列，包含零個或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-318">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="125b3-319">將後面接著行結束字元的格式化字串寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-320">這個方法會使用.NET framework 物件的值轉換成其文字表示，並在字串中內嵌該表示法。</span><span class="sxs-lookup"><span data-stu-id="125b3-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="125b3-321">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="125b3-322"><paramref name="format" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-322"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="125b3-323"><paramref name="format" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="125b3-323"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="125b3-324">-或-</span><span class="sxs-lookup"><span data-stu-id="125b3-324">-or-</span></span> 
<span data-ttu-id="125b3-325">用來指示要格式化的引數的數目小於零，或者大於或等於要格式化的指定物件數目。</span><span class="sxs-lookup"><span data-stu-id="125b3-325">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="125b3-326">複合格式</span><span class="sxs-lookup"><span data-stu-id="125b3-326">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="125b3-327">標準數值格式字串</span><span class="sxs-lookup"><span data-stu-id="125b3-327">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="125b3-328">自訂數值格式字串</span><span class="sxs-lookup"><span data-stu-id="125b3-328">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="125b3-329">標準 DateTime 格式字串</span><span class="sxs-lookup"><span data-stu-id="125b3-329">Standard DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="125b3-330">自訂 DateTime 格式字串</span><span class="sxs-lookup"><span data-stu-id="125b3-330">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="125b3-331">列舉格式字串</span><span class="sxs-lookup"><span data-stu-id="125b3-331">Enumeration Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="125b3-332">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="125b3-332">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="125b3-333">將目前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 減少一。</span><span class="sxs-lookup"><span data-stu-id="125b3-333">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="125b3-334">下列範例會設定縮排層級，並發出偵錯訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-334">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="125b3-335">這個範例會產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="125b3-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-336">將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-336">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Debug.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="125b3-337">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-337">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="125b3-338">將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-338">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-339">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-339">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-340">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-340">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-341">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-341">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-342">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-342">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-343">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-343">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-344">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-344">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-345">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-345">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-346">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-346">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Debug.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-347">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-347">A message to write.</span></span></param>
        <summary><span data-ttu-id="125b3-348">將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-348">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-349">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-349">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-350">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-350">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-351">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-351">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-352">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-352">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-353">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-353">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-354">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-354">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-355">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-355">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-356">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-356">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="125b3-357">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-357">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-358">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-358">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-359">將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-359">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-360">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-360">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-361">使用`category`訊息輸出至群組的參數。</span><span class="sxs-lookup"><span data-stu-id="125b3-361">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-362">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-362">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-363">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-363">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-364">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-364">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-365">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-365">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-366">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-366">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-367">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-367">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-368">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-368">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-369">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-369">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-370">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-370">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-371">將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-371">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-372">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-372">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-373">使用`category`訊息輸出至群組的參數。</span><span class="sxs-lookup"><span data-stu-id="125b3-373">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-374">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-374">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-375">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-375">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-376">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-376">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-377">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-377">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-378">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-378">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-379">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-379">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-380">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-380">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-381">如果條件為 <see langword="true" />，將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-381">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-382">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-382">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-383">如果條件為 <see langword="true" />，則將值寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-383">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="125b3-384">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-384">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="125b3-385">如果條件為 <see langword="true" />，則將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-385">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-386">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-386">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-387">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-387">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-388">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-388">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-389">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-389">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-390">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出第一個參數的名稱值來<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-390">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-391">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-391">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-392">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第一則訊息的同一行上的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-392">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="125b3-393">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-393">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-394">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-394">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-395">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-395">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-396">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-396">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="125b3-397">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-397">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-398">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-398">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-399">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-399">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-400">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-400">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-401">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-401">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-402">如果條件為 <see langword="true" />，則將訊息寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-402">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-403">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-403">A message to write.</span></span></param>
        <summary><span data-ttu-id="125b3-404">如果條件為 <see langword="true" />，則將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-404">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-405">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-405">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-406">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-406">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-407">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-407">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-408">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-408">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-409">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-409">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-410">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-410">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-411">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-411">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-412">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-412">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-413">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-413">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-414">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-414">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-415">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-415">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="125b3-416">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-416">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-417">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-417">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-418">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-418">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-419">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-419">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-420">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-420">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-421">如果條件為 <see langword="true" />，則將分類名稱和值寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-421">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="125b3-422">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-422">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-423">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-423">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-424">如果條件為 <see langword="true" />，則將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-424">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-425">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-425">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-426">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-426">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-427">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-427">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-428">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-428">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-429">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-429">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-430">如果參數設定為<xref:System.Diagnostics.TraceLevel> `Verbose`，此範例輸出的名稱`myObject`和`category`到<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-430">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-431">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-431">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-432">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Error`或更新版本中，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-432">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-433">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-433">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-434">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-434">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-435">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-435">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-436">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-436">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="125b3-437">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-437">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-438">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-438">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-439">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-439">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-440">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-440">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-441">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-441">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-442">如果條件為 <see langword="true" />，則將分類名稱和訊息寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-442">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-443">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-443">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-444">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-444">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-445">如果條件是 <see langword="true" />，則將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-445">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-446">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-446">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-447">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-447">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-448">這個方法會呼叫<xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-448">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-449">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-449">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-450">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-450">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-451">如果參數設定為<xref:System.Diagnostics.TraceLevel> `Verbose`，此範例輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-451">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-452">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-452">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-453">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Error`或更新版本中，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-453">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-454">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-454">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-455">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-455">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-456">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-456">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-457">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.Write(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-457">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="125b3-458">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-458">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-459">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-459">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-460">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-460">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-461">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-461">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-462">將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-462">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="125b3-463">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-463">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="125b3-464">將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-464">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-465">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-465">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-466">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-466">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-467">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-467">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-468">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-468">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-469">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-469">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-470">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-470">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-471">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，此範例輸出的第一個訊息的同一行上之物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-471">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="125b3-472">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-472">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-473">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-473">A message to write.</span></span></param>
        <summary><span data-ttu-id="125b3-474">將後面接著行結束字元的訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-474">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-475">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-476">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-476">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-477">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-477">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-478">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-478">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-479">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-479">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-480">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-480">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-481">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-481">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-482">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-482">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="125b3-483">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-483">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-484">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-484">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-485">將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-485">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-486">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-486">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-487">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-487">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-488">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-488">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-489">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-489">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-490">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-490">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-491">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-491">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-492">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-492">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-493">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-493">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-494">第二個訊息後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="125b3-494">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="125b3-495">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <paramref name="args" /> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="125b3-495">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="125b3-496">物件陣列，包含零或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-496">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="125b3-497">將後面接著行結束字元的格式化訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-497">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-498">這個方法會使用.NET framework 物件的值轉換成其文字表示，並在字串中內嵌該表示法。</span><span class="sxs-lookup"><span data-stu-id="125b3-498">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="125b3-499">這個方法的語法中的關鍵字表示的物件陣列可以是單一值。</span><span class="sxs-lookup"><span data-stu-id="125b3-499">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="125b3-500">這個例外狀況是<xref:System.String>物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-500">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="125b3-501">明確的多載會採用優先順序，因此`arg`的單一字串值會預設為<xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="125b3-501">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="125b3-502">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-502">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-503">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-503">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="125b3-504">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-504">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-505">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-505">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-506">將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-506">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-507">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-507">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-508">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-508">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-509">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-509">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-510">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-510">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-511">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-511">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-512">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-512">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-513">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-513">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-514">然後，如果<xref:System.Diagnostics.TraceLevel>設定為`Verbose`，範例會輸出第二個錯誤訊息和`category`第一則訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-514">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="125b3-515">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-515">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="125b3-516">如果條件為 <see langword="true" />，將有關偵錯的資訊寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-516">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-517">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-517">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-518">如果條件為 <see langword="true" />，則將值寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-518">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="125b3-519">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-519">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="125b3-520">如果條件為 <see langword="true" />，則將物件的 <see cref="M:System.Object.ToString" /> 方法值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-520">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-521">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-521">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-522">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-522">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-523">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-523">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-524">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-524">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-525">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-525">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-526">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-526">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-527">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，此範例輸出的第一個訊息的同一行上之物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-527">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="125b3-528">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-528">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-529">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-529">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-530">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-530">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-531">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-531">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="125b3-532">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-532">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-533">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-533">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-534">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-534">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-535">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-535">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-536">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-536">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-537">如果條件為 <see langword="true" />，則將訊息寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-537">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-538">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-538">A message to write.</span></span></param>
        <summary><span data-ttu-id="125b3-539">如果條件為 <see langword="true" />，則將訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-539">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-540">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-540">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-541">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-541">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-542">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-542">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-543">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-543">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-544">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-544">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-545">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-545">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-546">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-546">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-547">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-547">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-548">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-548">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-549">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-549">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-550">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-550">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="125b3-551">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-551">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-552">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-552">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-553">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-553">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-554">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-554">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-555">要評估的條件運算式。</span><span class="sxs-lookup"><span data-stu-id="125b3-555">The conditional expression to evaluate.</span></span> <span data-ttu-id="125b3-556">如果條件為 <see langword="true" />，則將分類名稱和值寫入集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-556">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="125b3-557">名稱要傳送至 <see cref="P:System.Diagnostics.Debug.Listeners" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="125b3-557">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-558">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-558">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-559">如果條件為 <see langword="true" />，則將物件之 <see cref="M:System.Object.ToString" /> 方法的分類名稱和值寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-559">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-560">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-560">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-561">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-561">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-562">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-562">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-563">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-563">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-564">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-564">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-565">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-565">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-566">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-566">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-567">然後，如果<xref:System.Diagnostics.TraceLevel>設為`Verbose`，範例會輸出第二個錯誤訊息的第一個訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-567">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="125b3-568">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-568">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-569">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-569">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-570">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-570">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-571">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-571">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="125b3-572">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-572">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-573">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-573">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-574">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-574">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-575">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-575">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="125b3-576"><see langword="true" /> 會寫入訊息，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-576"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="125b3-577">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-577">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="125b3-578">用來組織輸出的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="125b3-578">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="125b3-579">如果條件是 <see langword="true" />，則將分類名稱和訊息寫入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="125b3-579">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125b3-580">根據預設，輸出會寫入執行個體<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="125b3-580">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="125b3-581">`category`參數可以用來群組輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-581">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="125b3-582">這個方法會呼叫<xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType>追蹤接聽項的方法。</span><span class="sxs-lookup"><span data-stu-id="125b3-582">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125b3-583">下列範例會建立<xref:System.Diagnostics.TraceSwitch>名為`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="125b3-583">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="125b3-584">此參數設定以外的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="125b3-584">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="125b3-585">如果參數設定為<xref:System.Diagnostics.TraceLevel>`Error`或更新版本中，範例會輸出的第一個錯誤訊息<xref:System.Diagnostics.Debug.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="125b3-585">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="125b3-586">如需新增接聽程式資訊<xref:System.Diagnostics.Debug.Listeners%2A>集合，請參閱<xref:System.Diagnostics.TraceListenerCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="125b3-586">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="125b3-587">然後，如果<xref:System.Diagnostics.TraceLevel>設定為`Verbose`，範例會輸出第二個錯誤訊息和`category`第一則訊息的同一行上。</span><span class="sxs-lookup"><span data-stu-id="125b3-587">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="125b3-588">行結束字元會遵循第二個訊息。</span><span class="sxs-lookup"><span data-stu-id="125b3-588">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="125b3-589">您可以使用來檢測您的應用程式的效能負面影響降至最低<see langword="If...Then" />陳述式，而不是使用<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />陳述式。</span><span class="sxs-lookup"><span data-stu-id="125b3-589">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="125b3-590">下列兩個程式碼範例會將相同的偵錯訊息傳送。</span><span class="sxs-lookup"><span data-stu-id="125b3-590">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="125b3-591">不過，第一個範例中會更快追蹤已關閉，因為如果<c>mySwitch.TraceError</c>評估為<see langword="false" />，您不能呼叫<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="125b3-591">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="125b3-592">第二個範例一律會呼叫<see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />，即使<c>mySwitch.TraceError</c>是<see langword="false" />並會產生任何追蹤輸出。</span><span class="sxs-lookup"><span data-stu-id="125b3-592">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="125b3-593">這樣可以很複雜的程式碼的不必要的執行。</span><span class="sxs-lookup"><span data-stu-id="125b3-593">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="125b3-594">第一個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-594">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="125b3-595">第二個範例：</span><span class="sxs-lookup"><span data-stu-id="125b3-595">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>