<Type Name="ProcessStartInfo" FullName="System.Diagnostics.ProcessStartInfo">
  <TypeSignature Language="C#" Value="public sealed class ProcessStartInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProcessStartInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessStartInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessStartInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessStartInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a3dc8-101">指定一組啟動處理序時所使用的值。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-101">Specifies a set of values that are used when you start a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-102"><xref:System.Diagnostics.ProcessStartInfo> 會搭配<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-102"><xref:System.Diagnostics.ProcessStartInfo> is used together with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="a3dc8-103">當您啟動處理程序，使用<xref:System.Diagnostics.Process>類別，您可以存取附加至正在執行的處理序時，處理所提供的資訊。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-103">When you start a process using the <xref:System.Diagnostics.Process> class, you have access to process information in addition to that available when attaching to a running process.</span></span>  
  
 <span data-ttu-id="a3dc8-104">您可以使用<xref:System.Diagnostics.ProcessStartInfo>類別，以便更有效控制您所啟動的程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-104">You can use the <xref:System.Diagnostics.ProcessStartInfo> class for better control over the process you start.</span></span> <span data-ttu-id="a3dc8-105">您至少必須設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性，以手動方式或使用建構函式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-105">You must at least set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, either manually or using the constructor.</span></span> <span data-ttu-id="a3dc8-106">任何應用程式或文件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-106">The file name is any application or document.</span></span> <span data-ttu-id="a3dc8-107">在此文件會定義任何已開啟的檔案類型或預設與其相關聯的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-107">Here a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="a3dc8-108">您可以為您的電腦檢視已登錄之檔案類型和其相關聯的應用程式，使用**資料夾選項**對話方塊中，這可透過作業系統。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-108">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="a3dc8-109">**進階**通往對話方塊，顯示是否已註冊的特定檔案類型相關聯的開啟動作的按鈕。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-109">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="a3dc8-110">此外，您可以設定其他屬性，定義要搭配此檔案採取的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-110">In addition, you can set other properties that define actions to take with that file.</span></span> <span data-ttu-id="a3dc8-111">您可以指定特定的型別值<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-111">You can specify a value specific to the type of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="a3dc8-112">例如，您可以指定 「 列印 」 文件類型。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-112">For example, you can specify "print" for a document type.</span></span> <span data-ttu-id="a3dc8-113">此外，您可以指定<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>来傳遞至檔案的開啟程序的命令列引數的屬性值。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-113">Additionally, you can specify <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property values to be command-line arguments to pass to the file's open procedure.</span></span> <span data-ttu-id="a3dc8-114">例如，如果您指定的文字編輯器應用程式中<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性，您可以使用<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>屬性來指定要開啟編輯器 中的文字檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-114">For example, if you specify a text editor application in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, you can use the <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property to specify a text file to be opened by the editor.</span></span>  
  
 <span data-ttu-id="a3dc8-115">標準輸入通常是鍵盤，而標準輸出和標準錯誤通常的螢幕。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-115">Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</span></span> <span data-ttu-id="a3dc8-116">不過，您可以使用<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>， <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>，和<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>屬性，讓從取得輸入，或傳回輸出到檔案或其他裝置的程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-116">However, you can use the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, and <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties to cause the process to get input from or return output to a file or other device.</span></span> <span data-ttu-id="a3dc8-117">如果您使用<xref:System.Diagnostics.Process.StandardInput%2A>， <xref:System.Diagnostics.Process.StandardOutput%2A>，或<xref:System.Diagnostics.Process.StandardError%2A>屬性<xref:System.Diagnostics.Process>元件，您必須先設定對應的值上<xref:System.Diagnostics.ProcessStartInfo>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-117">If you use the <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, or <xref:System.Diagnostics.Process.StandardError%2A> properties on the <xref:System.Diagnostics.Process> component, you must first set the corresponding value on the <xref:System.Diagnostics.ProcessStartInfo> property.</span></span> <span data-ttu-id="a3dc8-118">當您讀取或寫入資料流中，否則系統會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-118">Otherwise, the system throws an exception when you read or write to the stream.</span></span>  
  
 <span data-ttu-id="a3dc8-119">設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性來指定是否使用作業系統 shell 來啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-119">Set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to specify whether to start the process by using the operating system shell.</span></span> <span data-ttu-id="a3dc8-120">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>設`false`、 新的處理序會繼承標準輸入、 輸出標準，和呼叫的標準錯誤資料流處理，除非<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>， <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>，或<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>屬性，分別設定為`true`.</span><span class="sxs-lookup"><span data-stu-id="a3dc8-120">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is set to `false`, the new process inherits the standard input, standard output, and standard error streams of the calling process, unless the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, or <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties, respectively, are set to `true`.</span></span> 
  
 <span data-ttu-id="a3dc8-121">您可以變更任何值<xref:System.Diagnostics.ProcessStartInfo>屬性在處理序啟動的時間。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-121">You can change the value of any <xref:System.Diagnostics.ProcessStartInfo> property up to the time that the process starts.</span></span> <span data-ttu-id="a3dc8-122">啟動程序之後，變更這些值沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-122">After you start the process, changing these values has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-123">這個類別包含在類別層級套用至所有成員的連結要求。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-123">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="a3dc8-124">A<xref:System.Security.SecurityException>立即呼叫端沒有完全信任權限時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-124">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="a3dc8-125">如需安全性需求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-125">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3dc8-126">下列程式碼範例示範如何使用<xref:System.Diagnostics.ProcessStartInfo>類別，以啟動 Internet Explorer 中，提供做為目的地 Url<xref:System.Diagnostics.ProcessStartInfo>引數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-126">The following code example demonstrates how to use the <xref:System.Diagnostics.ProcessStartInfo> class to start Internet Explorer, providing the destination URLs as <xref:System.Diagnostics.ProcessStartInfo> arguments.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a3dc8-127">呼叫成員<see cref="T:System.Diagnostics.ProcessStartInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-127">for calling members of <see cref="T:System.Diagnostics.ProcessStartInfo" />.</span></span> <span data-ttu-id="a3dc8-128">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 具名使用權限集合](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Named Permission Sets](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</span></span></permission>
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3dc8-129">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-129">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3dc8-130">不指定用來啟動處理序的檔案名稱，初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-130">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class without specifying a file name with which to start the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-131">您必須設定至少<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>之前啟動處理序的屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-131">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="a3dc8-132">任何應用程式或文件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-132">The file name is any application or document.</span></span> <span data-ttu-id="a3dc8-133">在此情況下，文件會定義為任何已開啟的檔案類型或預設與其相關聯的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-133">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="a3dc8-134">您可以為您的電腦檢視已登錄之檔案類型和其相關聯的應用程式，使用**資料夾選項**對話方塊中，這可透過作業系統。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-134">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="a3dc8-135">**進階**通往對話方塊，顯示是否已註冊的特定檔案類型相關聯的開啟動作的按鈕。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-135">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="a3dc8-136">（選擇性） 您也可以設定其他屬性，然後再開始此程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-136">Optionally, you can also set other properties before you start the process.</span></span> <span data-ttu-id="a3dc8-137"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A>屬性提供要採取的動作，例如"print"，在指定的檔案與<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-137">The <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property supplies actions to take, such as "print", with the file indicated in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="a3dc8-138"><xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>屬性提供一個方式來將命令列引數傳遞至檔案，系統會開啟它時。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-138">The <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property supplies a way to pass command-line arguments to the file when the system opens it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="a3dc8-139">針對完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-139">for full trust for the immediate caller.</span></span> <span data-ttu-id="a3dc8-140">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-140">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a3dc8-141">用來啟動處理序的應用程式或文件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-141">An application or document with which to start a process.</span></span></param>
        <summary><span data-ttu-id="a3dc8-142">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體，並指定用來啟動處理序的檔案名稱 (例如應用程式或文件)。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-142">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class and specifies a file name such as an application or document with which to start the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-143">任何應用程式或文件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-143">The file name is any application or document.</span></span> <span data-ttu-id="a3dc8-144">在此情況下，文件會定義為任何已開啟的檔案類型或預設與其相關聯的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-144">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="a3dc8-145">您可以為您的電腦檢視已登錄之檔案類型和其相關聯的應用程式，使用**資料夾選項**對話方塊中，這可透過作業系統。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-145">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="a3dc8-146">**進階**通往對話方塊，顯示是否已註冊的特定檔案類型相關聯的開啟動作的按鈕。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-146">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="a3dc8-147">您可以變更<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性之後呼叫這個建構函式，在處理序啟動的時間。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-147">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="a3dc8-148">啟動程序之後，變更這些值沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-148">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="a3dc8-149">針對完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-149">for full trust for the immediate caller.</span></span> <span data-ttu-id="a3dc8-150">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-150">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, arguments As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName, System::String ^ arguments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a3dc8-151">用來啟動處理序的應用程式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-151">An application with which to start a process.</span></span></param>
        <param name="arguments"><span data-ttu-id="a3dc8-152">要在處理序啟動時傳遞至應用程式的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-152">Command-line arguments to pass to the application when the process starts.</span></span></param>
        <summary><span data-ttu-id="a3dc8-153">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體，並指定用來啟動處理序的應用程式檔案名稱，以及指定要傳遞至應用程式的命令列引數集。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-153">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-154">任何應用程式或文件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-154">The file name is any application or document.</span></span> <span data-ttu-id="a3dc8-155">在此情況下，文件會定義為任何已開啟的檔案類型或預設與其相關聯的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-155">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="a3dc8-156">您可以為您的電腦檢視已登錄之檔案類型和其相關聯的應用程式，使用**資料夾選項**對話方塊中，這可透過作業系統。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-156">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="a3dc8-157">**進階**通往對話方塊，顯示是否已註冊的特定檔案類型相關聯的開啟動作的按鈕。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-157">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="a3dc8-158">您可以變更<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>或<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>屬性之後呼叫這個建構函式，在處理序啟動的時間。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-158">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> or <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> properties after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="a3dc8-159">啟動程序之後，變更這些值沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-159">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="a3dc8-160">針對完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-160">for full trust for the immediate caller.</span></span> <span data-ttu-id="a3dc8-161">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-161">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ArgumentList { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Command line arguments that will be passed to the application specified by the FileName property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-162">取得或設定啟動應用程式時要使用的命令列引數集。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-162">Gets or sets the set of command-line arguments to use when starting the application.</span></span></summary>
        <value><span data-ttu-id="a3dc8-163">單一字串，包含要傳遞至 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性中所指定之目標應用程式的引數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-163">A single string containing the arguments to pass to the target application specified in the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span> <span data-ttu-id="a3dc8-164">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-164">The default is an empty string ("").</span></span> <span data-ttu-id="a3dc8-165">在 Windows Vista 及較早版本的 Windows 作業系統上，加入處理序之完整路徑長度的引數長度必須小於 2080。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-165">On Windows Vista and earlier versions of the Windows operating system, the length of the arguments added to the length of the full path to the process must be less than 2080.</span></span> <span data-ttu-id="a3dc8-166">在 Windows 7 及更新版本中，長度必須小於 32699。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-166">On Windows 7 and later versions, the length must be less than 32699.</span></span>  
  
 <span data-ttu-id="a3dc8-167">引數會由目標應用程式剖析及解譯，因此必須配合該應用程式的期望。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-167">Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</span></span> <span data-ttu-id="a3dc8-168">針對下列範例所示的 .NET 應用程式，空格會解譯為多個引數之間的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-168">For.NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</span></span> <span data-ttu-id="a3dc8-169">您必須以引號括住含有空格的單一引數，但這些引號不會傳送至目標應用程式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-169">A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</span></span> <span data-ttu-id="a3dc8-170">在最後剖析之引數所包含的引號中，三重逸出 (Triple-Escape) 每個標記。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-170">In include quotation marks in the final parsed argument, triple-escape each mark.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3dc8-171">下列第一個範例會建立一個小型應用程式 (argsecho.exe) 該 echos 其引數至主控台。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-171">The first example below creates a small application (argsecho.exe) that echos its arguments to the console.</span></span> <span data-ttu-id="a3dc8-172">第二個範例會建立會叫用 argsecho.exe 示範不同的變化的引數 屬性的應用程式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-172">The second example creates an application that invokes argsecho.exe to demonstrate different variations for the Arguments property.</span></span>  
  
 [!code-cpp[Process.Start_static#3](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#3)]
 [!code-csharp[Process.Start_static#3](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#3)]
 [!code-vb[Process.Start_static#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#3)]  
  
 [!code-cpp[Process.Start_static#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#2)]
 [!code-csharp[Process.Start_static#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#2)]
 [!code-vb[Process.Start_static#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoWindow">
      <MemberSignature Language="C#" Value="public bool CreateNoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateNoWindow" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateNoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateNoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to start the process without creating a new window to contain it.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-173">取得或設定值，表示是否要在新視窗中啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-173">Gets or sets a value indicating whether to start the process in a new window.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-174">如果應該啟動處理序而不建立要包含處理序的新視窗，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-174"><see langword="true" /> if the process should be started without creating a new window to contain it; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3dc8-175">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-175">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-176">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性是`true`或<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>屬性不是`null`、<xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A>屬性值會被忽略，建立新的視窗。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-176">If the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property is `true` or the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties are not `null`, the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is ignored and a new window is created.</span></span>  

 <span data-ttu-id="a3dc8-177">.NET 核心不支援直接在 unix 平台，包括 macOS 和 Linux 上建立的 windows。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-177">.NET Core does not support creating windows directly on Unix-like platforms, including macOS and Linux.</span></span> <span data-ttu-id="a3dc8-178">在這類平台上，會忽略這個屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-178">This property is ignored on such platforms.</span></span>
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-179">取得或設定值，識別在啟動處理序時要使用的網域。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-179">Gets or sets a value that identifies the domain to use when starting the process.</span></span> <span data-ttu-id="a3dc8-180">如果此值為 <see langword="null" />，則必須以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-180">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span></span> </summary>
        <value><span data-ttu-id="a3dc8-181">啟動處理序時要使用的 Active Directory 網域。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-181">The Active Directory domain to use when starting the process.</span></span> <span data-ttu-id="a3dc8-182">如果此值為 <see langword="null" />，則必須以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-182">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span></span> </value>
        <remarks><span data-ttu-id="a3dc8-183">這個屬性主要是使用 Active Directory 的企業環境內的使用者感興趣。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-183">This property is primarily of interest to users within enterprise environments that use Active Directory.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Environment" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Environment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-184">取得套用至這個處理序及其子處理序的環境變數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-184">Gets the environment variables that apply to this process and its child processes.</span></span></summary>
        <value><span data-ttu-id="a3dc8-185">泛型字典，包含套用至這個處理序及其子處理序的環境變數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-185">A generic dictionary containing the environment variables that apply to this process and its child processes.</span></span> <span data-ttu-id="a3dc8-186">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-186">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-187">環境變數包含檔的搜尋路徑、 暫存檔、 應用程式特定選項，以及其他類似的資訊的目錄。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-187">The environment variables contain search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span> <span data-ttu-id="a3dc8-188">雖然您無法直接設定<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>屬性，您可以修改屬性所傳回之泛型字典。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-188">Although you cannot directly set the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property, you can modify the generic dictionary returned by the property.</span></span> <span data-ttu-id="a3dc8-189">例如，下列程式碼會加入 TempPath 環境變數： `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-189">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="a3dc8-190">您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性`false`變更之後開始程序<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-190">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property.</span></span> <span data-ttu-id="a3dc8-191">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`、<xref:System.InvalidOperationException>時擲回<xref:System.Diagnostics.Process.Start%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-191">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 <span data-ttu-id="a3dc8-192">在.NET Framework 應用程式，使用<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>屬性等同於使用<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-192">On .NET Framework applications, using the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property is the same as using the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ EnvironmentVariables { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Set of environment variables that apply to this process and child processes.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-193">取得檔案的搜尋路徑、暫存檔的目錄、應用程式特定選項和其他類似的資訊。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-193">Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span></summary>
        <value><span data-ttu-id="a3dc8-194">字串字典，提供適用於這個處理序和子處理序的環境變數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-194">A string dictionary that provides environment variables that apply to this process and child processes.</span></span> <span data-ttu-id="a3dc8-195">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-195">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-196">雖然您無法設定<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>屬性，您可以修改<xref:System.Collections.Specialized.StringDictionary>屬性所傳回。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-196">Although you cannot set the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property, you can modify the <xref:System.Collections.Specialized.StringDictionary> returned by the property.</span></span> <span data-ttu-id="a3dc8-197">例如，下列程式碼會加入 TempPath 環境變數： `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-197">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="a3dc8-198">您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性`false`變更之後開始程序<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-198">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span> <span data-ttu-id="a3dc8-199">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`、<xref:System.InvalidOperationException>時擲回<xref:System.Diagnostics.Process.Start%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-199">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialog">
      <MemberSignature Language="C#" Value="public bool ErrorDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorDialog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ErrorDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to show an error dialog to the user if there is an error.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-200">取得或設定值，表示是否要在無法啟動處理序時向使用者顯示錯誤對話方塊。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-200">Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-201">若要在處理序無法啟動時，錯誤對話方塊應該顯示在螢幕上，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-201"><see langword="true" /> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3dc8-202">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-202">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必須是`true`如果您想要設定<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you want to set <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialogParentHandle">
      <MemberSignature Language="C#" Value="public IntPtr ErrorDialogParentHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ErrorDialogParentHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialogParentHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ErrorDialogParentHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-204">取得或設定視窗控制代碼，以便在無法啟動處理序而顯示錯誤對話方塊時使用。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-204">Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</span></span></summary>
        <value><span data-ttu-id="a3dc8-205">因處理序啟動失敗而產生之錯誤對話方塊的控制代碼指標。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-205">A pointer to the handle of the error dialog box that results from a process start failure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-206">如果<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>是`true`、<xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A>屬性會指定父視窗會顯示對話方塊。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-206">If <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> property specifies the parent window for the dialog box that is shown.</span></span> <span data-ttu-id="a3dc8-207">它是適合用來指定保留 [前方的應用程式] 對話方塊中的父系。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-207">It is useful to specify a parent to keep the dialog box in front of the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the application, document or URL to start.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-208">取得或設定要啟動的應用程式或文件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-208">Gets or sets the application or document to start.</span></span></summary>
        <value><span data-ttu-id="a3dc8-209">要啟動的應用程式名稱，或是與應用程式相關聯且具有可用預設開啟動作之檔案類型的文件名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-209">The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</span></span> <span data-ttu-id="a3dc8-210">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-210">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-211">您必須設定至少<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>之前啟動處理序的屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-211">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="a3dc8-212">任何應用程式或文件的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-212">The file name is any application or document.</span></span> <span data-ttu-id="a3dc8-213">文件會定義任何已開啟的檔案類型或預設與其相關聯的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-213">A document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="a3dc8-214">您可以為您的電腦檢視已登錄之檔案類型和其相關聯的應用程式，使用**資料夾選項**對話方塊中，這可透過作業系統。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-214">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="a3dc8-215">**進階**通往對話方塊，顯示是否已註冊的特定檔案類型相關聯的開啟動作的按鈕。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-215">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="a3dc8-216">您可以使用的檔案類型的一組部分取決於值<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-216">The set of file types available to you depends in part on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="a3dc8-217">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`，您可以啟動任何文件，並執行檔案，例如列印、 作業與<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-217">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, you can start any document and perform operations on the file, such as printing, with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="a3dc8-218">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`，您就可以開始只可執行檔與<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-218">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables with the <xref:System.Diagnostics.Process> component.</span></span>  
  
 <span data-ttu-id="a3dc8-219">您可以啟動 ClickOnce 應用程式設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>從中您原先安裝應用程式的位置 （例如，Web 位址） 的屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-219">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="a3dc8-220">無法啟動 ClickOnce 應用程式透過指定已安裝在硬碟上。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-220">Do not start a ClickOnce application by specifying its installed location on your hard disk.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUserProfile">
      <MemberSignature Language="C#" Value="public bool LoadUserProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadUserProfile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadUserProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadUserProfile { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-221">取得或設定值，表示是否要從登錄載入 Windows 使用者設定檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-221">Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-222">如果應該載入 Windows 使用者設定檔，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-222"><see langword="true" /> if the Windows user profile should be loaded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3dc8-223">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-223">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-224">如果使用使用者名稱、 密碼和網域來啟動處理程序時，會參考這個屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-224">This property is referenced if the process is being started by using the user name, password, and domain.</span></span>  
  
 <span data-ttu-id="a3dc8-225">如果值為`true`，使用者的設定檔中`HKEY_USERS`載入登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-225">If the value is `true`, the user's profile in the `HKEY_USERS` registry key is loaded.</span></span> <span data-ttu-id="a3dc8-226">載入設定檔可能會很費時。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-226">Loading the profile can be time-consuming.</span></span> <span data-ttu-id="a3dc8-227">因此，最好使用此值，您必須存取中的資訊時，才`HKEY_CURRENT_USER`登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-227">Therefore, it is best to use this value only if you must access the information in the `HKEY_CURRENT_USER` registry key.</span></span>  
  
 <span data-ttu-id="a3dc8-228">在 Windows Server 2003 和 Windows 2000 中，設定檔之後卸載新處理序已終止，不論處理序已建立子處理程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-228">In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</span></span>  
  
 <span data-ttu-id="a3dc8-229">在 Windows XP 中，設定檔之後的新處理序會卸載，則已建立的所有子處理序已都終止。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-229">In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString Password" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ Password { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-230">取得或設定安全字串，其中包含啟動處理序時要使用的使用者密碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-230">Gets or sets a secure string that contains the user password to use when starting the process.</span></span></summary>
        <value><span data-ttu-id="a3dc8-231">要在啟動處理序時使用的使用者密碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-231">The user password to use when starting the process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a3dc8-232"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>必須設定屬性，如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>所提供。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-232">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="a3dc8-233">如果未設定的屬性，預設工作目錄。 %SYSTEMROOT%\system32</span><span class="sxs-lookup"><span data-stu-id="a3dc8-233">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-234">設定<xref:System.Diagnostics.ProcessStartInfo.Domain%2A>， <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>，而<xref:System.Diagnostics.ProcessStartInfo.Password%2A>中的屬性<xref:System.Diagnostics.ProcessStartInfo>物件是以使用者認證啟動處理序的建議的做法。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-234">Setting the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, and the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties in a <xref:System.Diagnostics.ProcessStartInfo> object is the recommended practice for starting a process with user credentials.</span></span>  
  
 <span data-ttu-id="a3dc8-235">A<xref:System.Security.SecureString>物件就像<xref:System.String>物件，因為它具有文字值。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-235">A <xref:System.Security.SecureString> object is like a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="a3dc8-236">不過，值<xref:System.Security.SecureString>物件會自動加密，直到您的應用程式將它標記為唯讀的而且可以從電腦記憶體中刪除您的應用程式或.NET Framework 記憶體回收行程可以修改它。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-236">However, the value of a <xref:System.Security.SecureString> object is automatically encrypted, it can be modified until your application marks it as read-only, and it can be deleted from computer memory by either your application or the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="a3dc8-237">如需安全字串和濆爧髍孮密碼來設定這個屬性的範例的詳細資訊，請參閱<xref:System.Security.SecureString>類別。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-237">For more information about secure strings and an example of how to obtain a password to set this property, see the <xref:System.Security.SecureString> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-238">如果您提供的值<xref:System.Diagnostics.ProcessStartInfo.Password%2A>屬性，<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性必須是`false`，或<xref:System.InvalidOperationException>就會擲回時<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-238">If you provide a value for the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> property, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordInClearText">
      <MemberSignature Language="C#" Value="public string PasswordInClearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordInClearText" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordInClearText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordInClearText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-239">取得或設定啟動處理程序時使用之純文字格式的使用者密碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-239">Gets or sets the user password in clear text to use when starting the process.</span></span></summary>
        <value><span data-ttu-id="a3dc8-240">純文字格式的使用者密碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-240">The user password in clear text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardError">
      <MemberSignature Language="C#" Value="public bool RedirectStandardError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process's error output is written to the Process instance's StandardError member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-241">取得或設定值，表示應用程式的錯誤輸出是否寫入至 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-241">Gets or sets a value that indicates whether the error output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-242">如果錯誤輸出應該寫入至 <see cref="P:System.Diagnostics.Process.StandardError" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-242"><see langword="true" /> if error output should be written to <see cref="P:System.Diagnostics.Process.StandardError" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3dc8-243">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-243">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-244">當<xref:System.Diagnostics.Process>將文字寫入至其標準錯誤資料流，通常會在主控台上顯示文字。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-244">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="a3dc8-245">藉由重新導向<xref:System.Diagnostics.Process.StandardError%2A>資料流，您可以操作或隱藏的錯誤輸出的處理程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-245">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="a3dc8-246">比方說，您可以篩選文字、 以不同的方式，將其格式化或將輸出寫入主控台和指定的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-246">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-247">您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>至`false`如果您想要設定<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-247">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span> <span data-ttu-id="a3dc8-248">否則，讀取<xref:System.Diagnostics.Process.StandardError%2A>資料流擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-248">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="a3dc8-249">重新導向<xref:System.Diagnostics.Process.StandardError%2A>同步或非同步方式，就可以讀取資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-249">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="a3dc8-250">這類方法<xref:System.IO.StreamReader.Read%2A>，<xref:System.IO.StreamReader.ReadLine%2A>和<xref:System.IO.StreamReader.ReadToEnd%2A>執行同步處理程序的錯誤輸出資料流上的讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-250">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="a3dc8-251">這些同步讀取作業不會完成直到相關聯<xref:System.Diagnostics.Process>寫入其<xref:System.Diagnostics.Process.StandardError%2A>串流處理，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-251">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="a3dc8-252">相反地，<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>開始非同步讀取作業上<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-252">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="a3dc8-253">這個方法可讓資料流輸出的指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出導向至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-253">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-254">正在處理的非同步輸出的應用程式應該呼叫<xref:System.Diagnostics.Process.WaitForExit%2A>方法，以確保已清除輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-254">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="a3dc8-255">同步讀取作業會讀取自呼叫端之間的相依性<xref:System.Diagnostics.Process.StandardError%2A>資料流及子處理序寫入該資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-255">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="a3dc8-256">這些相依性可能會導致死結狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-256">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="a3dc8-257">當呼叫端會從子處理序的重新導向資料流讀取時，它會相依於子系。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-257">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="a3dc8-258">呼叫者會等待讀取作業，直到子寫入資料流，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-258">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="a3dc8-259">時子處理序寫入資料不足，無法填滿其重新導向資料流，它會相依於父代。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-259">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="a3dc8-260">子處理序等候下一個寫入作業之前從完整的資料流讀取的父系，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-260">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="a3dc8-261">當呼叫端和子處理序等待對方來完成作業，且無法繼續時，就會導致死結狀態。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-261">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="a3dc8-262">您可以評估呼叫端和子處理序之間的相依性，以避免死結。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-262">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="a3dc8-263">例如，下列 C# 程式碼會示範如何從重新導向資料流讀取，並等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-263">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
// Start the child process.  
 Process p = new Process();  
 // Redirect the error stream of the child process.  
 p.StartInfo.UseShellExecute = false;  
 p.StartInfo.RedirectStandardError = true;  
 p.StartInfo.FileName = "Write500Lines.exe";  
 p.Start();  
 // Do not wait for the child process to exit before  
 // reading to the end of its redirected error stream.  
 // p.WaitForExit();  
 // Read the error stream first and then wait.  
 string error = p.StandardError.ReadToEnd();  
 p.WaitForExit();  
```  
  
 <span data-ttu-id="a3dc8-264">程式碼範例可避免發生死結狀況呼叫`p.StandardError.ReadToEnd`之前`p.WaitForExit`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-264">The code example avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="a3dc8-265">如果父處理呼叫，死結狀況可能會造成`p.WaitForExit`之前`p.StandardError.ReadToEnd`和子處理序寫入足夠的文字，以填滿重新導向資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-265">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="a3dc8-266">父處理序會無限期地等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-266">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="a3dc8-267">子處理序會無限期地等候從完整讀取父<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-267">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="a3dc8-268">當您從標準輸出和標準錯誤資料流讀取所有文字時，沒有類似的問題。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-268">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="a3dc8-269">例如，下列 C# 程式碼會執行兩個資料流上的讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-269">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// Do not perform a synchronous read to the end of both  
// redirected streams.  
// string output = p.StandardOutput.ReadToEnd();  
// string error = p.StandardError.ReadToEnd();  
// p.WaitForExit();  
// Use asynchronous read operations on at least one of the streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="a3dc8-270">程式碼範例可避免發生死結狀況執行非同步讀取作業上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-270">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="a3dc8-271">如果父處理序的呼叫就會導致死結狀態`p.StandardOutput.ReadToEnd`後面`p.StandardError.ReadToEnd`和子處理序寫入足夠的文字，以填滿的錯誤資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-271">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="a3dc8-272">父處理序會無限期地等候子處理序關閉其<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-272">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="a3dc8-273">子處理序會無限期地等候從完整讀取父<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-273">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="a3dc8-274">若要避免這些相依性和其潛在的死結，您可以使用非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-274">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="a3dc8-275">或者，您可以藉由建立兩個執行緒，並讀取每個個別執行緒上的資料流的輸出，避免發生死結狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-275">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3dc8-276">下列範例會使用`net use`命令搭配對應的網路資源的使用者提供的引數。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-276">The following example uses the `net use` command together with a user-supplied argument to map a network resource.</span></span> <span data-ttu-id="a3dc8-277">然後會讀取 net 命令標準錯誤資料流，並寫入至主控台。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-277">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardInput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process command input is read from the Process instance's StandardInput member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-278">取得或設定值，表示應用程式的輸入是否從 <see cref="P:System.Diagnostics.Process.StandardInput" /> 資料流讀取。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-278">Gets or sets a value indicating whether the input for an application is read from the <see cref="P:System.Diagnostics.Process.StandardInput" /> stream.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-279">如果應該從 <see cref="P:System.Diagnostics.Process.StandardInput" /> 讀取輸入，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-279"><see langword="true" /> if input should be read from <see cref="P:System.Diagnostics.Process.StandardInput" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3dc8-280">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-280">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-281">A<xref:System.Diagnostics.Process>可以讀取其標準輸入資料流，一般是鍵盤輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-281">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="a3dc8-282">藉由重新導向<xref:System.Diagnostics.Process.StandardInput%2A>資料流，您可以透過程式設計方式指定處理程序的輸入。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-282">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input of a process.</span></span> <span data-ttu-id="a3dc8-283">例如，而不是使用鍵盤輸入，您可以提供指定之檔案的內容中的文字或另一個應用程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-283">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-284">您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>至`false`如果您想要設定<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-284">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> to `true`.</span></span> <span data-ttu-id="a3dc8-285">否則，寫入<xref:System.Diagnostics.Process.StandardInput%2A>資料流擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-285">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3dc8-286">下列範例說明如何將重新導向<xref:System.Diagnostics.Process.StandardInput%2A>資料流的處理程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-286">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="a3dc8-287">`sort`命令是主控台應用程式讀取及排序文字輸入。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-287">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="a3dc8-288">此範例會啟動`sort`命令與重新導向輸入。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-288">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="a3dc8-289">接著會提示使用者輸入的文字，並傳遞要文字`sort`透過重新導向處理序<xref:System.Diagnostics.Process.StandardInput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-289">It then prompts the user for text, and passes the text to the `sort` process through the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="a3dc8-290">`sort`結果會顯示主控台使用者。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-290">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardOutput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process output is written to the Process instance's StandardOutput member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-291">取得或設定值，表示應用程式的文字輸出是否寫入至 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-291">Gets or sets a value that indicates whether the textual output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-292">如果輸出應該寫入至 <see cref="P:System.Diagnostics.Process.StandardOutput" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-292"><see langword="true" /> if output should be written to <see cref="P:System.Diagnostics.Process.StandardOutput" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3dc8-293">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-293">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-294">當<xref:System.Diagnostics.Process>將文字寫入至其標準的資料流，通常會在主控台上顯示文字。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-294">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="a3dc8-295">藉由設定<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>至`true`重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，您可以操作或隱藏程序的輸出。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-295">By setting <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true` to redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="a3dc8-296">比方說，您可以篩選文字、 以不同的方式，將其格式化或將輸出寫入主控台和指定的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-296">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-297">您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>至`false`如果您想要設定<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-297">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span> <span data-ttu-id="a3dc8-298">否則，讀取<xref:System.Diagnostics.Process.StandardOutput%2A>資料流擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-298">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="a3dc8-299">重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>同步或非同步方式，就可以讀取資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-299">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="a3dc8-300">這類方法<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，和<xref:System.IO.StreamReader.ReadToEnd%2A>執行程序的輸出資料流上的同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-300">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="a3dc8-301">這些同步讀取作業不會完成直到相關聯<xref:System.Diagnostics.Process>寫入其<xref:System.Diagnostics.Process.StandardOutput%2A>串流處理，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-301">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="a3dc8-302">相反地，<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>開始非同步讀取作業上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-302">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="a3dc8-303">這個方法會啟用指定的事件處理常式 (請參閱<xref:System.Diagnostics.Process.OutputDataReceived>) 的資料流輸出並立即傳回給呼叫者，它可以執行其他工作時將資料流輸出導向至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-303">This method enables a designated event handler (see <xref:System.Diagnostics.Process.OutputDataReceived>) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-304">正在處理的非同步輸出的應用程式應該呼叫<xref:System.Diagnostics.Process.WaitForExit%2A>方法，以確保已清除輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-304">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="a3dc8-305">同步讀取作業會讀取自呼叫端之間的相依性<xref:System.Diagnostics.Process.StandardOutput%2A>資料流及子處理序寫入該資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-305">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="a3dc8-306">這些相依性可能會導致死結狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-306">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="a3dc8-307">當呼叫端會從子處理序的重新導向資料流讀取時，它會相依於子系。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-307">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="a3dc8-308">呼叫者會等待讀取作業，直到子寫入資料流，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-308">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="a3dc8-309">時子處理序寫入資料不足，無法填滿其重新導向資料流，它會相依於父代。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-309">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="a3dc8-310">子處理序等候下一個寫入作業之前從完整的資料流讀取的父系，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-310">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="a3dc8-311">當呼叫端和子處理序等待對方來完成作業，且無法繼續時，就會導致死結狀態。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-311">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="a3dc8-312">您可以評估呼叫端和子處理序之間的相依性，以避免死結。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-312">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="a3dc8-313">例如，下列 C# 程式碼會示範如何從重新導向資料流讀取，並等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-313">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
Process p = new Process();  
p.StartInfo.UseShellExecute = false;  
p.StartInfo.RedirectStandardOutput = true;  
p.StartInfo.FileName = "Write500Lines.exe";  
p.Start();  
  
// To avoid deadlocks, always read the output stream first and then wait.  
string output = p.StandardOutput.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="a3dc8-314">程式碼範例可避免發生死結狀況呼叫`p.StandardOutput.ReadToEnd`之前`p.WaitForExit`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-314">The code example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="a3dc8-315">如果父處理呼叫，死結狀況可能會造成`p.WaitForExit`之前`p.StandardOutput.ReadToEnd`和子處理序寫入足夠的文字，以填滿重新導向資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-315">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="a3dc8-316">父處理序會無限期地等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-316">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="a3dc8-317">子處理序會無限期地等候從完整讀取父<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-317">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="a3dc8-318">當您從標準輸出和標準錯誤資料流讀取所有文字時，沒有類似的問題。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-318">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="a3dc8-319">例如，下列 C# 程式碼會執行兩個資料流上的讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-319">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// To avoid deadlocks, use asynchronous read operations on at least one of the streams.  
// Do not perform a synchronous read to the end of both redirected streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="a3dc8-320">程式碼範例可避免發生死結狀況執行非同步讀取作業上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-320">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="a3dc8-321">如果父處理序的呼叫就會導致死結狀態`p.StandardOutput.ReadToEnd`後面`p.StandardError.ReadToEnd`和子處理序寫入足夠的文字，以填滿的錯誤資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-321">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="a3dc8-322">父處理序會無限期地等候子處理序關閉其<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-322">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="a3dc8-323">子處理序會無限期地等候從完整讀取父<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-323">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="a3dc8-324">若要避免這些相依性和其潛在的死結，您可以使用非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-324">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="a3dc8-325">或者，您可以藉由建立兩個執行緒，並讀取每個個別執行緒上的資料流的輸出，避免發生死結狀況。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-325">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardErrorEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-326">取得或設定錯誤輸出的慣用編碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-326">Gets or sets the preferred encoding for error output.</span></span></summary>
        <value><span data-ttu-id="a3dc8-327">物件，代表錯誤輸出的慣用編碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-327">An object that represents the preferred encoding for error output.</span></span> <span data-ttu-id="a3dc8-328">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-328">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-329">如果值<xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A>屬性是`null`，處理序會使用預設標準錯誤的錯誤輸出的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-329">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property is `null`, the process uses the default standard error encoding for error output.</span></span> <span data-ttu-id="a3dc8-330"><xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A>啟動處理程序之前，必須設定屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-330">The <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="a3dc8-331">設定這個屬性並不保證程序將使用指定的編碼。處理程序會使用它支援這些編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-331">Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</span></span> <span data-ttu-id="a3dc8-332">應該測試應用程式，以決定支援的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-332">The application should be tested to determine which encodings are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardInputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardInputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardInputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardInputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardOutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-333">取得或設定標準輸出的慣用編碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-333">Gets or sets the preferred encoding for standard output.</span></span></summary>
        <value><span data-ttu-id="a3dc8-334">物件，代表標準輸出的慣用編碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-334">An object that represents the preferred encoding for standard output.</span></span> <span data-ttu-id="a3dc8-335">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-335">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-336">如果值<xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A>屬性是`null`，處理程序會使用預設標準輸出的編碼標準的輸出。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-336">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property is `null`, the process uses the default standard output encoding for the standard output.</span></span> <span data-ttu-id="a3dc8-337"><xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A>啟動處理程序之前，必須設定屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-337">The <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="a3dc8-338">設定這個屬性並不保證程序將使用指定的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-338">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="a3dc8-339">應該測試應用程式，以判斷這個程序支援的編碼。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-339">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-340">取得或設定要在啟動處理序時使用的使用者名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-340">Gets or sets the user name to use when starting the process.</span></span> <span data-ttu-id="a3dc8-341">如果您使用 UPN 格式 <paramref name="user" />@<paramref name="DNS_domain_name" />，<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 屬性必須為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-341">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="a3dc8-342">要在啟動處理序時使用的使用者名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-342">The user name to use when starting the process.</span></span> <span data-ttu-id="a3dc8-343">如果您使用 UPN 格式 <paramref name="user" />@<paramref name="DNS_domain_name" />，<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 屬性必須為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-343">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a3dc8-344"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>必須設定屬性，如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>所提供。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-344">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="a3dc8-345">如果未設定的屬性，預設工作目錄。 %SYSTEMROOT%\system32</span><span class="sxs-lookup"><span data-stu-id="a3dc8-345">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="a3dc8-346">如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>屬性不是`null`或空字串，<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性必須是`false`，或<xref:System.InvalidOperationException>就會擲回時<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-346">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseShellExecute">
      <MemberSignature Language="C#" Value="public bool UseShellExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseShellExecute" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property UseShellExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseShellExecute { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to use the operating system shell to start the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-347">取得或設定值，表示是否要使用作業系統 Shell 來啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-347">Gets or sets a value indicating whether to use the operating system shell to start the process.</span></span></summary>
        <value>
          <span data-ttu-id="a3dc8-348">如果在啟動處理序時使用 Shell，則為 <see langword="true" />，如果處理序應直接從可執行檔建立，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-348"><see langword="true" /> if the shell should be used when starting the process; <see langword="false" /> if the process should be created directly from the executable file.</span></span> <span data-ttu-id="a3dc8-349">預設值是<see langword="true" />上.NET Framework 應用程式和<see langword="false" />.NET Core 應用程式上。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-349">The default is <see langword="true" /> on .NET Framework apps and <see langword="false" /> on .NET Core apps.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-350">此屬性設定為`false`可讓您重新導向輸入、 輸出和錯誤資料流。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-350">Setting this property to `false` enables you to redirect input, output, and error streams.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必須是`false`如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>屬性不是`null`或空字串，或<xref:System.InvalidOperationException>就會擲回時<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `false` if the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 <span data-ttu-id="a3dc8-352">當您使用作業系統 shell 來啟動處理序時，您可以開始 （即有一個預設開啟動作的可執行檔相關聯的任何已註冊的檔案類型） 的文件，然後在檔案執行作業，列印，例如使用<xref:System.Diagnostics.Process>物件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-352">When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the <xref:System.Diagnostics.Process> object.</span></span> <span data-ttu-id="a3dc8-353">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`，您可以使用來啟動只可執行檔<xref:System.Diagnostics.Process>物件。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-353">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables by using the <xref:System.Diagnostics.Process> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必須是`true`如果您設定<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you set the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="a3dc8-355"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>屬性具有不同行為的值而定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-355">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently depending on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="a3dc8-356">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>屬性指定的可執行檔的位置。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-356">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="a3dc8-357">如果<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>為空字串，它會假設目前的目錄，包含可執行檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-357">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, it is assumed that the current directory contains the executable.</span></span>  
  
 <span data-ttu-id="a3dc8-358">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>屬性不用來尋找可執行檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-358">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="a3dc8-359">相反地，它僅供處理程序已啟動且具有意義，只在新的處理序的內容。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-359">Instead, it is used only by the process that is started and has meaning only within the context of the new process.</span></span> <span data-ttu-id="a3dc8-360">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性可以是完整的路徑的可執行檔或簡單的可執行檔名稱，系統就會嘗試尋找在 PATH 環境變數所指定的資料夾中。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-360">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="a3dc8-361">嘗試在通用 Windows 平台 (UWP) App 上將值設定為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-361">An attempt to set the value to <see langword="true" /> on Universal Windows Platform (UWP) apps occurs.</span></span></exception>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The verb to apply to the document specified by the FileName property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-362">取得或設定動詞命令，用於開啟 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性所指定的應用程式或文件時。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-362">Gets or sets the verb to use when opening the application or document specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></summary>
        <value><span data-ttu-id="a3dc8-363">對處理序所開啟的檔案所要採取的動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-363">The action to take with the file that the process opens.</span></span> <span data-ttu-id="a3dc8-364">預設值為空字串 ("")，表示不採取任何動作。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-364">The default is an empty string (""), which signifies no action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-365">每個副檔名有它自己的動詞，可以使用來取得集<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-365">Each file name extension has its own set of verbs, which can be obtained by using the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span> <span data-ttu-id="a3dc8-366">例如，"`print`"動詞命令會列印使用指定的文件<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-366">For example, the "`print`" verb will print a document specified by using <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="a3dc8-367">可以指定預設的動詞命令使用空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-367">The default verb can be specified by using an empty string ("").</span></span> <span data-ttu-id="a3dc8-368">動詞命令的範例包括 「 編輯 」、 「 開啟 」、 「 OpenAsReadOnly"、"Print"和 「 Printto"。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-368">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span> <span data-ttu-id="a3dc8-369">您應該使用的動詞命令所傳回集合中出現的動詞<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-369">You should use only verbs that appear in the set of verbs returned by the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 <span data-ttu-id="a3dc8-370">當您使用<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>屬性，當您設定的值時，必須包含副檔名<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-370">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="a3dc8-371">檔案名稱不需要有副檔名，如果您手動輸入的值<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-371">The file name does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3dc8-372">下列程式碼範例會使用指定的動詞命令和檔案名稱，以啟動新處理序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-372">The following code example starts a new process by using the specified verb and file name.</span></span> <span data-ttu-id="a3dc8-373">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-373">This code example is part of a larger example provided for the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#4](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#4)]
 [!code-vb[ProcessVerbs_Diagnostics#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public string[] Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Verbs { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-374">取得動詞命令集，這個動詞命令集與 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性所指定的檔案類型相關聯。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-374">Gets the set of verbs associated with the type of file specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></summary>
        <value><span data-ttu-id="a3dc8-375">動作，系統可以將這個動作套用至 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性所指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-375">The actions that the system can apply to the file indicated by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3dc8-376"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>屬性可讓您判斷可與所指定的檔案的動詞<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-376">The <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property enables you to determine the verbs that can be used with the file specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="a3dc8-377">您可以設定<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>屬性設為值的集合中的任何指令動詞。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-377">You can set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property to the value of any verb in the set.</span></span> <span data-ttu-id="a3dc8-378">動詞命令的範例包括 「 編輯 」、 「 開啟 」、 「 OpenAsReadOnly"、"Print"和 「 Printto"。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-378">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span>  
  
 <span data-ttu-id="a3dc8-379">當您使用<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>屬性，當您設定的值時，必須包含副檔名<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-379">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="a3dc8-380">檔案名稱副檔名會決定可能的動詞命令集。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-380">The file name extension determines the set of possible verbs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3dc8-381">下列程式碼範例會顯示所選的檔案名稱定義的動詞命令。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-381">The following code example displays the defined verbs for the chosen file name.</span></span> <span data-ttu-id="a3dc8-382">如果使用者選取其中一個已定義的指令動詞，此範例會啟動新的處理序，使用選取的指令動詞和輸入的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-382">If the user selects one of the defined verbs, the example starts a new process using the selected verb and the input file name.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#3](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#3)]
 [!code-vb[ProcessVerbs_Diagnostics#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verb" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As ProcessWindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessWindowStyle WindowStyle { System::Diagnostics::ProcessWindowStyle get(); void set(System::Diagnostics::ProcessWindowStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("How the main window should be created when the process starts.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-383">取得或設定視窗狀態，用於啟動處理序時。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-383">Gets or sets the window state to use when the process is started.</span></span></summary>
        <value><span data-ttu-id="a3dc8-384">其中一個列舉值，表示處理序是在最大化視窗、最小化視窗、一般 (不是最大化也不是最小化) 視窗或不可見視窗中啟動。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-384">One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</span></span> <span data-ttu-id="a3dc8-385">預設值為 <see langword="Normal" />。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-385">The default is <see langword="Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="a3dc8-386">視窗樣式不是其中一個 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 列舉型別 (Enumeration) 成員。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-386">The window style is not one of the <see cref="T:System.Diagnostics.ProcessWindowStyle" /> enumeration members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The initial working directory for the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3dc8-387">當 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性為 <see langword="false" /> 時，取得或設定要啟動之處理序的工作目錄。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-387">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, gets or sets the working directory for the process to be started.</span></span> <span data-ttu-id="a3dc8-388">當 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 為 <see langword="true" /> 時，取得或設定包含要啟動之處理序的目錄。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-388">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, gets or sets the directory that contains the process to be started.</span></span></summary>
        <value><span data-ttu-id="a3dc8-389">如果 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 為 <see langword="true" />，則為包含要啟動之處理序的目錄完整名稱。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-389">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, the fully qualified name of the directory that contains the process to be started.</span></span> <span data-ttu-id="a3dc8-390">當 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性為 <see langword="false" /> 時，則為要啟動之處理序的工作目錄。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-390">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, the working directory for the process to be started.</span></span> <span data-ttu-id="a3dc8-391">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-391">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a3dc8-392"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>必須設定屬性，如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>所提供。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-392">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="a3dc8-393">如果未設定的屬性，預設工作目錄。 %SYSTEMROOT%\system32</span><span class="sxs-lookup"><span data-stu-id="a3dc8-393">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="a3dc8-394">如果目錄已經系統 path 變數的一部分，您不必重複此屬性中的目錄位置。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-394">If the directory is already part of the system path variable, you do not have to repeat the directory's location in this property.</span></span>  
  
 <span data-ttu-id="a3dc8-395"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>屬性具有不同行為時<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`比<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-395">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` than when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`.</span></span> <span data-ttu-id="a3dc8-396">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>屬性指定的可執行檔的位置。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-396">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="a3dc8-397">如果<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>為空字串，包含可執行檔了解目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-397">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, the current directory is understood to contain the executable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3dc8-398">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`，工作目錄的應用程式的啟動可執行檔也是可執行檔的工作目錄。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-398">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the working directory of the application that starts the executable is also the working directory of the executable.</span></span>  
  
 <span data-ttu-id="a3dc8-399">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>屬性不用來尋找可執行檔。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-399">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="a3dc8-400">相反地，其值適用於會啟動，才有意義的新處理序內容中的程序。</span><span class="sxs-lookup"><span data-stu-id="a3dc8-400">Instead, its value applies to the process that is started and only has meaning within the context of the new process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>