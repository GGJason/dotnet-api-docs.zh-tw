<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Process.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07fb11e279a0f7b7e3877dfa70a9245e270d2849bd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb11e279a0f7b7e3877dfa70a9245e270d2849bd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Provides access to local and remote processes and enables you to start and stop local system processes.</source>
          <target state="translated">提供對本機和遠端處理序的存取，並讓您能夠啟動和停止本機系統處理序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component provides access to a process that is running on a computer.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件所提供的存取權執行的電腦的處理序。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A process, in the simplest terms, is a running app.</source>
          <target state="translated">處理程序，最簡單的說，是執行中應用程式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A thread is the basic unit to which the operating system allocates processor time.</source>
          <target state="translated">執行緒是作業系統會配置處理器時間的基本單位。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A thread can execute any part of the code of the process, including parts currently being executed by another thread.</source>
          <target state="translated">執行緒可以執行此程序，包括由另一個執行緒目前正在執行的組件的程式任何的碼部分。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is a useful tool for starting, stopping, controlling, and monitoring apps.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件是有用的工具，啟動、 停止、 控制和監視應用程式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>You can use the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component, to obtain a list of the processes that are running, or you can start a new process.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，以取得所執行的處理程序的清單，或者您可以啟動新的處理序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is used to access system processes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件用來存取系統處理序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>After a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component has been initialized, it can be used to obtain information about the running process.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件已經初始化，它可以用來取得執行中處理序的相關資訊。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Such information includes the set of threads, the loaded modules (.dll and .exe files), and performance information such as the amount of memory the process is using.</source>
          <target state="translated">這類資訊包括的執行緒，已載入的模組 （.dll 和.exe 檔案） 集，且使用效能資訊，例如處理程序的記憶體數量。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此類型會實作<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>32-bit processes cannot access the modules of a 64-bit process.</source>
          <target state="translated">32 位元處理序無法存取 64 位元處理序的模組。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If you try to get information about a 64-bit process from a 32-bit process, you will get a <ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception.</source>
          <target state="translated">如果您嘗試從 32 位元處理序取得 64 位元處理序的相關資訊，您會收到<ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A 64-bit process, on the other hand, can access the modules of a 32-bit process.</source>
          <target state="translated">相反地，64 位元處理程序，可以存取 32 位元處理序的模組。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The process component obtains information about a group of properties all at once.</source>
          <target state="translated">處理序元件會取得全部的屬性群組的相關資訊。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>After the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component has obtained information about one member of any group, it will cache the values for the other properties in that group and not obtain new information about the other members of the group until you call the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件已取得的任何群組的一個成員的相關資訊，它將會快取該群組中的其他屬性的值，並不取得新資訊的其他群組成員，直到您呼叫<ph id="ph2">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Therefore, a property value is not guaranteed to be any newer than the last call to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">因此，如果屬性值不保證能夠比上次呼叫任何新<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The group breakdowns are operating-system dependent.</source>
          <target state="translated">群組細項是作業系統相依。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到的任何處理序時完整限定該路徑。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">否則，系統將不到路徑。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">例如，如果<ph id="ph1">`c:\mypath`</ph>不在您的路徑，也新增使用引號： <ph id="ph2">`path = %path%;"c:\mypath"`</ph>，您必須完整限定在任何處理程序<ph id="ph3">`c:\mypath`</ph>時啟動它。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A system process is uniquely identified on the system by its process identifier.</source>
          <target state="translated">系統處理序是以唯一識別系統上處理序識別碼。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Like many Windows resources, a process is also identified by its handle, which might not be unique on the computer.</source>
          <target state="translated">如同許多 Windows 資源，也是由其控制代碼，可能不是唯一的電腦上識別處理程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A handle is the generic term for an identifier of a resource.</source>
          <target state="translated">控點是泛型的詞彙，資源的識別項。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The operating system persists the process handle, which is accessed through the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component, even when the process has exited.</source>
          <target state="translated">作業系統持續發生的處理序控制代碼，可從存取<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，即使在處理序已經結束。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Thus, you can get the process's administrative information, such as the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> (usually either zero for success or a nonzero error code) and the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>.</source>
          <target state="translated">因此，您可以取得處理序的系統管理資訊，例如<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>（通常是零的成功或為非零的錯誤程式碼） 和<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Handles are an extremely valuable resource, so leaking handles is more virulent than leaking memory.</source>
          <target state="translated">控制代碼是非常重要的資源，所以遺漏控制更 virulent 比流失記憶體。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">這個類別包含的連結要求和繼承要求套用到所有成員的類別層級。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>立即呼叫者或衍生的類別並沒有完全信任權限時，會擲回。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>.</source>
          <target state="translated">如需安全性需求的詳細資訊，請參閱<bpt id="p1">[</bpt>連結要求<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Notes</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> 附註</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class by default uses <ph id="ph2">&lt;xref:System.Console&gt;</ph> encodings, which are typically code page encodings, for the input, output, and error streams.</source>
          <target state="translated">在.NET Framework 中，<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>類別預設會使用<ph id="ph2">&lt;xref:System.Console&gt;</ph>編碼方式，通常是程式碼頁編碼方式，輸入、 輸出和錯誤資料流。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For example code, on systems whose culture is English (United States), code page 437 is the default encoding for the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class.</source>
          <target state="translated">如需範例程式碼，在系統上的文化特性是英文 （美國），字碼頁 437 則是預設編碼方式<ph id="ph1">&lt;xref:System.Console&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>However, <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> may make only a limited subset of these encodings available.</source>
          <target state="translated">不過，<ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>可能提供只這些編碼方式的有限的子集。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If this is the case, it uses <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> as the default encoding.</source>
          <target state="translated">如果這種情況，它會使用<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>做為預設編碼。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object depends on specific code page encodings, you can still make them available by doing the following <bpt id="p1">*</bpt>before<ept id="p1">*</ept> you call any <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> methods:</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>物件相依於特定字碼頁編碼方式，您仍然可以它們可執行下列步驟<bpt id="p1">*</bpt>之前<ept id="p1">*</ept>呼叫任何<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">System.Text.Encoding.CodePages.dll 組件的參考加入至您的專案。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Retrieve the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">擷取<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>物件從<ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the additional encodings supported by the encoding provider available.</source>
          <target state="translated">傳遞<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>物件<ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph>進行額外的編碼方式編碼的提供者支援的方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>類別然後將自動使用預設系統而不 UTF8 編碼方式，提供您已註冊編碼提供者，然後再呼叫任何<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The following example uses an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class to start a process.</source>
          <target state="translated">下列範例會使用的執行個體<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>啟動處理序的類別。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class itself and a static <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method to start a process.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>類別本身和靜態<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法來啟動處理序。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The following F# example defines a <ph id="ph1">`runProc`</ph> function that starts a process, captures all output and error information, and records the number of milliseconds that the process has run.</source>
          <target state="translated">下列的 F # 範例會定義<ph id="ph1">`runProc`</ph>啟動的處理序的函式會擷取所有輸出和錯誤的資訊，並記錄的程序執行的毫秒數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The <ph id="ph1">`runProc`</ph> function has three parameters: the name of application to launch, the arguments to supply to the application, and the starting directory.</source>
          <target state="translated"><ph id="ph1">`runProc`</ph>函式具有三個參數： 若要啟動，引數提供給應用程式，並起始目錄的應用程式的名稱。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The code for the <ph id="ph1">`runProc`</ph> function was written by <bpt id="p1">[</bpt>ImaginaryDevelopment<ept id="p1">](http://fssnip.net/authors/ImaginaryDevelopment)</ept> and is available under the <bpt id="p2">[</bpt>Microsoft Public License<ept id="p2">](https://opensource.org/licenses/ms-pl)</ept>.</source>
          <target state="translated">程式碼<ph id="ph1">`runProc`</ph>函式由寫入<bpt id="p1">[</bpt>ImaginaryDevelopment<ept id="p1">](http://fssnip.net/authors/ImaginaryDevelopment)</ept>和適用於<bpt id="p2">[</bpt>Microsoft Public License<ept id="p2">](https://opensource.org/licenses/ms-pl)</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">這個類別無法供部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>for full trust for inheritors.</source>
          <target state="translated">針對繼承者完全信任。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">這個類別無法被繼承，部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph> property, the default is the local computer, (".").</source>
          <target state="translated">如果您未指定<ph id="ph1">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph>屬性，預設值為本機電腦 ("。")。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>You have two options for associating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component with a process on the computer.</source>
          <target state="translated">您有兩種方式來建立新的關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件之電腦上的處理序。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>The first option is to use the constructor to create the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component, set the appropriate members of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property and call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to associate the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> with a new system process.</source>
          <target state="translated">第一個選項是使用建構函式來建立<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件設定的適當成員<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性並呼叫<ph id="ph3">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>關聯<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>與新的系統處理序。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>The second option is to associate the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> with a running system process by using <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> or one of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> return values.</source>
          <target state="translated">第二個選項會使<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>具有執行系統處理序使用<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>或其中一個<ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>傳回值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>If you use a <ph id="ph1">`static`</ph> overload of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method to start a new system process, the method creates a new <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component and associates it with the process.</source>
          <target state="translated">如果您使用<ph id="ph1">`static`</ph>多載<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法來啟動新的系統處理序，該方法會建立新<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>元件並將它與處理序相關聯。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> property is set to its default value, <ph id="ph2">`true`</ph>, you can start applications and documents in a way that is similar to using the <ph id="ph3">`Run`</ph> dialog box of the Windows <ph id="ph4">`Start`</ph> menu.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>屬性設為預設值， <ph id="ph2">`true`</ph>，您可以使用類似的方式啟動應用程式和文件<ph id="ph3">`Run`</ph>對話方塊中的 Windows <ph id="ph4">`Start`</ph>功能表。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">`false`</ph>, you can start only executables.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>是<ph id="ph2">`false`</ph>，您就可以開始只可執行檔。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>Any executable file that you can call from the command line can be started in one of two ways: by setting the appropriate members of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property and calling the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method with no parameters, or by passing the appropriate parameter to the <ph id="ph3">`static`</ph><ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> member.</source>
          <target state="translated">您可以從命令列呼叫任何可執行檔可以啟動兩種方式之一： 藉由設定的適當成員<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，並呼叫<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法使用任何參數，或藉由傳遞至適當的參數<ph id="ph3">`static`</ph> <ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>You can create a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component by using the constructor, one of the static <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> overloads, or any of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> methods.</source>
          <target state="translated">您可以建立<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件使用建構函式，其中一個靜態<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>多載，或任何<ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>After you have done so, you have a view into the associated process.</source>
          <target state="translated">這麼做之後，您必須讓您檢視相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>This is not a dynamic view that updates itself automatically when the process properties have changed in memory.</source>
          <target state="translated">這不會自動更新本身，當處理序屬性已變更在記憶體中的動態檢視。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>Instead, you must call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> for the component to update the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> property information in your application.</source>
          <target state="translated">相反地，您必須呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>更新元件<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>應用程式中的屬性資訊。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>Gets the base priority of the associated process.</source>
          <target state="translated">取得相關處理序的基礎優先權 (Base Priority)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The base priority, which is computed from the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> of the associated process.</source>
          <target state="translated">基礎優先權，它是從相關聯處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> 計算出來的。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> of the process is the starting priority for threads created within the associated process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>程序會建立相關聯的處理序中執行緒的起始優先順序。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>You can view information about the base priority through the System Monitor's Priority Base counter.</source>
          <target state="translated">您可以檢視透過系統監視器的優先權基底計數器的基礎優先權的相關資訊。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>Based on the time elapsed or other boosts, the operating system can change the base priority when a process should be placed ahead of others.</source>
          <target state="translated">根據 24 小時制或其他優先權的提高，作業系統可以變更的基底的優先順序，當處理程序應該放在其他人的前面的時間。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> property lets you view the starting priority assigned to a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>屬性可讓您檢視指派給處理程序的起始優先權。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>However, because it is read-only, you cannot use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> to set the priority of the process.</source>
          <target state="translated">不過，因為它是唯讀，您無法使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>設定程序的優先順序。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>To change the priority, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> property.</source>
          <target state="translated">若要變更優先順序，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> is viewable using the System Monitor, while the <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> is not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>就可以檢視，使用系統監視器 」，而<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>不是。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>Both the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> can be viewed programmatically.</source>
          <target state="translated">同時<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>可以透過程式設計方式檢視。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The following table shows the relationship between <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> values and <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> values.</source>
          <target state="translated">下表顯示之間的關聯性<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>值和<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>BasePriority</source>
          <target state="translated">BasePriority</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>PriorityClass</source>
          <target state="translated">PriorityClass</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>13</source>
          <target state="translated">13</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>24</source>
          <target state="translated">24</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The process has exited.</source>
          <target state="translated">處理序已經結束。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The process has not started, so there is no process ID.</source>
          <target state="translated">處理序尚未啟動，因此沒有處理序 ID。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Begins asynchronous read operations on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream of the application.</source>
          <target state="translated">在應用程式的重新導向 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流上開始非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>同步或非同步方式，就可以讀取資料流。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the error output stream of the process.</source>
          <target state="translated">這類方法<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>執行同步處理程序的錯誤輸出資料流上的讀取的作業。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">這些同步讀取作業不會完成直到相關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>寫入其<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>串流處理，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>開始非同步讀取作業上<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>This method enables the designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">這個方法可讓資料流輸出指定之的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出導向至事件處理常式。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Follow these steps to perform asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> :</source>
          <target state="translated">請遵循下列步驟來執行非同步的讀取的作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">請設定 <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> 為 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">請設定 <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt;</ph> 為 <ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Add your event handler to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event.</source>
          <target state="translated">加入事件處理常式<ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The event handler must match the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph> delegate signature.</source>
          <target state="translated">事件處理常式必須符合<ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph>委派簽章。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Start the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">啟動<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>This call starts asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>.</source>
          <target state="translated">此呼叫在開始非同步讀取的作業<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>When asynchronous read operations start, the event handler is called each time the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes a line of text to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">當非同步讀取的作業開始時，事件處理常式會呼叫每個時間相關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>將某行的文字寫入其<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>You can cancel an asynchronous read operation by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>.</source>
          <target state="translated">您可以藉由呼叫取消非同步讀取的作業<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The read operation can be canceled by the caller or by the event handler.</source>
          <target state="translated">讀取的作業可以取消由呼叫端事件處理常式。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>After canceling, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> again to resume asynchronous read operations.</source>
          <target state="translated">之後取消，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> 以繼續執行非同步的讀取的作業。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">您不能混用重新導向資料流的非同步和同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">一次重新導向資料流的<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>開啟在非同步或同步模式中，所有進一步讀取該資料流上的作業必須在相同的模式。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">例如，請勿遵循<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>上<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流，反之亦然。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">不過，您可以讀取在不同模式中的兩個不同資料流。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">例如，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>，然後呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The following example uses the <ph id="ph1">`net view`</ph> command to list the available network resources on a remote computer.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`net view`</ph>命令，列出在遠端電腦上的可用的網路資源。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The user supplies the target computer name as a command-line argument.</source>
          <target state="translated">使用者提供的目標電腦名稱做為命令列引數。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The user can also supply a file name for error output.</source>
          <target state="translated">使用者也可以提供錯誤輸出的檔案名稱。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The example collects the output of the net command, waits for the process to finish, and then writes the output results to the console.</source>
          <target state="translated">此範例會收集的 net 命令、 等候處理程序完成，然後再寫入至主控台的輸出結果的輸出。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>If the user supplies the optional error file, the example writes errors to the file.</source>
          <target state="translated">如果使用者提供選擇性的錯誤檔案，則此範例會將錯誤寫入檔案。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>An asynchronous read operation is already in progress on the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream.</source>
          <target state="translated">非同步讀取作業已在 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流上進行。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream has been used by a synchronous read operation.</source>
          <target state="translated">同步讀取作業已使用此 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Begins asynchronous read operations on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream of the application.</source>
          <target state="translated">在應用程式的重新導向 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流上開始非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>同步或非同步方式，就可以讀取資料流。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the output stream of the process.</source>
          <target state="translated">這類方法<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>執行程序的輸出資料流上的同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">這些同步讀取作業不會完成直到相關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>寫入其<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>串流處理，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>開始非同步讀取作業上<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">這個方法可讓資料流輸出的指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出導向至事件處理常式。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Follow these steps to perform asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> :</source>
          <target state="translated">請遵循下列步驟來執行非同步的讀取的作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">請設定 <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> 為 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">請設定 <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;</ph> 為 <ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Add your event handler to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">加入事件處理常式<ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The event handler must match the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph> delegate signature.</source>
          <target state="translated">事件處理常式必須符合<ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph>委派簽章。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Start the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">啟動<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>This call starts asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>.</source>
          <target state="translated">此呼叫在開始非同步讀取的作業<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>When asynchronous read operations start, the event handler is called each time the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes a line of text to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">當非同步讀取的作業開始時，事件處理常式會呼叫每個時間相關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>將某行的文字寫入其<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>You can cancel an asynchronous read operation by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>.</source>
          <target state="translated">您可以藉由呼叫取消非同步讀取的作業<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The read operation can be canceled by the caller or by the event handler.</source>
          <target state="translated">讀取的作業可以取消由呼叫端事件處理常式。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>After canceling, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> again to resume asynchronous read operations.</source>
          <target state="translated">之後取消，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> 以繼續執行非同步的讀取的作業。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">您不能混用重新導向資料流的非同步和同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">一次重新導向資料流的<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>開啟在非同步或同步模式中，所有進一步讀取該資料流上的作業必須在相同的模式。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">例如，請勿遵循<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>上<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流，反之亦然。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">不過，您可以讀取在不同模式中的兩個不同資料流。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">例如，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>，然後呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The following example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <ph id="ph2">`sort`</ph> command.</source>
          <target state="translated">下列範例說明如何執行非同步的讀取的作業上的重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流<ph id="ph2">`sort`</ph>命令。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">`sort`</ph> command is a console application that reads and sorts text input.</source>
          <target state="translated"><ph id="ph1">`sort`</ph>命令是主控台應用程式讀取及排序文字輸入。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The example creates an event delegate for the <ph id="ph1">`SortOutputHandler`</ph> event handler and associates it with the <ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">此範例會建立為事件委派<ph id="ph1">`SortOutputHandler`</ph>事件處理常式並將它與相關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and writes the text to the screen.</source>
          <target state="translated">此事件處理常式收到來自的重新導向的文字行<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流，格式化文字，並將文字寫入至螢幕。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>An asynchronous read operation is already in progress on the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream.</source>
          <target state="translated">非同步讀取作業已在 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流上進行。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream has been used by a synchronous read operation.</source>
          <target state="translated">同步讀取作業已使用此 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>Cancels the asynchronous read operation on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream of an application.</source>
          <target state="translated">在應用程式的重新導向 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流上取消非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> starts an asynchronous read operation on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> 開始非同步讀取作業<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph> ends the asynchronous read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph> 結束非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>After canceling, you can resume the asynchronous read operation by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> again.</source>
          <target state="translated">之後取消，您可以繼續非同步讀取的作業，藉由呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>一次。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>When you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>, all in-progress read operations for <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> are completed and then the event handler is disabled.</source>
          <target state="translated">當您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>，則所有進行中讀取作業<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>完成，則會停用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>All further redirected output to <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> is saved in a buffer.</source>
          <target state="translated">所有進一步重新導向輸出至<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>儲存在緩衝區。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If you re-enable the event handler with a call to <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>, the saved output is sent to the event handler and asynchronous read operations resume.</source>
          <target state="translated">如果您重新啟用事件處理常式呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>、 儲存的輸出會傳送至事件處理常式和非同步讀取的作業繼續執行。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If you want to change the event handler before resuming asynchronous read operations, you must remove the existing event handler before adding the new event handler:</source>
          <target state="translated">如果您想要變更的事件處理常式，繼續進行非同步讀取的作業之前，您必須移除現有的事件處理常式，然後再加入新的事件處理常式：</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>You cannot mix asynchronous and synchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">您不能混用非同步和同步讀取的作業的重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">一次重新導向資料流的<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>開啟在非同步或同步模式中，所有進一步讀取該資料流上的作業必須在相同的模式。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If you cancel an asynchronous read operation on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> and then need to read from the stream again, you must use <ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> to resume asynchronous read operations.</source>
          <target state="translated">如果您取消非同步讀取作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>，必須從資料流讀取一次，您必須使用<ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>繼續非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>Do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph> with a call to the synchronous read methods of <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> such as <ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>.</source>
          <target state="translated">請勿遵循<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>讀取並具有呼叫同步方法<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>例如<ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>The following example starts the <ph id="ph1">`nmake`</ph> command with user supplied arguments.</source>
          <target state="translated">下列範例會啟動<ph id="ph1">`nmake`</ph>命令與使用者提供的引數。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>The error and output streams are read asynchronously; the collected text lines are displayed to the console as well as written to a log file.</source>
          <target state="translated">錯誤和輸出資料流讀取以非同步的方式;收集的文字行所顯示到主控台，以及寫入記錄檔。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If the command output exceeds a specified number of lines, the asynchronous read operations are canceled.</source>
          <target state="translated">如果命令輸出超過指定的行數，則會取消非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream is not enabled for asynchronous read operations.</source>
          <target state="translated">未因非同步讀取作業之故開啟 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>Cancels the asynchronous read operation on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream of an application.</source>
          <target state="translated">在應用程式的重新導向 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流上取消非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> starts an asynchronous read operation on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> 開始非同步讀取作業<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph> ends the asynchronous read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph> 結束非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>After canceling, you can resume asynchronous read operations by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> again.</source>
          <target state="translated">之後取消，您可以繼續非同步讀取的作業，藉由呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>一次。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>When you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>, all in-progress read operations for <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> are completed and then the event handler is disabled.</source>
          <target state="translated">當您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>，則所有進行中讀取作業<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>完成，則會停用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>All further redirected output to <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> is saved in a buffer.</source>
          <target state="translated">所有進一步重新導向輸出至<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>儲存在緩衝區。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If you re-enable the event handler with a call to <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>, the saved output is sent to the event handler and asynchronous read operations resume.</source>
          <target state="translated">如果您重新啟用事件處理常式呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>、 儲存的輸出會傳送至事件處理常式和非同步讀取的作業繼續執行。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If you want to change the event handler before resuming asynchronous read operations, you must remove the existing event handler before adding the new event handler:</source>
          <target state="translated">如果您想要變更的事件處理常式，繼續進行非同步讀取的作業之前，您必須移除現有的事件處理常式，然後再加入新的事件處理常式：</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>You cannot mix asynchronous and synchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">您不能混用非同步和同步讀取的作業的重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">一次重新導向資料流的<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>開啟在非同步或同步模式中，所有進一步讀取該資料流上的作業必須在相同的模式。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If you cancel an asynchronous read operation on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> and then need to read from the stream again, you must use <ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> to resume asynchronous read operations.</source>
          <target state="translated">如果您取消非同步讀取作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>，必須從資料流讀取一次，您必須使用<ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>繼續非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>Do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph> with a call to the synchronous read methods of <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> such as <ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>.</source>
          <target state="translated">請勿遵循<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>讀取並具有呼叫同步方法<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>例如<ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>The following example starts the <ph id="ph1">`nmake`</ph> command with user supplied arguments.</source>
          <target state="translated">下列範例會啟動<ph id="ph1">`nmake`</ph>命令與使用者提供的引數。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>The error and output streams are read asynchronously; the collected text lines are displayed to the console as well as written to a log file.</source>
          <target state="translated">錯誤和輸出資料流讀取以非同步的方式;收集的文字行所顯示到主控台，以及寫入記錄檔。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If the command output exceeds a specified number of lines, the asynchronous read operations are canceled.</source>
          <target state="translated">如果命令輸出超過指定的行數，則會取消非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream is not enabled for asynchronous read operations.</source>
          <target state="translated">未因非同步讀取作業之故開啟 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Close">
          <source>Frees all the resources that are associated with this component.</source>
          <target state="translated">釋放與這個元件相關的所有資源。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> method causes the process to stop waiting for exit if it was waiting, closes the process handle, and clears process-specific properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>方法會導致處理程序停止等候結束等候它，如果關閉處理序控制代碼，並清除處理序專屬的屬性。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> does not close the standard output, input, and error readers and writers in case they are being referenced externally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> 不會關閉的標準輸出、 輸入和錯誤的讀取器和寫入器，如果它們要從外部參考。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Dispose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Dispose%2A&gt;</ph> 方法呼叫 <ph id="ph2">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>Placing the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object in a <ph id="ph2">`using`</ph> block disposes of resources without the need to call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>.</source>
          <target state="translated">放置<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>物件存放至<ph id="ph2">`using`</ph>區塊處置的資源，而不需要呼叫<ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>It then retrieves the physical memory usage of the associated process at 2-second intervals for a maximum of 10 seconds.</source>
          <target state="translated">然後，它會擷取相關聯的處理序的實體記憶體使用量在 2 秒間隔的最大值為 10 秒。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">此範例會偵測處理序結束之前經過 10 秒。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">如果它仍在執行 10 秒後，此範例會關閉處理序。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Closes a process that has a user interface by sending a close message to its main window.</source>
          <target state="translated">關閉有使用者介面的處理序，方法是傳送關閉訊息至其主視窗。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the close message was successfully sent; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the associated process does not have a main window or if the main window is disabled (for example if a modal dialog is being shown).</source>
          <target state="translated">如果已成功傳送關閉訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果相關聯處理序沒有主視窗或主視窗已停用 (例如，如果正在顯示強制回應對話方塊)，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>When a process is executing, its message loop is in a wait state.</source>
          <target state="translated">當執行程序時，其訊息迴圈會處於等候狀態。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">每次 Windows 訊息傳送至處理序的作業系統，則會執行訊息迴圈。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> sends a request to close to the main window, which, in a well-formed application, closes child windows and revokes all running message loops for the application.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>接近主要視窗中，且格式正確的應用程式中，在關閉子視窗，並撤銷應用程式的所有執行訊息迴圈傳送的要求。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The request to exit the process by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> does not force the application to quit.</source>
          <target state="translated">藉由呼叫結束程序要求<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>不會強制應用程式結束。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The application can ask for user verification before quitting, or it can refuse to quit.</source>
          <target state="translated">應用程式可以要求使用者驗證，才能結束，或它可以拒絕結束。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>To force the application to quit, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method.</source>
          <target state="translated">若要強制執行應用程式結束，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> is identical to that of a user closing an application's main window using the system menu.</source>
          <target state="translated">行為<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>等同於關閉應用程式的主視窗使用 [系統] 功能表的使用者。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Therefore, the request to exit the process by closing the main window does not force the application to quit immediately.</source>
          <target state="translated">因此，要求關閉主視窗結束處理程序不會強制立即結束應用程式。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Data edited by the process or resources allocated to the process can be lost if you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">編輯程序的資料或配置給處理序的資源可能會遺失如果您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> causes an abnormal process termination, and should be used only when necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 導致處理程序異常終止，並在必要時才應該使用。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> enables an orderly termination of the process and closes all windows, so it is preferable for applications with an interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> 啟用程序有條理地終止，並關閉所有視窗，因此最好有一個介面的應用程式。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> fails, you can use <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> to terminate the process.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>失敗，您可以使用<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>結束這個處理序。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> is the only way to terminate processes that do not have graphical interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 是終止處理序沒有圖形化介面的唯一方式。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> only for processes that are running on the local computer.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>只能供本機電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>You cannot cause processes on remote computers to exit.</source>
          <target state="translated">若要結束遠端電腦上，您無法讓處理程序。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>You can only view information for processes running on remote computers.</source>
          <target state="translated">您只能檢視遠端電腦上執行的處理序的資訊。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</source>
          <target state="translated">然後，它會擷取相關聯的處理序的實體記憶體使用量在 2 的第二個時間間隔，最多為 10 秒。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">此範例會偵測處理序結束之前經過 10 秒。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">如果它仍在執行 10 秒後，此範例會關閉處理序。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The process has already exited.</source>
          <target state="translated">處理程序已經結束。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>No process is associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Dispose(System.Boolean)">
          <source>Release all resources used by this process.</source>
          <target state="translated">釋放這個處理序使用的所有資源。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Gets or sets whether the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event should be raised when the process terminates.</source>
          <target state="translated">取得或設定是否應該在處理序終止時引發 <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event should be raised when the associated process is terminated (through either an exit or a call to <ph id="ph3">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph>); otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果應該在相關聯處理序終止時引發 <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> 事件 (經由結束或呼叫 <ph id="ph3">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph>)，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Note that the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event is raised even if the value of <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph> when the process exits during or before the user performs a <ph id="ph4">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> check.</source>
          <target state="translated">請注意，<ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph>引發即使值<ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /&gt;</ph>是<ph id="ph3">&lt;see langword="false" /&gt;</ph>於期間的處理序結束時，或使用者執行<ph id="ph4">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph>檢查。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property suggests whether the component should be notified when the operating system has shut down a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>屬性建議當作業系統已關閉處理序時，是否應該通知元件。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property is used in asynchronous processing to notify your application that a process has exited.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>屬性來處理非同步通知的處理序已結束您的應用程式。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>To force your application to synchronously wait for an exit event (which interrupts processing of the application until the exit event has occurred), use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method.</source>
          <target state="translated">若要強制同步等候結束事件 （會中斷應用程式的處理，直到結束事件發生） 的應用程式，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>If you're using Visual Studio and double-click a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component in your project, an <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event delegate and event handler are automatically generated.</source>
          <target state="translated">如果您使用 Visual Studio，並按兩下<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件在專案中，<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件委派和事件處理常式會自動產生。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Additional code sets the <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">其他的程式碼集<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>You must change this property to <ph id="ph1">`true`</ph> for your event handler to execute when the associated process exits.</source>
          <target state="translated">您必須變更此屬性為<ph id="ph1">`true`</ph>相關聯的處理序結束時，要執行事件處理常式。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>If the component's <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> value is <ph id="ph2">`true`</ph>, or when <ph id="ph3">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph4">`false`</ph> and a <ph id="ph5">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> check is invoked by the component, the component can access the administrative information for the associated process, which remains stored by the operating system.</source>
          <target state="translated">如果元件的<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>值是<ph id="ph2">`true`</ph>，或當<ph id="ph3">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>是<ph id="ph4">`false`</ph>和<ph id="ph5">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>核取叫用元件，元件可以存取的相關聯的處理序會保留的系統管理資訊儲存作業系統。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Such information includes the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>.</source>
          <target state="translated">這類資訊包括<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>After the associated process exits, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> of the component no longer points to an existing process resource.</source>
          <target state="translated">相關聯的處理序結束之後，<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>的元件不會再指向現有的處理序資源。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Instead, it can only be used to access the operating system's information about the process resource.</source>
          <target state="translated">相反地，它可以只可用來存取作業系統的處理序資源相關的資訊。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The operating system is aware that there are handles to exited processes that haven't been released by <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components, so it keeps the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> information in memory.</source>
          <target state="translated">作業系統是感知會結束處理程序尚未釋放的控制代碼<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，因此它會保存<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>記憶體中的資訊。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>There's a cost associated with watching for a process to exit.</source>
          <target state="translated">沒有相關聯的處理序結束監看的成本。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event is raised when the associated process terminates.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>相關聯的處理序終止時，就會引發事件。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Your procedures for the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event run at that time.</source>
          <target state="translated">您的程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件在那時候執行。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Sometimes, your application starts a process but doesn't require notification of its closure.</source>
          <target state="translated">有時候，您的應用程式啟動的處理序，但是不需要關閉的通知。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>For example, your application can start Notepad to allow the user to perform text editing but make no further use of the Notepad application.</source>
          <target state="translated">例如，您的應用程式可以啟動 [記事本] 來允許使用者執行文字編輯，但沒有進一步地使用 「 記事本 」 應用程式。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>You can choose to avoid notification when the process exits because it's not relevant to the continued operation of your application.</source>
          <target state="translated">您可以選擇避免處理序結束，因為它不是適用於您的應用程式繼續作業的通知。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> to <ph id="ph2">`false`</ph> can save system resources.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>至<ph id="ph2">`false`</ph>可以節省系統資源。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The following code example creates a process that prints a file.</source>
          <target state="translated">下列程式碼範例會建立會列印檔案的處理序。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>It sets the <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property to cause the process to raise the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event when it exits.</source>
          <target state="translated">它會設定<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>屬性，讓處理程序引發<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>在結束時的事件。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event handler displays process information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件處理常式會顯示處理程序資訊。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Puts a <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component in state to interact with operating system processes that run in a special mode by enabling the native property <ph id="ph2">&lt;see langword="SeDebugPrivilege" /&gt;</ph> on the current thread.</source>
          <target state="translated">啟用目前執行緒上的原生屬性 <ph id="ph2">&lt;see langword="SeDebugPrivilege" /&gt;</ph>，將 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件置於某種狀態，以便與使用特殊模式執行的作業系統處理序互動。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Some operating system processes run in a special mode.</source>
          <target state="translated">某些作業系統處理程序執行中使用特殊模式。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Attempting to read properties of or attach to these processes is not possible unless you have called <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph> on the component.</source>
          <target state="translated">嘗試讀取的屬性，或附加至這些處理序不能除非您已經呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph>元件上。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph> when you no longer need access to these processes that run in special mode.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph>當您不再需要存取特殊模式執行這些程序。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>Occurs when an application writes to its redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream.</source>
          <target state="translated">發生於應用程式寫入至其重新導向的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流時。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event indicates that the associated process has written to its redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>事件表示相關聯的處理序已寫入至其重新導向<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The event only occurs during asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>.</source>
          <target state="translated">事件只發生在非同步讀取作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>To start asynchronous read operations, you must redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream of a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>, add your event handler to the <ph id="ph3">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event, and call <ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>.</source>
          <target state="translated">若要開始非同步讀取的作業，您必須重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>，新增您的事件處理常式來<ph id="ph3">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>事件和呼叫<ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>Thereafter, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event signals each time the process writes a line to the redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, until the process exits or calls <ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>.</source>
          <target state="translated">此後，<ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>事件訊號處理程序將某行寫入至重新導向每次<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>串流處理，直到處理程序會結束或呼叫<ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The application that is processing the asynchronous output should call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> method to ensure that the output buffer has been flushed.</source>
          <target state="translated">正在處理的非同步輸出的應用程式應該呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>方法，以確保已清除輸出緩衝區。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>Note that specifying a timeout by using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit(System.Int32)&gt;</ph> overload does <bpt id="p1">*</bpt>not<ept id="p1">*</ept> ensure the output buffer has been flushed.</source>
          <target state="translated">請注意，使用該指定逾時<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit(System.Int32)&gt;</ph>多載沒有<bpt id="p1">*</bpt>不<ept id="p1">*</ept>確保已清除輸出緩衝區。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The following example uses the <ph id="ph1">`net view`</ph> command to list the available network resources on a remote computer.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`net view`</ph>命令，列出在遠端電腦上的可用的網路資源。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The user supplies the target computer name as a command-line argument.</source>
          <target state="translated">使用者提供的目標電腦名稱做為命令列引數。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The user can also supply a file name for error output.</source>
          <target state="translated">使用者也可以提供錯誤輸出的檔案名稱。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The example collects the output of the net command, waits for the process to finish, and then writes the output results to the console.</source>
          <target state="translated">此範例會收集的 net 命令、 等候處理程序完成，然後再寫入至主控台的輸出結果的輸出。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>If the user supplies the optional error file, the example writes errors to the file.</source>
          <target state="translated">如果使用者提供選擇性的錯誤檔案，則此範例會將錯誤寫入檔案。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Gets the value that the associated process specified when it terminated.</source>
          <target state="translated">取得相關處理序終止時指定的值。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The code that the associated process specified when it terminated.</source>
          <target state="translated">相關處理序終止時指定的程式碼。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> to get the status that the system process returned when it exited.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>來取得系統處理序傳回其結束時的狀態。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>You can use the exit code much like an integer return value from a <ph id="ph1">`main()`</ph> procedure.</source>
          <target state="translated">您可以使用結束程式碼更像整數傳回的值從<ph id="ph1">`main()`</ph>程序。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> value for a process reflects the specific convention implemented by the application developer for that process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>處理程序會反映該處理程序的應用程式開發人員所實作的特定慣例的值。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process.</source>
          <target state="translated">如果您決定您的程式碼中使用的結束代碼值，請確定您知道應用程式處理序所使用的結束代碼慣例。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Developers usually indicate a successful exit by an <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> value of zero, and designate errors by nonzero values that the calling method can use to identify the cause of an abnormal process termination.</source>
          <target state="translated">開發人員通常會表示成功的結束<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>值零，而指定的錯誤則為非零值呼叫的方法可以用來識別處理程序異常終止的原因。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>It is not necessary to follow these guidelines, but they are the convention.</source>
          <target state="translated">不需要遵循下列指導方針，但它們是慣例。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>If you try to get the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> before the process has exited, the attempt throws an exception.</source>
          <target state="translated">如果您嘗試取得<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>處理序已經結束之前，嘗試就會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Examine the <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property first to verify whether the associated process has terminated.</source>
          <target state="translated">檢查<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性第一次，確認是否已終止相關的處理序。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">當非同步事件處理常式已經重新導向標準輸出時，您就可以確認輸出處理尚未完成時<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>To ensure that asynchronous event handling has been completed, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload that takes no parameter before checking <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>.</source>
          <target state="translated">若要確保非同步事件處理已完成，請呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>檢查之前會採用任何參數的多載<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>You can use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method to cause an associated process to exit.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>方法，讓相關聯的處理序結束。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>There are two ways of being notified when the associated process exits: synchronously and asynchronously.</source>
          <target state="translated">有兩種方式的相關聯的處理序結束時通知： 同步和非同步方式。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Synchronous notification relies on calling the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to pause the processing of your application until the associated component exits.</source>
          <target state="translated">同步通知依賴呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>方法，以暫停您的應用程式的處理，直到結束相關聯的元件。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Asynchronous notification relies on the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated">非同步通知依賴<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>When using asynchronous notification, <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component to receive notification that the process has exited.</source>
          <target state="translated">當使用非同步通知，<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>必須設為<ph id="ph2">`true`</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>元件來接收通知的處理序已結束。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The process has not exited.</source>
          <target state="translated">遠端處理序尚未結束。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> is not valid.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Process.Exited">
          <source>Occurs when a process exits.</source>
          <target state="translated">發生於處理序結束時。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event indicates that the associated process exited.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件表示相關聯的處理序已結束。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>This occurrence means either that the process terminated (aborted) or successfully closed.</source>
          <target state="translated">此項目表示處理程序結束 （中止） 或成功關閉。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>This event can occur only if the value of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">只有當，可能會發生此事件的值<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>屬性是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>There are two ways of being notified when the associated process exits: synchronously and asynchronously.</source>
          <target state="translated">有兩種方式的相關聯的處理序結束時通知： 同步和非同步方式。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Synchronous notification means calling the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to block the current thread until the process exits.</source>
          <target state="translated">同步通知表示呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>方法來封鎖目前的執行緒，直到結束處理程序。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Asynchronous notification uses the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event, which allows the calling thread to continue execution in the meantime.</source>
          <target state="translated">使用非同步通知<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件，可讓呼叫執行緒能夠繼續在同時執行。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>In the latter case, <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the calling application to receive the Exited event.</source>
          <target state="translated">在後者的情況下，<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>必須設為<ph id="ph2">`true`</ph>呼叫的應用程式接收訊號事件。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>When the operating system shuts down a process, it notifies all other processes that have registered handlers for the Exited event.</source>
          <target state="translated">當作業系統關機程序時，它會通知所有已註冊的 Exited 事件處理常式的其他處理序。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>At this time, the handle of the process that just exited can be used to access some properties such as  <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> that the operating system maintains until it releases that handle completely.</source>
          <target state="translated">在這個階段中，只要結束處理序控制代碼可用來存取某些屬性，例如<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>作業系統會維護，直到它完全解除該控制代碼。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Even if you have a handle to an exited process, you cannot call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> again to reconnect to the same process.</source>
          <target state="translated">即使您擁有已結束的處理序控制代碼時，您不能呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>，重新連線至相同的處理序。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> automatically releases the associated process and connects to a process with the same file but an entirely new <ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>自動釋出相關的處理序，並連接到處理程序相同的檔案，但全新<ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>For more information about the use of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event in Windows Forms applications, see the <ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> property.</source>
          <target state="translated">如需有關使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件在 Windows Forms 應用程式，請參閱<ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>The following code example creates a process that prints a file.</source>
          <target state="translated">下列程式碼範例會建立會列印檔案的處理序。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>It raises the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event when the process exits because the <ph id="ph2">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property was set when the process was created.</source>
          <target state="translated">它會引發<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件的處理序結束，因為<ph id="ph2">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>建立處理程序時，已設定屬性。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event handler displays process information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件處理常式會顯示處理程序資訊。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>Gets the time that the associated process exited.</source>
          <target state="translated">取得相關的處理序結束的時間。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that indicates when the associated process was terminated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>，表示相關聯處理序何時終止。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>If the process has not terminated, attempting to retrieve the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">如果還沒有終止處理程序，嘗試擷取<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>屬性會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> before getting the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> property to determine whether the associated process has terminated.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>再取得<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>屬性來判斷是否已終止相關的處理序。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>The following code example creates a process that prints a file.</source>
          <target state="translated">下列程式碼範例會建立會列印檔案的處理序。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>The process raises the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event when it exits, and the event handler displays the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> property and other process information.</source>
          <target state="translated">處理序引發<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>時結束為止，事件和事件處理常式顯示<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>屬性和其他處理資訊。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitTime" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component and associates it with the currently active process.</source>
          <target state="translated">取得新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，並將其與目前現用處理序相關聯。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component associated with the process resource that is running the calling application.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，與正在執行呼叫應用程式的處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>Use this method to create a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance and associate it with the process resource on the local computer.</source>
          <target state="translated">使用這個方法來建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，並將它與本機電腦上的處理序資源關聯。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>Like the similar <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> methods, <ph id="ph4">&lt;xref:System.Diagnostics.Process.GetCurrentProcess%2A&gt;</ph> associates an existing resource with a new <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">例如，類似<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Diagnostics.Process.GetCurrentProcess%2A&gt;</ph>將現有的資源與新<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component, and associates it with the existing process resource that you specify.</source>
          <target state="translated">建立新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，並將其與您指定的現有處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The system-unique identifier of a process resource.</source>
          <target state="translated">處理序資源的系統唯一識別項。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component, given the identifier of a process on the local computer.</source>
          <target state="translated">傳回新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，需指定本機電腦上的處理序識別項。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component that is associated with the local process resource identified by the <ph id="ph2">&lt;paramref name="processId" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，與 <ph id="ph2">&lt;paramref name="processId" /&gt;</ph> 參數所識別的本機處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>Use this method to create a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component and associate it with a process resource on the local computer.</source>
          <target state="translated">使用這個方法來建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件並將它與本機電腦上的處理序資源關聯。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process resource must already exist on the computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> does not create a system resource, but rather associates a resource with an application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">處理序資源必須已經存在的電腦上，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph>並不會建立系統資源，但而不是關聯應用程式所產生的資源<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>A process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> can be retrieved only for a process that is currently running on the computer.</source>
          <target state="translated">處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>可以擷取只會針對目前在電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>After the process terminates, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> throws an exception if you pass it an expired identifier.</source>
          <target state="translated">在處理序終止之後，<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph>擲回例外狀況，如果您傳遞給它過期的識別項。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>On any particular computer, the identifier of a process is unique.</source>
          <target state="translated">在任何特定電腦上的處理程序的識別項是唯一的。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> returns one process at most.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> 最多會傳回其中一個處理序。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>If you want to get all the processes running a particular application, use <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>.</source>
          <target state="translated">如果您想要取得執行特定應用程式使用的所有處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>If multiple processes exist on the computer running the specified application, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">如果執行指定的應用程式的電腦上存在多個處理序<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>傳回陣列，其中包含所有相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>You can query each of these processes in turn for its identifier.</source>
          <target state="translated">您可以查詢每個這些處理序的識別碼。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process identifier can be viewed in the <ph id="ph1">`Processes`</ph> panel of the Windows Task Manager.</source>
          <target state="translated">可以在檢視的處理序識別碼<ph id="ph1">`Processes`</ph>面板的 Windows 工作管理員。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The <ph id="ph1">`PID`</ph> column displays the process identifier that is assigned to a process.</source>
          <target state="translated"><ph id="ph1">`PID`</ph>資料行會顯示指派給處理程序的處理序識別碼。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process specified by the <ph id="ph1">&lt;paramref name="processId" /&gt;</ph> parameter is not running.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="processId" /&gt;</ph> 參數指定的處理序未執行。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The identifier might be expired.</source>
          <target state="translated">識別碼可能過期。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process was not started by this object.</source>
          <target state="translated">這個物件未啟動處理序。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The system-unique identifier of a process resource.</source>
          <target state="translated">處理序資源的系統唯一識別項。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The name of a computer on the network.</source>
          <target state="translated">網路上的電腦名稱。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component, given a process identifier and the name of a computer on the network.</source>
          <target state="translated">傳回新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，需指定網路上電腦的處理序識別項和名稱。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component that is associated with a remote process resource identified by the <ph id="ph2">&lt;paramref name="processId" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件，與 <ph id="ph2">&lt;paramref name="processId" /&gt;</ph> 參數所識別的遠端處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>Use this method to create a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component and associate it with a process resource on a remote computer on the network.</source>
          <target state="translated">使用這個方法來建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件並將它與網路上的遠端電腦上的處理序資源關聯。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process resource must already exist on the specified computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> does not create a system resource, but rather associates a resource with an application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">處理序資源必須已經存在於指定的電腦，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph>並不會建立系統資源，但而不是關聯應用程式所產生的資源<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>A process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> can be retrieved only for a process that is currently running on the computer.</source>
          <target state="translated">處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>可以擷取只會針對目前在電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>After the process terminates, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> throws an exception if you pass it an expired identifier.</source>
          <target state="translated">在處理序終止之後，<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph>擲回例外狀況，如果您傳遞給它過期的識別項。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>On any particular computer, the identifier of a process is unique.</source>
          <target state="translated">在任何特定電腦上的處理程序的識別項是唯一的。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> returns one process at most.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> 最多會傳回其中一個處理序。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>If you want to get all the processes running a particular application, use <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>.</source>
          <target state="translated">如果您想要取得執行特定應用程式使用的所有處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>If multiple processes exist on the computer running the specified application, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">如果執行指定的應用程式的電腦上存在多個處理序<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>傳回陣列，其中包含所有相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>You can query each of these processes in turn for its identifier.</source>
          <target state="translated">您可以查詢每個這些處理序的識別碼。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process identifier can be viewed in the <ph id="ph1">`Processes`</ph> panel of the Windows Task Manager.</source>
          <target state="translated">可以在檢視的處理序識別碼<ph id="ph1">`Processes`</ph>面板的 Windows 工作管理員。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The <ph id="ph1">`PID`</ph> column displays the process identifier that is assigned to a process.</source>
          <target state="translated"><ph id="ph1">`PID`</ph>資料行會顯示指派給處理程序的處理序識別碼。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>If you do not specify a <ph id="ph1">`machineName`</ph>, the local computer is used.</source>
          <target state="translated">如果您未指定<ph id="ph1">`machineName`</ph>，會使用本機電腦。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>Alternatively, you can specify the local computer by setting <ph id="ph1">`machineName`</ph> to the value "." or to an empty string ("").</source>
          <target state="translated">或者，您可以指定本機電腦，藉由設定<ph id="ph1">`machineName`</ph>值 」。 「 或為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process specified by the <ph id="ph1">&lt;paramref name="processId" /&gt;</ph> parameter is not running.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="processId" /&gt;</ph> 參數指定的處理序未執行。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The identifier might be expired.</source>
          <target state="translated">識別項可能過期。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter syntax is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 參數的語法無效。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The name might have length zero (0).</source>
          <target state="translated">其長度有可能為零 (0)。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process was not started by this object.</source>
          <target state="translated">這個物件未啟動處理序。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with existing process resources.</source>
          <target state="translated">建立新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件的陣列，並將其與現有的處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component for each process resource on the local computer.</source>
          <target state="translated">為本機電腦上的每個處理序資源建立新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents all the process resources running on the local computer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 類型的陣列，代表正在本機電腦上執行的所有處理序資源。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources on the local computer.</source>
          <target state="translated">使用這個方法來建立新的陣列<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，並與本機電腦上的所有處理序資源建立關聯。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>The process resources must already exist on the local computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> does not create system resources but rather associates resources with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">處理序資源必須已經存在於本機電腦，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>並不會建立系統資源，但而是將資源與應用程式產生相關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Because the operating system itself is running background processes, this array is never empty.</source>
          <target state="translated">因為作業系統本身已執行背景處理程序，這個陣列絕不會是空的。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>If you do not want to retrieve all the processes running on the computer, you can restrict their number by using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> method.</source>
          <target state="translated">如果不想擷取所有的電腦上執行的處理程序，您可以使用來限制其數目<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component that is associated with the process identified on the system by the process identifier that you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> 建立<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>與傳遞至方法的處理序識別碼所識別的系統上的處理序相關聯的元件。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> creates an array of <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components whose associated process resources share the executable file you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 建立的陣列<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>傳遞至方法的元件，其相關聯的處理序資源共用的可執行檔。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Multiple Windows services can be loaded within the same instance of the Service Host process (svchost.exe).</source>
          <target state="translated">可以載入多個 Windows 服務，服務主機處理序 (svchost.exe) 相同的執行個體內。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>GetProcesses does not identify those individual services; for that, see <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>.</source>
          <target state="translated">GetProcesses 不會識別這些個別的服務。因此，請參閱<ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The computer from which to read the list of processes.</source>
          <target state="translated">要讀取處理序清單的電腦。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component for each process resource on the specified computer.</source>
          <target state="translated">為指定電腦上的每個處理序資源建立新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents all the process resources running on the specified computer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 類型的陣列，代表正在指定的電腦上執行的所有處理序資源。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources on the specified (usually remote) computer.</source>
          <target state="translated">使用這個方法來建立新的陣列<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，並與指定的 （通常是遠端） 電腦上的所有處理序資源建立關聯。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The process resources must already exist on the local computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> does not create system resources but rather associates resources with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">處理序資源必須已經存在於本機電腦，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>並不會建立系統資源，但而是將資源與應用程式產生相關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Because the operating system itself is running background processes, this array is never empty.</source>
          <target state="translated">因為作業系統本身已執行背景處理程序，這個陣列絕不會是空的。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>If you do not want to retrieve all the processes running on the computer, you can restrict their number by using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> method.</source>
          <target state="translated">如果不想擷取所有的電腦上執行的處理程序，您可以使用來限制其數目<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component that is associated with the process identified on the system by the process identifier that you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> 建立<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>與傳遞至方法的處理序識別碼所識別的系統上的處理序相關聯的元件。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> creates an array of <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components whose associated process resources share the executable file you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 建立的陣列<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>傳遞至方法的元件，其相關聯的處理序資源共用的可執行檔。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> method is generally used to retrieve the list of process resources running on a remote computer on the network, but you can specify the local computer by passing ".".</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>方法通常用來擷取在網路上，在遠端電腦上執行的處理序資源的清單，但是您可以指定本機電腦，藉由傳遞 」。 」。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Multiple Windows services can be loaded within the same instance of the Service Host process (svchost.exe).</source>
          <target state="translated">可以載入多個 Windows 服務，服務主機處理序 (svchost.exe) 相同的執行個體內。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>GetProcesses does not identify those individual services; for that, see <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>.</source>
          <target state="translated">GetProcesses 不會識別這些個別的服務。因此，請參閱<ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter syntax is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 參數的語法無效。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>It might have length zero (0).</source>
          <target state="translated">其長度有可能為零 (0)。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The operating system platform does not support this operation on remote computers.</source>
          <target state="translated">作業系統平台不支援遠端電腦上的這項作業。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>There are problems accessing the performance counter API's used to get process information.</source>
          <target state="translated">存取 API 用來取得處理序資訊的效能計數器時發生問題。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>This exception is specific to Windows NT, Windows 2000, and Windows XP.</source>
          <target state="translated">此為 Windows NT、Windows 2000 和 Windows XP 的特有例外狀況。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>A problem occurred accessing an underlying system API.</source>
          <target state="translated">存取基礎系統 API 時發生問題。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with the existing process resources that all share the specified process name.</source>
          <target state="translated">建立新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件的陣列，並將其與所有共用指定處理序名稱的現有處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The friendly name of the process.</source>
          <target state="translated">處理序的易記名稱。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with all the process resources on the local computer that share the specified process name.</source>
          <target state="translated">建立新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件的陣列，並將其與本機電腦上共用指定處理序名稱的所有處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents the process resources running the specified application or file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 類型的陣列，代表正在執行指定的應用程式或檔案的處理序資源。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources that are running the same executable file on the local computer.</source>
          <target state="translated">使用這個方法來建立新的陣列<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，並與相同的可執行檔在本機電腦上執行的所有處理序資源建立關聯。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The process resources must already exist on the computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> does not create system resources but rather associates them with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">處理序資源必須已經存在的電腦上，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>並不會建立系統資源，但而是將其與應用程式產生聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>A <ph id="ph1">`processName`</ph> can be specified for an executable file that is not currently running on the local computer, so the array the method returns can be empty.</source>
          <target state="translated">A<ph id="ph1">`processName`</ph>可以指定可執行檔不目前正在執行的本機電腦上，讓該方法會傳回的陣列可以是空的。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The process name is a friendly name for the process, such as Outlook, that does not include the .exe extension or the path.</source>
          <target state="translated">處理序名稱是此程序，例如 Outlook、 不包含副檔名為.exe 或路徑的好記名稱。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> is helpful for getting and manipulating all the processes that are associated with the same executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 可協助取得和管理相同的可執行檔相關聯的所有處理序。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>For example, you can pass an executable file name as the <ph id="ph1">`processName`</ph> parameter, in order to shut down all the running instances of that executable file.</source>
          <target state="translated">例如，您可以傳遞做為可執行檔名稱<ph id="ph1">`processName`</ph>參數，以便關閉該可執行檔的所有執行的執行個體。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Although a process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> is unique to a single process resource on the system, multiple processes on the local computer can be running the application specified by the <ph id="ph2">`processName`</ph> parameter.</source>
          <target state="translated">雖然程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>是唯一的系統上的單一處理序資源，在本機電腦上的多個處理序可以執行指定的應用程式<ph id="ph2">`processName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> returns one process at most, but <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>最多會傳回其中一個處理序，但<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>傳回陣列，其中包含所有相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>If you need to manipulate the process using standard API calls, you can query each of these processes in turn for its identifier.</source>
          <target state="translated">如果您需要管理處理序使用標準的應用程式開發介面呼叫，您可以查詢每個這些處理序的識別碼。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>You cannot access process resources through the process name alone but, once you have retrieved an array of <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components that have been associated with the process resources, you can start, terminate, and otherwise manipulate the system resources.</source>
          <target state="translated">您無法存取處理序資源，透過單獨處理序名稱，但是，一旦您已擷取的陣列<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>相關聯的元件與處理序資源，開始、 結束及操作的系統資源。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>There are problems accessing the performance counter API's used to get process information.</source>
          <target state="translated">存取 API 用來取得處理序資訊的效能計數器時發生問題。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>This exception is specific to Windows NT, Windows 2000, and Windows XP.</source>
          <target state="translated">此為 Windows NT、Windows 2000 和 Windows XP 的特有例外狀況。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The friendly name of the process.</source>
          <target state="translated">處理序的易記名稱。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The name of a computer on the network.</source>
          <target state="translated">網路上的電腦名稱。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with all the process resources on a remote computer that share the specified process name.</source>
          <target state="translated">建立新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件的陣列，並將其與遠端電腦上共用指定處理序名稱的所有處理序資源相關聯。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents the process resources running the specified application or file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 類型的陣列，代表正在執行指定的應用程式或檔案的處理序資源。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources that are running the same executable file on the specified computer.</source>
          <target state="translated">使用這個方法來建立新的陣列<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，並與相同的可執行檔指定的電腦上執行的所有處理序資源建立關聯。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The process resources must already exist on the computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> does not create system resources but rather associates them with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">處理序資源必須已經存在的電腦上，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>並不會建立系統資源，但而是將其與應用程式產生聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>A <ph id="ph1">`processName`</ph> can be specified for an executable file that is not currently running on the local computer, so the array the method returns can be empty.</source>
          <target state="translated">A<ph id="ph1">`processName`</ph>可以指定可執行檔不目前正在執行的本機電腦上，讓該方法會傳回的陣列可以是空的。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The process name is a friendly name for the process, such as Outlook, that does not include the .exe extension or the path.</source>
          <target state="translated">處理序名稱是此程序，例如 Outlook、 不包含副檔名為.exe 或路徑的好記名稱。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> is helpful for getting and manipulating all the processes that are associated with the same executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 可協助取得和管理相同的可執行檔相關聯的所有處理序。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>For example, you can pass an executable file name as the <ph id="ph1">`processName`</ph> parameter, in order to shut down all the running instances of that executable file.</source>
          <target state="translated">例如，您可以傳遞做為可執行檔名稱<ph id="ph1">`processName`</ph>參數，以便關閉該可執行檔的所有執行的執行個體。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Although a process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> is unique to a single process resource on the system, multiple processes on the local computer can be running the application specified by the <ph id="ph2">`processName`</ph> parameter.</source>
          <target state="translated">雖然程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>是唯一的系統上的單一處理序資源，在本機電腦上的多個處理序可以執行指定的應用程式<ph id="ph2">`processName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> returns one process at most, but <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>最多會傳回其中一個處理序，但<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>傳回陣列，其中包含所有相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>If you need to manipulate the process using standard API calls, you can query each of these processes in turn for its identifier.</source>
          <target state="translated">如果您需要管理處理序使用標準的應用程式開發介面呼叫，您可以查詢每個這些處理序的識別碼。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You cannot access process resources through the process name alone but, once you have retrieved an array of <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components that have been associated with the process resources, you can start, terminate, and otherwise manipulate the system resources.</source>
          <target state="translated">您無法存取處理序資源，透過單獨處理序名稱，但是，一旦您已擷取的陣列<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>相關聯的元件與處理序資源，開始、 結束及操作的系統資源。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You can use this overload to get processes on the local computer as well as on a remote computer.</source>
          <target state="translated">取得處理程序，在本機電腦上以及遠端電腦上，您可以使用這個多載。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Use "." to specify the local computer.</source>
          <target state="translated">使用 」。 「 若要指定本機電腦。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Another overload exists that uses the local computer by default.</source>
          <target state="translated">另一個多載存在預設使用本機電腦。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You can access processes on remote computers only to view information, such as statistics, about the processes.</source>
          <target state="translated">您可以存取遠端電腦上只檢視處理序的相關資訊，例如統計資料、 處理序。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You cannot close, terminate (using <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>), or start processes on remote computers.</source>
          <target state="translated">您無法關閉，終止 (使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>)，或在遠端電腦上啟動處理程序。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">下列範例會擷取目前的處理序的資訊在本機電腦，[記事本] 在本機電腦和本機電腦上的特定處理序上執行的所有執行個體上執行的處理序。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">然後，它會擷取相同的程序的遠端電腦上的資訊。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter syntax is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 參數的語法無效。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>It might have length zero (0).</source>
          <target state="translated">其長度有可能為零 (0)。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The operating system platform does not support this operation on remote computers.</source>
          <target state="translated">作業系統平台不支援遠端電腦上的這項作業。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>There are problems accessing the performance counter API's used to get process information.</source>
          <target state="translated">存取 API 用來取得處理序資訊的效能計數器時發生問題。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>This exception is specific to Windows NT, Windows 2000, and Windows XP.</source>
          <target state="translated">此為 Windows NT、Windows 2000 和 Windows XP 的特有例外狀況。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>A problem occurred accessing an underlying system API.</source>
          <target state="translated">存取基礎系統 API 時發生問題。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>to call unmanaged code.</source>
          <target state="translated">呼叫 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>Gets the native handle of the associated process.</source>
          <target state="translated">取得相關處理序的原生控制代碼。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>The handle that the operating system assigned to the associated process when the process was started.</source>
          <target state="translated">處理序啟動時，作業系統指派給相關處理序的控制代碼。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>The system uses this handle to keep track of process attributes.</source>
          <target state="translated">系統會用這個控制代碼追蹤處理序屬性。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>An application can obtain a handle to a process that can be used as a parameter to many process-information and control functions.</source>
          <target state="translated">應用程式可以取得可用來做為許多的處理程序資訊及控制函數參數的程序的控制代碼。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>You can use this handle to initialize a <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> or to call native methods with platform invoke.</source>
          <target state="translated">您可以使用此控制代碼初始化<ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph>或呼叫與平台的原生方法叫用。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>This process handle is private to an application--in other words, process handles cannot be shared.</source>
          <target state="translated">此處理序控制代碼是私用應用程式--也就是說，不能共用控制代碼的程序。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>A process also has a process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> which, unlike the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>, is unique and, therefore, valid throughout the system.</source>
          <target state="translated">處理程序也有程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>其不同的是<ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>，是唯一的因此，在整個系統有效。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>Only processes started through a call to <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> set the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the corresponding <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> instances.</source>
          <target state="translated">只有處理序啟動透過呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>設定<ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>對應<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>The process has not been started or has exited.</source>
          <target state="translated">處理序尚未啟動或已結束。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> property cannot be read because there is no process associated with this <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance.</source>
          <target state="translated">無法讀取 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> 屬性，因為沒有與此 <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 執行個體相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance has been attached to a running process but you do not have the necessary permissions to get a handle with full access rights.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 執行個體已附加至執行中的處理序，但沒有取得具有完整存取權限之控制代碼的必要權限。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HandleCount">
          <source>Gets the number of handles opened by the process.</source>
          <target state="translated">取得處理序開啟的控制代碼數目。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>The number of operating system handles the process has opened.</source>
          <target state="translated">處理序已開啟的作業系統控制代碼數目。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>Handles provide a way for a process to refer to objects.</source>
          <target state="translated">控制代碼為提供的方式來參考物件的處理序。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>A process can obtain handles to files, resources, message queues, and many other operating system objects.</source>
          <target state="translated">處理程序可以取得檔案、 資源、 訊息佇列和許多其他作業系統物件的控制代碼。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>The operating system reclaims the memory associated with the process only when the handle count is zero.</source>
          <target state="translated">作業系統會回收控制代碼計數為零時，才與處理序相關聯的記憶體。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HandleCount">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>Gets a value indicating whether the associated process has been terminated.</source>
          <target state="translated">取得值，指出相關的處理序是否已經終止。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operating system process referenced by the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component has terminated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件所參考的作業系統處理序已終止，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>A value of <ph id="ph1">`true`</ph> for <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> indicates that the associated process has terminated, either normally or abnormally.</source>
          <target state="translated">值為<ph id="ph1">`true`</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>指出相關聯的處理序已結束，正常或不正常。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>You can request or force the associated process to exit by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">您可以要求或強制結束藉由呼叫相關聯的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>If a handle is open to the process, the operating system releases the process memory when the process has exited, but retains administrative information about the process, such as the handle, exit code, and exit time.</source>
          <target state="translated">如果已開啟處理序的控制代碼，作業系統會釋放處理程序記憶體時的處理序已結束，但會保留系統管理處理程序控制代碼，結束代碼和結束時間等相關資訊。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>To get this information, you can use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> properties.</source>
          <target state="translated">若要取得這項資訊，您可以使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>These properties are populated automatically for processes that were started by this component.</source>
          <target state="translated">這些屬性會自動填入這個元件已啟動的處理程序。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The administrative information is released when all the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components that are associated with the system process are destroyed and hold no more handles to the exited process.</source>
          <target state="translated">系統管理資訊發行時所有<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>與系統處理序相關聯的元件會終結並保存至已結束的處理序沒有更多的控制代碼。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>A process can terminate independently of your code.</source>
          <target state="translated">處理程序可以與您的程式碼分開來終止。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>If you started the process using this component, the system updates the value of <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> automatically, even if the associated process exits independently.</source>
          <target state="translated">如果您啟動使用這個元件的處理序時，系統會更新的值<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>自動，即使在相關聯的處理序結束獨立。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when this property returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">當非同步事件處理常式已經重新導向標準輸出時，您就可以確認輸出處理尚未完成時，這個屬性會傳回<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>To ensure that asynchronous event handling has been completed, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload that takes no parameter before checking <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>.</source>
          <target state="translated">若要確保非同步事件處理已完成，請呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>檢查之前會採用任何參數的多載<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</source>
          <target state="translated">然後，它會擷取相關聯的處理序的實體記憶體使用量在 2 的第二個時間間隔，最多為 10 秒。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">此範例會偵測處理序結束之前經過 10 秒。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">如果它仍在執行 10 秒後，此範例會關閉處理序。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>There is no process associated with the object.</source>
          <target state="translated">沒有與這個物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>The exit code for the process could not be retrieved.</source>
          <target state="translated">無法擷取處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>Gets the unique identifier for the associated process.</source>
          <target state="translated">取得相關處理序的唯一識別項。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The system-generated unique identifier of the process that is referenced by this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 執行個體所參考的處理序之系統產生的唯一識別項。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> is not valid if the associated process is not running.</source>
          <target state="translated">處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>不正確，如果相關聯的處理序並未執行。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Therefore, you should ensure that the process is running before attempting to retrieve the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property.</source>
          <target state="translated">因此，您應該確定處理序正在執行，然後嘗試擷取<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Until the process terminates, the process identifier uniquely identifies the process throughout the system.</source>
          <target state="translated">除非在處理序終止時，處理序識別碼可唯一識別整個系統的程序。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>You can connect a process that is running on a local or remote computer to a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance by passing the process identifier to the <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> method.</source>
          <target state="translated">您可以連接至新的本機或遠端電腦執行的處理序<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>藉由傳遞至處理序識別碼的執行個體<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> is a <ph id="ph2">`static`</ph> method that creates a new component and sets the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property for the new <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> instance automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> 是<ph id="ph2">`static`</ph>會建立新元件的方法，並設定<ph id="ph3">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>新屬性<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>自動執行個體。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Process identifiers can be reused by the system.</source>
          <target state="translated">系統可以重複使用處理序識別碼。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property value is unique only while the associated process is running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>屬性值是唯一的只有當相關聯的處理序正在執行時。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>After the process has terminated, the system can reuse the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property value for an unrelated process.</source>
          <target state="translated">系統處理序已終止之後，可以重複使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>不相關的處理序的屬性值。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Because the identifier is unique on the system, you can pass it to other threads as an alternative to passing a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">因為此識別碼是唯一的系統上，您可以傳遞給它其他執行緒以傳遞替代<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>This action can save system resources yet guarantee that the process is correctly identified.</source>
          <target state="translated">這個動作可節省系統資源，又保證正確地識別出程序。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The following example demonstrates how to obtain the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> for all running instances of an application.</source>
          <target state="translated">下列範例示範如何取得<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>所有執行中的應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The code creates a new instance of Notepad, lists all the instances of Notepad, and then allows the user to enter the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> number to remove a specific instance.</source>
          <target state="translated">程式碼建立 「 記事本 」 的新執行個體列出的 「 記事本 」 中的所有執行個體，然後可讓使用者輸入<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>移除特定的執行個體的數目。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>The process's <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property has not been set.</source>
          <target state="translated">處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 屬性未設定。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>Immediately stops the associated process.</source>
          <target state="translated">立即停止相關的處理序。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> forces a termination of the process, while <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> only requests a termination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 強制終止程序，而<ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>只會要求終止。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>When a process with a graphical interface is executing, its message loop is in a wait state.</source>
          <target state="translated">當執行圖形化介面的處理序時，其訊息迴圈會處於等候狀態。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">每次 Windows 訊息傳送至處理序的作業系統，則會執行訊息迴圈。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> sends a request to close to the main window, which, in a well-formed application, closes child windows and revokes all running message loops for the application.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>接近主要視窗中，且格式正確的應用程式中，在關閉子視窗，並撤銷應用程式的所有執行訊息迴圈傳送的要求。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The request to exit the process by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> does not force the application to quit.</source>
          <target state="translated">藉由呼叫結束程序要求<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>不會強制應用程式結束。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The application can ask for user verification before quitting, or it can refuse to quit.</source>
          <target state="translated">應用程式可以要求使用者驗證，才能結束，或它可以拒絕結束。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>To force the application to quit, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method.</source>
          <target state="translated">若要強制執行應用程式結束，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> is identical to that of a user closing an application's main window using the system menu.</source>
          <target state="translated">行為<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>等同於關閉應用程式的主視窗使用 [系統] 功能表的使用者。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>Therefore, the request to exit the process by closing the main window does not force the application to quit immediately.</source>
          <target state="translated">因此，要求關閉主視窗結束處理程序不會強制立即結束應用程式。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method executes asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>方法以非同步方式執行。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>After calling the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method, call the <ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to wait for the process to exit, or check the <ph id="ph3">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property to determine if the process has exited.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>方法，請呼叫<ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>方法來等候處理序結束，或者檢查<ph id="ph3">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性來判斷是否已經結束處理程序。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>Data edited by the process or resources allocated to the process can be lost if you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">編輯程序的資料或配置給處理序的資源可能會遺失如果您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> causes an abnormal process termination and should be used only when necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 導致處理程序異常終止，並在必要時才應該使用。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> enables an orderly termination of the process and closes all windows, so it is preferable for applications with an interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> 啟用程序有條理地終止，並關閉所有視窗，因此最好有一個介面的應用程式。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> fails, you can use <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> to terminate the process.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>失敗，您可以使用<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>結束這個處理序。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> is the only way to terminate processes that do not have graphical interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 是終止處理序沒有圖形化介面的唯一方式。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> only for processes that are running on the local computer.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>只能供本機電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>You cannot cause processes on remote computers to exit.</source>
          <target state="translated">若要結束遠端電腦上，您無法讓處理程序。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>You can only view information for processes running on remote computers.</source>
          <target state="translated">您只能檢視遠端電腦上執行的處理序的資訊。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>If the call to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method is made while the process is currently terminating, a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> is thrown for Access Denied.</source>
          <target state="translated">如果呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>方法由目前正在終止處理程序，而<ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>就會擲回的拒絕存取。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The associated process could not be terminated.</source>
          <target state="translated">相關的處理序無法終止。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The process is terminating.</source>
          <target state="translated">正在結束處理序。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The associated process is a Win16 executable.</source>
          <target state="translated">相關聯的處理序是 Win16 可執行檔。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>You are attempting to call <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph> for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試呼叫於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The method is available only for processes running on the local computer.</source>
          <target state="translated">這個方法僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The process has already exited.</source>
          <target state="translated">處理程序已經結束。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Takes a <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component out of the state that lets it interact with operating system processes that run in a special mode.</source>
          <target state="translated">讓 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件離開可與使用特殊模式執行的作業系統處理序互動的狀態。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Some operating system processes run in a special mode.</source>
          <target state="translated">某些作業系統處理程序執行中使用特殊模式。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Attempting to read properties of or attach to these processes is not possible unless you have called <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph> on the component.</source>
          <target state="translated">嘗試讀取的屬性，或附加至這些處理序不能除非您已經呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph>元件上。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph> when you no longer need access to these processes that run in special mode.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph>當您不再需要存取特殊模式執行這些程序。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MachineName">
          <source>Gets the name of the computer the associated process is running on.</source>
          <target state="translated">取得相關處理序正在執行的所在電腦的名稱。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>The name of the computer that the associated process is running on.</source>
          <target state="translated">相關處理序正在執行的所在電腦的名稱。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>You can view statistical data and process information for processes running on remote computers but you cannot call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> on remote computers.</source>
          <target state="translated">您可以檢視統計資料，且無法呼叫程序，但您的遠端電腦上執行的處理程序資訊<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>，或<ph id="ph3">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>遠端電腦上。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>When the associated process is executing on the local machine, this property returns a period (".") for the machine name.</source>
          <target state="translated">當相關聯的處理序在本機電腦上執行時，這個屬性會傳回句號 ("。") 的機器名稱。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>You should use the <ph id="ph1">&lt;xref:System.Environment.MachineName%2A?displayProperty=nameWithType&gt;</ph> property to get the correct machine name.</source>
          <target state="translated">您應該使用<ph id="ph1">&lt;xref:System.Environment.MachineName%2A?displayProperty=nameWithType&gt;</ph>屬性來取得正確的電腦名稱。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>To use the following example you must first start at least one instance of Notepad on a remote computer.</source>
          <target state="translated">若要使用下列的範例，您必須先執行會在遠端電腦上啟動 「 記事本 」 的至少一個執行個體。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>The example requests the name of the remote computer on which Notepad is running, and then displays the respective <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph> properties for each instance.</source>
          <target state="translated">此範例要求的遠端電腦的 [記事本] 正在執行，而且接著會顯示個別名稱<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph>每個執行個體的屬性。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MachineName">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>Gets the main module for the associated process.</source>
          <target state="translated">取得相關處理序的主要模組。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph> that was used to start the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph>，用來啟動處理序。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>A process module represents a.dll or .exe file that is loaded into a particular process.</source>
          <target state="translated">處理序模組代表特定程序中載入.dll 或.exe 檔。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property lets you view information about the executable used to start the process, including the module name, file name, and module memory details.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>屬性可讓您檢視用來啟動處理程序，包括模組名稱、 檔案名稱和模組的記憶體詳細資訊的可執行檔的相關資訊。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainModule" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainModule" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>A 32-bit process is trying to access the modules of a 64-bit process.</source>
          <target state="translated">32 位元處理序正嘗試存取 64 位元處理序的模組。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 以存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>The process has exited.</source>
          <target state="translated">處理序已經結束。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>Gets the window handle of the main window of the associated process.</source>
          <target state="translated">取得相關處理序主視窗的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The system-generated window handle of the main window of the associated process.</source>
          <target state="translated">由系統產生之相關處理序主視窗的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The main window is the window opened by the process that currently has the focus (the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> form).</source>
          <target state="translated">主視窗是由目前具有焦點的處理序開啟的視窗 (<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph>形式)。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>You must use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method to refresh the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> object to get the current main window handle if it has changed.</source>
          <target state="translated">您必須使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>方法，以重新整理<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>來取得目前的主視窗控制代碼，如果已變更的物件。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>In general, because the window handle is cached, use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> beforehand to guarantee that you’ll retrieve the current handle.</source>
          <target state="translated">一般而言，因為快取的視窗控制代碼，則使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>事前保證您將會擷取目前的控制代碼。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>You can get the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> property only for processes that are running on the local computer.</source>
          <target state="translated">您可以取得<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>屬性只能供本機電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> property is a value that uniquely identifies the window that is associated with the process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>屬性是可唯一識別與處理序相關聯的視窗的值。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>A process has a main window associated with it only if the process has a graphical interface.</source>
          <target state="translated">在程序沒有處理序具有圖形化介面時，才與它相關聯的主視窗。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>If the associated process does not have a main window, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> value is zero.</source>
          <target state="translated">如果相關聯的處理序沒有主視窗、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>值為零。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The value is also zero for processes that have been hidden, that is, processes that are not visible in the taskbar.</source>
          <target state="translated">值也是零的處理序已經隱藏起來，也就是處理不會顯示在工作列中的。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>This can be the case for processes that appear as icons in the notification area, at the far right of the taskbar.</source>
          <target state="translated">這可以是顯示為圖示在通知區域中，在工作列最右邊的處理程序的情況。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>If you have just started a process and want to use its main window handle, consider using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph> method to allow the process to finish starting, ensuring that the main window handle has been created.</source>
          <target state="translated">如果您剛啟動處理程序，並想要使用其主視窗控制代碼，請考慮使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph>方法，以允許程序完成從開始，以確保已經建立的主視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>Otherwise, an exception will be thrown.</source>
          <target state="translated">否則便會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> is not defined because the process has exited.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> 沒有定義，因為處理序已經結束。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>Gets the caption of the main window of the process.</source>
          <target state="translated">取得處理序的主視窗標題。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The main window title of the process.</source>
          <target state="translated">處理序的主視窗標題。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>A process has a main window associated with it only if the process has a graphical interface.</source>
          <target state="translated">在程序沒有處理序具有圖形化介面時，才與它相關聯的主視窗。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>If the associated process does not have a main window (so that <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> is zero), <ph id="ph2">&lt;xref:System.Diagnostics.Process.MainWindowTitle%2A&gt;</ph> is an empty string ("").</source>
          <target state="translated">如果相關聯的處理序沒有主視窗 (以便<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>為零)，<ph id="ph2">&lt;xref:System.Diagnostics.Process.MainWindowTitle%2A&gt;</ph>為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>If you have just started a process and want to use its main window title, consider using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph> method to allow the process to finish starting, ensuring that the main window handle has been created.</source>
          <target state="translated">如果您剛啟動處理程序，並想要使用其主視窗標題，請考慮使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph>方法，以允許程序完成從開始，以確保已經建立的主視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>Otherwise, the system throws an exception.</source>
          <target state="translated">否則，系統會擲回例外狀況 (Exception)。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The main window is the window that currently has the focus; note that this might not be the primary window for the process.</source>
          <target state="translated">主視窗是目前擁有焦點，視窗請注意，這可能不是處理序主視窗。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>You must use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method to refresh the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> object to get the current main window handle if it has changed.</source>
          <target state="translated">您必須使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>方法，以重新整理<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>來取得目前的主視窗控制代碼，如果已變更的物件。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The following example starts an instance of Notepad and retrieves the caption of the main window of the process.</source>
          <target state="translated">下列範例會啟動 [記事本] 的執行個體，並擷取程序的主視窗的標題。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> property is not defined because the process has exited.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> 屬性沒有定義，因為處理序已經結束。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Gets or sets the maximum allowable working set size, in bytes, for the associated process.</source>
          <target state="translated">取得或設定關聯的處理序所允許的工作集大小上限，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The maximum working set size that is allowed in memory for the process, in bytes.</source>
          <target state="translated">處理序所需記憶體中工作集大小的最大值，以位元組 (Byte) 為單位。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">處理程序的工作集是實體 RAM 記憶體中的目前可見程序的記憶體分頁的集合。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">這些頁面是常駐的而且可供使用，而不會觸發分頁錯誤的應用程式。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">工作集包括共用和私用資料。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The shared data includes the pages that contain all the instructions that your application executes, including the pages in your .dll files and the system.dll files.</source>
          <target state="translated">共用的資料包含頁面包含所有執行您的應用程式，包括.dll 檔案和 system.dll 檔案中頁面的指示。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>As the working set size increases, memory demand increases.</source>
          <target state="translated">隨著工作集大小會增加，會增加記憶體需求。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>A process has minimum and maximum working set sizes.</source>
          <target state="translated">處理序有最小和最大工作集大小。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Each time a process resource is created, the system reserves an amount of memory equal to the minimum working set size for the process.</source>
          <target state="translated">每次處理序資源建立時，系統會保留等於工作集大小的處理程序的最小記憶體數量。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The virtual memory manager attempts to keep at least the minimum amount of memory resident when the process is active, but it never keeps more than the maximum size.</source>
          <target state="translated">虛擬記憶體管理員會保留最少的最小記憶體數量常駐時處理程序為作用中，但不是會保持超過最大大小。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The system sets the default working set sizes.</source>
          <target state="translated">系統會設定預設的工作集大小。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>You can modify these sizes using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph> members.</source>
          <target state="translated">您可以修改使用這些大小<ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>However, setting these values does not guarantee that the memory will be reserved or resident.</source>
          <target state="translated">不過，設定這些值不保證記憶體會被保留或駐留。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>When you increase the working set size of a process, you take physical memory away from the rest of the system.</source>
          <target state="translated">當您增加處理程序的工作集大小時，您可以採取遠離系統的其餘部分的實體記憶體。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Ensure that you do not request a minimum or maximum working set size that is too large, because doing so can degrade system performance.</source>
          <target state="translated">請確定您沒有要求的是太大，因為這樣做可能會降低系統效能的最小值或最大工作集大小。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The maximum working set size is invalid.</source>
          <target state="translated">工作集大小上限無效。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>It must be greater than or equal to the minimum working set size.</source>
          <target state="translated">必須大於或等於工作集大小下限。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Working set information cannot be retrieved from the associated process resource.</source>
          <target state="translated">無法從關聯的處理序資源擷取工作集資訊。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The process identifier or process handle is zero because the process has not been started.</source>
          <target state="translated">處理序識別碼或處理序控制代碼為零，因為尚未啟動處理序。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MaxWorkingSet" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MaxWorkingSet" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The process has exited.</source>
          <target state="translated">處理序已經結束。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Gets or sets the minimum allowable working set size, in bytes, for the associated process.</source>
          <target state="translated">取得或設定關聯的處理序所允許的工作集大小下限，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The minimum working set size that is required in memory for the process, in bytes.</source>
          <target state="translated">處理序所需記憶體中工作集大小的最小值，以位元組 (Byte) 為單位。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">處理程序的工作集是實體 RAM 記憶體中的目前可見程序的記憶體分頁的集合。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">這些頁面是常駐的而且可供使用，而不會觸發分頁錯誤的應用程式。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">工作集包括共用和私用資料。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The shared data includes the pages that contain all the instructions that your application executes, including the pages in your .dll files and the system.dll files.</source>
          <target state="translated">共用的資料包含頁面包含所有執行您的應用程式，包括.dll 檔案和 system.dll 檔案中頁面的指示。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>As the working set size increases, memory demand increases.</source>
          <target state="translated">隨著工作集大小會增加，會增加記憶體需求。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>A process has minimum and maximum working set sizes.</source>
          <target state="translated">處理序有最小和最大工作集大小。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Each time a process resource is created, the system reserves an amount of memory equal to the minimum working set size for the process.</source>
          <target state="translated">每次處理序資源建立時，系統會保留等於工作集大小的處理程序的最小記憶體數量。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The virtual memory manager attempts to keep at least the minimum amount of memory resident when the process is active, but it never keeps more than the maximum size.</source>
          <target state="translated">虛擬記憶體管理員會保留最少的最小記憶體數量常駐時處理程序為作用中，但不是會保持超過最大大小。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The system sets the default working set sizes.</source>
          <target state="translated">系統會設定預設的工作集大小。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>You can modify these sizes using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph> members.</source>
          <target state="translated">您可以修改使用這些大小<ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>However, setting these values does not guarantee that the memory will be reserved or resident.</source>
          <target state="translated">不過，設定這些值不保證記憶體會被保留或駐留。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>When you increase the working set size of a process, you take physical memory away from the rest of the system.</source>
          <target state="translated">當您增加處理程序的工作集大小時，您可以採取遠離系統的其餘部分的實體記憶體。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Ensure that you do not request a minimum or maximum working set size that is too large, because doing so can degrade system performance.</source>
          <target state="translated">請確定您沒有要求的是太大，因為這樣做可能會降低系統效能的最小值或最大工作集大小。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The minimum working set size is invalid.</source>
          <target state="translated">工作集大小下限無效。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>It must be less than or equal to the maximum working set size.</source>
          <target state="translated">必須小於或等於工作集大小上限。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Working set information cannot be retrieved from the associated process resource.</source>
          <target state="translated">無法從關聯的處理序資源擷取工作集資訊。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The process identifier or process handle is zero because the process has not been started.</source>
          <target state="translated">處理序識別碼或處理序控制代碼為零，因為尚未啟動處理序。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MinWorkingSet" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MinWorkingSet" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The process has exited.</source>
          <target state="translated">處理序已經結束。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>Gets the modules that have been loaded by the associated process.</source>
          <target state="translated">取得相關的處理序所載入的模組。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph> that represents the modules that have been loaded by the associated process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph> 類型的陣列，代表相關聯處理序所載入的模組。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>A process module represents a.dll or .exe file that is loaded into a particular process.</source>
          <target state="translated">處理序模組代表特定程序中載入.dll 或.exe 檔。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.ProcessModule&gt;</ph> instance lets you view information about a module, including the module name, file name, and module memory details.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.ProcessModule&gt;</ph>執行個體，可讓您檢視模組，包括模組名稱、 檔案名稱和模組的記憶體詳細資料的相關資訊。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>A process can load multiple modules into memory.</source>
          <target state="translated">處理程序可以將多個模組載入記憶體。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>For example,.exe files that load additional .dll files have multiple modules.</source>
          <target state="translated">例如，載入額外的.dll 檔案的.exe 檔案有多個模組。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>After starting the process, this collection is empty until the system has loaded the process.</source>
          <target state="translated">之後啟動處理序，這個集合是空的直到系統載入程序。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>If the process has a main window, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph> before retrieving this property to ensure that the collection is nonempty when you get the list.</source>
          <target state="translated">如果處理序主視窗，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph>之前擷取這個屬性，以確保該集合不是空的時，您取得的清單。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> property for either the system process or the idle process.</source>
          <target state="translated">您嘗試存取系統處理序或閒置處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>These processes do not have modules.</source>
          <target state="translated">這些程序並沒有模組。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的未分頁系統記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>The amount of memory, in bytes, the system has allocated for the associated process that cannot be written to the virtual memory paging file.</source>
          <target state="translated">記憶體量 (以位元組為單位)，指系統已配置給不能寫入虛擬記憶體分頁檔案之關聯處理序的記憶體。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的未分頁系統記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.</source>
          <target state="translated">配置給關聯處理序的系統記憶體量 (以位元組為單位)，不能寫入虛擬記憶體分頁檔案。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The value returned by this property represents the current size of nonpaged system memory used by the process, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表目前的處理序，以位元組為單位所使用的未分頁的系統記憶體大小。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>System memory is the physical memory used by the operating system, and is divided into paged and nonpaged pools.</source>
          <target state="translated">系統記憶體是作業系統中，所使用的實體記憶體，而且分成分頁和非分頁集區。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>Nonpaged memory allocations remain in system memory and are not paged out to the virtual memory paging file.</source>
          <target state="translated">非分頁的記憶體配置保留在系統記憶體和並未輸出分頁虛擬記憶體分頁檔案。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Pool Nonpaged Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>Pool Nonpaged Bytes<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.OnExited">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> is the API method that raises the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> 引發的應用程式開發介面方法<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> causes the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event to occur and is the only way to raise the event using the <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>導致<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件發生和是唯一的方法來引發事件使用<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> is primarily used when deriving classes from the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> 主要用元件從衍生類別時。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>As an alternative to <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>, you can write your own event handler.</source>
          <target state="translated">做為替代<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>，您可以撰寫您自己的事件處理常式。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>You create your own event handler delegate and your own event-handling method.</source>
          <target state="translated">您可以建立您自己的事件處理常式委派和事件處理方法。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>If you are using the Visual Studio environment, an event handler delegate (AddOnExited) and an event-handling method (Process1_Exited) are created for you when you drag a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component onto a form and double-click the icon.</source>
          <target state="translated">如果您使用 Visual Studio 環境時，事件處理常式委派 (AddOnExited) 和事件處理方法 (Process1_Exited) 會為您建立拖曳<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件拖曳至表單，然後按兩下圖示。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>The code you create to run when the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event occurs is entered into the Process1_Exited procedure.</source>
          <target state="translated">建立時要執行的程式碼<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>進入 Process1_Exited 程序發生的事件。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>You do not need to create the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> member, because it is implemented for you.</source>
          <target state="translated">您不需要建立<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>成員，因為它會為您實作。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需概觀，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>方法在衍生類別中的。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>Occurs each time an application writes a line to its redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream.</source>
          <target state="translated">發生於應用程式將某行寫入至其重新導向的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流時。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event indicates that the associated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> has written a line, terminating with a newline character, to its redirected <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件表示相關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>已寫入線條，以新行字元至其重新導向終止<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The event is enabled during asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>.</source>
          <target state="translated">非同步讀取作業期間啟用事件上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>To start asynchronous read operations, you must redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>, add your event handler to the <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event, and call <ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>.</source>
          <target state="translated">若要開始非同步讀取的作業，您必須重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>，新增您的事件處理常式來<ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件和呼叫<ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>Thereafter, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event signals each time the process writes a line to the redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, until the process exits or calls <ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>.</source>
          <target state="translated">此後，<ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件訊號處理程序將某行寫入至重新導向每次<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>串流處理，直到處理程序會結束或呼叫<ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The application that is processing the asynchronous output should call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to ensure that the output buffer has been flushed.</source>
          <target state="translated">正在處理的非同步輸出的應用程式應該呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>方法，以確保已清除輸出緩衝區。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The following example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <ph id="ph2">`ipconfig`</ph> command.</source>
          <target state="translated">下列範例說明如何執行非同步的讀取的作業上的重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流<ph id="ph2">`ipconfig`</ph>命令。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The example creates an event delegate for the <ph id="ph1">`OutputHandler`</ph> event handler and associates it with the <ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">此範例會建立為事件委派<ph id="ph1">`OutputHandler`</ph>事件處理常式並將它與相關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and saves it in an output string that’s later shown in the example’s console window.</source>
          <target state="translated">此事件處理常式收到來自的重新導向的文字行<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流，格式化文字，並將它儲存在更新版本中所顯示的範例主控台視窗輸出字串中。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>Gets the amount of paged memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的分頁記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>The amount of memory, in bytes, allocated by the associated process that can be written to the virtual memory paging file.</source>
          <target state="translated">記憶體量 (以位元組為單位)，指由關聯的處理序所配置，且可以寫入虛擬記憶體分頁檔案的記憶體。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>Gets the amount of paged memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的分頁記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.</source>
          <target state="translated">虛擬記憶體分頁檔案中，配置給關聯處理序的記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The value returned by this property represents the current size of memory in the virtual memory paging file used by the process, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表目前的處理序，以位元組為單位所使用之虛擬記憶體分頁檔中的記憶體大小。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The operating system uses the virtual memory paging file in conjunction with physical memory to manage the virtual address space for each process.</source>
          <target state="translated">作業系統會使用實體記憶體之虛擬記憶體分頁檔搭配使用來管理每個處理序虛擬位址空間。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</source>
          <target state="translated">可分頁記憶體不在使用中時，它可以傳輸至磁碟上的虛擬記憶體分頁檔案。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>To obtain the size of memory used by the operating system for the process, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedSystemMemorySize64%2A&gt;</ph> property.</source>
          <target state="translated">若要取得使用由作業系統處理序的記憶體大小，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedSystemMemorySize64%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Page File Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>分頁檔位元組<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The following code example starts an instance of the Notepad application, and then retrieves and displays various properties of the associated process.</source>
          <target state="translated">下列程式碼範例啟動 「 記事本 」 應用程式的執行個體，然後擷取並顯示相關聯的處理序的各種屬性。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>Gets the amount of pageable system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的可分頁系統記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>The amount of memory, in bytes, the system has allocated for the associated process that can be written to the virtual memory paging file.</source>
          <target state="translated">記憶體量 (以位元組為單位)，指系統已配置給可以寫入虛擬記憶體分頁檔案之關聯處理序的記憶體。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>Gets the amount of pageable system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的可分頁系統記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.</source>
          <target state="translated">配置給關聯處理序的系統記憶體量 (以位元組為單位)，可以寫入虛擬記憶體分頁檔案。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The value returned by this property value represents the current size of pageable system memory used by the process, in bytes.</source>
          <target state="translated">這個屬性值所傳回的值表示目前的處理序，以位元組為單位所使用的可分頁系統記憶體大小。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>System memory is the physical memory used by the operating system, and is divided into paged and nonpaged pools.</source>
          <target state="translated">系統記憶體是作業系統中，所使用的實體記憶體，而且分成分頁和非分頁集區。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</source>
          <target state="translated">可分頁記憶體不在使用中時，它可以傳輸至磁碟上的虛擬記憶體分頁檔案。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>To obtain the size of the application memory used by the process, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedMemorySize64%2A&gt;</ph> property.</source>
          <target state="translated">取得處理序所使用的應用程式記憶體的大小，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedMemorySize64%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Pool Paged Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>Pool Paged Bytes<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</source>
          <target state="translated">取得關聯處理序所使用之虛擬記憶體分頁檔的最大記憶體量，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>The maximum amount of memory, in bytes, allocated by the associated process that could be written to the virtual memory paging file.</source>
          <target state="translated">最大記憶體量 (以位元組為單位)，指由關聯的處理序配置給可以寫入虛擬記憶體分頁檔案的記憶體。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</source>
          <target state="translated">取得關聯處理序所使用之虛擬記憶體分頁檔的最大記憶體量，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.</source>
          <target state="translated">虛擬記憶體分頁檔案中，從啟動以來配置給關聯處理序的最大記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The value returned by this property value represents the maximum size of memory in the virtual memory paging file used by the process since it started, in bytes.</source>
          <target state="translated">這個屬性值所傳回的值代表自啟動，以位元組為單位，處理序所使用之虛擬記憶體分頁檔中的記憶體大小上限。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The operating system uses the virtual memory paging file in conjunction with physical memory to manage the virtual address space for each process.</source>
          <target state="translated">作業系統會使用實體記憶體之虛擬記憶體分頁檔搭配使用來管理每個處理序虛擬位址空間。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</source>
          <target state="translated">可分頁記憶體不在使用中時，它可以傳輸至磁碟上的虛擬記憶體分頁檔案。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Page File Bytes Peak<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>分頁檔位元組尖峰<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>Gets the maximum amount of virtual memory, in bytes, used by the associated process.</source>
          <target state="translated">取得關聯處理序所使用最大虛擬記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>The maximum amount of virtual memory, in bytes, that the associated process has requested.</source>
          <target state="translated">最大虛擬記憶體量 (以位元組為單位)，指關聯的處理序所要求的記憶體。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>Gets the maximum amount of virtual memory, in bytes, used by the associated process.</source>
          <target state="translated">取得關聯處理序所使用最大虛擬記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.</source>
          <target state="translated">從啟動以來配置給關聯處理序的最大虛擬記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The value returned by this property represents the maximum size of virtual memory used by the process since it started, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表自啟動，以位元組為單位的處理序使用的虛擬記憶體的大小上限。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The operating system maps the virtual address space for each process either to pages loaded in physical memory, or to pages stored in the virtual memory paging file on disk.</source>
          <target state="translated">作業系統會對應至載入實體記憶體中，或網頁儲存在磁碟上的虛擬記憶體分頁檔案中每個處理序的虛擬位址空間。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Virtual Bytes Peak<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>虛擬位元組尖峰<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>Gets the peak working set size for the associated process, in bytes.</source>
          <target state="translated">取得相關處理序工作集大小的最大值 (位元組)。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The maximum amount of physical memory that the associated process has required all at once, in bytes.</source>
          <target state="translated">最大實體記憶體數量，為相關的處理序一次所需的量 (位元組)，</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">處理程序的工作集是實體 RAM 記憶體中的目前可見程序的記憶體分頁的集合。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">這些頁面是常駐的而且可供使用，而不會觸發分頁錯誤的應用程式。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">工作集包括共用和私用資料。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including process modules and the system libraries.</source>
          <target state="translated">共用的資料包含頁面包含所有處理序執行，包括處理序模組和系統程式庫的指示。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>Gets the maximum amount of physical memory, in bytes, used by the associated process.</source>
          <target state="translated">取得關聯處理序所使用最大實體記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.</source>
          <target state="translated">從啟動以來配置給關聯處理序的最大實體記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The value returned by this property represents the maximum size of working set memory used by the process since it started, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表的工作集記憶體使用處理程序，因為它啟動，以位元組為單位的大小上限。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">處理程序的工作集是實體 RAM 記憶體中的目前可見程序的記憶體分頁的集合。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">這些頁面是常駐的而且可供使用，而不會觸發分頁錯誤的應用程式。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">工作集包括共用和私用資料。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including instructions from the process modules and the system libraries.</source>
          <target state="translated">共用的資料包含頁面包含所有處理序執行，包括指示從處理序模組和系統程式庫的指示。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Working Set Peak<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>工作集尖峰<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.</source>
          <target state="translated">取得或設定值，指出作業系統是否應該在主視窗有焦點 (Focus) 時，暫時提高相關的處理序優先權。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">當處理序離開等候狀態時，如果應動態提高處理序優先權，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>When a thread runs in a process for which the priority class has one of the dynamic priority enumeration values (<ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>, or <ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>), the system temporarily boosts the thread's priority when it is taken out of a wait state.</source>
          <target state="translated">當執行緒的優先權類別有一個動態優先順序列舉值的處理序中執行時 (<ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>，或<ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>)，系統暫時提升執行緒的優先順序，當它被帶離等候狀態。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>This action prevents other processes from interrupting the processing of the current thread.</source>
          <target state="translated">這個動作可防止其他處理程序會中斷目前執行緒的處理。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph> setting affects all the existing threads and any threads subsequently created by the process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph>設定會影響所有現有的執行緒和任何後續程序所建立的執行緒。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>To restore normal behavior, set the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">若要還原正常的行為，請設定<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>Boosting the priority too high can drain resources from essential operating system and network functions, causing problems with other operating system tasks.</source>
          <target state="translated">提高過度提高優先權可以耗盡必要作業系統和網路功能，導致問題的其他作業系統工作的資源。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>Priority boost information could not be retrieved from the associated process resource.</source>
          <target state="translated">無法從關聯的處理序資源擷取優先權提升資訊。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The process identifier or process handle is zero.</source>
          <target state="translated">處理序識別碼或處理序控制代碼為零。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>(The process has not been started.)</source>
          <target state="translated">(尚未啟動處理序)。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Gets or sets the overall priority category for the associated process.</source>
          <target state="translated">取得或設定相關處理序的整體優先權分類。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The priority category for the associated process, from which the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.BasePriority" /&gt;</ph> of the process is calculated.</source>
          <target state="translated">相關聯處理序的優先權分類，處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.BasePriority" /&gt;</ph> 由此計算出來。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>A process priority class encompasses a range of thread priority levels.</source>
          <target state="translated">處理序優先權類別包含執行緒的優先順序層級的範圍。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Threads with different priorities that are running in the process run relative to the priority class of the process.</source>
          <target state="translated">具有不同優先順序執行相對於此程序的優先權等級的程序中執行的執行緒。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Win32 uses four priority classes with seven base priority levels per class.</source>
          <target state="translated">Win32 七個基本優先順序層級，每個類別會使用四個優先權類別。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>These process priority classes are captured in the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass&gt;</ph> enumeration, which lets you set the process priority to <ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.Idle&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>, <ph id="ph5">&lt;xref:System.Diagnostics.ProcessPriorityClass.AboveNormal&gt;</ph>, <ph id="ph6">&lt;xref:System.Diagnostics.ProcessPriorityClass.BelowNormal&gt;</ph>, or <ph id="ph7">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>.</source>
          <target state="translated">這些程序的優先順序類別所擷取的<ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass&gt;</ph>列舉型別，可讓您將處理序優先權設定為<ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.Idle&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>， <ph id="ph4">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>， <ph id="ph5">&lt;xref:System.Diagnostics.ProcessPriorityClass.AboveNormal&gt;</ph>， <ph id="ph6">&lt;xref:System.Diagnostics.ProcessPriorityClass.BelowNormal&gt;</ph>，或<ph id="ph7">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Based on the time elapsed or other boosts, the base priority level can be changed by the operating system when a process needs to be put ahead of others for access to the processor.</source>
          <target state="translated">根據 24 小時制或其他優先權的提高，基礎優先權層級可以變更作業系統，當處理程序必須晚於其他人存取置於處理器的時間。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>In addition, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph> to temporarily boost the priority level of threads that have been taken out of the wait state.</source>
          <target state="translated">此外，您可以設定<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph>暫時提高已超出等候狀態的執行緒的優先權層級。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The priority is reset when the process returns to the wait state.</source>
          <target state="translated">處理程序會回到等候狀態時，會重設的優先順序。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> property lets you view the starting priority that is assigned to a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>屬性可讓您檢視指派給處理程序的起始優先權。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>However, because it is read-only, you cannot use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> property to set the priority of a process.</source>
          <target state="translated">不過，因為它是唯讀，您無法使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>屬性來設定處理序的優先順序。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>To change the priority, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> property, which gets or sets the overall priority category for the process.</source>
          <target state="translated">若要變更優先順序，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>屬性，取得或設定處理程序的整體優先權分類。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The priority class cannot be viewed using System Monitor.</source>
          <target state="translated">無法使用 「 系統監視器檢視的優先權等級。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The following table shows the relationship between the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> values.</source>
          <target state="translated">下表顯示之間的關聯性<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>BasePriority</source>
          <target state="translated">BasePriority</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>PriorityClass</source>
          <target state="translated">PriorityClass</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>13</source>
          <target state="translated">13</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>24</source>
          <target state="translated">24</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Process priority information could not be set or retrieved from the associated process resource.</source>
          <target state="translated">無法設定處理序優先順序的資訊，或從相關聯的處理序資源擷取。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The process identifier or process handle is zero.</source>
          <target state="translated">處理序識別碼或處理序控制代碼為零。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>(The process has not been started.)</source>
          <target state="translated">(尚未啟動處理序)。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>You have set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> to <ph id="ph2">&lt;see langword="AboveNormal" /&gt;</ph> or <ph id="ph3">&lt;see langword="BelowNormal" /&gt;</ph> when using Windows 98 or Windows Millennium Edition (Windows Me).</source>
          <target state="translated">使用 Windows 98 或 Windows Millennium Edition (Windows Me) 時，<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> 已設定為 <ph id="ph2">&lt;see langword="AboveNormal" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="BelowNormal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>These platforms do not support those values for the priority class.</source>
          <target state="translated">這些平台不支援優先權類別的這些值。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Priority class cannot be set because it does not use a valid value, as defined in the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessPriorityClass" /&gt;</ph> enumeration.</source>
          <target state="translated">無法設定優先權類別，因為它不使用如 <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessPriorityClass" /&gt;</ph> 列舉類型中所定義的有效值。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>Gets the amount of private memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的私用記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>The number of bytes allocated by the associated process that cannot be shared with other processes.</source>
          <target state="translated">相關的處理序配置的位元組數目，不能與其他處理序共用。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>Gets the amount of private memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的私用記憶體量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.</source>
          <target state="translated">配置給關聯處理序的記憶體量 (以位元組為單位)，不能與其他處理序共用。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The value returned by this property represents the current size of memory used by the process, in bytes, that cannot be shared with other processes.</source>
          <target state="translated">這個屬性所傳回的值代表目前的處理序，以位元組為單位，不能與其他處理序共用所使用的記憶體大小。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Private Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>私用位元組<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>Gets the privileged processor time for this process.</source>
          <target state="translated">取得這個處理序使用處理器的授權時間。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the amount of time that the process has spent running code inside the operating system core.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，表示處理序在作業系統核心內執行程式碼所花費的時間。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>Gets the name of the process.</source>
          <target state="translated">取得處理序的名稱。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The name that the system uses to identify the process to the user.</source>
          <target state="translated">名稱，系統用來向使用者識別處理序。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph> property holds an executable file name, such as Outlook, that does not include the .exe extension or the path.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>屬性會保留的可執行檔名稱，例如 Outlook、 不包含副檔名為.exe 或路徑。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>It is helpful for getting and manipulating all the processes that are associated with the same executable file.</source>
          <target state="translated">它可協助取得和管理相同的可執行檔相關聯的所有處理序。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>On <ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph> operating systems, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph> property may be truncated to 15 characters if the process module information cannot be obtained.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph>作業系統<ph id="ph2">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>屬性可能會被截斷為 15 個字元，如果無法取得處理序模組資訊。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>, passing it an executable file name, to retrieve an array that contains every running instance on the specified computer.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>，它將可執行檔名稱，擷取陣列，其中包含指定的電腦上每個執行的執行個體。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>You can use this array, for example, to shut down all the running instances of the executable file.</source>
          <target state="translated">您可以使用此陣列，例如，若要關閉的可執行檔的所有執行個體。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The process does not have an identifier, or no process is associated with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>.</source>
          <target state="translated">處理序沒有識別項，或沒有處理序與 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 相關聯。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The associated process has exited.</source>
          <target state="translated">關聯處理序已結束。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The process is not on this computer.</source>
          <target state="translated">處理序不在這部電腦上。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Gets or sets the processors on which the threads in this process can be scheduled to run.</source>
          <target state="translated">取得或設定處理器，這個處理序中的執行緒可以在其上排程執行。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>A bitmask representing the processors that the threads in the associated process can run on.</source>
          <target state="translated">位元遮罩，表示相關的處理序中的執行緒可以在其上執行的處理器。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The default depends on the number of processors on the computer.</source>
          <target state="translated">預設值取決於電腦上的處理器數目。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The default value is 2 <bpt id="p1">&lt;sup&gt;</bpt>n<ept id="p1">&lt;/sup&gt;</ept> -1, where n is the number of processors.</source>
          <target state="translated">預設值為 2 <bpt id="p1">&lt;sup&gt;</bpt>n<ept id="p1">&lt;/sup&gt;</ept> -1，其中 n 是處理器數目。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>In Windows 2000 and later, a thread in a process can migrate from processor to processor, with each migration reloading the processor cache.</source>
          <target state="translated">在 Windows 2000 和更新版本中，處理程序中的執行緒可以移轉處理器，以重新載入處理器快取每個移轉。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Under heavy system loads, specifying which processor should run a specific thread can improve performance by reducing the number of times the processor cache is reloaded.</source>
          <target state="translated">在繁重的系統負載下指定哪一個處理器應該執行特定的執行緒可以改善效能降低的次數會重新載入處理器快取。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The association between a processor and a thread is called the processor affinity.</source>
          <target state="translated">處理器和執行緒之間的關聯則稱為處理器相似性。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Each processor is represented as a bit.</source>
          <target state="translated">每個處理器是位元表示。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Bit 0 is processor one, bit 1 is processor two, and so forth.</source>
          <target state="translated">位元 0 是第一個處理器，位元 1 是處理器兩個，依此類推。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>If you set a bit to the value 1, the corresponding processor is selected for thread assignment.</source>
          <target state="translated">如果您的位元設定為 1 的值，對應的處理器會選取進行執行緒指派。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>When you set the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph> value to zero, the operating system's scheduling algorithms set the thread's affinity.</source>
          <target state="translated">當您將<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph>值為零，作業系統的排程演算法設定執行緒的相似性。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph> value is set to any nonzero value, the value is interpreted as a bitmask that specifies those processors eligible for selection.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph>值設定為任何非零值時，值會解譯為指定適合選取處理器的位元遮罩。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The following table shows a selection of <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph> values for an eight-processor system.</source>
          <target state="translated">下表顯示選取的<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph>八個處理器的系統值。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Bitmask</source>
          <target state="translated">位元遮罩</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Binary value</source>
          <target state="translated">二進位值</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Eligible processors</source>
          <target state="translated">可供選取的處理器</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0001</source>
          <target state="translated">0x0001</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00000001</source>
          <target state="translated">00000000 00000001</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0003</source>
          <target state="translated">0x0003</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00000011</source>
          <target state="translated">00000000 00000011</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1 and 2</source>
          <target state="translated">1 和 2</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0007</source>
          <target state="translated">0x0007</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00000111</source>
          <target state="translated">00000000 00000111</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1, 2 and 3</source>
          <target state="translated">1、 2 和 3</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0009</source>
          <target state="translated">0x0009</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00001001</source>
          <target state="translated">00000000 00001001</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1 and 4</source>
          <target state="translated">1 到 4</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x007F</source>
          <target state="translated">0x007F</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 01111111</source>
          <target state="translated">00000000 01111111</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1, 2, 3, 4, 5, 6 and 7</source>
          <target state="translated">1、 2、 3、 4、 5、 6 和 7</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> information could not be set or retrieved from the associated process resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> 資訊無法設定或從相關聯的處理序資源擷取。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The process identifier or process handle is zero.</source>
          <target state="translated">處理序識別碼或處理序控制代碼為零。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>(The process has not been started.)</source>
          <target state="translated">(尚未啟動處理序)。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> was not available.</source>
          <target state="translated">處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 無法使用。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The process has exited.</source>
          <target state="translated">處理序已經結束。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Refresh">
          <source>Discards any information about the associated process that has been cached inside the process component.</source>
          <target state="translated">捨棄快取於處理序元件內之相關處理序的任何資訊。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>After <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> is called, the first request for information about each property causes the process component to obtain a new value from the associated process.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>呼叫時，第一個要求的每個屬性的相關資訊會造成處理序元件從相關聯的處理序取得新的值。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is associated with a process resource, the property values of the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> are immediately populated according to the status of the associated process.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件是相關聯處理序資源，屬性值的<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>立即填入依據相關聯的處理序的狀態。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>If the information about the associated process subsequently changes, those changes are not reflected in the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component's cached values.</source>
          <target state="translated">如果後續變更之相關處理序的資訊，這些變更不會反映在<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件的快取的值。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is a snapshot of the process resource at the time they are associated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件是的快照集處理序資源在其相關聯的時間。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>To view the current values for the associated process, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">若要檢視關聯的處理序的目前值，呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</source>
          <target state="translated">然後，它會擷取相關聯的處理序的實體記憶體使用量在 2 的第二個時間間隔，最多為 10 秒。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">此範例會偵測處理序結束之前經過 10 秒。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">如果它仍在執行 10 秒後，此範例會關閉處理序。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>Gets a value indicating whether the user interface of the process is responding.</source>
          <target state="translated">取得值，指出處理序的使用者介面是否正在回應。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user interface of the associated process is responding to the system; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果相關處理序的使用者介面正在回應系統，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>If a process has a user interface, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph> property contacts the user interface to determine whether the process is responding to user input.</source>
          <target state="translated">如果處理程序具有使用者介面，<ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph>屬性聯繫來判斷處理序是否正在回應使用者輸入的使用者介面。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>If the interface does not respond immediately, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果介面不會立即回應<ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph>屬性會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>Use this property to determine whether the interface of the associated process has stopped responding.</source>
          <target state="translated">使用這個屬性來判斷是否相關聯的處理序的介面已停止回應。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>If the process does not have a <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>, this property returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果處理程序並沒有<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>，這個屬性會傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Responding" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Responding" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SafeHandle">
          <source>Gets the native handle to this process.</source>
          <target state="translated">取得這個處理序的原生控制代碼。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SafeHandle">
          <source>The native handle to this process.</source>
          <target state="translated">這個處理序的原生控制代碼。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SafeHandle">
          <source>The handle is only available if the calling component started the process.</source>
          <target state="translated">控制代碼才可使用呼叫元件啟動處理序。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>Gets the Terminal Services session identifier for the associated process.</source>
          <target state="translated">取得相關處理序的終端機服務工作階段識別項。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>The Terminal Services session identifier for the associated process.</source>
          <target state="translated">相關處理序的終端機服務工作階段識別項。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.SessionId%2A&gt;</ph> property identifies the session in which the application is currently running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.SessionId%2A&gt;</ph>屬性可識別目前執行中應用程式的工作階段。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>There is no session associated with this process.</source>
          <target state="translated">沒有與此處理序相關聯的工作階段。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>There is no process associated with this session identifier.</source>
          <target state="translated">沒有與這個工作階段識別項相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>The associated process is not on this machine.</source>
          <target state="translated">相關的處理序不在此機器上。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.SessionId" /&gt;</ph> property is not supported on Windows 98.</source>
          <target state="translated">Windows 98 不支援 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.SessionId" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source>Gets a stream used to read the error output of the application.</source>
          <target state="translated">取得用來讀取應用程式錯誤輸出的資料流。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> that can be used to read the standard error stream of the application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph>，可用來讀取應用程式的標準錯誤資料流。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes text to its standard error stream, that text is normally displayed on the console.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>將文字寫入至其標準錯誤資料流，通常會在主控台上顯示文字。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>By redirecting the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, you can manipulate or suppress the error output of a process.</source>
          <target state="translated">藉由重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流，您可以操作或隱藏的錯誤輸出的處理程序。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">比方說，您可以篩選文字、 以不同的方式，將其格式化或將輸出寫入主控台和指定的記錄檔。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>To use <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>, you must set <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>, and you must set <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>，您必須設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>至<ph id="ph3">`false`</ph>，而且您必須將<ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A?displayProperty=nameWithType&gt;</ph>至<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Otherwise, reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream throws an exception.</source>
          <target state="translated">否則，讀取<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated">重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>同步或非同步方式，就可以讀取資料流。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the error output stream of the process.</source>
          <target state="translated">這類方法<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>執行同步處理程序的錯誤輸出資料流上的讀取的作業。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">這些同步讀取作業不會完成直到相關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>寫入其<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>串流處理，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>開始非同步讀取作業上<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">這個方法可讓資料流輸出的指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出導向至事件處理常式。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Synchronous read operations introduce a dependency between the caller reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream and the child process writing to that stream.</source>
          <target state="translated">同步讀取作業會讀取自呼叫端之間的相依性<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流及子處理序寫入該資料流。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>These dependencies can result in deadlock conditions.</source>
          <target state="translated">這些相依性可能會導致死結狀況。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">當呼叫端會從子處理序的重新導向資料流讀取時，它會相依於子系。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The caller waits on the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">呼叫端會在讀取作業，等到子寫入資料流，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">時子處理序寫入資料不足，無法填滿其重新導向資料流，它會相依於父代。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The child process waits on the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">子處理序會等候下一個寫入作業，直到父讀取完整的資料流，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The deadlock condition results when the caller and child process wait on each other to complete an operation, and neither can proceed.</source>
          <target state="translated">當呼叫端和子處理序互相等候完成作業，且無法繼續時，就會導致死結狀態。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">您可以評估呼叫端和子處理序之間的相依性，以避免死結。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The following C# code, for example, shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">例如，下列 C# 程式碼會示範如何從重新導向資料流讀取，並等候子處理序結束。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The code example avoids a deadlock condition by calling <ph id="ph1">`p.StandardError.ReadToEnd`</ph> before <ph id="ph2">`p.WaitForExit`</ph>.</source>
          <target state="translated">程式碼範例可避免發生死結狀況呼叫<ph id="ph1">`p.StandardError.ReadToEnd`</ph>之前<ph id="ph2">`p.WaitForExit`</ph>。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">如果父處理呼叫，死結狀況可能會造成<ph id="ph1">`p.WaitForExit`</ph>之前<ph id="ph2">`p.StandardError.ReadToEnd`</ph>和子處理序寫入足夠的文字，以填滿重新導向資料流。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">父處理序會無限期地等候子處理序結束。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">子處理序會無限期地等候從完整讀取父<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">當您從標準輸出和標準錯誤資料流讀取所有文字時，沒有類似的問題。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The following C# code, for example, performs a read operation on both streams.</source>
          <target state="translated">下列 C# 程式碼，例如，執行兩個資料流上的讀取的作業。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The code example avoids the deadlock condition by performing asynchronous read operations on the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">程式碼範例可避免發生死結狀況執行非同步讀取作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">如果父處理序的呼叫就會導致死結狀態<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>後面<ph id="ph2">`p.StandardError.ReadToEnd`</ph>和子處理序寫入足夠的文字，以填滿的錯誤資料流。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The parent process would wait indefinitely for the child process to close its <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">父處理序會無限期地等候子處理序關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">子處理序會無限期地等候從完整讀取父<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">若要避免這些相依性和其潛在的死結，您可以使用非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">或者，您可以藉由建立兩個執行緒，並讀取每個個別執行緒上的資料流的輸出，避免發生死結狀況。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">您不能混用重新導向資料流的非同步和同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">一次重新導向資料流的<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>開啟在非同步或同步模式中，所有進一步讀取該資料流上的作業必須在相同的模式。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">例如，請勿遵循<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>上<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流，反之亦然。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">不過，您可以讀取在不同模式中的兩個不同資料流。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">例如，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>，然後呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The following example uses the <ph id="ph1">`net use`</ph> command together with a user supplied argument to map a network resource.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`net use`</ph>命令搭配使用者提供的引數對應網路資源。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>It then reads the standard error stream of the net command and writes it to console.</source>
          <target state="translated">然後會讀取 net 命令標準錯誤資料流，並寫入至主控台。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream has not been defined for redirection; ensure <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> is set to <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">尚未針對重新導向定義 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流；請確定已將 <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> 設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，且將 <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設為 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream has been opened for asynchronous read operations with <ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginErrorReadLine" /&gt;</ph>.</source>
          <target state="translated">已開啟 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 資料流，用於搭配 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginErrorReadLine" /&gt;</ph> 的非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardInput">
          <source>Gets a stream used to write the input of the application.</source>
          <target state="translated">取得用來寫入應用程式輸入的資料流。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> that can be used to write the standard input stream of the application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>，可用來寫入應用程式的標準輸入資料流。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> can read input text from its standard input stream, typically the keyboard.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>可以讀取其標準輸入資料流，一般是鍵盤輸入的文字。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>By redirecting the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream, you can programmatically specify the input.</source>
          <target state="translated">藉由重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>資料流，您可以透過程式設計方式指定輸入。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</source>
          <target state="translated">例如，而不是使用鍵盤輸入，您可以提供指定之檔案的內容中的文字或另一個應用程式的輸出。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>To use <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>, you must set <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>, and you must set <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>，您必須設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>至<ph id="ph3">`false`</ph>，而且您必須將<ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A?displayProperty=nameWithType&gt;</ph>至<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>Otherwise, writing to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream throws an exception.</source>
          <target state="translated">否則，寫入<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>資料流擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The following example illustrates how to redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream of a process.</source>
          <target state="translated">下列範例說明如何將重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>資料流的處理程序。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The example starts the <ph id="ph1">`sort`</ph> command with redirected input.</source>
          <target state="translated">此範例會啟動<ph id="ph1">`sort`</ph>命令與重新導向輸入。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>It then prompts the user for text, and passes that to the <ph id="ph1">`sort`</ph> process by means of the redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream.</source>
          <target state="translated">接著會提示使用者輸入的文字，並將其傳遞至<ph id="ph1">`sort`</ph>透過重新導向處理序<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The <ph id="ph1">`sort`</ph> results are displayed to the user on the console.</source>
          <target state="translated"><ph id="ph1">`sort`</ph>結果會顯示主控台使用者。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardInput" /&gt;</ph> stream has not been defined because <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">尚未定義 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardInput" /&gt;</ph> 資料流，因為 <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph> 已設定為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Gets a stream used to read the textual output of the application.</source>
          <target state="translated">取得用來讀取應用程式文字輸出的資料流。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> that can be used to read the standard output stream of the application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph>，可用來讀取應用程式的標準輸出資料流。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes text to its standard stream, that text is normally displayed on the console.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>將文字寫入至其標準的資料流，通常會在主控台上顯示文字。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>By redirecting the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, you can manipulate or suppress the output of a process.</source>
          <target state="translated">藉由重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流，您可以操作或隱藏程序的輸出。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">比方說，您可以篩選文字、 以不同的方式，將其格式化或將輸出寫入主控台和指定的記錄檔。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>To use <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>, you must set <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>, and you must set <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>，您必須設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>至<ph id="ph3">`false`</ph>，而且您必須將<ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A?displayProperty=nameWithType&gt;</ph>至<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Otherwise, reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream throws an exception.</source>
          <target state="translated">否則，讀取<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated">重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>同步或非同步方式，就可以讀取資料流。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the output stream of the process.</source>
          <target state="translated">這類方法<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>執行程序的輸出資料流上的同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">這些同步讀取作業不會完成直到相關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>寫入其<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>串流處理，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>開始非同步讀取作業上<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">這個方法可讓資料流輸出的指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出導向至事件處理常式。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Synchronous read operations introduce a dependency between the caller reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream and the child process writing to that stream.</source>
          <target state="translated">同步讀取作業會讀取自呼叫端之間的相依性<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流及子處理序寫入該資料流。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>These dependencies can result in deadlock conditions.</source>
          <target state="translated">這些相依性可能會導致死結狀況。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">當呼叫端會從子處理序的重新導向資料流讀取時，它會相依於子系。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The caller waits on the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">呼叫端會在讀取作業，等到子寫入資料流，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">時子處理序寫入資料不足，無法填滿其重新導向資料流，它會相依於父代。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The child process waits on the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">子處理序會等候下一個寫入作業，直到父讀取完整的資料流，或關閉資料流。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The deadlock condition results when the caller and child process wait on each other to complete an operation, and neither can proceed.</source>
          <target state="translated">當呼叫端和子處理序互相等候完成作業，且無法繼續時，就會導致死結狀態。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">您可以評估呼叫端和子處理序之間的相依性，以避免死結。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The following C# code, for example, shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">例如，下列 C# 程式碼會示範如何從重新導向資料流讀取，並等候子處理序結束。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The code example avoids a deadlock condition by calling <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> before <ph id="ph2">`p.WaitForExit`</ph>.</source>
          <target state="translated">程式碼範例可避免發生死結狀況呼叫<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>之前<ph id="ph2">`p.WaitForExit`</ph>。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">如果父處理呼叫，死結狀況可能會造成<ph id="ph1">`p.WaitForExit`</ph>之前<ph id="ph2">`p.StandardOutput.ReadToEnd`</ph>和子處理序寫入足夠的文字，以填滿重新導向資料流。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">父處理序會無限期地等候子處理序結束。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">子處理序會無限期地等候從完整讀取父<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">當您從標準輸出和標準錯誤資料流讀取所有文字時，沒有類似的問題。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The following C# code, for example, performs a read operation on both streams.</source>
          <target state="translated">下列 C# 程式碼，例如，執行兩個資料流上的讀取的作業。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The code example avoids the deadlock condition by performing asynchronous read operations on the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">程式碼範例可避免發生死結狀況執行非同步讀取作業上<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">如果父處理序的呼叫就會導致死結狀態<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>後面<ph id="ph2">`p.StandardError.ReadToEnd`</ph>和子處理序寫入足夠的文字，以填滿的錯誤資料流。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The parent process would wait indefinitely for the child process to close its <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">父處理序會無限期地等候子處理序關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">子處理序會無限期地等候從完整讀取父<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">若要避免這些相依性和其潛在的死結，您可以使用非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">或者，您可以藉由建立兩個執行緒，並讀取每個個別執行緒上的資料流的輸出，避免發生死結狀況。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">您不能混用重新導向資料流的非同步和同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">一次重新導向資料流的<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>開啟在非同步或同步模式中，所有進一步讀取該資料流上的作業必須在相同的模式。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">例如，請勿遵循<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>上<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流，反之亦然。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">不過，您可以讀取在不同模式中的兩個不同資料流。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">例如，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>，然後呼叫<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>如<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>資料流。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The following example runs the ipconfig.exe command and redirects its standard output to the example’s console window.</source>
          <target state="translated">下列範例會執行 ipconfig.exe 命令，並將其標準輸出重新導向至主控台視窗中的範例。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream has not been defined for redirection; ensure <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> is set to <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">尚未針對重新導向定義 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流；請確定已將 <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> 設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，且將 <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設為 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream has been opened for asynchronous read operations with <ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginOutputReadLine" /&gt;</ph>.</source>
          <target state="translated">已開啟 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 資料流，用於搭配 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginOutputReadLine" /&gt;</ph> 的非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Starts a process resource and associates it with a <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">啟動處理序資源，並將其與 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件相關聯。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>Starts (or reuses) the process resource that is specified by the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> property of this <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component and associates it with the component.</source>
          <target state="translated">啟動 (或重複使用) 這個 <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> 屬性指定的處理序資源，並將其與元件相關聯。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a process resource is started; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if no new process resource is started (for example, if an existing process is reused).</source>
          <target state="translated">如果啟動處理序資源，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果沒有啟動任何新的處理序資源 (例如，如果重複使用現有的處理序)，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Use this overload to start a process resource and associate it with the current <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">使用此多載，啟動處理序資源，並將它與目前關聯<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The return value <ph id="ph1">`true`</ph> indicates that a new process resource was started.</source>
          <target state="translated">傳回值<ph id="ph1">`true`</ph>指出已啟動新的處理序資源。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If the process resource specified by the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property is already running on the computer, no additional process resource is started.</source>
          <target state="translated">如果所指定的處理序資源<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>隸屬<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性已在電腦上執行，啟動任何其他處理序資源。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Instead, the running process resource is reused and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">相反地，執行的處理序資源會重複使用和<ph id="ph1">`false`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You can start a ClickOnce application by specifying the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">您可以藉由指定在原本安裝應用程式的位置 （例如，網址） 啟動 ClickOnce 應用程式。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">無法啟動 ClickOnce 應用程式藉由指定硬碟機上的安裝的位置。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If you are using Visual Studio, this overload of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method is the one that you insert into your code after you drag a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component onto the designer.</source>
          <target state="translated">如果您使用 Visual Studio 中的這個多載<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法是拖曳後插入程式碼的一個<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件拖曳至設計工具。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Use the <ph id="ph1">`Properties`</ph> window to expand the <ph id="ph2">`StartInfo`</ph> category and write the appropriate value into the <ph id="ph3">`FileName`</ph> property.</source>
          <target state="translated">使用<ph id="ph1">`Properties`</ph>視窗中，展開<ph id="ph2">`StartInfo`</ph>類別寫入至適當的值和<ph id="ph3">`FileName`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Your changes will appear in the form's <ph id="ph1">`InitializeComponent`</ph> procedure.</source>
          <target state="translated">您的變更會出現在表單的<ph id="ph1">`InitializeComponent`</ph>程序。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>This overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> is not a <ph id="ph2">`static`</ph> method.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>不<ph id="ph2">`static`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You must call it from an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class.</source>
          <target state="translated">您必須呼叫它的執行個體從<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Before calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>, you must first specify <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property information for this <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, because that information is used to determine the process resource to start.</source>
          <target state="translated">然後再呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>，您必須先指定<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>這個屬性資訊<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，因為該資訊用來判斷啟動的處理序資源。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The other overloads of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method are <ph id="ph2">`static`</ph> members.</source>
          <target state="translated">其他多載的<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法<ph id="ph2">`static`</ph>成員。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You do not need to create an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component before you call those overloads of the method.</source>
          <target state="translated">您不需要建立的執行個體<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，才能呼叫這些方法多載。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Instead, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> class itself, and a new <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component is created if the process was started.</source>
          <target state="translated">相反地，您可以呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>類別本身，以及新<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>如果處理序已啟動，則會建立元件。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Or, <ph id="ph1">`null`</ph> is returned if a process was reused.</source>
          <target state="translated">或者，<ph id="ph1">`null`</ph>會傳回處理程序已重複使用。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The process resource is automatically associated with the new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component that is returned by the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method.</source>
          <target state="translated">處理序資源會自動關聯於新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件所傳回<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> members can be used to duplicate the functionality of the <ph id="ph2">`Run`</ph> dialog box of the Windows <ph id="ph3">`Start`</ph> menu.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>成員可以用來複製功能的<ph id="ph2">`Run`</ph>對話方塊中的 Windows <ph id="ph3">`Start`</ph>功能表。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Anything that can be typed into a command line can be started by setting the appropriate values in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property.</source>
          <target state="translated">任何可以輸入命令列的項目可以藉由設定適當的值啟動<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The only <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property that must be set is the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property.</source>
          <target state="translated">唯一<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性必須設為<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not have to be an executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性沒有可執行檔。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>It can be of any file type for which the extension has been associated with an application that is installed on the system.</source>
          <target state="translated">它可以是任何的副檔名已經安裝在系統的應用程式相關聯的檔案類型。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc extension if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性可以具有副檔名為.txt，如果文字檔案關聯編輯器，例如 [記事本]，或者如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案可以有副檔名為.doc。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>In the command line, you can specify actions to take for certain types of files.</source>
          <target state="translated">在命令列中，您可以指定特定的檔案類型的動作。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, you can print documents or edit text files.</source>
          <target state="translated">例如，您可以列印文件，或編輯文字檔。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Specify these actions using the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property.</source>
          <target state="translated">指定使用這些動作<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph>隸屬<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For other types of files, you can specify command-line arguments when you start the file from the <ph id="ph1">`Run`</ph> dialog box.</source>
          <target state="translated">對於其他類型的檔案，您可以指定命令列引數時開始從檔案<ph id="ph1">`Run`</ph> 對話方塊。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, you can pass a URL as an argument if you specify your browser as the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>.</source>
          <target state="translated">例如，您可以將 URL 當做引數如果您指定做為您的瀏覽器<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>These arguments can be specified in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property's <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph> member.</source>
          <target state="translated">這些引數可以指定在<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性的<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到的任何處理序時完整限定該路徑。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">否則，系統將不到路徑。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">例如，如果<ph id="ph1">`c:\mypath`</ph>不在您的路徑，也新增使用引號： <ph id="ph2">`path = %path%;"c:\mypath"`</ph>，您必須完整限定在任何處理程序<ph id="ph3">`c:\mypath`</ph>時啟動它。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行的 ASP.NET Web 網頁和伺服器控制項的程式碼。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法中的 ASP.NET Web 網頁或伺服器控制項，以限制權限在 Web 伺服器上執行新處理序。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">處理程序不會為用戶端瀏覽器的同一內容中啟動，而且沒有存取權的使用者桌面。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">每當您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>啟動處理序，您可能需要將它關閉或失去系統資源。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">關閉使用的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property.</source>
          <target state="translated">您可以檢查處理程序是否已經使用關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">這裡的附註中 managed 執行緒的 apartment 狀態是必要的。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the process component's <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>是<ph id="ph2">`true`</ph>上處理序元件<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，請確定您設定您的應用程式上的執行緒模型，藉由設定屬性<ph id="ph4">`[STAThread]`</ph>上<ph id="ph5">`main()`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">否則，managed 的執行緒可以在<ph id="ph1">`unknown`</ph>狀態，或置於<ph id="ph2">`MTA`</ph>狀態時，後者互相衝突<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>正在<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">部分方法需要的 apartment 狀態不是<ph id="ph1">`unknown`</ph>。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">如果狀態未明確設定，當應用程式遇到這種方法，則預設為<ph id="ph1">`MTA`</ph>，且一旦設定 apartment 狀態無法變更。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">不過，<ph id="ph1">`MTA`</ph>造成作業系統 shell 來管理執行緒時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The following example uses an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class to start a process.</source>
          <target state="translated">下列範例會使用的執行個體<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>啟動處理序的類別。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>No file name was specified in the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component's <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件的 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> 中未指定檔案名稱。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>-or- The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> member of the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph> while <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph>, or <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> is <ph id="ph7">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">或者，<ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> 屬性的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 成員是 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，而 <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>、<ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> 是 <ph id="ph7">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>There was an error in opening the associated file.</source>
          <target state="translated">開啟關聯檔案時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>The process object has already been disposed.</source>
          <target state="translated">處理序物件已經處置。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</source>
          <target state="translated">此方法在沒有殼層支援的作業系統上不受支援，例如 Nano 伺服器 (僅限 .NET Core)。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> that contains the information that is used to start the process, including the file name and any command-line arguments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph>，包含用來啟動處理序的資訊，包括檔名和任何命令列引數。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">啟動含有處理序啟動資訊 (例如，要啟動之處理序的檔名) 的參數所指定的處理序資源，並將該資源與新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件相關聯。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">與處理程序資源關聯的新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>，或者是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (若未啟動任何處理程序資源)。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">此外，啟動可能會傳回非空值處理程序，且其 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> 屬性會設定為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Use this overload to start a process resource by specifying a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance.</source>
          <target state="translated">使用此多載來啟動處理序資源，藉由指定<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The overload associates the resource with a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object.</source>
          <target state="translated">多載會將資源與新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">若要啟動之可執行檔的位址為 URL，如果未啟動處理程序和<ph id="ph1">`null`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">這個多載可讓您啟動處理序沒有先建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Using this overload with a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> parameter is an alternative to the explicit steps of creating a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting its <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> properties, and calling <ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">使用此多載<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>參數是明確的步驟，建立新的替代方式<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，設定其<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，以及呼叫<ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Using a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance as the parameter lets you call <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> with the most control over what is passed into the call to start the process.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>執行個體，以參數可讓您呼叫<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>最控制傳入啟動程序呼叫。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If you need to pass only a file name or a file name and arguments, it is not necessary to create a new <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance, although that is an option.</source>
          <target state="translated">如果您需要將只能在檔案名稱或檔案名稱和引數傳遞，則不需要建立新<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>執行個體，雖然這是一個選項。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The only <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A?displayProperty=nameWithType&gt;</ph> property that must be set is the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property.</source>
          <target state="translated">唯一<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A?displayProperty=nameWithType&gt;</ph>屬性必須設為<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not need to represent an executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性不需要代表可執行檔。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>It can be of any file type for which the extension has been associated with an application that is installed on the system.</source>
          <target state="translated">它可以是任何的副檔名已經安裝在系統的應用程式相關聯的檔案類型。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc extension if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性可以具有副檔名為.txt，如果文字檔案關聯編輯器，例如 [記事本]，或者如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案可以有副檔名為.doc。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>You can start a ClickOnce application by specifying the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">您可以藉由指定在原本安裝應用程式的位置 （例如，網址） 啟動 ClickOnce 應用程式。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">無法啟動 ClickOnce 應用程式藉由指定硬碟機上的安裝的位置。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> instance are set, the unmanaged <ph id="ph4">`CreateProcessWithLogonW`</ph> function is called, which starts the process in a new window even if the <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A?displayProperty=nameWithType&gt;</ph> property value is <ph id="ph6">`true`</ph> or the <ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A?displayProperty=nameWithType&gt;</ph> property value is <ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>執行個體已設定，未受<ph id="ph4">`CreateProcessWithLogonW`</ph>呼叫函式，以便啟動處理程序在新視窗即使<ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A?displayProperty=nameWithType&gt;</ph>屬性值是<ph id="ph6">`true`</ph>或<ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A?displayProperty=nameWithType&gt;</ph>屬性值是<ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph> property must be in UPN format, <bpt id="p1">*</bpt>user<ept id="p1">*</ept><ph id="ph4">@</ph><bpt id="p2">*</bpt>DNS_domain_name<ept id="p2">*</ept>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A?displayProperty=nameWithType&gt;</ph>屬性是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph>屬性必須是 UPN 格式<bpt id="p1">*</bpt>使用者<ept id="p1">*</ept><ph id="ph4">@</ph><bpt id="p2">*</bpt>DNS_domain_name<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Unlike the other overloads, the overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> that has no parameters is not a <ph id="ph2">`static`</ph> member.</source>
          <target state="translated">不同於其他多載的多載<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>不具有任何參數不是<ph id="ph2">`static`</ph>成員。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Use that overload when you have already created a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">當您已經建立的多載的使用<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，指定的啟動資訊 （包括檔案名稱），而且想要啟動處理序資源，並將它與現有關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Use one of the <ph id="ph1">`static`</ph> overloads when you want to create a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component rather than start a process for an existing component.</source>
          <target state="translated">使用其中一種<ph id="ph1">`static`</ph>多載，當您想要建立新<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，而不是啟動現有元件的處理序。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Both this overload and the overload that has no parameters allow you to specify the start information for the process resource by using a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance.</source>
          <target state="translated">這個多載並沒有參數的多載可讓您使用指定的處理序資源的啟動資訊<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到的任何處理序時完整限定該路徑。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">否則，系統將不到路徑。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">例如，如果<ph id="ph1">`c:\mypath`</ph>不在您的路徑，也新增使用引號： <ph id="ph2">`path = %path%;"c:\mypath"`</ph>，您必須完整限定在任何處理程序<ph id="ph3">`c:\mypath`</ph>時啟動它。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行的 ASP.NET Web 網頁和伺服器控制項的程式碼。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法中的 ASP.NET Web 網頁或伺服器控制項，以限制權限在 Web 伺服器上執行新處理序。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">處理程序不會為用戶端瀏覽器的同一內容中啟動，而且沒有存取權的使用者桌面。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">每當您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>啟動處理序，您可能需要將它關閉或失去系統資源。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">關閉使用的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property.</source>
          <target state="translated">您可以檢查處理程序是否已經使用關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">這裡的附註中 managed 執行緒的 apartment 狀態是必要的。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the <ph id="ph3">`startInfo`</ph> parameter, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>是<ph id="ph2">`true`</ph>上<ph id="ph3">`startInfo`</ph>參數，請確定您設定您的應用程式上的執行緒模型，藉由設定屬性<ph id="ph4">`[STAThread]`</ph>上<ph id="ph5">`main()`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">否則，managed 的執行緒可以在<ph id="ph1">`unknown`</ph>狀態，或置於<ph id="ph2">`MTA`</ph>狀態時，後者互相衝突<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>正在<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">部分方法需要的 apartment 狀態不是<ph id="ph1">`unknown`</ph>。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">如果狀態未明確設定，當應用程式遇到這種方法，則預設為<ph id="ph1">`MTA`</ph>，且一旦設定 apartment 狀態無法變更。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">不過，<ph id="ph1">`MTA`</ph>造成作業系統 shell 來管理執行緒時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</source>
          <target state="translated">下列範例首先會繁衍 Internet Explorer 的執行個體，並在瀏覽器會顯示 [我的最愛] 資料夾的內容。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>It then starts some other instances of Internet Explorer and displays some specific pages or sites.</source>
          <target state="translated">然後會啟動 Internet Explorer 的其他執行個體，並顯示一些特定網頁或網站。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</source>
          <target state="translated">最後它會啟動 Internet Explorer 與正在瀏覽至特定網站時的最小化視窗。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>For additional examples of other uses of this method, refer to the individual properties of the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> class.</source>
          <target state="translated">如需這個方法的其他用途的其他範例，請參閱個別屬性<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>No file name was specified in the <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> parameter's <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> property.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> 參數的 <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> 屬性沒有指定任何檔案名稱。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property of the <ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph>, or <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> property is also <ph id="ph7">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> 參數的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 屬性是 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，而 <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>、<ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> 屬性也是 <ph id="ph7">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property of the <ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /&gt;</ph> property is not <ph id="ph5">&lt;see langword="null" /&gt;</ph> or empty or the <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.Password" /&gt;</ph> property is not <ph id="ph7">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> 參數的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 屬性是 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，而 <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /&gt;</ph> 屬性不是 <ph id="ph5">&lt;see langword="null" /&gt;</ph> 或空白，或者 <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.Password" /&gt;</ph> 屬性不是 <ph id="ph7">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The process object has already been disposed.</source>
          <target state="translated">處理序物件已經處置。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The file specified in the <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> parameter's <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> property could not be found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> 參數的 <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> 屬性中所指定的檔案。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">開啟關聯檔案時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</source>
          <target state="translated">引數長度和處理序完整路徑長度的總和超過 2080。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</source>
          <target state="translated">與這個例外狀況相關聯的錯誤訊息可以是下列其中之一：「傳到系統呼叫的資料區域太小。」</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>or "Access is denied."</source>
          <target state="translated">或「拒絕存取」。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</source>
          <target state="translated">此方法在沒有殼層支援的作業系統上不受支援，例如 Nano 伺服器 (僅限 .NET Core)。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The name of a document or application file to run in the process.</source>
          <target state="translated">要在處理序中執行之文件或應用程式檔案的名稱。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Starts a process resource by specifying the name of a document or application file and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">藉由指定文件或應用程式檔案的名稱啟動處理序資源，並將該資源與新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件相關聯。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">與處理程序資源關聯的新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>，或者是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (若未啟動任何處理程序資源)。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">此外，啟動可能會傳回非空值處理程序，且其 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> 屬性會設定為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Use this overload to start a process resource by specifying its file name.</source>
          <target state="translated">您可以使用這個多載，指定其檔案名稱啟動處理序資源。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The overload associates the resource with a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object.</source>
          <target state="translated">多載會將資源與新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">若要啟動之可執行檔的位址為 URL，如果未啟動處理程序和<ph id="ph1">`null`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">這個多載可讓您啟動處理序沒有先建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">多載是明確的步驟，建立新的替代方式<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>隸屬<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，並呼叫<ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>You can start a ClickOnce application by setting the <ph id="ph1">`fileName`</ph> parameter to the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">您可以啟動 ClickOnce 應用程式設定<ph id="ph1">`fileName`</ph>從中您原先安裝應用程式的位置 （例如，Web 位址） 的參數。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">無法啟動 ClickOnce 應用程式藉由指定硬碟機上的安裝的位置。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Starting a process by specifying its file name is similar to typing the information in the <ph id="ph1">`Run`</ph> dialog box of the Windows <ph id="ph2">`Start`</ph> menu.</source>
          <target state="translated">藉由指定其檔案名稱啟動處理程序是類似於輸入中的資訊<ph id="ph1">`Run`</ph>對話方塊中的 Windows <ph id="ph2">`Start`</ph>功能表。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Therefore, the file name does not need to represent an executable file.</source>
          <target state="translated">因此，檔案名稱不需要代表可執行檔。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>It can be of any file type for which the extension has been associated with an application installed on the system.</source>
          <target state="translated">它可以是任何檔案類型，其副檔名已經相關聯的系統上安裝的應用程式。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>For example the file name can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">例如如果文字檔案關聯編輯器，例如 [記事本]，或者如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案可以有.doc 的檔案名稱可以有副檔名為.txt。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Similarly, in the same way that the <ph id="ph1">`Run`</ph> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph2">`fileName`</ph> parameter.</source>
          <target state="translated">同樣地，在相同的方式來<ph id="ph1">`Run`</ph>對話方塊可以接受含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的<ph id="ph2">`fileName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">例如，您可以設定<ph id="ph1">`fileName`</ph>"Notepad.exe 」 或 「 記事本 」 的參數。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>This overload does not allow command-line arguments for the process.</source>
          <target state="translated">這個多載不允許處理序的命令列引數。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If you need to specify one or more command-line arguments for the process, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> overloads.</source>
          <target state="translated">如果您需要指定一或多個處理程序的命令列引數，使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Unlike the other overloads, the overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> that has no parameters is not a <ph id="ph2">`static`</ph> member.</source>
          <target state="translated">不同於其他多載的多載<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>不具有任何參數不是<ph id="ph2">`static`</ph>成員。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Use that overload when you have already created a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">當您已經建立的多載的使用<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，指定的啟動資訊 （包括檔案名稱），而且想要啟動處理序資源，並將它與現有關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Use one of the <ph id="ph1">`static`</ph> overloads when you want to create a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component rather than start a process for an existing component.</source>
          <target state="translated">使用其中一種<ph id="ph1">`static`</ph>多載，當您想要建立新<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，而不是啟動現有元件的處理序。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Both this overload and the overload that has no parameters allow you to specify the file name of the process resource to start.</source>
          <target state="translated">這個多載並沒有參數的多載可讓您指定要啟動的處理序資源的檔案名稱。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到的任何處理序時完整限定該路徑。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">否則，系統將不到路徑。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">例如，如果<ph id="ph1">`c:\mypath`</ph>不在您的路徑，也新增使用引號： <ph id="ph2">`path = %path%;"c:\mypath"`</ph>，您必須完整限定在任何處理程序<ph id="ph3">`c:\mypath`</ph>時啟動它。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行的 ASP.NET Web 網頁和伺服器控制項的程式碼。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法中的 ASP.NET Web 網頁或伺服器控制項，以限制權限在 Web 伺服器上執行新處理序。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">處理程序不會為用戶端瀏覽器的同一內容中啟動，而且沒有存取權的使用者桌面。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">每當您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>啟動處理序，您可能需要將它關閉或失去系統資源。</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">關閉使用的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property.</source>
          <target state="translated">您可以檢查處理程序是否已經使用關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">這裡的附註中 managed 執行緒的 apartment 狀態是必要的。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the process component's <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>是<ph id="ph2">`true`</ph>上處理序元件<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，請確定您設定您的應用程式上的執行緒模型，藉由設定屬性<ph id="ph4">`[STAThread]`</ph>上<ph id="ph5">`main()`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">否則，managed 的執行緒可以在<ph id="ph1">`unknown`</ph>狀態，或置於<ph id="ph2">`MTA`</ph>狀態時，後者互相衝突<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>正在<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">部分方法需要的 apartment 狀態不是<ph id="ph1">`unknown`</ph>。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">如果狀態未明確設定，當應用程式遇到這種方法，則預設為<ph id="ph1">`MTA`</ph>，且一旦設定 apartment 狀態無法變更。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">不過，<ph id="ph1">`MTA`</ph>造成作業系統 shell 來管理執行緒時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</source>
          <target state="translated">下列範例首先會繁衍 Internet Explorer 的執行個體，並在瀏覽器會顯示 [我的最愛] 資料夾的內容。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>It then starts some other instances of Internet Explorer and displays some specific pages or sites.</source>
          <target state="translated">然後會啟動 Internet Explorer 的其他執行個體，並顯示一些特定網頁或網站。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</source>
          <target state="translated">最後它會啟動 Internet Explorer 與正在瀏覽至特定網站時的最小化視窗。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">開啟關聯的檔案時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">處理序物件已經處置。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The PATH environment variable has a string containing quotes.</source>
          <target state="translated">PATH 環境變數具有含引號的字串。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The name of an application file to run in the process.</source>
          <target state="translated">要在處理序中執行之應用程式檔案的名稱。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Command-line arguments to pass when starting the process.</source>
          <target state="translated">啟動處理程序時要傳遞的命令列引數。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">藉由指定應用程式的名稱和一組命令列引數來啟動處理序資源，並將該資源與新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件相關聯。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">與處理程序資源關聯的新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>，或者是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (若未啟動任何處理程序資源)。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">此外，啟動可能會傳回非空值處理程序，且其 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> 屬性會設定為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Use this overload to start a process resource by specifying its file name and command-line arguments.</source>
          <target state="translated">使用這個多載來啟動處理序資源藉由指定其檔案名稱和命令列引數。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The overload associates the resource with a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object.</source>
          <target state="translated">多載會將資源與新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">若要啟動之可執行檔的位址為 URL，如果未啟動處理程序和<ph id="ph1">`null`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">這個多載可讓您啟動處理序沒有先建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph> members of the <ph id="ph4">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph5">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph6">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">多載是明確的步驟，建立新的替代方式<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>成員<ph id="ph4">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，並呼叫<ph id="ph5">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph6">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Starting a process by specifying its file name and arguments is similar to typing the file name and command-line arguments in the <ph id="ph1">`Run`</ph> dialog box of the Windows <ph id="ph2">`Start`</ph> menu.</source>
          <target state="translated">啟動處理序藉由指定其檔案名稱和引數是類似於輸入檔案名稱及命令列引數中的<ph id="ph1">`Run`</ph>對話方塊中的 Windows <ph id="ph2">`Start`</ph>功能表。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Therefore, the file name does not need to represent an executable file.</source>
          <target state="translated">因此，檔案名稱不需要代表可執行檔。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>It can be of any file type for which the extension has been associated with an application installed on the system.</source>
          <target state="translated">它可以是任何檔案類型，其副檔名已經相關聯的系統上安裝的應用程式。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>For example the file name can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">例如如果文字檔案關聯編輯器，例如 [記事本]，或者如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案可以有.doc 的檔案名稱可以有副檔名為.txt。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Similarly, in the same way that the <ph id="ph1">`Run`</ph> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph2">`fileName`</ph> parameter.</source>
          <target state="translated">同樣地，在相同的方式來<ph id="ph1">`Run`</ph>對話方塊可以接受含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的<ph id="ph2">`fileName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">例如，您可以設定<ph id="ph1">`fileName`</ph>"Notepad.exe 」 或 「 記事本 」 的參數。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents an executable file, the <ph id="ph2">`arguments`</ph> parameter might represent a file to act upon, such as the text file in <ph id="ph3">`Notepad.exe myfile.txt`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`fileName`</ph>參數所代表的可執行檔，<ph id="ph2">`arguments`</ph>參數可能代表可以操作，例如文字檔的檔案<ph id="ph3">`Notepad.exe myfile.txt`</ph>。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents a command (.cmd) file, the <ph id="ph2">`arguments`</ph> parameter must include either a "<ph id="ph3">`/c`</ph>" or "<ph id="ph4">`/k`</ph>" argument to specify whether the command window exits or remains after completion.</source>
          <target state="translated">如果<ph id="ph1">`fileName`</ph>參數所代表的命令 (.cmd) 檔，<ph id="ph2">`arguments`</ph>參數必須包含"<ph id="ph3">`/c`</ph>「 或 」<ph id="ph4">`/k`</ph>"引數來指定命令視窗是否會結束或完成之後會維持。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Unlike the other overloads, the overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> that has no parameters is not a <ph id="ph2">`static`</ph> member.</source>
          <target state="translated">不同於其他多載的多載<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>不具有任何參數不是<ph id="ph2">`static`</ph>成員。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Use that overload when you have already created a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">當您已經建立的多載的使用<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，指定的啟動資訊 （包括檔案名稱），而且想要啟動處理序資源，並將它與現有關聯<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Use one of the <ph id="ph1">`static`</ph> overloads when you want to create a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component rather than start a process for an existing component.</source>
          <target state="translated">使用其中一種<ph id="ph1">`static`</ph>多載，當您想要建立新<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，而不是啟動現有元件的處理序。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Both this overload and the overload that has no parameters allow you to specify the file name of the process resource to start and command-line arguments to pass.</source>
          <target state="translated">這個多載並沒有參數的多載可讓您指定要傳遞的命令列引數與啟動的處理序資源的檔案名稱。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到的任何處理序時完整限定該路徑。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">否則，系統將不到路徑。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">例如，如果<ph id="ph1">`c:\mypath`</ph>不在您的路徑，也新增使用引號： <ph id="ph2">`path = %path%;"c:\mypath"`</ph>，您必須完整限定在任何處理程序<ph id="ph3">`c:\mypath`</ph>時啟動它。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行的 ASP.NET Web 網頁和伺服器控制項的程式碼。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法中的 ASP.NET Web 網頁或伺服器控制項，以限制權限在 Web 伺服器上執行新處理序。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">處理程序不會為用戶端瀏覽器的同一內容中啟動，而且沒有存取權的使用者桌面。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">每當您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>啟動處理序，您可能需要將它關閉或失去系統資源。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">關閉使用的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property..</source>
          <target state="translated">您可以檢查處理程序是否已經使用關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性...</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">這裡的附註中 managed 執行緒的 apartment 狀態是必要的。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the process component's <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>是<ph id="ph2">`true`</ph>上處理序元件<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，請確定您設定您的應用程式上的執行緒模型，藉由設定屬性<ph id="ph4">`[STAThread]`</ph>上<ph id="ph5">`main()`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">否則，managed 的執行緒可以在<ph id="ph1">`unknown`</ph>狀態，或置於<ph id="ph2">`MTA`</ph>狀態時，後者互相衝突<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>正在<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">部分方法需要的 apartment 狀態不是<ph id="ph1">`unknown`</ph>。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">如果狀態未明確設定，當應用程式遇到這種方法，則預設為<ph id="ph1">`MTA`</ph>，且一旦設定 apartment 狀態無法變更。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">不過，<ph id="ph1">`MTA`</ph>造成作業系統 shell 來管理執行緒時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</source>
          <target state="translated">下列範例首先會繁衍 Internet Explorer 的執行個體，並在瀏覽器會顯示 [我的最愛] 資料夾的內容。</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>It then starts some other instances of Internet Explorer and displays some specific pages or sites.</source>
          <target state="translated">然後會啟動 Internet Explorer 的其他執行個體，並顯示一些特定網頁或網站。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</source>
          <target state="translated">最後它會啟動 Internet Explorer 與正在瀏覽至特定網站時的最小化視窗。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">開啟關聯的檔案時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</source>
          <target state="translated">引數長度和處理序完整路徑長度的總和超過 2080。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</source>
          <target state="translated">與這個例外狀況相關聯的錯誤訊息可以是下列其中之一：「傳到系統呼叫的資料區域太小。」</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>or "Access is denied."</source>
          <target state="translated">或「拒絕存取」。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">處理序物件已經處置。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The PATH environment variable has a string containing quotes.</source>
          <target state="translated">PATH 環境變數具有含引號的字串。</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The name of an application file to run in the process.</source>
          <target state="translated">要在處理序中執行之應用程式檔案的名稱。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The user name to use when starting the process.</source>
          <target state="translated">要在啟動處理序時使用的使用者名稱。</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> that contains the password to use when starting the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>，包含啟動處理序時要使用的密碼。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The domain to use when starting the process.</source>
          <target state="translated">要在啟動處理序時使用的網域。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Starts a process resource by specifying the name of an application, a user name, a password, and a domain and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">藉由指定應用程式的名稱、使用者名稱、密碼和網域來啟動處理序資源，並將該資源與新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件相關聯。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">與處理程序資源關聯的新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>，或者是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (若未啟動任何處理程序資源)。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">此外，啟動可能會傳回非空值處理程序，且其 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> 屬性會設定為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Use this overload to create a new process and its primary thread by specifying its file name, user name, password, and domain.</source>
          <target state="translated">您可以使用這個多載，指定其檔案名稱、 使用者名稱、 密碼和網域來建立新的程序，而且其主執行緒。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The new process then runs the specified executable file in the security context of the specified credentials (user, domain, and password).</source>
          <target state="translated">新的處理序會指定可執行檔中指定的認證 （使用者、 網域及密碼） 的安全性內容。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>When the executable file is located on a remote drive, you must identify the network share by using a uniform resource identifier (URI), not a linked drive letter.</source>
          <target state="translated">當可執行檔位於遠端的磁碟機上時，您必須使用統一資源識別元 (URI)，未連結的磁碟機代號來識別網路共用。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">若要啟動之可執行檔的位址為 URL，如果未啟動處理程序和<ph id="ph1">`null`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">這個多載可讓您啟動處理序沒有先建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph> properties of the <ph id="ph6">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph7">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph8">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">多載是明確的步驟，建立新的替代方式<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph>屬性<ph id="ph6">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，並呼叫<ph id="ph7">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>的<ph id="ph8">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Similarly, in the same way that the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph1">`fileName`</ph> parameter.</source>
          <target state="translated">同樣地，在相同的方式來<bpt id="p1">**</bpt>執行<ept id="p1">**</ept>對話方塊可以接受含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的<ph id="ph1">`fileName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">例如，您可以設定<ph id="ph1">`fileName`</ph>"Notepad.exe 」 或 「 記事本 」 的參數。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents an executable file, the <ph id="ph2">`arguments`</ph> parameter might represent a file to act upon, such as the text file in <ph id="ph3">`Notepad.exe myfile.txt`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`fileName`</ph>參數所代表的可執行檔，<ph id="ph2">`arguments`</ph>參數可能代表可以操作，例如文字檔的檔案<ph id="ph3">`Notepad.exe myfile.txt`</ph>。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The file name must represent an executable file in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> overloads that have <ph id="ph2">`userName`</ph>, <ph id="ph3">`password`</ph>, and <ph id="ph4">`domain`</ph> parameters.</source>
          <target state="translated">檔案名稱必須代表在可執行檔<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>的多載<ph id="ph2">`userName`</ph>， <ph id="ph3">`password`</ph>，和<ph id="ph4">`domain`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">每當您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>啟動處理序，您可能需要將它關閉或失去系統資源。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">關閉使用的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property..</source>
          <target state="translated">您可以檢查處理程序是否已經使用關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性...</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The following code example shows the use of this overload to start an executable file and also demonstrates the throwing of a <ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> when an attempt is made to start an application associated with a nonexecutable file.</source>
          <target state="translated">下列程式碼範例將示範如何使用這個多載來啟動可執行檔，同時也會示範擲回的<ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>當嘗試啟動不可執行的檔案與相關聯的應用程式。</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>No file name was specified.</source>
          <target state="translated">未指定檔案名稱。</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>There was an error in opening the associated file.</source>
          <target state="translated">開啟關聯檔案時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">處理序物件已經處置。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Method not supported on Linux or macOS (.NET Core only).</source>
          <target state="translated">此方法在 Linux 或 macOS 上不受支援 (僅限 .NET Core)。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The name of an application file to run in the process.</source>
          <target state="translated">要在處理序中執行之應用程式檔案的名稱。</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Command-line arguments to pass when starting the process.</source>
          <target state="translated">啟動處理程序時要傳遞的命令列引數。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The user name to use when starting the process.</source>
          <target state="translated">要在啟動處理序時使用的使用者名稱。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> that contains the password to use when starting the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>，包含啟動處理序時要使用的密碼。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The domain to use when starting the process.</source>
          <target state="translated">要在啟動處理序時使用的網域。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Starts a process resource by specifying the name of an application, a set of command-line arguments, a user name, a password, and a domain and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">藉由指定應用程式的名稱、一組命令列引數、使用者名稱、密碼和網域來啟動處理序資源，並將該資源與新的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件相關聯。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">與處理程序資源關聯的新 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>，或者是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (若未啟動任何處理程序資源)。</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">此外，啟動可能會傳回非空值處理程序，且其 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> 屬性會設定為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Use this overload to create a new process and its primary thread by specifying its file name, command-line arguments, user name, password, and domain.</source>
          <target state="translated">您可以使用這個多載，指定其檔案名稱、 命令列引數、 使用者名稱、 密碼和網域來建立新的程序，而且其主執行緒。</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The new process then runs the specified executable file in the security context of the specified credentials (user, domain, and password).</source>
          <target state="translated">新的處理序會指定可執行檔中指定的認證 （使用者、 網域及密碼） 的安全性內容。</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>When the executable file is located on a remote drive, you must identify the network share by using a uniform resource identifier (URI), not a linked drive letter.</source>
          <target state="translated">當可執行檔位於遠端的磁碟機上時，您必須使用統一資源識別元 (URI)，未連結的磁碟機代號來識別網路共用。</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">若要啟動之可執行檔的位址為 URL，如果未啟動處理程序和<ph id="ph1">`null`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">這個多載可讓您啟動處理序沒有先建立新<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph> properties of the <ph id="ph7">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph8">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph9">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">多載是明確的步驟，建立新的替代方式<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，設定<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph>屬性<ph id="ph7">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性，並呼叫<ph id="ph8">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph9">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Similarly, in the same way that the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph1">`fileName`</ph> parameter.</source>
          <target state="translated">同樣地，在相同的方式來<bpt id="p1">**</bpt>執行<ept id="p1">**</ept>對話方塊可以接受含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的<ph id="ph1">`fileName`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">例如，您可以設定<ph id="ph1">`fileName`</ph>"Notepad.exe 」 或 「 記事本 」 的參數。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents an executable file, the <ph id="ph2">`arguments`</ph> parameter might represent a file to act upon, such as the text file in <ph id="ph3">`Notepad.exe myfile.txt`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`fileName`</ph>參數所代表的可執行檔，<ph id="ph2">`arguments`</ph>參數可能代表可以操作，例如文字檔的檔案<ph id="ph3">`Notepad.exe myfile.txt`</ph>。</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The file name must represent an executable file in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> overloads that have <ph id="ph2">`userName`</ph>, <ph id="ph3">`password`</ph>, and <ph id="ph4">`domain`</ph> parameters.</source>
          <target state="translated">檔案名稱必須代表在可執行檔<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>的多載<ph id="ph2">`userName`</ph>， <ph id="ph3">`password`</ph>，和<ph id="ph4">`domain`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">每當您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>啟動處理序，您可能需要將它關閉或失去系統資源。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">關閉使用的處理程序<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property..</source>
          <target state="translated">您可以檢查處理程序是否已經使用關閉其<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>屬性...</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>No file name was specified.</source>
          <target state="translated">未指定檔案名稱。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">開啟關聯的檔案時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The sum of the length of the arguments and the length of the full path to the associated file exceeds 2080.</source>
          <target state="translated">引數長度和關聯檔案完整路徑長度的總和超過 2080。</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</source>
          <target state="translated">與這個例外狀況關聯的錯誤訊息可以是下列其中之一：「傳遞到系統呼叫的資料區太小」，</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>or "Access is denied."</source>
          <target state="translated">或「拒絕存取」。</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">處理序物件已經處置。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Method not supported on Linux or macOS (.NET Core only).</source>
          <target state="translated">此方法在 Linux 或 macOS 上不受支援 (僅限 .NET Core)。</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Gets or sets the properties to pass to the <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Start" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>.</source>
          <target state="translated">取得或設定要傳遞給 <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 之 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Start" /&gt;</ph> 方法的屬性。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> that represents the data with which to start the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph>，代表用來啟動處理序的資料。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>These arguments include the name of the executable file or document used to start the process.</source>
          <target state="translated">這些引數包括用來啟動處理序的可執行檔或文件的名稱。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> represents the set of parameters to use to start a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> 表示要用來啟動處理程序的參數集。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> is called, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> is used to specify the process to start.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>呼叫時，<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>用來指定要啟動處理序。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The only necessary <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> member to set is the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property.</source>
          <target state="translated">只需要<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>成員設定為<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Starting a process by specifying the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property is similar to typing the information in the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box of the Windows <bpt id="p2">**</bpt>Start<ept id="p2">**</ept> menu.</source>
          <target state="translated">藉由指定啟動處理序<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性是類似於輸入中的資訊<bpt id="p1">**</bpt>執行<ept id="p1">**</ept>對話方塊中的 Windows <bpt id="p2">**</bpt>啟動<ept id="p2">**</ept>功能表。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not need to represent an executable file.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性不需要代表可執行檔。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>It can be of any file type for which the extension has been associated with an application installed on the system.</source>
          <target state="translated">它可以是任何檔案類型，其副檔名已經相關聯的系統上安裝的應用程式。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">例如<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>可以有副檔名為.txt，如果文字檔案關聯編輯器，例如 [記事本]，或者如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案可以有.doc。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Similarly, in the same way that the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member.</source>
          <target state="translated">同樣地，在相同的方式來<bpt id="p1">**</bpt>執行<ept id="p1">**</ept>對話方塊可以接受含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">例如，您可以設定<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>"Notepad.exe 」 或 「 記事本 」 的屬性。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>You can start a ClickOnce application by setting the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property to the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">您可以啟動 ClickOnce 應用程式設定<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>從中您原先安裝應用程式的位置 （例如，Web 位址） 的屬性。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">無法啟動 ClickOnce 應用程式藉由指定硬碟機上的安裝的位置。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If the file name involves a nonexecutable file, such as a .doc file, you can include a verb specifying what action to take on the file.</source>
          <target state="translated">如果檔案名稱包含非執行檔，例如.doc 檔案，您可以包含指定要在檔案上採取的動作動詞命令。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example, you could set the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> to "Print" for a file ending in the .doc extension.</source>
          <target state="translated">例如，您可以設定<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph>"Print"結尾.doc 副檔名的檔案。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The file name specified in the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not need to have an extension if you manually enter a value for the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> property.</source>
          <target state="translated">在指定的檔案名稱<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性不需要有副檔名，如果您手動輸入的值<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>However, if you use the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</ph> property to determine what verbs are available, you must include the extension.</source>
          <target state="translated">不過，如果您使用<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</ph>屬性來判斷哪些指令動詞可供使用，您必須包含副檔名。</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>You can change the parameters specified in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property up to the time that you call the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method on the process.</source>
          <target state="translated">您可以變更指定的參數<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性最多的時間，讓您呼叫<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法的程序。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>After you start the process, changing the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> values does not affect or restart the associated process.</source>
          <target state="translated">啟動程序之後，變更<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>值不影響或重新啟動相關的處理序。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph> properties set, the unmanaged <ph id="ph4">`CreateProcessWithLogonW`</ph> function is called, which starts the process in a new window even if the <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A&gt;</ph> property value is <ph id="ph6">`true`</ph> or the <ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A&gt;</ph> property value is <ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden&gt;</ph>.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29&gt;</ph>方法<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph>屬性設定，未受<ph id="ph4">`CreateProcessWithLogonW`</ph>呼叫函式，以便啟動處理程序在新視窗即使<ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A&gt;</ph>屬性值是<ph id="ph6">`true`</ph>或<ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A&gt;</ph>屬性值是<ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you did not use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method to start a process, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property does not reflect the parameters used to start the process.</source>
          <target state="translated">如果您未使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法來啟動處理程序，<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性並不會反映用來啟動處理序的參數。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example, if you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> to get an array of processes running on the computer, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property of each <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> does not contain the original file name or arguments used to start the process.</source>
          <target state="translated">例如，如果您使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>取得陣列的電腦上，執行的處理序<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>每個屬性<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>不包含原始的檔案名稱或用來啟動處理序引數。</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>When the process is started, the file name is the file that populates the (read-only) <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property.</source>
          <target state="translated">檔案名稱處理程序啟動時，會填入 （唯讀） 的檔案<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you want to retrieve the executable file that is associated with the process after the process has started, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property.</source>
          <target state="translated">如果您想要擷取可執行檔所關聯之處理序啟動處理程序之後，請使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you want to set the executable file of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance for which an associated process has not been started, use the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property's <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member.</source>
          <target state="translated">如果您想要設定的可執行檔<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>其相關聯的處理序尚未啟動執行個體，請使用<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性的<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Because the members of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property are arguments that are passed to the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method of a process, changing the <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property after the associated process has started will not reset the <ph id="ph4">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property.</source>
          <target state="translated">因為成員<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>屬性是引數傳遞至<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>方法的程序中，然後再變更<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>屬性相關聯的處理序啟動後不會重設<ph id="ph4">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>These properties are used only to initialize the associated process.</source>
          <target state="translated">這些屬性只能用於初始化相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The following example populates a <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> with the file to execute, the action performed on it and whether it should displays a user interface.</source>
          <target state="translated">下列範例會填入<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>来執行的檔案，與它執行動作，以及是否應該顯示使用者介面。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For additional examples, refer to the reference pages for properties of the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> class.</source>
          <target state="translated">如需其他範例，請參閱屬性的參考頁面<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The value that specifies the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> 的值是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>Gets the time that the associated process was started.</source>
          <target state="translated">取得相關的處理序啟動的時間。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>An object  that indicates when the process started.</source>
          <target state="translated">物件，指出處理序何時啟動。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>An exception is thrown if the process is not running.</source>
          <target state="translated">如果處理序並未執行，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartTime" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>The process has exited.</source>
          <target state="translated">處理序已經結束。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>The process has not been started.</source>
          <target state="translated">尚未啟動處理序。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>An error occurred in the call to the Windows function.</source>
          <target state="translated">呼叫 Windows 函式時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>Gets or sets the object used to marshal the event handler calls that are issued as a result of a process exit event.</source>
          <target state="translated">取得或設定物件，用以封送處理因處理序結束事件而發出的事件處理常式呼叫。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> used to marshal event handler calls that are issued as a result of an <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event on the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph>，用以封送處理因處理序上的 <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> 事件而發出的事件處理常式呼叫。</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph> is <ph id="ph2">`null`</ph>, methods that handle the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event are called on a thread from the system thread pool.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph>是<ph id="ph2">`null`</ph>，處理方法<ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>系統執行緒集區的執行緒上呼叫事件。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>For more information about system thread pools, see <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</source>
          <target state="translated">如需系統執行緒集區的詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event is handled by a visual Windows Forms component, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, accessing the component through the system thread pool might not work, or might result in an exception.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>事件由 visual 的 Windows Form 元件，例如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>，透過系統執行緒集區存取元件可能無法運作，或可能會導致例外狀況。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>Avoid this by setting <ph id="ph1">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> to a Windows Forms component, which causes the methods handling the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event to be called on the same thread on which the component was created.</source>
          <target state="translated">避免這種設定<ph id="ph1">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>給 Windows Form 元件時，會導致處理方法<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>元件建立所在的相同執行緒上呼叫的事件。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is used inside <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> in a Windows Forms designer, <ph id="ph3">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> is automatically set to the control that contains the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>內使用<ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>在 Windows Form 設計工具中，<ph id="ph3">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>會自動設定為包含的控制項<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>For example, if you place a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> on a designer for <ph id="ph2">`Form1`</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>) the <ph id="ph4">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> property of <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> is set to the instance of <ph id="ph6">`Form1`</ph>:</source>
          <target state="translated">例如，如果您將<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>的設計工具上<ph id="ph2">`Form1`</ph>(繼承自<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>)<ph id="ph4">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>屬性<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>設為執行個體<ph id="ph6">`Form1`</ph>:</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>Typically, this property is set when the component is placed inside a control or form, because those components are bound to a specific thread.</source>
          <target state="translated">一般而言，這個屬性設定時元件會放置在控制項或表單，因為這些元件會繫結至特定執行緒。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>Gets the set of threads that are running in the associated process.</source>
          <target state="translated">取得正在相關的處理序中執行的執行緒集。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessThread" /&gt;</ph> representing the operating system threads currently running in the associated process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessThread" /&gt;</ph> 類型的陣列，代表目前正在相關聯處理序中執行的作業系統執行緒。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>A thread executes code in a process.</source>
          <target state="translated">執行緒處理序中執行程式碼。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Each process is started with a single thread, its primary thread.</source>
          <target state="translated">每個處理序會啟動與單一執行緒，其主要執行緒。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Any thread can create additional threads.</source>
          <target state="translated">任何執行緒可以建立額外的執行緒。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Threads within a process share the address space of the process.</source>
          <target state="translated">執行緒處理序內共用處理序的位址空間。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread&gt;</ph> to get all the threads associated with the current process.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread&gt;</ph>，取得與目前的處理序相關聯的所有執行緒。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>The primary thread is not necessarily at index zero in the array.</source>
          <target state="translated">主執行緒不一定是索引位置為零的陣列中。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>The process does not have an <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph>, or no process is associated with the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance.</source>
          <target state="translated">處理序沒有 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph>，或沒有與 <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 執行個體關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>The associated process has exited.</source>
          <target state="translated">關聯處理序已結束。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)；將 <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> 設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 可存取 Windows 98 和 Windows Me 上的這個屬性。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.ToString">
          <source>Formats the process's name as a string, combined with the parent component type, if applicable.</source>
          <target state="translated">將處理序的名稱格式化為字串，如果適用，將它和父代 (Parent) 元件類型結合。</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.ToString">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessName" /&gt;</ph>, combined with the base component's <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> return value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessName" /&gt;</ph>，與基底元件的 <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 傳回值搭配相結合。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.ToString">
          <source><ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.ToString" /&gt;</ph> is not supported on Windows 98.</source>
          <target state="translated">Windows 98 不支援 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.ToString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>Gets the total processor time for this process.</source>
          <target state="translated">取得這個處理序的總處理器時間。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the amount of time that the associated process has spent utilizing the CPU.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，表示相關聯處理序花在使用 CPU 的時間。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>This value is the sum of the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph>.</source>
          <target state="translated">這個值是 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph> 的總和。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.TotalProcessorTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.TotalProcessorTime" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>Gets the user processor time for this process.</source>
          <target state="translated">取得這個處理序的使用者處理器時間。</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the amount of time that the associated process has spent running code inside the application portion of the process (not inside the operating system core).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，表示相關聯處理序花在處理序的應用程式部分內 (而不是在作業系統核心內) 執行程式碼的時間。</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示處理序的結束代碼。</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試存取於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">這個屬性僅供在本機電腦執行的處理序使用。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>Gets the size of the process's virtual memory, in bytes.</source>
          <target state="translated">取得處理序的虛擬記憶體的大小 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>The amount of virtual memory, in bytes, that the associated process has requested.</source>
          <target state="translated">虛擬記憶體量 (以位元組為單位)，指關聯的處理序所要求的記憶體。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>Gets the amount of the virtual memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的虛擬記憶體量，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The amount of virtual memory, in bytes, allocated for the associated process.</source>
          <target state="translated">配置給關聯處理序的虛擬記憶體量，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The value returned by this property represents the current size of virtual memory used by the process, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表目前的程序，以位元組為單位使用的虛擬記憶體大小。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The operating system maps the virtual address space for each process either to pages loaded in physical memory, or to pages stored in the virtual memory paging file on disk.</source>
          <target state="translated">作業系統會對應至載入實體記憶體中，或網頁儲存在磁碟上的虛擬記憶體分頁檔案中每個處理序的虛擬位址空間。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Virtual Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>虛擬位元組<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Sets the period of time to wait for the associated process to exit, and blocks the current thread of execution until the time has elapsed or the process has exited.</source>
          <target state="translated">設定要等待相關的處理序結束的時間，並且阻止目前的執行緒執行，直到等候時間耗盡或者處理序已經結束為止。</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>To avoid blocking the current thread, use the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event.</source>
          <target state="translated">為避免封鎖目前的執行緒，請使用 <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>For code examples, see the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> property reference pages.</source>
          <target state="translated">對於程式碼範例，請參閱 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 與 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> 屬性參考頁面。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Instructs the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait indefinitely for the associated process to exit.</source>
          <target state="translated">指示 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件無限期等候相關聯處理序結束。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> makes the current thread wait until the associated process terminates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> 可讓目前的執行緒等候，直到相關聯的處理序終止為止。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>It should be called after all other methods are called on the process.</source>
          <target state="translated">所有其他方法會呼叫的程序之後，應該要進行呼叫。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>To avoid blocking the current thread, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated">為避免封鎖目前的執行緒，請使用 <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This method instructs the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait an infinite amount of time for the process and event handlers to exit.</source>
          <target state="translated">這個方法會指示<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>等待時間結束的處理程序和事件處理常式無限數量的元件。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This can cause an application to stop responding.</source>
          <target state="translated">這會造成應用程式停止回應。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> for a process that has a user interface, the request to the operating system to terminate the associated process might not be handled if the process is written to never enter its message loop.</source>
          <target state="translated">例如，如果您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>程序中具有使用者介面，作業系統終止相關的處理序的要求可能不會處理程序寫入永遠不會進入其訊息迴圈。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> and earlier versions, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload waited for <ph id="ph3">&lt;xref:System.Int32.MaxValue&gt;</ph> milliseconds (approximately 24 days), not indefinitely.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>及更新版本、<ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>多載等候<ph id="ph3">&lt;xref:System.Int32.MaxValue&gt;</ph>毫秒 （大約 24 天），非無限期。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Also, previous versions did not wait for the event handlers to exit if the full <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> time was reached.</source>
          <target state="translated">此外，舊版未等待事件處理常式，如果結束完整<ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>已達時間。</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This overload ensures that all processing has been completed, including the handling of asynchronous events for redirected standard output.</source>
          <target state="translated">這個多載可確保，所有處理都完成後，包括重新導向標準輸出的非同步事件處理。</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>You should use this overload after a call to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> overload when standard output has been redirected to asynchronous event handlers.</source>
          <target state="translated">您應該使用這個多載呼叫後<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>標準輸出已重新導向至非同步事件處理常式時，多載。</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>When an associated process exits (that is, when it is shut down by the operation system through a normal or abnormal termination), the system stores administrative information about the process and returns to the component that had called <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>.</source>
          <target state="translated">系統時相關聯的處理序結束時 （亦即，它會關閉程式透過標準或不正常終止的作業系統），儲存系統管理程序的詳細資訊，並傳回給已經呼叫元件<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component can then access the information, which includes the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>, by using the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件可以存取資訊，其中包括<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>，使用<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>已結束的處理序。</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Because the associated process has exited, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the component no longer points to an existing process resource.</source>
          <target state="translated">相關聯的處理序已結束，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>元件的屬性不會再指向現有的處理序資源。</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Instead, the handle can be used only to access the operating system's information about the process resource.</source>
          <target state="translated">相反地，控制代碼可用來存取作業系統的處理序資源相關的資訊。</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>The system is aware of handles to exited processes that have not been released by <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components, so it keeps the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> information in memory until the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> component specifically frees the resources.</source>
          <target state="translated">系統會考慮到已結束處理程序未釋放的控制代碼<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，因此它會保存<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>資訊在記憶體中，直到<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>元件特別釋出資源。</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>For this reason, any time you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> when the associated process has terminated and you no longer need any administrative information about it.</source>
          <target state="translated">基於這個理由，每當您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，請呼叫<ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>當相關聯的處理序已終止，您不再需要任何系統管理相關資訊。</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> frees the memory allocated to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> 釋出配置給已結束處理程序的記憶體。</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>See the Remarks section of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> property reference page.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節的<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>屬性參考頁面。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>The wait setting could not be accessed.</source>
          <target state="translated">無法存取等候設定。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>No process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> has been set, and a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> from which the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property can be determined does not exist.</source>
          <target state="translated">尚未設定任何處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph>，而且可從中判斷 <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 屬性的 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> 不存在。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>You are attempting to call <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit" /&gt;</ph> for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試呼叫於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This method is available only for processes that are running on the local computer.</source>
          <target state="translated">這個方法僅適用於在本機電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The amount of time, in milliseconds, to wait for the associated process to exit.</source>
          <target state="translated">等候相關的處理序結束的時間量，以毫秒計算。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The maximum is the largest possible value of a 32-bit integer, which represents infinity to the operating system.</source>
          <target state="translated">最大值是 32 位元整數的最大可能值，對作業系統來說，這表示無限。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>Instructs the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait the specified number of milliseconds for the associated process to exit.</source>
          <target state="translated">指示 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件等候相關聯處理序結束的指定毫秒數。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated process has exited; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果相關聯處理序已結束，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> makes the current thread wait until the associated process terminates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> 可讓目前的執行緒等候，直到相關聯的處理序終止為止。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>It should be called after all other methods are called on the process.</source>
          <target state="translated">所有其他方法會呼叫的程序之後，應該要進行呼叫。</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>To avoid blocking the current thread, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated">為避免封鎖目前的執行緒，請使用 <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>This method instructs the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait a finite amount of time for the process to exit.</source>
          <target state="translated">這個方法會指示<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>等候處理序結束的時間有限數量的元件。</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>If the associated process does not exit by the end of the interval because the request to terminate is denied, <ph id="ph1">`false`</ph> is returned to the calling procedure.</source>
          <target state="translated">如果相關聯的處理序未結束的間隔端點所終止要求遭到拒絕，因為<ph id="ph1">`false`</ph>會傳回到呼叫的程序。</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>You can specify <ph id="ph1">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`milliseconds`</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29?displayProperty=nameWithType&gt;</ph> will behave the same as the <ph id="ph4">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload.</source>
          <target state="translated">您可以指定<ph id="ph1">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType&gt;</ph>如<ph id="ph2">`milliseconds`</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29?displayProperty=nameWithType&gt;</ph>行為相同<ph id="ph4">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>If you pass 0 (zero) to the method, it returns <ph id="ph1">`true`</ph> only if the process has already exited; otherwise, it immediately returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果您將 0 （零） 傳遞至方法，它會傳回<ph id="ph1">`true`</ph>只有當處理序已經結束; 否則會立即傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> and earlier versions, if <ph id="ph2">`milliseconds`</ph> was -1, the <ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> overload waited for <ph id="ph4">&lt;xref:System.Int32.MaxValue&gt;</ph> milliseconds (approximately 24 days), not indefinitely.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>和舊版中，如果<ph id="ph2">`milliseconds`</ph>是-1，<ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>多載等候<ph id="ph4">&lt;xref:System.Int32.MaxValue&gt;</ph>毫秒 （大約 24 天），非無限期。</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when this method returns.</source>
          <target state="translated">當已將標準輸出重新導向至非同步事件處理常式時，它有可能，輸出處理尚未完成此方法傳回時。</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>To ensure that asynchronous event handling has been completed, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload that takes no parameter after receiving a <ph id="ph2">`true`</ph> from this overload.</source>
          <target state="translated">若要確保非同步事件處理已完成，請呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>在收到後會採用任何參數的多載<ph id="ph2">`true`</ph>從這個多載。</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>To help ensure that the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event is handled correctly in Windows Forms applications, set the <ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> property.</source>
          <target state="translated">為協助確保<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>Windows Forms 應用程式中正確地處理事件，請將設定<ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>When an associated process exits (is shut down by the operating system through a normal or abnormal termination), the system stores administrative information about the process and returns to the component that had called <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>.</source>
          <target state="translated">相關聯的處理序結束時 （已關閉作業系統，透過標準或不正常終止），系統會儲存系統管理程序的詳細資訊，並傳回給已呼叫的元件<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component can then access the information, which includes the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>, by using the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件可以存取資訊，其中包括<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>，使用<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>已結束的處理序。</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>Because the associated process has exited, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the component no longer points to an existing process resource.</source>
          <target state="translated">相關聯的處理序已結束，因為<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>元件的屬性不會再指向現有的處理序資源。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>Instead, the handle can be used only to access the operating system's information about the process resource.</source>
          <target state="translated">相反地，控制代碼可用來存取作業系統的處理序資源相關的資訊。</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The system is aware of handles to exited processes that have not been released by <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components, so it keeps the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> information in memory until the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> component specifically frees the resources.</source>
          <target state="translated">系統會考慮到已結束處理程序未釋放的控制代碼<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>元件，因此它會保存<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>資訊在記憶體中，直到<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>元件特別釋出資源。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>For this reason, any time you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> when the associated process has terminated and you no longer need any administrative information about it.</source>
          <target state="translated">基於這個理由，每當您呼叫<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>執行個體，請呼叫<ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>當相關聯的處理序已終止，您不再需要任何系統管理相關資訊。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> frees the memory allocated to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> 釋出配置給已結束處理程序的記憶體。</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>See the code example for the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> property.</source>
          <target state="translated">請參閱程式碼範例，取得<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The wait setting could not be accessed.</source>
          <target state="translated">無法存取等候設定。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>No process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> has been set, and a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> from which the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property can be determined does not exist.</source>
          <target state="translated">尚未設定任何處理序 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph>，而且可從中判斷 <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 屬性的 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> 不存在。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>You are attempting to call <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /&gt;</ph> for a process that is running on a remote computer.</source>
          <target state="translated">您正在嘗試呼叫於遠端電腦上執行之處理序的 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>This method is available only for processes that are running on the local computer.</source>
          <target state="translated">這個方法僅適用於在本機電腦執行的處理序。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="milliseconds" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="milliseconds" /&gt;</ph> 為 -1 以外的負數，表示無限逾時。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait for the associated process to enter an idle state.</source>
          <target state="translated">讓 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件等候相關聯處理序進入閒置狀態。</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait indefinitely for the associated process to enter an idle state.</source>
          <target state="translated">讓 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件無限期等候相關聯處理序進入閒置狀態。</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This overload applies only to processes with a user interface and, therefore, a message loop.</source>
          <target state="translated">這個多載只適用於具有使用者介面和訊息迴圈的處理序。</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated process has reached an idle state.</source>
          <target state="translated">如果關聯的處理序已經達到閒置狀態，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph> to force the processing of your application to wait until the message loop has returned to the idle state.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph>強制應用程式等候，直到訊息迴圈已返回閒置狀態的處理。</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>When a process with a user interface is executing, its message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">當執行使用者介面的處理序時，其訊息迴圈會執行每次 Windows 訊息傳送至處理序的作業系統。</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process then returns to the message loop.</source>
          <target state="translated">在處理序再傳回至訊息迴圈。</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>A process is said to be in an idle state when it is waiting for messages inside of a message loop.</source>
          <target state="translated">處理程序即處於閒置狀態時它正在等待訊息迴圈內的訊息。</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This state is useful, for example, when your application needs to wait for a starting process to finish creating its main window before the application communicates with that window.</source>
          <target state="translated">此狀態會很有用，比方說，當您的應用程式需要等候完成建立其主視窗之前在應用程式傳送與該視窗啟動的處理序。</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>If a process does not have a message loop, <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果處理程序並沒有訊息迴圈，<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph>會擲回<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph> overload instructs the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait indefinitely for the process to become idle in the message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph>多載會指示<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>無限期地等待處理序變成閒置訊息迴圈中的元件。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This instruction can cause an application to stop responding.</source>
          <target state="translated">此指示可能會導致應用程式停止回應。</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>For example, if the process is written to always exit its message loop immediately, as in the code fragment <ph id="ph1">`while(true)`</ph>.</source>
          <target state="translated">例如，如果處理程序撰寫為永遠其訊息迴圈會立即結束，如程式碼片段所示<ph id="ph1">`while(true)`</ph>。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process does not have a graphical interface.</source>
          <target state="translated">處理序沒有圖形化介面。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>An unknown error occurred.</source>
          <target state="translated">發生未知的錯誤。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process failed to enter an idle state.</source>
          <target state="translated">處理序無法進入閒置狀態。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process has already exited.</source>
          <target state="translated">處理程序已經結束。</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>No process is associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>A value of 1 to <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> that specifies the amount of time, in milliseconds, to wait for the associated process to become idle.</source>
          <target state="translated">1 到 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> 的值，指定等候相關聯處理序變成閒置的時間 (毫秒)。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.</source>
          <target state="translated">值為 0 時，指定立即傳回，而值為 -1 時則指定無限期等候。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait the specified number of milliseconds for the associated process to enter an idle state.</source>
          <target state="translated">讓 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 元件等候相關聯處理序進入閒置狀態的指定毫秒數。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>This overload applies only to processes with a user interface and, therefore, a message loop.</source>
          <target state="translated">這個多載只適用於具有使用者介面和訊息迴圈的處理序。</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated process has reached an idle state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果相關的處理序已經達到閒置狀態，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph> to force the processing of your application to wait until the message loop has returned to the idle state.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph>強制應用程式等候，直到訊息迴圈已返回閒置狀態的處理。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>When a process with a user interface is executing, its message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">當執行使用者介面的處理序時，其訊息迴圈會執行每次 Windows 訊息傳送至處理序的作業系統。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process then returns to the message loop.</source>
          <target state="translated">在處理序再傳回至訊息迴圈。</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>A process is said to be in an idle state when it is waiting for messages inside of a message loop.</source>
          <target state="translated">處理程序即處於閒置狀態時它正在等待訊息迴圈內的訊息。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>This state is useful, for example, when your application needs to wait for a starting process to finish creating its main window before the application communicates with that window.</source>
          <target state="translated">此狀態會很有用，比方說，當您的應用程式需要等候完成建立其主視窗之前在應用程式傳送與該視窗啟動的處理序。</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>If a process does not have a message loop, <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果處理程序並沒有訊息迴圈，<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph>會擲回<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph> overload instructs the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait a finite amount of time for the process to become idle in the message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph>多載會指示<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>元件等候在有限的一段時間閒置訊息迴圈中處理程序。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>If the associated process has not become idle by the end of the interval because the loop is still processing messages, <ph id="ph1">`false`</ph> is returned to the calling procedure.</source>
          <target state="translated">相關聯的處理序已不變成閒置狀態時的時間間隔結束迴圈仍在處理訊息，因為<ph id="ph1">`false`</ph>會傳回到呼叫的程序。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process does not have a graphical interface.</source>
          <target state="translated">處理序沒有圖形化介面。</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>An unknown error occurred.</source>
          <target state="translated">發生未知的錯誤。</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process failed to enter an idle state.</source>
          <target state="translated">處理序無法進入閒置狀態。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process has already exited.</source>
          <target state="translated">處理程序已經結束。</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>No process is associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">沒有與這個 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 物件相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>Gets the associated process's physical memory usage, in bytes.</source>
          <target state="translated">取得相關處理序的實體記憶體使用量 (以位元組為單位)。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The total amount of physical memory the associated process is using, in bytes.</source>
          <target state="translated">相關的處理序正在使用的實體記憶體的總量。</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The value returned by this property represents the current size of working set memory used by the process, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表目前的工作集記憶體使用此程序，以位元組為單位的大小。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">處理程序的工作集是實體 RAM 記憶體中的目前可見程序的記憶體分頁的集合。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">這些頁面是常駐的而且可供使用，而不會觸發分頁錯誤的應用程式。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">工作集包括共用和私用資料。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including the process modules and the system libraries.</source>
          <target state="translated">共用的資料包含頁面包含所有處理序執行，包括處理序模組和系統程式庫的指示。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">下列範例會啟動 「 記事本 」 的執行個體。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The example detects when the process exits, and displays the process' exit code.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示指定的處理序結束代碼。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>Gets the amount of physical memory, in bytes, allocated for the associated process.</source>
          <target state="translated">取得配置給關聯處理序的實體記憶體量，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The amount of physical memory, in bytes, allocated for the associated process.</source>
          <target state="translated">配置給關聯處理序的實體記憶體量，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The value returned by this property represents the current size of working set memory used by the process, in bytes.</source>
          <target state="translated">這個屬性所傳回的值代表目前的工作集記憶體使用此程序，以位元組為單位的大小。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">處理程序的工作集是實體 RAM 記憶體中的目前可見程序的記憶體分頁的集合。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">這些頁面是常駐的而且可供使用，而不會觸發分頁錯誤的應用程式。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">工作集包括共用和私用資料。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including instructions in the process modules and the system libraries.</source>
          <target state="translated">共用的資料包含頁面包含所有處理序執行，包括指示處理序模組和系統程式庫中的指示。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">這個屬性可以用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Working Set<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">屬性值相當於<bpt id="p1">**</bpt>工作組<ept id="p1">**</ept>處理序的效能計數器。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">此範例會擷取並顯示各種內容相關聯的處理序。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">該範例會偵測處理序結束，並顯示其結束程式碼和尖峰記憶體統計資料。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">平台是 Windows 98 或 Windows Millennium Edition (Windows Me)，不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>