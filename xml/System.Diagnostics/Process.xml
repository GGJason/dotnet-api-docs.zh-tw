<Type Name="Process" FullName="System.Diagnostics.Process">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80e4e84bd284d110a1b1c30c95d4a297c2b9611b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37664664" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Process : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Process extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Process" />
  <TypeSignature Language="VB.NET" Value="Public Class Process&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Process : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Process = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Exited")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("StartInfo")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Diagnostics.Design.ProcessDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.MonitoringDescription("Provides access to local and remote processes, enabling starting and stopping of local processes.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f1d7e-101">Provides access to local and remote processes and enables you to start and stop local system processes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1d7e-101">Provides access to local and remote processes and enables you to start and stop local system processes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-102">A<xref:System.Diagnostics.Process>元件提供存取權的電腦執行的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-102">A <xref:System.Diagnostics.Process> component provides access to a process that is running on a computer.</span></span> <span data-ttu-id="f1d7e-103">處理序，最簡單的說，是執行中應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-103">A process, in the simplest terms, is a running app.</span></span> <span data-ttu-id="f1d7e-104">執行緒是作業系統會配置處理器時間的基本單位。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-104">A thread is the basic unit to which the operating system allocates processor time.</span></span> <span data-ttu-id="f1d7e-105">執行緒可以執行此程序，包括部分由另一個執行緒目前正在執行的程式任何的碼部分。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-105">A thread can execute any part of the code of the process, including parts currently being executed by another thread.</span></span>  
  
 <span data-ttu-id="f1d7e-106"><xref:System.Diagnostics.Process>元件是一個有用的工具來啟動、 停止、 控制和監視應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-106">The <xref:System.Diagnostics.Process> component is a useful tool for starting, stopping, controlling, and monitoring apps.</span></span> <span data-ttu-id="f1d7e-107">您可以使用<xref:System.Diagnostics.Process>元件，以取得正在執行的處理程序的清單，或者您可以啟動新的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-107">You can use the <xref:System.Diagnostics.Process> component, to obtain a list of the processes that are running, or you can start a new process.</span></span> <span data-ttu-id="f1d7e-108">A<xref:System.Diagnostics.Process>元件用來存取系統處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-108">A <xref:System.Diagnostics.Process> component is used to access system processes.</span></span> <span data-ttu-id="f1d7e-109">之後<xref:System.Diagnostics.Process>元件已經初始化，它可以用來取得執行程序的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-109">After a <xref:System.Diagnostics.Process> component has been initialized, it can be used to obtain information about the running process.</span></span> <span data-ttu-id="f1d7e-110">這類資訊包括的執行緒，載入的模組 （.dll 和.exe 檔案），並使用效能資訊，例如處理程序的記憶體數量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-110">Such information includes the set of threads, the loaded modules (.dll and .exe files), and performance information such as the amount of memory the process is using.</span></span>  
  
 <span data-ttu-id="f1d7e-111">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f1d7e-112">當您完成使用型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f1d7e-113">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f1d7e-114">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f1d7e-115">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-116">32 位元處理序無法存取 64 位元處理序的模組。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-116">32-bit processes cannot access the modules of a 64-bit process.</span></span> <span data-ttu-id="f1d7e-117">如果您嘗試從 32 位元處理序取得 64 位元處理程序的相關資訊，您會收到<xref:System.ComponentModel.Win32Exception>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-117">If you try to get information about a 64-bit process from a 32-bit process, you will get a <xref:System.ComponentModel.Win32Exception> exception.</span></span> <span data-ttu-id="f1d7e-118">相反地，64 位元處理程序，可以存取 32 位元處理序的模組。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-118">A 64-bit process, on the other hand, can access the modules of a 32-bit process.</span></span>  
  
 <span data-ttu-id="f1d7e-119">處理序元件會取得一組屬性的相關資訊全部一次。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-119">The process component obtains information about a group of properties all at once.</span></span> <span data-ttu-id="f1d7e-120">在後<xref:System.Diagnostics.Process>元件已取得的任何群組的一個成員的相關資訊，它會快取該群組中的其他屬性的值，並無法取得群組的其他成員相關的新資訊，直到您呼叫<xref:System.Diagnostics.Process.Refresh%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-120">After the <xref:System.Diagnostics.Process> component has obtained information about one member of any group, it will cache the values for the other properties in that group and not obtain new information about the other members of the group until you call the <xref:System.Diagnostics.Process.Refresh%2A> method.</span></span> <span data-ttu-id="f1d7e-121">因此，如果屬性值不保證能夠比上次呼叫任何新<xref:System.Diagnostics.Process.Refresh%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-121">Therefore, a property value is not guaranteed to be any newer than the last call to the <xref:System.Diagnostics.Process.Refresh%2A> method.</span></span> <span data-ttu-id="f1d7e-122">群組之細項具有作業系統相依性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-122">The group breakdowns are operating-system dependent.</span></span>  
  
 <span data-ttu-id="f1d7e-123">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到任何處理序時完整限定該路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-123">If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</span></span> <span data-ttu-id="f1d7e-124">否則，系統將無法找到路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-124">Otherwise, the system will not find the path.</span></span> <span data-ttu-id="f1d7e-125">例如，如果`c:\mypath`不在您的路徑，而且您新增使用引號： `path = %path%;"c:\mypath"`，您必須完整限定在任何處理序`c:\mypath`時啟動它。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-125">For example, if `c:\mypath` is not in your path, and you add it using quotation marks: `path = %path%;"c:\mypath"`, you must fully qualify any process in `c:\mypath` when starting it.</span></span>  
  
 <span data-ttu-id="f1d7e-126">系統處理序是以唯一識別系統上處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-126">A system process is uniquely identified on the system by its process identifier.</span></span> <span data-ttu-id="f1d7e-127">就像許多 Windows 資源，其控制代碼，可能不是唯一的電腦上也會識別處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-127">Like many Windows resources, a process is also identified by its handle, which might not be unique on the computer.</span></span> <span data-ttu-id="f1d7e-128">控制代碼是資源的泛型的詞彙，識別項。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-128">A handle is the generic term for an identifier of a resource.</span></span> <span data-ttu-id="f1d7e-129">作業系統仍然存在處理序控制代碼，可透過<xref:System.Diagnostics.Process.Handle%2A>屬性<xref:System.Diagnostics.Process>元件，即使在處理序已結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-129">The operating system persists the process handle, which is accessed through the <xref:System.Diagnostics.Process.Handle%2A> property of the <xref:System.Diagnostics.Process> component, even when the process has exited.</span></span> <span data-ttu-id="f1d7e-130">因此，您可以取得處理程序的系統管理資訊，例如<xref:System.Diagnostics.Process.ExitCode%2A>（通常是零的成功或非零的錯誤碼） 和<xref:System.Diagnostics.Process.ExitTime%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-130">Thus, you can get the process's administrative information, such as the <xref:System.Diagnostics.Process.ExitCode%2A> (usually either zero for success or a nonzero error code) and the <xref:System.Diagnostics.Process.ExitTime%2A>.</span></span> <span data-ttu-id="f1d7e-131">控制代碼會是非常重要的資源，所以遺漏控制更 virulent 比流失記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-131">Handles are an extremely valuable resource, so leaking handles is more virulent than leaking memory.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-132">這個類別包含的連結要求和繼承要求套用到所有成員的類別層級。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-132">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="f1d7e-133">A<xref:System.Security.SecurityException>立即呼叫端或衍生的類別不具有完全信任權限時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-133">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="f1d7e-134">如需安全性需求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-134">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)]<span data-ttu-id="f1d7e-135"> 附註</span><span class="sxs-lookup"><span data-stu-id="f1d7e-135"> Notes</span></span>  
 <span data-ttu-id="f1d7e-136">在.NET Framework 中，<xref:System.Diagnostics.Process>預設使用的類別<xref:System.Console>編碼方式，通常是程式碼頁的編碼方式，輸入、 輸出和錯誤資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-136">In the .NET Framework, the <xref:System.Diagnostics.Process> class by default uses <xref:System.Console> encodings, which are typically code page encodings, for the input, output, and error streams.</span></span> <span data-ttu-id="f1d7e-137">取得範例程式碼，在系統上文化特性是英文 （美國），字碼頁 437 則是預設編碼方式<xref:System.Console>類別。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-137">For example code, on systems whose culture is English (United States), code page 437 is the default encoding for the <xref:System.Console> class.</span></span> <span data-ttu-id="f1d7e-138">不過，[!INCLUDE[net_core](~/includes/net-core-md.md)]可以提供可用的只有這些編碼方式的有限的子集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-138">However, [!INCLUDE[net_core](~/includes/net-core-md.md)] may make only a limited subset of these encodings available.</span></span> <span data-ttu-id="f1d7e-139">如果發生這種情況，它會使用<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>做為預設的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-139">If this is the case, it uses <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> as the default encoding.</span></span>  
  
 <span data-ttu-id="f1d7e-140">如果<xref:System.Diagnostics.Process>物件相依於特定字碼頁編碼方式，您仍然可以在它們可執行下列作業*之前*呼叫任何<xref:System.Diagnostics.Process>方法：</span><span class="sxs-lookup"><span data-stu-id="f1d7e-140">If a <xref:System.Diagnostics.Process> object depends on specific code page encodings, you can still make them available by doing the following *before* you call any <xref:System.Diagnostics.Process> methods:</span></span>  
  
1.  <span data-ttu-id="f1d7e-141">您可以將 System.Text.Encoding.CodePages.dll 組件的參考加入專案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-141">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
2.  <span data-ttu-id="f1d7e-142">擷取<xref:System.Text.EncodingProvider>物件從<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-142">Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="f1d7e-143">傳遞<xref:System.Text.EncodingProvider>物件至<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>進行編碼的提供者所支援的其他編碼的方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-143">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the additional encodings supported by the encoding provider available.</span></span>  
  
 <span data-ttu-id="f1d7e-144"><xref:System.Diagnostics.Process>類別會再自動使用預設系統編碼方式 」，而不 UTF8，前提是您註冊編碼提供者之前呼叫任何<xref:System.Diagnostics.Process>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-144">The <xref:System.Diagnostics.Process> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <xref:System.Diagnostics.Process> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-145">下列範例使用的執行個體<xref:System.Diagnostics.Process>類別來啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-145">The following example uses an instance of the <xref:System.Diagnostics.Process> class to start a process.</span></span>  
  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 <span data-ttu-id="f1d7e-146">下列範例會使用<xref:System.Diagnostics.Process>類別本身和靜態<xref:System.Diagnostics.Process.Start%2A>方法來啟動處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-146">The following example uses the <xref:System.Diagnostics.Process> class itself and a static <xref:System.Diagnostics.Process.Start%2A> method to start a process.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 <span data-ttu-id="f1d7e-147">下列 F # 範例會定義`runProc`啟動處理程序、 函式會擷取所有輸出和錯誤的資訊，並記錄的程序執行的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-147">The following F# example defines a `runProc` function that starts a process, captures all output and error information, and records the number of milliseconds that the process has run.</span></span>  <span data-ttu-id="f1d7e-148">`runProc`函式有三個參數： 若要啟動，引數提供給應用程式，並起始目錄的應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-148">The `runProc` function has three parameters: the name of application to launch, the arguments to supply to the application, and the starting directory.</span></span>  
  
 [!code-fsharp[System.Diagnostics.Process#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.diagnostics.process/fs/Start1.fs#1)]  
  
 <span data-ttu-id="f1d7e-149">程式碼`runProc`函式由撰寫[ImaginaryDevelopment](http://fssnip.net/authors/ImaginaryDevelopment)而且經過[Microsoft 公用授權](https://opensource.org/licenses/ms-pl)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-149">The code for the `runProc` function was written by [ImaginaryDevelopment](http://fssnip.net/authors/ImaginaryDevelopment) and is available under the [Microsoft Public License](https://opensource.org/licenses/ms-pl).</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="f1d7e-150">針對完全信任立即呼叫端。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1d7e-150">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="f1d7e-151">這個類別不能由部分信任的程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1d7e-151">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="f1d7e-152">針對繼承者完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1d7e-152">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="f1d7e-153">這個類別無法繼承由部分信任的程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1d7e-153">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <altmember cref="M:System.Diagnostics.Process.Start" />
    <altmember cref="T:System.Diagnostics.ProcessStartInfo" />
    <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
    <altmember cref="M:System.Diagnostics.Process.Kill" />
    <altmember cref="T:System.Diagnostics.ProcessThread" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Process ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Process();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-154">Initializes a new instance of the <see cref="T:System.Diagnostics.Process" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-154">Initializes a new instance of the <see cref="T:System.Diagnostics.Process" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-155">如果您未指定<xref:System.Diagnostics.Process.MachineName%2A>屬性，預設值為本機電腦 ("。")。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-155">If you do not specify the <xref:System.Diagnostics.Process.MachineName%2A> property, the default is the local computer, (".").</span></span>  
  
 <span data-ttu-id="f1d7e-156">您有兩個選項可建立新的關聯<xref:System.Diagnostics.Process>元件之電腦上的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-156">You have two options for associating a new <xref:System.Diagnostics.Process> component with a process on the computer.</span></span> <span data-ttu-id="f1d7e-157">第一個選項是使用建構函式來建立<xref:System.Diagnostics.Process>元件，設定的適當成員<xref:System.Diagnostics.Process.StartInfo%2A>屬性並呼叫<xref:System.Diagnostics.Process.Start%2A>關聯<xref:System.Diagnostics.Process>與新的系統處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-157">The first option is to use the constructor to create the <xref:System.Diagnostics.Process> component, set the appropriate members of the <xref:System.Diagnostics.Process.StartInfo%2A> property and call <xref:System.Diagnostics.Process.Start%2A> to associate the <xref:System.Diagnostics.Process> with a new system process.</span></span> <span data-ttu-id="f1d7e-158">第二個選項是將建立關聯<xref:System.Diagnostics.Process>執行的系統程序，利用<xref:System.Diagnostics.Process.GetProcessById%2A>或其中一個<xref:System.Diagnostics.Process.GetProcesses%2A>傳回值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-158">The second option is to associate the <xref:System.Diagnostics.Process> with a running system process by using <xref:System.Diagnostics.Process.GetProcessById%2A> or one of the <xref:System.Diagnostics.Process.GetProcesses%2A> return values.</span></span>  
  
 <span data-ttu-id="f1d7e-159">如果您使用`static`多載<xref:System.Diagnostics.Process.Start%2A>方法來啟動新的系統處理序方法建立新<xref:System.Diagnostics.Process>元件，並產生關聯的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-159">If you use a `static` overload of the <xref:System.Diagnostics.Process.Start%2A> method to start a new system process, the method creates a new <xref:System.Diagnostics.Process> component and associates it with the process.</span></span>  
  
 <span data-ttu-id="f1d7e-160">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType>屬性設定為其預設值`true`，您可以使用類似的方式啟動應用程式和文件`Run`對話方塊中的 Windows`Start`功能表。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-160">When the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType> property is set to its default value, `true`, you can start applications and documents in a way that is similar to using the `Run` dialog box of the Windows `Start` menu.</span></span> <span data-ttu-id="f1d7e-161">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType>是`false`，您可以開始只可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-161">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType> is `false`, you can start only executables.</span></span>  
  
 <span data-ttu-id="f1d7e-162">您可以從命令列呼叫任何可執行檔可以啟動兩種方式之一： 藉由設定適當的成員<xref:System.Diagnostics.Process.StartInfo%2A>屬性，並呼叫<xref:System.Diagnostics.Process.Start%2A>方法使用任何參數，或藉由傳遞至適當的參數`static` <xref:System.Diagnostics.Process.Start%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-162">Any executable file that you can call from the command line can be started in one of two ways: by setting the appropriate members of the <xref:System.Diagnostics.Process.StartInfo%2A> property and calling the <xref:System.Diagnostics.Process.Start%2A> method with no parameters, or by passing the appropriate parameter to the `static`<xref:System.Diagnostics.Process.Start%2A> member.</span></span>  
  
 <span data-ttu-id="f1d7e-163">您可以建立<xref:System.Diagnostics.Process>元件所使用的建構函式，其中一個靜態<xref:System.Diagnostics.Process.Start%2A>多載，或任何<xref:System.Diagnostics.Process.GetProcessById%2A>， <xref:System.Diagnostics.Process.GetProcesses%2A>，或<xref:System.Diagnostics.Process.GetProcessesByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-163">You can create a <xref:System.Diagnostics.Process> component by using the constructor, one of the static <xref:System.Diagnostics.Process.Start%2A> overloads, or any of the <xref:System.Diagnostics.Process.GetProcessById%2A>, <xref:System.Diagnostics.Process.GetProcesses%2A>, or <xref:System.Diagnostics.Process.GetProcessesByName%2A> methods.</span></span> <span data-ttu-id="f1d7e-164">完成此動作之後，您會有相關聯的處理序的檢視。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-164">After you have done so, you have a view into the associated process.</span></span> <span data-ttu-id="f1d7e-165">這不是在記憶體中處理序屬性變更時自動更新本身的動態檢視。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-165">This is not a dynamic view that updates itself automatically when the process properties have changed in memory.</span></span> <span data-ttu-id="f1d7e-166">相反地，您必須呼叫<xref:System.Diagnostics.Process.Refresh%2A>更新元件<xref:System.Diagnostics.Process>應用程式中的屬性資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-166">Instead, you must call <xref:System.Diagnostics.Process.Refresh%2A> for the component to update the <xref:System.Diagnostics.Process> property information in your application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-167">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-167">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-168">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-168">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public int BasePriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BasePriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BasePriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int" Usage="System.Diagnostics.Process.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Base process priority.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-169">Gets the base priority of the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-169">Gets the base priority of the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-170">基礎優先權，它是從相關聯處理序的 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 計算出來的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-170">The base priority, which is computed from the <see cref="P:System.Diagnostics.Process.PriorityClass" /> of the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-171"><xref:System.Diagnostics.Process.BasePriority%2A>程序是針對相關聯的處理序中建立的執行緒開始的優先順序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-171">The <xref:System.Diagnostics.Process.BasePriority%2A> of the process is the starting priority for threads created within the associated process.</span></span> <span data-ttu-id="f1d7e-172">您可以檢視的基底的優先順序，透過 「 系統監視器的優先權基底計數器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-172">You can view information about the base priority through the System Monitor's Priority Base counter.</span></span>  
  
 <span data-ttu-id="f1d7e-173">根據 24 小時制或其他的增加，作業系統可以變更的基底的優先順序，當處理程序應該放置領先其他人的時間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-173">Based on the time elapsed or other boosts, the operating system can change the base priority when a process should be placed ahead of others.</span></span>  
  
 <span data-ttu-id="f1d7e-174"><xref:System.Diagnostics.Process.BasePriority%2A>屬性可讓您檢視指派給處理程序的起始優先權。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-174">The <xref:System.Diagnostics.Process.BasePriority%2A> property lets you view the starting priority assigned to a process.</span></span> <span data-ttu-id="f1d7e-175">不過，因為它是唯讀的您無法使用<xref:System.Diagnostics.Process.BasePriority%2A>設定程序的優先順序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-175">However, because it is read-only, you cannot use the <xref:System.Diagnostics.Process.BasePriority%2A> to set the priority of the process.</span></span> <span data-ttu-id="f1d7e-176">若要變更的優先順序，使用<xref:System.Diagnostics.Process.PriorityClass%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-176">To change the priority, use the <xref:System.Diagnostics.Process.PriorityClass%2A> property.</span></span> <span data-ttu-id="f1d7e-177"><xref:System.Diagnostics.Process.BasePriority%2A>就可以使用 「 系統監視器，而<xref:System.Diagnostics.Process.PriorityClass%2A>不是。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-177">The <xref:System.Diagnostics.Process.BasePriority%2A> is viewable using the System Monitor, while the <xref:System.Diagnostics.Process.PriorityClass%2A> is not.</span></span> <span data-ttu-id="f1d7e-178">同時<xref:System.Diagnostics.Process.BasePriority%2A>而<xref:System.Diagnostics.Process.PriorityClass%2A>可以以程式設計方式檢視。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-178">Both the <xref:System.Diagnostics.Process.BasePriority%2A> and the <xref:System.Diagnostics.Process.PriorityClass%2A> can be viewed programmatically.</span></span> <span data-ttu-id="f1d7e-179">下表顯示之間的關聯性<xref:System.Diagnostics.Process.BasePriority%2A>值和<xref:System.Diagnostics.Process.PriorityClass%2A>值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-179">The following table shows the relationship between <xref:System.Diagnostics.Process.BasePriority%2A> values and <xref:System.Diagnostics.Process.PriorityClass%2A> values.</span></span>  
  
|<span data-ttu-id="f1d7e-180">BasePriority</span><span class="sxs-lookup"><span data-stu-id="f1d7e-180">BasePriority</span></span>|<span data-ttu-id="f1d7e-181">PriorityClass</span><span class="sxs-lookup"><span data-stu-id="f1d7e-181">PriorityClass</span></span>|  
|------------------|-------------------|  
|<span data-ttu-id="f1d7e-182">4</span><span class="sxs-lookup"><span data-stu-id="f1d7e-182">4</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.Idle>|  
|<span data-ttu-id="f1d7e-183">8</span><span class="sxs-lookup"><span data-stu-id="f1d7e-183">8</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.Normal>|  
|<span data-ttu-id="f1d7e-184">13</span><span class="sxs-lookup"><span data-stu-id="f1d7e-184">13</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.High>|  
|<span data-ttu-id="f1d7e-185">24</span><span class="sxs-lookup"><span data-stu-id="f1d7e-185">24</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.RealTime>|  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-186">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-186">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-187">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-187">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-188">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-188">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-189">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-189">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-190">The process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-190">The process has exited.</span>
          </span>
          <span data-ttu-id="f1d7e-191">-or-  The process has not started, so there is no process ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-191">-or-  The process has not started, so there is no process ID.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-192">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-192">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-193">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-193">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PriorityClass" />
        <altmember cref="T:System.Diagnostics.ProcessPriorityClass" />
        <altmember cref="T:System.Diagnostics.ThreadPriorityLevel" />
      </Docs>
    </Member>
    <Member MemberName="BeginErrorReadLine">
      <MemberSignature Language="C#" Value="public void BeginErrorReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginErrorReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.BeginErrorReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginErrorReadLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginErrorReadLine();" />
      <MemberSignature Language="F#" Value="member this.BeginErrorReadLine : unit -&gt; unit" Usage="process.BeginErrorReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-194">Begins asynchronous read operations on the redirected <see cref="P:System.Diagnostics.Process.StandardError" /> stream of the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-194">Begins asynchronous read operations on the redirected <see cref="P:System.Diagnostics.Process.StandardError" /> stream of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-195"><xref:System.Diagnostics.Process.StandardError%2A>可以讀取資料流，同步或非同步。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-195">The <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="f1d7e-196">這類方法<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，和<xref:System.IO.StreamReader.ReadToEnd%2A>執行程序的錯誤輸出資料流同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-196">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="f1d7e-197">這些同步讀取作業未完成直到相關聯<xref:System.Diagnostics.Process>寫入其<xref:System.Diagnostics.Process.StandardError%2A>串流處理，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-197">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="f1d7e-198">相反地，<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>開始非同步讀取作業上<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-198">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="f1d7e-199">這個方法可讓資料流輸出的指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出會導向至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-199">This method enables the designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
 <span data-ttu-id="f1d7e-200">請遵循下列步驟來執行非同步讀取的操作<xref:System.Diagnostics.Process.StandardError%2A>針對<xref:System.Diagnostics.Process>:</span><span class="sxs-lookup"><span data-stu-id="f1d7e-200">Follow these steps to perform asynchronous read operations on <xref:System.Diagnostics.Process.StandardError%2A> for a <xref:System.Diagnostics.Process> :</span></span>  
  
1.  <span data-ttu-id="f1d7e-201">請設定 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 為 `false`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-201">Set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false`.</span></span>  
  
2.  <span data-ttu-id="f1d7e-202">請設定 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 為 `true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-202">Set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span>  
  
3.  <span data-ttu-id="f1d7e-203">新增您的事件處理常式來<xref:System.Diagnostics.Process.ErrorDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-203">Add your event handler to the <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="f1d7e-204">事件處理常式必須符合<xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType>委派簽章。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-204">The event handler must match the <xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType> delegate signature.</span></span>  
  
4.  <span data-ttu-id="f1d7e-205">啟動<xref:System.Diagnostics.Process>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-205">Start the <xref:System.Diagnostics.Process>.</span></span>  
  
5.  <span data-ttu-id="f1d7e-206">呼叫<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>針對<xref:System.Diagnostics.Process>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-206">Call <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> for the <xref:System.Diagnostics.Process>.</span></span> <span data-ttu-id="f1d7e-207">在此呼叫會啟動的非同步讀取的作業<xref:System.Diagnostics.Process.StandardError%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-207">This call starts asynchronous read operations on <xref:System.Diagnostics.Process.StandardError%2A>.</span></span>  
  
 <span data-ttu-id="f1d7e-208">當非同步讀取的作業開始時，事件處理常式會呼叫每個時間相關聯<xref:System.Diagnostics.Process>寫入一行文字到其<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-208">When asynchronous read operations start, the event handler is called each time the associated <xref:System.Diagnostics.Process> writes a line of text to its <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-209">您可以取消非同步讀取的作業，藉由呼叫<xref:System.Diagnostics.Process.CancelErrorRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-209">You can cancel an asynchronous read operation by calling <xref:System.Diagnostics.Process.CancelErrorRead%2A>.</span></span> <span data-ttu-id="f1d7e-210">您可以取消讀取的作業，由呼叫端或事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-210">The read operation can be canceled by the caller or by the event handler.</span></span> <span data-ttu-id="f1d7e-211">之後取消，您可以呼叫<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>一次，繼續非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-211">After canceling, you can call <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> again to resume asynchronous read operations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-212">您不能混用重新導向的資料流的非同步和同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-212">You cannot mix asynchronous and synchronous read operations on a redirected stream.</span></span> <span data-ttu-id="f1d7e-213">一次重新導向資料流的<xref:System.Diagnostics.Process>開啟在非同步或同步模式中，所有進一步的讀取該資料流的作業必須是相同的模式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-213">Once the redirected stream of a <xref:System.Diagnostics.Process> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</span></span> <span data-ttu-id="f1d7e-214">例如，請勿遵循<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>藉由呼叫<xref:System.IO.StreamReader.ReadLine%2A>上<xref:System.Diagnostics.Process.StandardError%2A>資料流，或反之亦然。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-214">For example, do not follow <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> with a call to <xref:System.IO.StreamReader.ReadLine%2A> on the <xref:System.Diagnostics.Process.StandardError%2A> stream, or vice versa.</span></span> <span data-ttu-id="f1d7e-215">不過，您可以讀取在不同模式中的兩個不同資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-215">However, you can read two different streams in different modes.</span></span> <span data-ttu-id="f1d7e-216">例如，您可以呼叫<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>，然後呼叫<xref:System.IO.StreamReader.ReadLine%2A>如<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-216">For example, you can call <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> and then call <xref:System.IO.StreamReader.ReadLine%2A> for the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-217">下列範例會使用`net view`命令來列出可用的網路資源，在遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-217">The following example uses the `net view` command to list the available network resources on a remote computer.</span></span> <span data-ttu-id="f1d7e-218">使用者所提供的目標電腦名稱做為命令列引數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-218">The user supplies the target computer name as a command-line argument.</span></span> <span data-ttu-id="f1d7e-219">使用者也可以提供錯誤輸出的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-219">The user can also supply a file name for error output.</span></span> <span data-ttu-id="f1d7e-220">此範例會收集的 net 命令、 等候處理序完成，然後再寫入至主控台的輸出結果的輸出。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-220">The example collects the output of the net command, waits for the process to finish, and then writes the output results to the console.</span></span> <span data-ttu-id="f1d7e-221">如果使用者所提供的選擇性的錯誤檔案，則此範例會將錯誤寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-221">If the user supplies the optional error file, the example writes errors to the file.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#2](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/net_async.cpp#2)]
 [!code-csharp[Process_AsyncStreams#2](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/net_async.cs#2)]
 [!code-vb[Process_AsyncStreams#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/net_async.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-222">The <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-222">The <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-223">\- or -  An asynchronous read operation is already in progress on the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-223">\- or -  An asynchronous read operation is already in progress on the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          </span>
          <span data-ttu-id="f1d7e-224">\- or -  The <see cref="P:System.Diagnostics.Process.StandardError" /> stream has been used by a synchronous read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-224">\- or -  The <see cref="P:System.Diagnostics.Process.StandardError" /> stream has been used by a synchronous read operation.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-225">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-225">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-226">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-226">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
        <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
        <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
        <altmember cref="M:System.Diagnostics.Process.CancelErrorRead" />
      </Docs>
    </Member>
    <Member MemberName="BeginOutputReadLine">
      <MemberSignature Language="C#" Value="public void BeginOutputReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginOutputReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.BeginOutputReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginOutputReadLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginOutputReadLine();" />
      <MemberSignature Language="F#" Value="member this.BeginOutputReadLine : unit -&gt; unit" Usage="process.BeginOutputReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-227">Begins asynchronous read operations on the redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream of the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-227">Begins asynchronous read operations on the redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-228"><xref:System.Diagnostics.Process.StandardOutput%2A>可以讀取資料流，同步或非同步。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-228">The <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="f1d7e-229">這類方法<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，和<xref:System.IO.StreamReader.ReadToEnd%2A>執行程序的輸出資料流同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-229">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="f1d7e-230">這些同步讀取作業未完成直到相關聯<xref:System.Diagnostics.Process>寫入其<xref:System.Diagnostics.Process.StandardOutput%2A>串流處理，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-230">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="f1d7e-231">相反地，<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>開始非同步讀取作業上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-231">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-232">這個方法可讓資料流輸出指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出會導向至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-232">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
 <span data-ttu-id="f1d7e-233">請遵循下列步驟來執行非同步讀取的操作<xref:System.Diagnostics.Process.StandardOutput%2A>針對<xref:System.Diagnostics.Process>:</span><span class="sxs-lookup"><span data-stu-id="f1d7e-233">Follow these steps to perform asynchronous read operations on <xref:System.Diagnostics.Process.StandardOutput%2A> for a <xref:System.Diagnostics.Process> :</span></span>  
  
1.  <span data-ttu-id="f1d7e-234">請設定 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 為 `false`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-234">Set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false`.</span></span>  
  
2.  <span data-ttu-id="f1d7e-235">請設定 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> 為 `true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-235">Set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span>  
  
3.  <span data-ttu-id="f1d7e-236">新增您的事件處理常式來<xref:System.Diagnostics.Process.OutputDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-236">Add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="f1d7e-237">事件處理常式必須符合<xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType>委派簽章。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-237">The event handler must match the <xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType> delegate signature.</span></span>  
  
4.  <span data-ttu-id="f1d7e-238">啟動<xref:System.Diagnostics.Process>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-238">Start the <xref:System.Diagnostics.Process>.</span></span>  
  
5.  <span data-ttu-id="f1d7e-239">呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>針對<xref:System.Diagnostics.Process>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-239">Call <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> for the <xref:System.Diagnostics.Process>.</span></span> <span data-ttu-id="f1d7e-240">在此呼叫會啟動的非同步讀取的作業<xref:System.Diagnostics.Process.StandardOutput%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-240">This call starts asynchronous read operations on <xref:System.Diagnostics.Process.StandardOutput%2A>.</span></span>  
  
 <span data-ttu-id="f1d7e-241">當非同步讀取的作業開始時，事件處理常式會呼叫每個時間相關聯<xref:System.Diagnostics.Process>寫入一行文字到其<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-241">When asynchronous read operations start, the event handler is called each time the associated <xref:System.Diagnostics.Process> writes a line of text to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-242">您可以取消非同步讀取的作業，藉由呼叫<xref:System.Diagnostics.Process.CancelOutputRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-242">You can cancel an asynchronous read operation by calling <xref:System.Diagnostics.Process.CancelOutputRead%2A>.</span></span> <span data-ttu-id="f1d7e-243">您可以取消讀取的作業，由呼叫端或事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-243">The read operation can be canceled by the caller or by the event handler.</span></span> <span data-ttu-id="f1d7e-244">之後取消，您可以呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>一次，繼續非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-244">After canceling, you can call <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> again to resume asynchronous read operations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-245">您不能混用重新導向的資料流的非同步和同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-245">You cannot mix asynchronous and synchronous read operations on a redirected stream.</span></span> <span data-ttu-id="f1d7e-246">一次重新導向資料流的<xref:System.Diagnostics.Process>開啟在非同步或同步模式中，所有進一步的讀取該資料流的作業必須是相同的模式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-246">Once the redirected stream of a <xref:System.Diagnostics.Process> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</span></span> <span data-ttu-id="f1d7e-247">例如，請勿遵循<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>藉由呼叫<xref:System.IO.StreamReader.ReadLine%2A>上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，或反之亦然。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-247">For example, do not follow <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> with a call to <xref:System.IO.StreamReader.ReadLine%2A> on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or vice versa.</span></span> <span data-ttu-id="f1d7e-248">不過，您可以讀取在不同模式中的兩個不同資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-248">However, you can read two different streams in different modes.</span></span> <span data-ttu-id="f1d7e-249">例如，您可以呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>，然後呼叫<xref:System.IO.StreamReader.ReadLine%2A>如<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-249">For example, you can call <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> and then call <xref:System.IO.StreamReader.ReadLine%2A> for the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-250">下列範例說明如何執行非同步讀取的作業的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>的資料流`sort`命令。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-250">The following example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="f1d7e-251">`sort`命令是主控台應用程式讀取及排序文字輸入。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-251">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="f1d7e-252">此範例會建立事件的委派`SortOutputHandler`事件處理常式並將它與相關聯<xref:System.Diagnostics.Process.OutputDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-252">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="f1d7e-253">事件處理常式收到文字行的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，格式化文字，並將文字寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-253">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-254">The <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-254">The <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-255">\- or -  An asynchronous read operation is already in progress on the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-255">\- or -  An asynchronous read operation is already in progress on the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          </span>
          <span data-ttu-id="f1d7e-256">\- or -  The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream has been used by a synchronous read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-256">\- or -  The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream has been used by a synchronous read operation.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-257">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-257">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-258">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-258">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
        <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
        <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
        <altmember cref="M:System.Diagnostics.Process.CancelOutputRead" />
      </Docs>
    </Member>
    <Member MemberName="CancelErrorRead">
      <MemberSignature Language="C#" Value="public void CancelErrorRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelErrorRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.CancelErrorRead" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelErrorRead ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelErrorRead();" />
      <MemberSignature Language="F#" Value="member this.CancelErrorRead : unit -&gt; unit" Usage="process.CancelErrorRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-259">Cancels the asynchronous read operation on the redirected <see cref="P:System.Diagnostics.Process.StandardError" /> stream of an application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-259">Cancels the asynchronous read operation on the redirected <see cref="P:System.Diagnostics.Process.StandardError" /> stream of an application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-260"><xref:System.Diagnostics.Process.BeginErrorReadLine%2A> 開始非同步讀取作業<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-260"><xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts an asynchronous read operation on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="f1d7e-261"><xref:System.Diagnostics.Process.CancelErrorRead%2A> 結束非同步讀取作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-261"><xref:System.Diagnostics.Process.CancelErrorRead%2A> ends the asynchronous read operation.</span></span>  
  
 <span data-ttu-id="f1d7e-262">之後取消，您可以繼續非同步讀取的作業，藉由呼叫<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>一次。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-262">After canceling, you can resume the asynchronous read operation by calling <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> again.</span></span>  
  
 <span data-ttu-id="f1d7e-263">當您呼叫<xref:System.Diagnostics.Process.CancelErrorRead%2A>，則所有進行中讀取作業的<xref:System.Diagnostics.Process.StandardError%2A>完成，則會停用事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-263">When you call <xref:System.Diagnostics.Process.CancelErrorRead%2A>, all in-progress read operations for <xref:System.Diagnostics.Process.StandardError%2A> are completed and then the event handler is disabled.</span></span> <span data-ttu-id="f1d7e-264">所有進一步重新導向輸出至<xref:System.Diagnostics.Process.StandardError%2A>會儲存在緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-264">All further redirected output to <xref:System.Diagnostics.Process.StandardError%2A> is saved in a buffer.</span></span> <span data-ttu-id="f1d7e-265">如果您重新啟用事件處理常式呼叫<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>、 已儲存的輸出會傳送至事件處理常式和非同步讀取的作業繼續。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-265">If you re-enable the event handler with a call to <xref:System.Diagnostics.Process.BeginErrorReadLine%2A>, the saved output is sent to the event handler and asynchronous read operations resume.</span></span> <span data-ttu-id="f1d7e-266">如果您想要變更的事件處理常式，再繼續非同步讀取的作業，您必須移除現有的事件處理常式，然後再加入新的事件處理常式：</span><span class="sxs-lookup"><span data-stu-id="f1d7e-266">If you want to change the event handler before resuming asynchronous read operations, you must remove the existing event handler before adding the new event handler:</span></span>  
  
```csharp  
// At this point the DataReceivedEventHandler(ErrorHandler1)   
// has executed a CancelErrorRead.  
  
// Remove the prior event handler.  
process.ErrorDataReceived -=   
    new DataReceivedEventHandler(ErrorHandler1);  
  
// Register a new event handler.  
process.ErrorDataReceived +=   
    new DataReceivedEventHandler(ErrorHandler2);  
  
// Call the corresponding BeginErrorReadLine.  
process.BeginErrorReadLine();  
```  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-267">您不能混合非同步和同步讀取的作業的重新導向<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-267">You cannot mix asynchronous and synchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="f1d7e-268">一次重新導向資料流的<xref:System.Diagnostics.Process>開啟在非同步或同步模式中，所有進一步的讀取該資料流的作業必須是相同的模式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-268">Once the redirected stream of a <xref:System.Diagnostics.Process> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</span></span> <span data-ttu-id="f1d7e-269">如果您取消非同步讀取作業上<xref:System.Diagnostics.Process.StandardError%2A>，然後從資料流讀取一次，您必須使用需要<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>繼續非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-269">If you cancel an asynchronous read operation on <xref:System.Diagnostics.Process.StandardError%2A> and then need to read from the stream again, you must use <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> to resume asynchronous read operations.</span></span> <span data-ttu-id="f1d7e-270">請勿遵循<xref:System.Diagnostics.Process.CancelErrorRead%2A>同步呼叫讀取方法<xref:System.Diagnostics.Process.StandardError%2A>這類<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，或<xref:System.IO.StreamReader.ReadToEnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-270">Do not follow <xref:System.Diagnostics.Process.CancelErrorRead%2A> with a call to the synchronous read methods of <xref:System.Diagnostics.Process.StandardError%2A> such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, or <xref:System.IO.StreamReader.ReadToEnd%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-271">下列範例會啟動`nmake`命令與使用者提供的引數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-271">The following example starts the `nmake` command with user supplied arguments.</span></span> <span data-ttu-id="f1d7e-272">以非同步的方式; 讀取的錯誤和輸出資料流收集到的文字行會顯示到主控台，以及寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-272">The error and output streams are read asynchronously; the collected text lines are displayed to the console as well as written to a log file.</span></span> <span data-ttu-id="f1d7e-273">如果命令輸出超過指定的行數，則會取消非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-273">If the command output exceeds a specified number of lines, the asynchronous read operations are canceled.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#3](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/nmake_async.cpp#3)]
 [!code-csharp[Process_AsyncStreams#3](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/nmake_async.cs#3)]
 [!code-vb[Process_AsyncStreams#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/nmake_async.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-274">The <see cref="P:System.Diagnostics.Process.StandardError" /> stream is not enabled for asynchronous read operations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-274">The <see cref="P:System.Diagnostics.Process.StandardError" /> stream is not enabled for asynchronous read operations.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-275">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-275">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-276">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-276">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.BeginErrorReadLine" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
        <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
        <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CancelOutputRead">
      <MemberSignature Language="C#" Value="public void CancelOutputRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelOutputRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.CancelOutputRead" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelOutputRead ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelOutputRead();" />
      <MemberSignature Language="F#" Value="member this.CancelOutputRead : unit -&gt; unit" Usage="process.CancelOutputRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-277">Cancels the asynchronous read operation on the redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream of an application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-277">Cancels the asynchronous read operation on the redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream of an application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-278"><xref:System.Diagnostics.Process.BeginOutputReadLine%2A> 開始非同步讀取作業<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-278"><xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts an asynchronous read operation on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-279"><xref:System.Diagnostics.Process.CancelOutputRead%2A> 結束非同步讀取作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-279"><xref:System.Diagnostics.Process.CancelOutputRead%2A> ends the asynchronous read operation.</span></span>  
  
 <span data-ttu-id="f1d7e-280">之後取消，您可以繼續非同步讀取的作業，藉由呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>一次。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-280">After canceling, you can resume asynchronous read operations by calling <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> again.</span></span>  
  
 <span data-ttu-id="f1d7e-281">當您呼叫<xref:System.Diagnostics.Process.CancelOutputRead%2A>，則所有進行中讀取作業的<xref:System.Diagnostics.Process.StandardOutput%2A>完成，則會停用事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-281">When you call <xref:System.Diagnostics.Process.CancelOutputRead%2A>, all in-progress read operations for <xref:System.Diagnostics.Process.StandardOutput%2A> are completed and then the event handler is disabled.</span></span> <span data-ttu-id="f1d7e-282">所有進一步重新導向輸出至<xref:System.Diagnostics.Process.StandardOutput%2A>會儲存在緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-282">All further redirected output to <xref:System.Diagnostics.Process.StandardOutput%2A> is saved in a buffer.</span></span> <span data-ttu-id="f1d7e-283">如果您重新啟用事件處理常式呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>、 已儲存的輸出會傳送至事件處理常式和非同步讀取的作業繼續。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-283">If you re-enable the event handler with a call to <xref:System.Diagnostics.Process.BeginOutputReadLine%2A>, the saved output is sent to the event handler and asynchronous read operations resume.</span></span> <span data-ttu-id="f1d7e-284">如果您想要變更的事件處理常式，再繼續非同步讀取的作業，您必須移除現有的事件處理常式，然後再加入新的事件處理常式：</span><span class="sxs-lookup"><span data-stu-id="f1d7e-284">If you want to change the event handler before resuming asynchronous read operations, you must remove the existing event handler before adding the new event handler:</span></span>  
  
```csharp  
// At this point the DataReceivedEventHandler(OutputHandler1)   
// has executed a CancelOutputRead.  
  
// Remove the prior event handler.  
process.OutputDataReceived -=   
    new DataReceivedEventHandler(OutputHandler1);  
  
// Register a new event handler.  
process.OutputDataReceived +=   
    new DataReceivedEventHandler(OutputHandler2);  
  
// Call the corresponding BeginOutputReadLine.  
process.BeginOutputReadLine();  
```  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-285">您不能混合非同步和同步讀取的作業的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-285">You cannot mix asynchronous and synchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-286">一次重新導向資料流的<xref:System.Diagnostics.Process>開啟在非同步或同步模式中，所有進一步的讀取該資料流的作業必須是相同的模式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-286">Once the redirected stream of a <xref:System.Diagnostics.Process> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</span></span> <span data-ttu-id="f1d7e-287">如果您取消非同步讀取作業上<xref:System.Diagnostics.Process.StandardOutput%2A>，然後從資料流讀取一次，您必須使用需要<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>繼續非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-287">If you cancel an asynchronous read operation on <xref:System.Diagnostics.Process.StandardOutput%2A> and then need to read from the stream again, you must use <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> to resume asynchronous read operations.</span></span> <span data-ttu-id="f1d7e-288">請勿遵循<xref:System.Diagnostics.Process.CancelOutputRead%2A>同步呼叫讀取方法<xref:System.Diagnostics.Process.StandardOutput%2A>這類<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，或<xref:System.IO.StreamReader.ReadToEnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-288">Do not follow <xref:System.Diagnostics.Process.CancelOutputRead%2A> with a call to the synchronous read methods of <xref:System.Diagnostics.Process.StandardOutput%2A> such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, or <xref:System.IO.StreamReader.ReadToEnd%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-289">下列範例會啟動`nmake`命令與使用者提供的引數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-289">The following example starts the `nmake` command with user supplied arguments.</span></span> <span data-ttu-id="f1d7e-290">以非同步的方式; 讀取的錯誤和輸出資料流收集到的文字行會顯示到主控台，以及寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-290">The error and output streams are read asynchronously; the collected text lines are displayed to the console as well as written to a log file.</span></span> <span data-ttu-id="f1d7e-291">如果命令輸出超過指定的行數，則會取消非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-291">If the command output exceeds a specified number of lines, the asynchronous read operations are canceled.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#3](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/nmake_async.cpp#3)]
 [!code-csharp[Process_AsyncStreams#3](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/nmake_async.cs#3)]
 [!code-vb[Process_AsyncStreams#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/nmake_async.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-292">The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream is not enabled for asynchronous read operations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-292">The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream is not enabled for asynchronous read operations.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-293">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-293">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-294">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-294">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.BeginOutputReadLine" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
        <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
        <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="process.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-295">Frees all the resources that are associated with this component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-295">Frees all the resources that are associated with this component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-296"><xref:System.Diagnostics.Process.Close%2A>方法會導致處理序停止等候結束等候它，如果關閉處理序控制代碼，而且清除處理序專屬的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-296">The <xref:System.Diagnostics.Process.Close%2A> method causes the process to stop waiting for exit if it was waiting, closes the process handle, and clears process-specific properties.</span></span> <span data-ttu-id="f1d7e-297"><xref:System.Diagnostics.Process.Close%2A> 不會關閉標準輸出、 輸入和錯誤的讀取器和寫入器，以防它們外部參考。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-297"><xref:System.Diagnostics.Process.Close%2A> does not close the standard output, input, and error readers and writers in case they are being referenced externally.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-298"><xref:System.Diagnostics.Process.Dispose%2A> 方法呼叫 <xref:System.Diagnostics.Process.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-298">The <xref:System.Diagnostics.Process.Dispose%2A> method calls <xref:System.Diagnostics.Process.Close%2A>.</span></span> <span data-ttu-id="f1d7e-299">放置<xref:System.Diagnostics.Process>中的物件`using`區塊處置的資源，而不需要呼叫<xref:System.Diagnostics.Process.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-299">Placing the <xref:System.Diagnostics.Process> object in a `using` block disposes of resources without the need to call <xref:System.Diagnostics.Process.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-300">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-300">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-301">然後，它會擷取相關聯的處理序的實體記憶體使用量在 2 秒的間隔，最多 10 秒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-301">It then retrieves the physical memory usage of the associated process at 2-second intervals for a maximum of 10 seconds.</span></span> <span data-ttu-id="f1d7e-302">此範例會偵測處理序結束之前經過 10 秒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-302">The example detects whether the process exits before 10 seconds have elapsed.</span></span> <span data-ttu-id="f1d7e-303">如果它仍在執行 10 秒後，範例就會關閉程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-303">The example closes the process if it is still running after 10 seconds.</span></span>  
  
 [!code-cpp[process_refresh#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_refresh/CPP/process_refresh.cpp#1)]
 [!code-csharp[process_refresh#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_refresh/CS/process_refresh.cs#1)]
 [!code-vb[process_refresh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_refresh/VB/process_refresh.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-304">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-304">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-305">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-305">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CloseMainWindow">
      <MemberSignature Language="C#" Value="public bool CloseMainWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseMainWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.CloseMainWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseMainWindow () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseMainWindow();" />
      <MemberSignature Language="F#" Value="member this.CloseMainWindow : unit -&gt; bool" Usage="process.CloseMainWindow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-306">Closes a process that has a user interface by sending a close message to its main window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-306">Closes a process that has a user interface by sending a close message to its main window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-307">
            <see langword="true" /> if the close message was successfully sent; <see langword="false" /> if the associated process does not have a main window or if the main window is disabled (for example if a modal dialog is being shown).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-307">
              <see langword="true" /> if the close message was successfully sent; <see langword="false" /> if the associated process does not have a main window or if the main window is disabled (for example if a modal dialog is being shown).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-308">當處理程序執行時，其訊息迴圈就會處於等候狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-308">When a process is executing, its message loop is in a wait state.</span></span> <span data-ttu-id="f1d7e-309">每次 Windows 訊息傳送至處理序的作業系統，則會執行訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-309">The message loop executes every time a Windows message is sent to the process by the operating system.</span></span> <span data-ttu-id="f1d7e-310">呼叫<xref:System.Diagnostics.Process.CloseMainWindow%2A>傳送要求以接近主視窗中，這在格式正確的應用程式中，關閉子視窗，並撤銷應用程式的所有執行訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-310">Calling <xref:System.Diagnostics.Process.CloseMainWindow%2A> sends a request to close to the main window, which, in a well-formed application, closes child windows and revokes all running message loops for the application.</span></span> <span data-ttu-id="f1d7e-311">結束藉由呼叫的程序要求<xref:System.Diagnostics.Process.CloseMainWindow%2A>不會強制應用程式結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-311">The request to exit the process by calling <xref:System.Diagnostics.Process.CloseMainWindow%2A> does not force the application to quit.</span></span> <span data-ttu-id="f1d7e-312">應用程式可以要求使用者確認之前結束，或者它可以拒絕結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-312">The application can ask for user verification before quitting, or it can refuse to quit.</span></span> <span data-ttu-id="f1d7e-313">若要強制應用程式結束，請使用<xref:System.Diagnostics.Process.Kill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-313">To force the application to quit, use the <xref:System.Diagnostics.Process.Kill%2A> method.</span></span> <span data-ttu-id="f1d7e-314">行為<xref:System.Diagnostics.Process.CloseMainWindow%2A>等同於關閉應用程式的主視窗中使用 [系統] 功能表的使用者。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-314">The behavior of <xref:System.Diagnostics.Process.CloseMainWindow%2A> is identical to that of a user closing an application's main window using the system menu.</span></span> <span data-ttu-id="f1d7e-315">因此，藉由關閉主視窗結束程序要求不會強制應用程式立即結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-315">Therefore, the request to exit the process by closing the main window does not force the application to quit immediately.</span></span>  
  
 <span data-ttu-id="f1d7e-316">編輯程序的資料或資源配置給處理程序不會遺失您呼叫<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-316">Data edited by the process or resources allocated to the process can be lost if you call <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-317"><xref:System.Diagnostics.Process.Kill%2A> 會造成異常的程序終止時，而且應該在必要時才使用。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-317"><xref:System.Diagnostics.Process.Kill%2A> causes an abnormal process termination, and should be used only when necessary.</span></span> <span data-ttu-id="f1d7e-318"><xref:System.Diagnostics.Process.CloseMainWindow%2A> 啟用程序有條理地終止，並關閉所有視窗，因此很適合使用介面的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-318"><xref:System.Diagnostics.Process.CloseMainWindow%2A> enables an orderly termination of the process and closes all windows, so it is preferable for applications with an interface.</span></span> <span data-ttu-id="f1d7e-319">如果<xref:System.Diagnostics.Process.CloseMainWindow%2A>失敗，您可以使用<xref:System.Diagnostics.Process.Kill%2A>結束這個處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-319">If <xref:System.Diagnostics.Process.CloseMainWindow%2A> fails, you can use <xref:System.Diagnostics.Process.Kill%2A> to terminate the process.</span></span> <span data-ttu-id="f1d7e-320"><xref:System.Diagnostics.Process.Kill%2A> 是終止處理序沒有圖形化介面的唯一方式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-320"><xref:System.Diagnostics.Process.Kill%2A> is the only way to terminate processes that do not have graphical interfaces.</span></span>  
  
 <span data-ttu-id="f1d7e-321">您可以呼叫<xref:System.Diagnostics.Process.Kill%2A>和<xref:System.Diagnostics.Process.CloseMainWindow%2A>只能供本機電腦執行的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-321">You can call <xref:System.Diagnostics.Process.Kill%2A> and <xref:System.Diagnostics.Process.CloseMainWindow%2A> only for processes that are running on the local computer.</span></span> <span data-ttu-id="f1d7e-322">您無法使處理序結束的遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-322">You cannot cause processes on remote computers to exit.</span></span> <span data-ttu-id="f1d7e-323">您只能檢視在遠端電腦上執行的程序資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-323">You can only view information for processes running on remote computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-324">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-324">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-325">然後，它會擷取相關聯的處理序的實體記憶體使用量在 10 秒，最多達 2 秒的間隔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-325">It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</span></span> <span data-ttu-id="f1d7e-326">此範例會偵測處理序結束之前經過 10 秒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-326">The example detects whether the process exits before 10 seconds have elapsed.</span></span> <span data-ttu-id="f1d7e-327">如果它仍在執行 10 秒後，範例就會關閉程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-327">The example closes the process if it is still running after 10 seconds.</span></span>  
  
 [!code-cpp[process_refresh#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_refresh/CPP/process_refresh.cpp#1)]
 [!code-csharp[process_refresh#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_refresh/CS/process_refresh.cs#1)]
 [!code-vb[process_refresh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_refresh/VB/process_refresh.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-328">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-328">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-329">The process has already exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-329">The process has already exited.</span>
          </span>
          <span data-ttu-id="f1d7e-330">-or-  No process is associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-330">-or-  No process is associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-331">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-331">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-332">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-332">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="process.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="process.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f1d7e-333">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-333">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-334">Release all resources used by this process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-334">Release all resources used by this process.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.Diagnostics.Process.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process component should watch for the associated process to exit, and raise the Exited event.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-335">Gets or sets whether the <see cref="E:System.Diagnostics.Process.Exited" /> event should be raised when the process terminates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-335">Gets or sets whether the <see cref="E:System.Diagnostics.Process.Exited" /> event should be raised when the process terminates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-336">如果應該在相關聯處理序終止時引發 <see cref="E:System.Diagnostics.Process.Exited" /> 事件 (經由結束或呼叫 <see cref="M:System.Diagnostics.Process.Kill" />)，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-336">
              <see langword="true" /> if the <see cref="E:System.Diagnostics.Process.Exited" /> event should be raised when the associated process is terminated (through either an exit or a call to <see cref="M:System.Diagnostics.Process.Kill" />); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-337">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-337">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-338">請注意，<see cref="E:System.Diagnostics.Process.Exited" />就會引發事件，即使的值<see cref="P:System.Diagnostics.Process.EnableRaisingEvents" />是<see langword="false" />期間的處理序結束時，或使用者執行前<see cref="P:System.Diagnostics.Process.HasExited" />檢查。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-338">Note that the <see cref="E:System.Diagnostics.Process.Exited" /> event is raised even if the value of <see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /> is <see langword="false" /> when the process exits during or before the user performs a <see cref="P:System.Diagnostics.Process.HasExited" /> check.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="f1d7e-339"><xref:System.Diagnostics.Process.EnableRaisingEvents%2A>屬性表示作業系統已關閉程序時，是否應該收到通知的元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-339">The <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> property suggests whether the component should be notified when the operating system has shut down a process.</span></span> <span data-ttu-id="f1d7e-340"><xref:System.Diagnostics.Process.EnableRaisingEvents%2A>屬性來通知您的處理序已結束的應用程式時，會在非同步處理。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-340">The <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> property is used in asynchronous processing to notify your application that a process has exited.</span></span> <span data-ttu-id="f1d7e-341">若要強制您的應用程式來同步等候結束事件 （會中斷應用程式的處理，直到結束事件已發生），使用<xref:System.Diagnostics.Process.WaitForExit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-341">To force your application to synchronously wait for an exit event (which interrupts processing of the application until the exit event has occurred), use the <xref:System.Diagnostics.Process.WaitForExit%2A> method.</span></span>

> [!NOTE]
> <span data-ttu-id="f1d7e-342">如果您使用 Visual Studio，然後按兩下<xref:System.Diagnostics.Process>元件在專案中，<xref:System.Diagnostics.Process.Exited>事件委派和事件處理常式會自動產生。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-342">If you're using Visual Studio and double-click a <xref:System.Diagnostics.Process> component in your project, an <xref:System.Diagnostics.Process.Exited> event delegate and event handler are automatically generated.</span></span> <span data-ttu-id="f1d7e-343">額外的程式碼集<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-343">Additional code sets the <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> property to `false`.</span></span> <span data-ttu-id="f1d7e-344">您必須變更此屬性為`true`相關聯的處理序結束時，要執行事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-344">You must change this property to `true` for your event handler to execute when the associated process exits.</span></span>

<span data-ttu-id="f1d7e-345">如果元件<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>值是`true`，或當<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>是`false`和<xref:System.Diagnostics.Process.HasExited%2A>檢查會叫用元件，元件可以存取相關聯的處理程序會維持系統管理資訊由作業系統所儲存。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-345">If the component's <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> value is `true`, or when <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> is `false` and a <xref:System.Diagnostics.Process.HasExited%2A> check is invoked by the component, the component can access the administrative information for the associated process, which remains stored by the operating system.</span></span> <span data-ttu-id="f1d7e-346">這類資訊包括<xref:System.Diagnostics.Process.ExitTime%2A>而<xref:System.Diagnostics.Process.ExitCode%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-346">Such information includes the <xref:System.Diagnostics.Process.ExitTime%2A> and the <xref:System.Diagnostics.Process.ExitCode%2A>.</span></span>

<span data-ttu-id="f1d7e-347">相關聯的處理序結束之後，<xref:System.Diagnostics.Process.Handle%2A>的元件不會再指向現有的處理序資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-347">After the associated process exits, the <xref:System.Diagnostics.Process.Handle%2A> of the component no longer points to an existing process resource.</span></span> <span data-ttu-id="f1d7e-348">相反地，它只可用來存取的處理序資源相關的作業系統的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-348">Instead, it can only be used to access the operating system's information about the process resource.</span></span> <span data-ttu-id="f1d7e-349">作業系統是感知有未發行的結束處理程序的控制代碼<xref:System.Diagnostics.Process>元件，因此它會保留<xref:System.Diagnostics.Process.ExitTime%2A>和<xref:System.Diagnostics.Process.Handle%2A>在記憶體中的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-349">The operating system is aware that there are handles to exited processes that haven't been released by <xref:System.Diagnostics.Process> components, so it keeps the <xref:System.Diagnostics.Process.ExitTime%2A> and <xref:System.Diagnostics.Process.Handle%2A> information in memory.</span></span>

<span data-ttu-id="f1d7e-350">沒有相關聯的處理序結束監看的成本。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-350">There's a cost associated with watching for a process to exit.</span></span> <span data-ttu-id="f1d7e-351">如果<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>已`true`，則<xref:System.Diagnostics.Process.Exited>相關聯的處理序終止時，會引發事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-351">If <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> is `true`, the <xref:System.Diagnostics.Process.Exited> event is raised when the associated process terminates.</span></span> <span data-ttu-id="f1d7e-352">您的程序<xref:System.Diagnostics.Process.Exited>在該時間執行的事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-352">Your procedures for the <xref:System.Diagnostics.Process.Exited> event run at that time.</span></span>

<span data-ttu-id="f1d7e-353">有時候，您的應用程式啟動的處理序，但不需要其 closure 的通知。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-353">Sometimes, your application starts a process but doesn't require notification of its closure.</span></span> <span data-ttu-id="f1d7e-354">例如，您的應用程式可以啟動 [記事本]，以允許使用者執行的文字編輯，但沒有進一步讓使用 「 記事本 」 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-354">For example, your application can start Notepad to allow the user to perform text editing but make no further use of the Notepad application.</span></span> <span data-ttu-id="f1d7e-355">您可以選擇以避免處理序結束，因為它不是與您的應用程式的持續運作時的通知。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-355">You can choose to avoid notification when the process exits because it's not relevant to the continued operation of your application.</span></span> <span data-ttu-id="f1d7e-356">設定<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>至`false`可以節省系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-356">Setting <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> to `false` can save system resources.</span></span>

## Examples  
<span data-ttu-id="f1d7e-357">下列程式碼範例會建立會列印檔案的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-357">The following code example creates a process that prints a file.</span></span> <span data-ttu-id="f1d7e-358">它會設定<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>屬性，讓處理程序引發<xref:System.Diagnostics.Process.Exited>結束時的事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-358">It sets the <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> property to cause the process to raise the <xref:System.Diagnostics.Process.Exited> event when it exits.</span></span> <span data-ttu-id="f1d7e-359"><xref:System.Diagnostics.Process.Exited>事件處理常式會顯示處理程序資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-359">The <xref:System.Diagnostics.Process.Exited> event handler displays process information.</span></span>

[!code-csharp[System.Diagnostics.Process.EnableExited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Process.EnableExited/CS/processexitedevent.cs#1)]   
[!code-vb[System.Diagnostics.Process.EnableExited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Process.EnableExited/VB/processexitedevent.vb#1)]   
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-360">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-360">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-361">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-361">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
        <altmember cref="E:System.Diagnostics.Process.Exited" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
        <altmember cref="P:System.Diagnostics.Process.Handle" />
        <altmember cref="P:System.Diagnostics.Process.ExitTime" />
        <altmember cref="P:System.Diagnostics.Process.HasExited" />
      </Docs>
    </Member>
    <Member MemberName="EnterDebugMode">
      <MemberSignature Language="C#" Value="public static void EnterDebugMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnterDebugMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.EnterDebugMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnterDebugMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnterDebugMode();" />
      <MemberSignature Language="F#" Value="static member EnterDebugMode : unit -&gt; unit" Usage="System.Diagnostics.Process.EnterDebugMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-362">Puts a <see cref="T:System.Diagnostics.Process" /> component in state to interact with operating system processes that run in a special mode by enabling the native property <see langword="SeDebugPrivilege" /> on the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-362">Puts a <see cref="T:System.Diagnostics.Process" /> component in state to interact with operating system processes that run in a special mode by enabling the native property <see langword="SeDebugPrivilege" /> on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-363">某些作業系統處理程序以特殊模式執行。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-363">Some operating system processes run in a special mode.</span></span> <span data-ttu-id="f1d7e-364">嘗試讀取的屬性，或附加至這些處理序不能除非您呼叫<xref:System.Diagnostics.Process.EnterDebugMode%2A>元件上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-364">Attempting to read properties of or attach to these processes is not possible unless you have called <xref:System.Diagnostics.Process.EnterDebugMode%2A> on the component.</span></span> <span data-ttu-id="f1d7e-365">呼叫<xref:System.Diagnostics.Process.LeaveDebugMode%2A>當您不再需要存取權以特殊模式執行這些程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-365">Call <xref:System.Diagnostics.Process.LeaveDebugMode%2A> when you no longer need access to these processes that run in special mode.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-366">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-366">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-367">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-367">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.LeaveDebugMode" />
      </Docs>
    </Member>
    <Member MemberName="ErrorDataReceived">
      <MemberSignature Language="C#" Value="public event System.Diagnostics.DataReceivedEventHandler ErrorDataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Diagnostics.DataReceivedEventHandler ErrorDataReceived" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Process.ErrorDataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ErrorDataReceived As DataReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Diagnostics::DataReceivedEventHandler ^ ErrorDataReceived;" />
      <MemberSignature Language="F#" Value="member this.ErrorDataReceived : System.Diagnostics.DataReceivedEventHandler " Usage="member this.ErrorDataReceived : System.Diagnostics.DataReceivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Indicates if the process component is associated with a real process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-368">Occurs when an application writes to its redirected <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-368">Occurs when an application writes to its redirected <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-369"><xref:System.Diagnostics.Process.ErrorDataReceived>事件可讓您表示相關聯的處理序已經寫入至其重新導向<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-369">The <xref:System.Diagnostics.Process.ErrorDataReceived> event indicates that the associated process has written to its redirected <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-370">事件只發生在非同步讀取作業上<xref:System.Diagnostics.Process.StandardError%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-370">The event only occurs during asynchronous read operations on <xref:System.Diagnostics.Process.StandardError%2A>.</span></span> <span data-ttu-id="f1d7e-371">若要開始非同步讀取的作業，您必須重新導向<xref:System.Diagnostics.Process.StandardError%2A>的資料流<xref:System.Diagnostics.Process>，新增您的事件處理常式，來<xref:System.Diagnostics.Process.ErrorDataReceived>事件，並呼叫<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-371">To start asynchronous read operations, you must redirect the <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process>, add your event handler to the <xref:System.Diagnostics.Process.ErrorDataReceived> event, and call <xref:System.Diagnostics.Process.BeginErrorReadLine%2A>.</span></span> <span data-ttu-id="f1d7e-372">之後，<xref:System.Diagnostics.Process.ErrorDataReceived>事件訊號處理程序會將某行寫入至重新導向每次<xref:System.Diagnostics.Process.StandardError%2A>串流處理，直到處理程序結束或呼叫<xref:System.Diagnostics.Process.CancelErrorRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-372">Thereafter, the <xref:System.Diagnostics.Process.ErrorDataReceived> event signals each time the process writes a line to the redirected <xref:System.Diagnostics.Process.StandardError%2A> stream, until the process exits or calls <xref:System.Diagnostics.Process.CancelErrorRead%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-373">正在處理的非同步輸出的應用程式應該呼叫<xref:System.Diagnostics.Process.WaitForExit>方法，以確保已排清輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-373">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit> method to ensure that the output buffer has been flushed.</span></span> <span data-ttu-id="f1d7e-374">請注意，使用該指定逾時<xref:System.Diagnostics.Process.WaitForExit(System.Int32)>多載未*不*確保已排清輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-374">Note that specifying a timeout by using the <xref:System.Diagnostics.Process.WaitForExit(System.Int32)> overload does *not* ensure the output buffer has been flushed.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-375">下列範例會使用`net view`命令來列出可用的網路資源，在遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-375">The following example uses the `net view` command to list the available network resources on a remote computer.</span></span> <span data-ttu-id="f1d7e-376">使用者所提供的目標電腦名稱做為命令列引數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-376">The user supplies the target computer name as a command-line argument.</span></span> <span data-ttu-id="f1d7e-377">使用者也可以提供錯誤輸出的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-377">The user can also supply a file name for error output.</span></span> <span data-ttu-id="f1d7e-378">此範例會收集的 net 命令、 等候處理序完成，然後再寫入至主控台的輸出結果的輸出。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-378">The example collects the output of the net command, waits for the process to finish, and then writes the output results to the console.</span></span> <span data-ttu-id="f1d7e-379">如果使用者所提供的選擇性的錯誤檔案，則此範例會將錯誤寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-379">If the user supplies the optional error file, the example writes errors to the file.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#2](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/net_async.cpp#2)]
 [!code-csharp[Process_AsyncStreams#2](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/net_async.cs#2)]
 [!code-vb[Process_AsyncStreams#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/net_async.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-380">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-380">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-381">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-381">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
        <altmember cref="M:System.Diagnostics.Process.BeginErrorReadLine" />
        <altmember cref="M:System.Diagnostics.Process.CancelErrorRead" />
        <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int" Usage="System.Diagnostics.Process.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The value returned from the associated process when it terminated.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-382">Gets the value that the associated process specified when it terminated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-382">Gets the value that the associated process specified when it terminated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-383">相關處理序終止時指定的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-383">The code that the associated process specified when it terminated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-384">使用<xref:System.Diagnostics.Process.ExitCode%2A>來取得系統處理序會傳回它結束時的狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-384">Use <xref:System.Diagnostics.Process.ExitCode%2A> to get the status that the system process returned when it exited.</span></span> <span data-ttu-id="f1d7e-385">您可以使用結束代碼更像是整數傳回的值從`main()`程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-385">You can use the exit code much like an integer return value from a `main()` procedure.</span></span>  
  
 <span data-ttu-id="f1d7e-386"><xref:System.Diagnostics.Process.ExitCode%2A>處理程序會反映該處理程序的應用程式開發人員所實作的特定慣例的值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-386">The <xref:System.Diagnostics.Process.ExitCode%2A> value for a process reflects the specific convention implemented by the application developer for that process.</span></span> <span data-ttu-id="f1d7e-387">如果您使用的結束代碼值在您的程式碼中進行決策時，務必知道您的應用程式處理序所使用的結束程式碼慣例。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-387">If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process.</span></span>  
  
 <span data-ttu-id="f1d7e-388">開發人員通常會表示成功結束<xref:System.Diagnostics.Process.ExitCode%2A>值所呼叫的方法可用來找出異常的處理序終止原因的非零值零，且指定的錯誤。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-388">Developers usually indicate a successful exit by an <xref:System.Diagnostics.Process.ExitCode%2A> value of zero, and designate errors by nonzero values that the calling method can use to identify the cause of an abnormal process termination.</span></span> <span data-ttu-id="f1d7e-389">您不需要遵循下列指導方針，但它們是慣例。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-389">It is not necessary to follow these guidelines, but they are the convention.</span></span>  
  
 <span data-ttu-id="f1d7e-390">如果您嘗試取得<xref:System.Diagnostics.Process.ExitCode%2A>處理序已結束之前，嘗試就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-390">If you try to get the <xref:System.Diagnostics.Process.ExitCode%2A> before the process has exited, the attempt throws an exception.</span></span> <span data-ttu-id="f1d7e-391">檢查<xref:System.Diagnostics.Process.HasExited%2A>; 屬性第一次，確認是否已終止相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-391">Examine the <xref:System.Diagnostics.Process.HasExited%2A> property first to verify whether the associated process has terminated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-392">當非同步事件處理常式已重新導向標準輸出時，有可能，輸出處理尚未完成的時機<xref:System.Diagnostics.Process.HasExited%2A>傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-392">When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when <xref:System.Diagnostics.Process.HasExited%2A> returns `true`.</span></span> <span data-ttu-id="f1d7e-393">若要確保非同步事件處理已完成，請呼叫<xref:System.Diagnostics.Process.WaitForExit>檢查之前接受任何參數的多載<xref:System.Diagnostics.Process.HasExited%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-393">To ensure that asynchronous event handling has been completed, call the <xref:System.Diagnostics.Process.WaitForExit> overload that takes no parameter before checking <xref:System.Diagnostics.Process.HasExited%2A>.</span></span>  
  
 <span data-ttu-id="f1d7e-394">您可以使用<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>方法，讓相關聯的處理序結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-394">You can use the <xref:System.Diagnostics.Process.CloseMainWindow%2A> or the <xref:System.Diagnostics.Process.Kill%2A> method to cause an associated process to exit.</span></span>  
  
 <span data-ttu-id="f1d7e-395">有兩種方式的相關聯的處理序結束時所通知： 同步和非同步的方式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-395">There are two ways of being notified when the associated process exits: synchronously and asynchronously.</span></span> <span data-ttu-id="f1d7e-396">同步通知依賴呼叫<xref:System.Diagnostics.Process.WaitForExit%2A>方法，以暫停您的應用程式的處理，直到相關聯的元件會結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-396">Synchronous notification relies on calling the <xref:System.Diagnostics.Process.WaitForExit%2A> method to pause the processing of your application until the associated component exits.</span></span> <span data-ttu-id="f1d7e-397">非同步通知依賴<xref:System.Diagnostics.Process.Exited>事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-397">Asynchronous notification relies on the <xref:System.Diagnostics.Process.Exited> event.</span></span> <span data-ttu-id="f1d7e-398">使用非同步通知時<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>必須設為`true`如<xref:System.Diagnostics.Process>元件來接收通知的處理序已結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-398">When using asynchronous notification, <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> must be set to `true` for the <xref:System.Diagnostics.Process> component to receive notification that the process has exited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-399">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-399">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-400">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-400">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-401">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-401">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-402">The process has not exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-402">The process has not exited.</span>
          </span>
          <span data-ttu-id="f1d7e-403">-or-  The process <see cref="P:System.Diagnostics.Process.Handle" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-403">-or-  The process <see cref="P:System.Diagnostics.Process.Handle" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-404">You are trying to access the <see cref="P:System.Diagnostics.Process.ExitCode" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-404">You are trying to access the <see cref="P:System.Diagnostics.Process.ExitCode" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-405">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-405">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-406">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-406">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-407">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-407">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.HasExited" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
        <altmember cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
        <altmember cref="P:System.Diagnostics.Process.EnableRaisingEvents" />
      </Docs>
    </Member>
    <Member MemberName="Exited">
      <MemberSignature Language="C#" Value="public event EventHandler Exited;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Exited" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Process.Exited" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Exited As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Exited;" />
      <MemberSignature Language="F#" Value="member this.Exited : EventHandler " Usage="member this.Exited : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("If the WatchForExit property is set to true, then this event is raised when the associated process exits.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-408">Occurs when a process exits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-408">Occurs when a process exits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-409"><xref:System.Diagnostics.Process.Exited>事件表示相關聯的處理序已結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-409">The <xref:System.Diagnostics.Process.Exited> event indicates that the associated process exited.</span></span> <span data-ttu-id="f1d7e-410">此項目表示程序結束 （中止） 或成功關閉。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-410">This occurrence means either that the process terminated (aborted) or successfully closed.</span></span> <span data-ttu-id="f1d7e-411">只有當，就會發生此事件的值<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-411">This event can occur only if the value of the <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="f1d7e-412">有兩種方式的相關聯的處理序結束時所通知： 同步和非同步的方式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-412">There are two ways of being notified when the associated process exits: synchronously and asynchronously.</span></span> <span data-ttu-id="f1d7e-413">同步通知表示呼叫<xref:System.Diagnostics.Process.WaitForExit%2A>方法來封鎖目前的執行緒，直到處理序結束為止。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-413">Synchronous notification means calling the <xref:System.Diagnostics.Process.WaitForExit%2A> method to block the current thread until the process exits.</span></span> <span data-ttu-id="f1d7e-414">使用非同步通知<xref:System.Diagnostics.Process.Exited>事件，可讓呼叫執行緒能夠繼續在同時執行。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-414">Asynchronous notification uses the <xref:System.Diagnostics.Process.Exited> event, which allows the calling thread to continue execution in the meantime.</span></span> <span data-ttu-id="f1d7e-415">在後者的情況下，<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>必須設為`true`呼叫的應用程式接收訊號事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-415">In the latter case, <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> must be set to `true` for the calling application to receive the Exited event.</span></span>  
  
 <span data-ttu-id="f1d7e-416">當作業系統關機程序時，它會通知所有其他已註冊的訊號事件處理常式的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-416">When the operating system shuts down a process, it notifies all other processes that have registered handlers for the Exited event.</span></span> <span data-ttu-id="f1d7e-417">此時，只要結束處理程序的控制代碼可用來存取某些屬性，例如<xref:System.Diagnostics.Process.ExitTime%2A>和<xref:System.Diagnostics.Process.HasExited%2A>作業系統會維護，直到它完全釋放該控制代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-417">At this time, the handle of the process that just exited can be used to access some properties such as  <xref:System.Diagnostics.Process.ExitTime%2A> and <xref:System.Diagnostics.Process.HasExited%2A> that the operating system maintains until it releases that handle completely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-418">即使您有結束的處理程序的控制代碼，您不能呼叫<xref:System.Diagnostics.Process.Start%2A>，重新連線至相同的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-418">Even if you have a handle to an exited process, you cannot call <xref:System.Diagnostics.Process.Start%2A> again to reconnect to the same process.</span></span> <span data-ttu-id="f1d7e-419">呼叫<xref:System.Diagnostics.Process.Start%2A>自動釋放相關聯的處理序，並連線到處理序中，使用相同的檔案，但全新<xref:System.Diagnostics.Process.Handle%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-419">Calling <xref:System.Diagnostics.Process.Start%2A> automatically releases the associated process and connects to a process with the same file but an entirely new <xref:System.Diagnostics.Process.Handle%2A>.</span></span>  
  
 <span data-ttu-id="f1d7e-420">如需使用詳細資訊<xref:System.Diagnostics.Process.Exited>事件，在 Windows Forms 應用程式，請參閱<xref:System.Diagnostics.Process.SynchronizingObject%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-420">For more information about the use of the <xref:System.Diagnostics.Process.Exited> event in Windows Forms applications, see the <xref:System.Diagnostics.Process.SynchronizingObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-421">下列程式碼範例會建立會列印檔案的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-421">The following code example creates a process that prints a file.</span></span> <span data-ttu-id="f1d7e-422">它會引發<xref:System.Diagnostics.Process.Exited>事件的處理序結束，因為時<xref:System.Diagnostics.Process.EnableRaisingEvents%2A>建立程序時，已設定屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-422">It raises the <xref:System.Diagnostics.Process.Exited> event when the process exits because the <xref:System.Diagnostics.Process.EnableRaisingEvents%2A> property was set when the process was created.</span></span> <span data-ttu-id="f1d7e-423"><xref:System.Diagnostics.Process.Exited>事件處理常式會顯示處理程序資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-423">The <xref:System.Diagnostics.Process.Exited> event handler displays process information.</span></span>  
  
 [!code-csharp[System.Diagnostics.Process.EnableExited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Process.EnableExited/CS/processexitedevent.cs#1)]
 [!code-vb[System.Diagnostics.Process.EnableExited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Process.EnableExited/VB/processexitedevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-424">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-424">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-425">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-425">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExitTime">
      <MemberSignature Language="C#" Value="public DateTime ExitTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExitTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.ExitTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExitTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExitTime : DateTime" Usage="System.Diagnostics.Process.ExitTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The time that the associated process exited.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-426">Gets the time that the associated process exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-426">Gets the time that the associated process exited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-427">
            <see cref="T:System.DateTime" />，表示相關聯處理序何時終止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-427">A <see cref="T:System.DateTime" /> that indicates when the associated process was terminated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-428">如果還沒有終止程序，嘗試擷取<xref:System.Diagnostics.Process.ExitTime%2A>屬性會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-428">If the process has not terminated, attempting to retrieve the <xref:System.Diagnostics.Process.ExitTime%2A> property throws an exception.</span></span> <span data-ttu-id="f1d7e-429">使用<xref:System.Diagnostics.Process.HasExited%2A>才能<xref:System.Diagnostics.Process.ExitTime%2A>屬性來判斷是否已終止相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-429">Use <xref:System.Diagnostics.Process.HasExited%2A> before getting the <xref:System.Diagnostics.Process.ExitTime%2A> property to determine whether the associated process has terminated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-430">下列程式碼範例會建立會列印檔案的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-430">The following code example creates a process that prints a file.</span></span> <span data-ttu-id="f1d7e-431">處理程序會引發<xref:System.Diagnostics.Process.Exited>時結束時，事件和事件處理常式顯示<xref:System.Diagnostics.Process.ExitTime%2A>屬性和其他處理資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-431">The process raises the <xref:System.Diagnostics.Process.Exited> event when it exits, and the event handler displays the <xref:System.Diagnostics.Process.ExitTime%2A> property and other process information.</span></span>  
  
 [!code-csharp[System.Diagnostics.Process.EnableExited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Process.EnableExited/CS/processexitedevent.cs#1)]
 [!code-vb[System.Diagnostics.Process.EnableExited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Process.EnableExited/VB/processexitedevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-432">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-432">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-433">You are trying to access the <see cref="P:System.Diagnostics.Process.ExitTime" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-433">You are trying to access the <see cref="P:System.Diagnostics.Process.ExitTime" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-434">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-434">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-435">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-435">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-436">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-436">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Handle" />
        <altmember cref="P:System.Diagnostics.Process.ExitCode" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProcess">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process GetCurrentProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process GetCurrentProcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetCurrentProcess" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentProcess () As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ GetCurrentProcess();" />
      <MemberSignature Language="F#" Value="static member GetCurrentProcess : unit -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.GetCurrentProcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-437">Gets a new <see cref="T:System.Diagnostics.Process" /> component and associates it with the currently active process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-437">Gets a new <see cref="T:System.Diagnostics.Process" /> component and associates it with the currently active process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-438">A new <see cref="T:System.Diagnostics.Process" /> component associated with the process resource that is running the calling application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-438">A new <see cref="T:System.Diagnostics.Process" /> component associated with the process resource that is running the calling application.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-439">使用這個方法來建立新<xref:System.Diagnostics.Process>執行個體，並將它與本機電腦上的處理序資源關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-439">Use this method to create a new <xref:System.Diagnostics.Process> instance and associate it with the process resource on the local computer.</span></span>  
  
 <span data-ttu-id="f1d7e-440">例如，類似<xref:System.Diagnostics.Process.GetProcessById%2A>， <xref:System.Diagnostics.Process.GetProcessesByName%2A>，和<xref:System.Diagnostics.Process.GetProcesses%2A>方法，<xref:System.Diagnostics.Process.GetCurrentProcess%2A>將現有的資源與新<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-440">Like the similar <xref:System.Diagnostics.Process.GetProcessById%2A>, <xref:System.Diagnostics.Process.GetProcessesByName%2A>, and <xref:System.Diagnostics.Process.GetProcesses%2A> methods, <xref:System.Diagnostics.Process.GetCurrentProcess%2A> associates an existing resource with a new <xref:System.Diagnostics.Process> component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-441">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-441">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-442">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-442">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-443">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-443">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-444">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-444">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcesses" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProcessById">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-445">Creates a new <see cref="T:System.Diagnostics.Process" /> component, and associates it with the existing process resource that you specify.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-445">Creates a new <see cref="T:System.Diagnostics.Process" /> component, and associates it with the existing process resource that you specify.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProcessById">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process GetProcessById (int processId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process GetProcessById(int32 processId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetProcessById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProcessById (processId As Integer) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ GetProcessById(int processId);" />
      <MemberSignature Language="F#" Value="static member GetProcessById : int -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.GetProcessById processId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="processId">
          <span data-ttu-id="f1d7e-446">The system-unique identifier of a process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-446">The system-unique identifier of a process resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-447">Returns a new <see cref="T:System.Diagnostics.Process" /> component, given the identifier of a process on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-447">Returns a new <see cref="T:System.Diagnostics.Process" /> component, given the identifier of a process on the local computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-448">A <see cref="T:System.Diagnostics.Process" /> component that is associated with the local process resource identified by the <paramref name="processId" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-448">A <see cref="T:System.Diagnostics.Process" /> component that is associated with the local process resource identified by the <paramref name="processId" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-449">使用這個方法來建立新<xref:System.Diagnostics.Process>元件和其關聯處理序資源在本機電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-449">Use this method to create a new <xref:System.Diagnostics.Process> component and associate it with a process resource on the local computer.</span></span> <span data-ttu-id="f1d7e-450">處理序資源必須已經存在的電腦上，因為<xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29>不會建立系統資源，但而不是建立與應用程式所產生的關聯資源<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-450">The process resource must already exist on the computer, because <xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29> does not create a system resource, but rather associates a resource with an application-generated <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="f1d7e-451">處理程序<xref:System.Diagnostics.Process.Id%2A>可以擷取只會針對目前在電腦執行的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-451">A process <xref:System.Diagnostics.Process.Id%2A> can be retrieved only for a process that is currently running on the computer.</span></span> <span data-ttu-id="f1d7e-452">在處理序終止之後，<xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29>擲回例外狀況，如果傳遞的過期的識別項。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-452">After the process terminates, <xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29> throws an exception if you pass it an expired identifier.</span></span>  
  
 <span data-ttu-id="f1d7e-453">在任何特定的電腦上的處理程序的識別碼是唯一的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-453">On any particular computer, the identifier of a process is unique.</span></span> <span data-ttu-id="f1d7e-454"><xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29> 最多會傳回其中一個處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-454"><xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29> returns one process at most.</span></span> <span data-ttu-id="f1d7e-455">如果您想要取得執行特定的應用程式，使用的所有處理程序<xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-455">If you want to get all the processes running a particular application, use <xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29>.</span></span> <span data-ttu-id="f1d7e-456">如果執行指定的應用程式的電腦上的多個處理序存在<xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29>傳回陣列，包含所有相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-456">If multiple processes exist on the computer running the specified application, <xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29> returns an array containing all the associated processes.</span></span> <span data-ttu-id="f1d7e-457">您可以查詢每個這些處理序的識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-457">You can query each of these processes in turn for its identifier.</span></span> <span data-ttu-id="f1d7e-458">您可以在檢視的處理序識別碼`Processes`面板的 Windows 工作管理員 」 中。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-458">The process identifier can be viewed in the `Processes` panel of the Windows Task Manager.</span></span> <span data-ttu-id="f1d7e-459">`PID`資料行會顯示指派給處理程序的處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-459">The `PID` column displays the process identifier that is assigned to a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-460">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-460">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-461">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-461">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f1d7e-462">The process specified by the <paramref name="processId" /> parameter is not running.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-462">The process specified by the <paramref name="processId" /> parameter is not running.</span>
          </span>
          <span data-ttu-id="f1d7e-463">The identifier might be expired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-463">The identifier might be expired.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-464">The process was not started by this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-464">The process was not started by this object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-465">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-465">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-466">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-466">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Id" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcesses" />
        <altmember cref="M:System.Diagnostics.Process.GetCurrentProcess" />
      </Docs>
    </Member>
    <Member MemberName="GetProcessById">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process GetProcessById (int processId, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process GetProcessById(int32 processId, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProcessById (processId As Integer, machineName As String) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ GetProcessById(int processId, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetProcessById : int * string -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.GetProcessById (processId, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("There is no support for retrieving process information from a remote machine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processId" Type="System.Int32" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="processId">
          <span data-ttu-id="f1d7e-467">The system-unique identifier of a process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-467">The system-unique identifier of a process resource.</span>
          </span>
        </param>
        <param name="machineName">
          <span data-ttu-id="f1d7e-468">The name of a computer on the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-468">The name of a computer on the network.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-469">Returns a new <see cref="T:System.Diagnostics.Process" /> component, given a process identifier and the name of a computer on the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-469">Returns a new <see cref="T:System.Diagnostics.Process" /> component, given a process identifier and the name of a computer on the network.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-470">A <see cref="T:System.Diagnostics.Process" /> component that is associated with a remote process resource identified by the <paramref name="processId" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-470">A <see cref="T:System.Diagnostics.Process" /> component that is associated with a remote process resource identified by the <paramref name="processId" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-471">使用這個方法來建立新<xref:System.Diagnostics.Process>元件和其關聯處理序資源在網路上的遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-471">Use this method to create a new <xref:System.Diagnostics.Process> component and associate it with a process resource on a remote computer on the network.</span></span> <span data-ttu-id="f1d7e-472">處理序資源必須已經存在於指定的電腦，因為<xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29>不會建立系統資源，但而不是建立與應用程式所產生的關聯資源<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-472">The process resource must already exist on the specified computer, because <xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29> does not create a system resource, but rather associates a resource with an application-generated <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="f1d7e-473">處理程序<xref:System.Diagnostics.Process.Id%2A>可以擷取只會針對目前在電腦執行的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-473">A process <xref:System.Diagnostics.Process.Id%2A> can be retrieved only for a process that is currently running on the computer.</span></span> <span data-ttu-id="f1d7e-474">在處理序終止之後，<xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29>擲回例外狀況，如果傳遞的過期的識別項。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-474">After the process terminates, <xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29> throws an exception if you pass it an expired identifier.</span></span>  
  
 <span data-ttu-id="f1d7e-475">在任何特定的電腦上的處理程序的識別碼是唯一的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-475">On any particular computer, the identifier of a process is unique.</span></span> <span data-ttu-id="f1d7e-476"><xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29> 最多會傳回其中一個處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-476"><xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29> returns one process at most.</span></span> <span data-ttu-id="f1d7e-477">如果您想要取得執行特定的應用程式，使用的所有處理程序<xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-477">If you want to get all the processes running a particular application, use <xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29>.</span></span> <span data-ttu-id="f1d7e-478">如果執行指定的應用程式的電腦上的多個處理序存在<xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29>傳回陣列，包含所有相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-478">If multiple processes exist on the computer running the specified application, <xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29> returns an array containing all the associated processes.</span></span> <span data-ttu-id="f1d7e-479">您可以查詢每個這些處理序的識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-479">You can query each of these processes in turn for its identifier.</span></span> <span data-ttu-id="f1d7e-480">您可以在檢視的處理序識別碼`Processes`面板的 Windows 工作管理員 」 中。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-480">The process identifier can be viewed in the `Processes` panel of the Windows Task Manager.</span></span> <span data-ttu-id="f1d7e-481">`PID`資料行會顯示指派給處理程序的處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-481">The `PID` column displays the process identifier that is assigned to a process.</span></span>  
  
 <span data-ttu-id="f1d7e-482">如果您未指定`machineName`，會使用本機電腦。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-482">If you do not specify a `machineName`, the local computer is used.</span></span> <span data-ttu-id="f1d7e-483">或者，您可以指定本機電腦，藉由設定`machineName`值"。"或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-483">Alternatively, you can specify the local computer by setting `machineName` to the value "." or to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-484">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-484">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-485">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-485">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f1d7e-486">The process specified by the <paramref name="processId" /> parameter is not running.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-486">The process specified by the <paramref name="processId" /> parameter is not running.</span>
          </span>
          <span data-ttu-id="f1d7e-487">The identifier might be expired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-487">The identifier might be expired.</span>
          </span>
          <span data-ttu-id="f1d7e-488">-or-  The <paramref name="machineName" /> parameter syntax is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-488">-or-  The <paramref name="machineName" /> parameter syntax is invalid.</span>
          </span>
          <span data-ttu-id="f1d7e-489">The name might have length zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-489">The name might have length zero (0).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1d7e-490">The <paramref name="machineName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-490">The <paramref name="machineName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-491">The process was not started by this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-491">The process was not started by this object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-492">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-492">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-493">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-493">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Id" />
        <altmember cref="P:System.Diagnostics.Process.MachineName" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcesses" />
        <altmember cref="M:System.Diagnostics.Process.GetCurrentProcess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProcesses">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-494">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with existing process resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-494">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with existing process resources.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProcesses">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process[] GetProcesses ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process[] GetProcesses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetProcesses" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProcesses () As Process()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::Process ^&gt; ^ GetProcesses();" />
      <MemberSignature Language="F#" Value="static member GetProcesses : unit -&gt; System.Diagnostics.Process[]" Usage="System.Diagnostics.Process.GetProcesses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-495">Creates a new <see cref="T:System.Diagnostics.Process" /> component for each process resource on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-495">Creates a new <see cref="T:System.Diagnostics.Process" /> component for each process resource on the local computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-496">An array of type <see cref="T:System.Diagnostics.Process" /> that represents all the process resources running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-496">An array of type <see cref="T:System.Diagnostics.Process" /> that represents all the process resources running on the local computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-497">使用這個方法來建立新的陣列<xref:System.Diagnostics.Process>元件並將其與本機電腦上的所有處理序資源關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-497">Use this method to create an array of new <xref:System.Diagnostics.Process> components and associate them with all the process resources on the local computer.</span></span> <span data-ttu-id="f1d7e-498">處理序資源必須已存在於本機電腦，因為<xref:System.Diagnostics.Process.GetProcesses%2A>不會建立系統資源，但而是將資源與產生的應用程式相關聯<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-498">The process resources must already exist on the local computer, because <xref:System.Diagnostics.Process.GetProcesses%2A> does not create system resources but rather associates resources with application-generated <xref:System.Diagnostics.Process> components.</span></span> <span data-ttu-id="f1d7e-499">因為作業系統本身會執行背景處理程序，這個陣列不會是空的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-499">Because the operating system itself is running background processes, this array is never empty.</span></span>  
  
 <span data-ttu-id="f1d7e-500">如果您不想要擷取所有電腦上執行的處理程序，您可以使用來限制其數目<xref:System.Diagnostics.Process.GetProcessById%2A>或<xref:System.Diagnostics.Process.GetProcessesByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-500">If you do not want to retrieve all the processes running on the computer, you can restrict their number by using the <xref:System.Diagnostics.Process.GetProcessById%2A> or <xref:System.Diagnostics.Process.GetProcessesByName%2A> method.</span></span> <span data-ttu-id="f1d7e-501"><xref:System.Diagnostics.Process.GetProcessById%2A> 建立<xref:System.Diagnostics.Process>元件，您傳遞給方法的處理序識別碼所識別的系統上的程序與相關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-501"><xref:System.Diagnostics.Process.GetProcessById%2A> creates a <xref:System.Diagnostics.Process> component that is associated with the process identified on the system by the process identifier that you pass to the method.</span></span> <span data-ttu-id="f1d7e-502"><xref:System.Diagnostics.Process.GetProcessesByName%2A> 建立陣列<xref:System.Diagnostics.Process>傳遞至方法的元件，其相關聯的處理序資源共用的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-502"><xref:System.Diagnostics.Process.GetProcessesByName%2A> creates an array of <xref:System.Diagnostics.Process> components whose associated process resources share the executable file you pass to the method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-503">多個 Windows 服務可以載入相同的執行個體，服務主機處理序 (svchost.exe)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-503">Multiple Windows services can be loaded within the same instance of the Service Host process (svchost.exe).</span></span> <span data-ttu-id="f1d7e-504">GetProcesses 不會識別這些個別的服務;為此，請參閱<xref:System.ServiceProcess.ServiceController.GetServices%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-504">GetProcesses does not identify those individual services; for that, see <xref:System.ServiceProcess.ServiceController.GetServices%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-505">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-505">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-506">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-506">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-507">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-507">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-508">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-508">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MachineName" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetCurrentProcess" />
      </Docs>
    </Member>
    <Member MemberName="GetProcesses">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process[] GetProcesses (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process[] GetProcesses(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetProcesses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProcesses (machineName As String) As Process()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::Process ^&gt; ^ GetProcesses(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetProcesses : string -&gt; System.Diagnostics.Process[]" Usage="System.Diagnostics.Process.GetProcesses machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("There is no support for retrieving process information from a remote machine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="f1d7e-509">The computer from which to read the list of processes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-509">The computer from which to read the list of processes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-510">Creates a new <see cref="T:System.Diagnostics.Process" /> component for each process resource on the specified computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-510">Creates a new <see cref="T:System.Diagnostics.Process" /> component for each process resource on the specified computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-511">An array of type <see cref="T:System.Diagnostics.Process" /> that represents all the process resources running on the specified computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-511">An array of type <see cref="T:System.Diagnostics.Process" /> that represents all the process resources running on the specified computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-512">使用這個方法來建立新的陣列<xref:System.Diagnostics.Process>元件並將它們指定 （通常是遠端） 電腦上的所有處理序資源關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-512">Use this method to create an array of new <xref:System.Diagnostics.Process> components and associate them with all the process resources on the specified (usually remote) computer.</span></span> <span data-ttu-id="f1d7e-513">處理序資源必須已存在於本機電腦，因為<xref:System.Diagnostics.Process.GetProcesses%2A>不會建立系統資源，但而是將資源與產生的應用程式相關聯<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-513">The process resources must already exist on the local computer, because <xref:System.Diagnostics.Process.GetProcesses%2A> does not create system resources but rather associates resources with application-generated <xref:System.Diagnostics.Process> components.</span></span> <span data-ttu-id="f1d7e-514">因為作業系統本身會執行背景處理程序，這個陣列不會是空的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-514">Because the operating system itself is running background processes, this array is never empty.</span></span>  
  
 <span data-ttu-id="f1d7e-515">如果您不想要擷取所有電腦上執行的處理程序，您可以使用來限制其數目<xref:System.Diagnostics.Process.GetProcessById%2A>或<xref:System.Diagnostics.Process.GetProcessesByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-515">If you do not want to retrieve all the processes running on the computer, you can restrict their number by using the <xref:System.Diagnostics.Process.GetProcessById%2A> or <xref:System.Diagnostics.Process.GetProcessesByName%2A> method.</span></span> <span data-ttu-id="f1d7e-516"><xref:System.Diagnostics.Process.GetProcessById%2A> 建立<xref:System.Diagnostics.Process>元件，您傳遞給方法的處理序識別碼所識別的系統上的程序與相關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-516"><xref:System.Diagnostics.Process.GetProcessById%2A> creates a <xref:System.Diagnostics.Process> component that is associated with the process identified on the system by the process identifier that you pass to the method.</span></span> <span data-ttu-id="f1d7e-517"><xref:System.Diagnostics.Process.GetProcessesByName%2A> 建立陣列<xref:System.Diagnostics.Process>傳遞至方法的元件，其相關聯的處理序資源共用的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-517"><xref:System.Diagnostics.Process.GetProcessesByName%2A> creates an array of <xref:System.Diagnostics.Process> components whose associated process resources share the executable file you pass to the method.</span></span>  
  
 <span data-ttu-id="f1d7e-518">這個多載<xref:System.Diagnostics.Process.GetProcesses%2A>方法通常用來擷取在網路上的遠端電腦上執行的處理序資源的清單，但是您可以指定本機電腦，藉由傳遞 」。 」。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-518">This overload of the <xref:System.Diagnostics.Process.GetProcesses%2A> method is generally used to retrieve the list of process resources running on a remote computer on the network, but you can specify the local computer by passing ".".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-519">多個 Windows 服務可以載入相同的執行個體，服務主機處理序 (svchost.exe)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-519">Multiple Windows services can be loaded within the same instance of the Service Host process (svchost.exe).</span></span> <span data-ttu-id="f1d7e-520">GetProcesses 不會識別這些個別的服務;為此，請參閱<xref:System.ServiceProcess.ServiceController.GetServices%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-520">GetProcesses does not identify those individual services; for that, see <xref:System.ServiceProcess.ServiceController.GetServices%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-521">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-521">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-522">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-522">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f1d7e-523">The <paramref name="machineName" /> parameter syntax is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-523">The <paramref name="machineName" /> parameter syntax is invalid.</span>
          </span>
          <span data-ttu-id="f1d7e-524">It might have length zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-524">It might have length zero (0).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1d7e-525">The <paramref name="machineName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-525">The <paramref name="machineName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-526">The operating system platform does not support this operation on remote computers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-526">The operating system platform does not support this operation on remote computers.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-527">There are problems accessing the performance counter API's used to get process information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-527">There are problems accessing the performance counter API's used to get process information.</span>
          </span>
          <span data-ttu-id="f1d7e-528">This exception is specific to Windows NT, Windows 2000, and Windows XP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-528">This exception is specific to Windows NT, Windows 2000, and Windows XP.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-529">A problem occurred accessing an underlying system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-529">A problem occurred accessing an underlying system API.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-530">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-530">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-531">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-531">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MachineName" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetCurrentProcess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProcessesByName">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-532">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with the existing process resources that all share the specified process name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-532">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with the existing process resources that all share the specified process name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProcessesByName">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process[] GetProcessesByName (string processName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process[] GetProcessesByName(string processName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProcessesByName (processName As String) As Process()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::Process ^&gt; ^ GetProcessesByName(System::String ^ processName);" />
      <MemberSignature Language="F#" Value="static member GetProcessesByName : string -&gt; System.Diagnostics.Process[]" Usage="System.Diagnostics.Process.GetProcessesByName processName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="processName">
          <span data-ttu-id="f1d7e-533">The friendly name of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-533">The friendly name of the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-534">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with all the process resources on the local computer that share the specified process name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-534">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with all the process resources on the local computer that share the specified process name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-535">An array of type <see cref="T:System.Diagnostics.Process" /> that represents the process resources running the specified application or file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-535">An array of type <see cref="T:System.Diagnostics.Process" /> that represents the process resources running the specified application or file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-536">使用這個方法來建立新的陣列<xref:System.Diagnostics.Process>元件並將它們正在執行相同的可執行檔，在本機電腦上的所有處理序資源關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-536">Use this method to create an array of new <xref:System.Diagnostics.Process> components and associate them with all the process resources that are running the same executable file on the local computer.</span></span> <span data-ttu-id="f1d7e-537">處理序資源必須已經存在的電腦上，因為<xref:System.Diagnostics.Process.GetProcessesByName%2A>不會建立系統資源，但而是將它們與應用程式產生關聯<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-537">The process resources must already exist on the computer, because <xref:System.Diagnostics.Process.GetProcessesByName%2A> does not create system resources but rather associates them with application-generated <xref:System.Diagnostics.Process> components.</span></span> <span data-ttu-id="f1d7e-538">A`processName`可以指定為目前未執行的本機電腦，所以此方法會傳回陣列可以是空的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-538">A `processName` can be specified for an executable file that is not currently running on the local computer, so the array the method returns can be empty.</span></span>  
  
 <span data-ttu-id="f1d7e-539">處理序名稱是處理程序，例如 Outlook、.exe 副檔名或路徑不包含的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-539">The process name is a friendly name for the process, such as Outlook, that does not include the .exe extension or the path.</span></span> <span data-ttu-id="f1d7e-540"><xref:System.Diagnostics.Process.GetProcessesByName%2A> 可協助取得和管理相同的可執行檔相關聯的所有處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-540"><xref:System.Diagnostics.Process.GetProcessesByName%2A> is helpful for getting and manipulating all the processes that are associated with the same executable file.</span></span> <span data-ttu-id="f1d7e-541">比方說，您可以傳遞可執行檔名稱做為`processName`參數，以便關閉該可執行檔的所有執行的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-541">For example, you can pass an executable file name as the `processName` parameter, in order to shut down all the running instances of that executable file.</span></span>  
  
 <span data-ttu-id="f1d7e-542">雖然程序<xref:System.Diagnostics.Process.Id%2A>是唯一的系統上的單一處理序資源，在本機電腦上的多個處理序可以執行指定的應用程式`processName`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-542">Although a process <xref:System.Diagnostics.Process.Id%2A> is unique to a single process resource on the system, multiple processes on the local computer can be running the application specified by the `processName` parameter.</span></span> <span data-ttu-id="f1d7e-543">因此，<xref:System.Diagnostics.Process.GetProcessById%2A>最多會傳回其中一個處理序，但<xref:System.Diagnostics.Process.GetProcessesByName%2A>傳回陣列，包含所有相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-543">Therefore, <xref:System.Diagnostics.Process.GetProcessById%2A> returns one process at most, but <xref:System.Diagnostics.Process.GetProcessesByName%2A> returns an array containing all the associated processes.</span></span> <span data-ttu-id="f1d7e-544">如果您要管理使用標準 API 呼叫的程序，您可以查詢每個這些處理序的識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-544">If you need to manipulate the process using standard API calls, you can query each of these processes in turn for its identifier.</span></span> <span data-ttu-id="f1d7e-545">透過單獨的處理序名稱，但，一旦您已擷取的陣列，您無法存取處理序資源<xref:System.Diagnostics.Process>相關聯的元件與處理序資源中，啟動、 終止，及操作的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-545">You cannot access process resources through the process name alone but, once you have retrieved an array of <xref:System.Diagnostics.Process> components that have been associated with the process resources, you can start, terminate, and otherwise manipulate the system resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-546">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-546">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-547">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-547">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-548">There are problems accessing the performance counter API's used to get process information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-548">There are problems accessing the performance counter API's used to get process information.</span>
          </span>
          <span data-ttu-id="f1d7e-549">This exception is specific to Windows NT, Windows 2000, and Windows XP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-549">This exception is specific to Windows NT, Windows 2000, and Windows XP.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-550">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-550">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-551">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-551">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcesses" />
        <altmember cref="M:System.Diagnostics.Process.GetCurrentProcess" />
      </Docs>
    </Member>
    <Member MemberName="GetProcessesByName">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process[] GetProcessesByName (string processName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process[] GetProcessesByName(string processName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProcessesByName (processName As String, machineName As String) As Process()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::Process ^&gt; ^ GetProcessesByName(System::String ^ processName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetProcessesByName : string * string -&gt; System.Diagnostics.Process[]" Usage="System.Diagnostics.Process.GetProcessesByName (processName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="processName">
          <span data-ttu-id="f1d7e-552">The friendly name of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-552">The friendly name of the process.</span>
          </span>
        </param>
        <param name="machineName">
          <span data-ttu-id="f1d7e-553">The name of a computer on the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-553">The name of a computer on the network.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-554">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with all the process resources on a remote computer that share the specified process name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-554">Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with all the process resources on a remote computer that share the specified process name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-555">An array of type <see cref="T:System.Diagnostics.Process" /> that represents the process resources running the specified application or file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-555">An array of type <see cref="T:System.Diagnostics.Process" /> that represents the process resources running the specified application or file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-556">使用這個方法來建立新的陣列<xref:System.Diagnostics.Process>元件並將它們正在執行相同的可執行檔，指定的電腦上的所有處理序資源關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-556">Use this method to create an array of new <xref:System.Diagnostics.Process> components and associate them with all the process resources that are running the same executable file on the specified computer.</span></span> <span data-ttu-id="f1d7e-557">處理序資源必須已經存在的電腦上，因為<xref:System.Diagnostics.Process.GetProcessesByName%2A>不會建立系統資源，但而是將它們與應用程式產生關聯<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-557">The process resources must already exist on the computer, because <xref:System.Diagnostics.Process.GetProcessesByName%2A> does not create system resources but rather associates them with application-generated <xref:System.Diagnostics.Process> components.</span></span> <span data-ttu-id="f1d7e-558">A`processName`可以指定為目前未執行的本機電腦，所以此方法會傳回陣列可以是空的可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-558">A `processName` can be specified for an executable file that is not currently running on the local computer, so the array the method returns can be empty.</span></span>  
  
 <span data-ttu-id="f1d7e-559">處理序名稱是處理程序，例如 Outlook、.exe 副檔名或路徑不包含的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-559">The process name is a friendly name for the process, such as Outlook, that does not include the .exe extension or the path.</span></span> <span data-ttu-id="f1d7e-560"><xref:System.Diagnostics.Process.GetProcessesByName%2A> 可協助取得和管理相同的可執行檔相關聯的所有處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-560"><xref:System.Diagnostics.Process.GetProcessesByName%2A> is helpful for getting and manipulating all the processes that are associated with the same executable file.</span></span> <span data-ttu-id="f1d7e-561">比方說，您可以傳遞可執行檔名稱做為`processName`參數，以便關閉該可執行檔的所有執行的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-561">For example, you can pass an executable file name as the `processName` parameter, in order to shut down all the running instances of that executable file.</span></span>  
  
 <span data-ttu-id="f1d7e-562">雖然程序<xref:System.Diagnostics.Process.Id%2A>是唯一的系統上的單一處理序資源，在本機電腦上的多個處理序可以執行指定的應用程式`processName`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-562">Although a process <xref:System.Diagnostics.Process.Id%2A> is unique to a single process resource on the system, multiple processes on the local computer can be running the application specified by the `processName` parameter.</span></span> <span data-ttu-id="f1d7e-563">因此，<xref:System.Diagnostics.Process.GetProcessById%2A>最多會傳回其中一個處理序，但<xref:System.Diagnostics.Process.GetProcessesByName%2A>傳回陣列，包含所有相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-563">Therefore, <xref:System.Diagnostics.Process.GetProcessById%2A> returns one process at most, but <xref:System.Diagnostics.Process.GetProcessesByName%2A> returns an array containing all the associated processes.</span></span> <span data-ttu-id="f1d7e-564">如果您要管理使用標準 API 呼叫的程序，您可以查詢每個這些處理序的識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-564">If you need to manipulate the process using standard API calls, you can query each of these processes in turn for its identifier.</span></span> <span data-ttu-id="f1d7e-565">透過單獨的處理序名稱，但，一旦您已擷取的陣列，您無法存取處理序資源<xref:System.Diagnostics.Process>相關聯的元件與處理序資源中，啟動、 終止，及操作的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-565">You cannot access process resources through the process name alone but, once you have retrieved an array of <xref:System.Diagnostics.Process> components that have been associated with the process resources, you can start, terminate, and otherwise manipulate the system resources.</span></span>  
  
 <span data-ttu-id="f1d7e-566">取得處理程序，在本機電腦上以及遠端電腦上，您可以使用這個多載。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-566">You can use this overload to get processes on the local computer as well as on a remote computer.</span></span> <span data-ttu-id="f1d7e-567">使用 」。 「 若要指定本機電腦。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-567">Use "." to specify the local computer.</span></span> <span data-ttu-id="f1d7e-568">另一個多載存在，預設會使用本機電腦。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-568">Another overload exists that uses the local computer by default.</span></span>  
  
 <span data-ttu-id="f1d7e-569">您可以存取遠端電腦上只檢視處理序的相關資訊，例如統計資料、 處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-569">You can access processes on remote computers only to view information, such as statistics, about the processes.</span></span> <span data-ttu-id="f1d7e-570">您無法關閉，終止 (使用<xref:System.Diagnostics.Process.Kill%2A>)，或在遠端電腦上啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-570">You cannot close, terminate (using <xref:System.Diagnostics.Process.Kill%2A>), or start processes on remote computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-571">下列範例會擷取本機電腦，也就是 「 記事本 」，在本機電腦，並在本機電腦上的特定處理序上執行的所有執行個體上執行的處理序目前的處理序的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-571">The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</span></span> <span data-ttu-id="f1d7e-572">然後，它會擷取相同的處理程序在遠端電腦上的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-572">It then retrieves information for the same processes on a remote computer.</span></span>  
  
 [!code-cpp[Process.GetProcesses_noexception#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.GetProcesses_noexception/CPP/processstaticget.cpp#1)]
 [!code-csharp[Process.GetProcesses_noexception#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.GetProcesses_noexception/CS/processstaticget.cs#1)]
 [!code-vb[Process.GetProcesses_noexception#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.GetProcesses_noexception/VB/processstaticget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f1d7e-573">The <paramref name="machineName" /> parameter syntax is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-573">The <paramref name="machineName" /> parameter syntax is invalid.</span>
          </span>
          <span data-ttu-id="f1d7e-574">It might have length zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-574">It might have length zero (0).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1d7e-575">The <paramref name="machineName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-575">The <paramref name="machineName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-576">The operating system platform does not support this operation on remote computers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-576">The operating system platform does not support this operation on remote computers.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-577">There are problems accessing the performance counter API's used to get process information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-577">There are problems accessing the performance counter API's used to get process information.</span>
          </span>
          <span data-ttu-id="f1d7e-578">This exception is specific to Windows NT, Windows 2000, and Windows XP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-578">This exception is specific to Windows NT, Windows 2000, and Windows XP.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-579">A problem occurred accessing an underlying system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-579">A problem occurred accessing an underlying system API.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-580">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-580">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-581">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-581">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f1d7e-582">呼叫 unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-582">to call unmanaged code.</span>
          </span>
          <span data-ttu-id="f1d7e-583">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-583">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
        <altmember cref="P:System.Diagnostics.Process.MachineName" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcesses" />
        <altmember cref="M:System.Diagnostics.Process.GetCurrentProcess" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Diagnostics.Process.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Returns the native handle for this process.   The handle is only available if the process was started using this component.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-584">Gets the native handle of the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-584">Gets the native handle of the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-585">處理序啟動時，作業系統指派給相關處理序的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-585">The handle that the operating system assigned to the associated process when the process was started.</span>
          </span>
          <span data-ttu-id="f1d7e-586">系統會用這個控制代碼追蹤處理序屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-586">The system uses this handle to keep track of process attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-587">應用程式可以取得可用做為許多處理序資訊和控制項函式的參數的程序的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-587">An application can obtain a handle to a process that can be used as a parameter to many process-information and control functions.</span></span> <span data-ttu-id="f1d7e-588">您可以使用此控制代碼來初始化<xref:System.Threading.WaitHandle>或呼叫與平台的原生方法叫用。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-588">You can use this handle to initialize a <xref:System.Threading.WaitHandle> or to call native methods with platform invoke.</span></span>  
  
 <span data-ttu-id="f1d7e-589">此處理序控制代碼是私用應用程式--亦即，不能共用控制代碼的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-589">This process handle is private to an application--in other words, process handles cannot be shared.</span></span> <span data-ttu-id="f1d7e-590">處理程序也會有一個程序<xref:System.Diagnostics.Process.Id%2A>其不同的是<xref:System.Diagnostics.Process.Handle%2A>，是唯一的因此，在整個系統有效。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-590">A process also has a process <xref:System.Diagnostics.Process.Id%2A> which, unlike the <xref:System.Diagnostics.Process.Handle%2A>, is unique and, therefore, valid throughout the system.</span></span>  
  
 <span data-ttu-id="f1d7e-591">只有處理序啟動透過呼叫<xref:System.Diagnostics.Process.Start%2A>設定<xref:System.Diagnostics.Process.Handle%2A>屬性對應<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-591">Only processes started through a call to <xref:System.Diagnostics.Process.Start%2A> set the <xref:System.Diagnostics.Process.Handle%2A> property of the corresponding <xref:System.Diagnostics.Process> instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-592">The process has not been started or has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-592">The process has not been started or has exited.</span>
          </span>
          <span data-ttu-id="f1d7e-593">The <see cref="P:System.Diagnostics.Process.Handle" /> property cannot be read because there is no process associated with this <see cref="T:System.Diagnostics.Process" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-593">The <see cref="P:System.Diagnostics.Process.Handle" /> property cannot be read because there is no process associated with this <see cref="T:System.Diagnostics.Process" /> instance.</span>
          </span>
          <span data-ttu-id="f1d7e-594">-or-  The <see cref="T:System.Diagnostics.Process" /> instance has been attached to a running process but you do not have the necessary permissions to get a handle with full access rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-594">-or-  The <see cref="T:System.Diagnostics.Process" /> instance has been attached to a running process but you do not have the necessary permissions to get a handle with full access rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-595">You are trying to access the <see cref="P:System.Diagnostics.Process.Handle" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-595">You are trying to access the <see cref="P:System.Diagnostics.Process.Handle" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-596">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-596">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-597">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-597">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-598">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-598">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Id" />
        <altmember cref="P:System.Diagnostics.Process.ExitCode" />
        <altmember cref="P:System.Diagnostics.Process.ExitTime" />
        <altmember cref="P:System.Diagnostics.Process.HandleCount" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
        <altmember cref="M:System.Diagnostics.Process.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="HandleCount">
      <MemberSignature Language="C#" Value="public int HandleCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandleCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.HandleCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandleCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HandleCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HandleCount : int" Usage="System.Diagnostics.Process.HandleCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Handles for this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-599">Gets the number of handles opened by the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-599">Gets the number of handles opened by the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-600">處理序已開啟的作業系統控制代碼數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-600">The number of operating system handles the process has opened.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-601">控制代碼可讓處理序參考的物件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-601">Handles provide a way for a process to refer to objects.</span></span> <span data-ttu-id="f1d7e-602">處理程序可以取得檔案、 資源、 訊息佇列和其他許多作業系統物件的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-602">A process can obtain handles to files, resources, message queues, and many other operating system objects.</span></span> <span data-ttu-id="f1d7e-603">作業系統會回收控制代碼計數是 0 時，才使用此程序相關聯的記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-603">The operating system reclaims the memory associated with the process only when the handle count is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-604">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-604">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-605">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-605">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-606">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-606">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Handle" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
      </Docs>
    </Member>
    <Member MemberName="HasExited">
      <MemberSignature Language="C#" Value="public bool HasExited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExited" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.HasExited" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasExited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasExited { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasExited : bool" Usage="System.Diagnostics.Process.HasExited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Indicates if the associated process has been terminated.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-607">Gets a value indicating whether the associated process has been terminated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-607">Gets a value indicating whether the associated process has been terminated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-608">如果 <see cref="T:System.Diagnostics.Process" /> 元件所參考的作業系統處理序已終止，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-608">
              <see langword="true" /> if the operating system process referenced by the <see cref="T:System.Diagnostics.Process" /> component has terminated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-609">值為`true`針對<xref:System.Diagnostics.Process.HasExited%2A>表示相關聯的處理序已終止，正常或不正常。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-609">A value of `true` for <xref:System.Diagnostics.Process.HasExited%2A> indicates that the associated process has terminated, either normally or abnormally.</span></span> <span data-ttu-id="f1d7e-610">您可以要求或強制結束藉由呼叫相關聯的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-610">You can request or force the associated process to exit by calling <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-611">如果處理程序來開啟控制代碼，作業系統的程序已結束，但會保留系統管理程序資訊，例如控制代碼，結束代碼結束，結束時間與時，就會釋放處理程序記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-611">If a handle is open to the process, the operating system releases the process memory when the process has exited, but retains administrative information about the process, such as the handle, exit code, and exit time.</span></span> <span data-ttu-id="f1d7e-612">若要取得這項資訊，您可以使用<xref:System.Diagnostics.Process.ExitCode%2A>和<xref:System.Diagnostics.Process.ExitTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-612">To get this information, you can use the <xref:System.Diagnostics.Process.ExitCode%2A> and <xref:System.Diagnostics.Process.ExitTime%2A> properties.</span></span> <span data-ttu-id="f1d7e-613">這些屬性會自動填入此元件所啟動的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-613">These properties are populated automatically for processes that were started by this component.</span></span> <span data-ttu-id="f1d7e-614">會釋出系統管理資訊時所有<xref:System.Diagnostics.Process>系統處理序相關聯的元件會終結並沒有更多的控制代碼可要抓緊頭結束處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-614">The administrative information is released when all the <xref:System.Diagnostics.Process> components that are associated with the system process are destroyed and hold no more handles to the exited process.</span></span>  
  
 <span data-ttu-id="f1d7e-615">處理程序可以與您的程式碼分開來終止。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-615">A process can terminate independently of your code.</span></span> <span data-ttu-id="f1d7e-616">如果您開始使用此元件的程序時，系統會更新的值<xref:System.Diagnostics.Process.HasExited%2A>自動執行，即使在相關聯的處理序獨立結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-616">If you started the process using this component, the system updates the value of <xref:System.Diagnostics.Process.HasExited%2A> automatically, even if the associated process exits independently.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-617">當非同步事件處理常式已重新導向標準輸出時，有可能，輸出處理尚未完成時，這個屬性會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-617">When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when this property returns `true`.</span></span> <span data-ttu-id="f1d7e-618">若要確保非同步事件處理已完成，請呼叫<xref:System.Diagnostics.Process.WaitForExit>檢查之前接受任何參數的多載<xref:System.Diagnostics.Process.HasExited%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-618">To ensure that asynchronous event handling has been completed, call the <xref:System.Diagnostics.Process.WaitForExit> overload that takes no parameter before checking <xref:System.Diagnostics.Process.HasExited%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-619">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-619">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-620">然後，它會擷取相關聯的處理序的實體記憶體使用量在 10 秒，最多達 2 秒的間隔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-620">It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</span></span> <span data-ttu-id="f1d7e-621">此範例會偵測處理序結束之前經過 10 秒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-621">The example detects whether the process exits before 10 seconds have elapsed.</span></span> <span data-ttu-id="f1d7e-622">如果它仍在執行 10 秒後，範例就會關閉程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-622">The example closes the process if it is still running after 10 seconds.</span></span>  
  
 [!code-cpp[process_refresh#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_refresh/CPP/process_refresh.cpp#1)]
 [!code-csharp[process_refresh#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_refresh/CS/process_refresh.cs#1)]
 [!code-vb[process_refresh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_refresh/VB/process_refresh.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-623">There is no process associated with the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-623">There is no process associated with the object.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-624">The exit code for the process could not be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-624">The exit code for the process could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-625">You are trying to access the <see cref="P:System.Diagnostics.Process.HasExited" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-625">You are trying to access the <see cref="P:System.Diagnostics.Process.HasExited" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-626">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-626">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-627">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-627">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-628">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-628">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.ExitCode" />
        <altmember cref="P:System.Diagnostics.Process.ExitTime" />
        <altmember cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
        <altmember cref="P:System.Diagnostics.Process.EnableRaisingEvents" />
        <altmember cref="M:System.Diagnostics.Process.OnExited" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Diagnostics.Process.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The unique identifier for the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-629">Gets the unique identifier for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-629">Gets the unique identifier for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-630">這個 <see cref="T:System.Diagnostics.Process" /> 執行個體所參考的處理序之系統產生的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-630">The system-generated unique identifier of the process that is referenced by this <see cref="T:System.Diagnostics.Process" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-631">此程序<xref:System.Diagnostics.Process.Id%2A>不正確，如果相關聯的處理序未執行。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-631">The process <xref:System.Diagnostics.Process.Id%2A> is not valid if the associated process is not running.</span></span> <span data-ttu-id="f1d7e-632">因此，您應該確定處理序正在執行後嘗試擷取<xref:System.Diagnostics.Process.Id%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-632">Therefore, you should ensure that the process is running before attempting to retrieve the <xref:System.Diagnostics.Process.Id%2A> property.</span></span> <span data-ttu-id="f1d7e-633">在處理序終止，直到處理序識別碼可唯一識別整個系統的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-633">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 <span data-ttu-id="f1d7e-634">您可以連接至新的本機或遠端電腦執行的處理程序<xref:System.Diagnostics.Process>藉由傳遞至處理序識別碼的執行個體<xref:System.Diagnostics.Process.GetProcessById%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-634">You can connect a process that is running on a local or remote computer to a new <xref:System.Diagnostics.Process> instance by passing the process identifier to the <xref:System.Diagnostics.Process.GetProcessById%2A> method.</span></span> <span data-ttu-id="f1d7e-635"><xref:System.Diagnostics.Process.GetProcessById%2A> 已`static`方法，以建立新的元件，並設定<xref:System.Diagnostics.Process.Id%2A>新的屬性<xref:System.Diagnostics.Process>執行個體會自動。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-635"><xref:System.Diagnostics.Process.GetProcessById%2A> is a `static` method that creates a new component and sets the <xref:System.Diagnostics.Process.Id%2A> property for the new <xref:System.Diagnostics.Process> instance automatically.</span></span>  
  
 <span data-ttu-id="f1d7e-636">系統可以重複使用處理序識別碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-636">Process identifiers can be reused by the system.</span></span> <span data-ttu-id="f1d7e-637"><xref:System.Diagnostics.Process.Id%2A>屬性值是唯一的只會執行相關聯的處理序時。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-637">The <xref:System.Diagnostics.Process.Id%2A> property value is unique only while the associated process is running.</span></span> <span data-ttu-id="f1d7e-638">系統處理序已終止之後，可以重複使用<xref:System.Diagnostics.Process.Id%2A>不相關的處理序的屬性值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-638">After the process has terminated, the system can reuse the <xref:System.Diagnostics.Process.Id%2A> property value for an unrelated process.</span></span>  
  
 <span data-ttu-id="f1d7e-639">此識別碼是在系統上唯一的因為您可以將它的其他執行緒傳遞替代<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-639">Because the identifier is unique on the system, you can pass it to other threads as an alternative to passing a <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-640">這個動作可節省系統資源，同時又確保會正確地識別程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-640">This action can save system resources yet guarantee that the process is correctly identified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-641">下列範例示範濆爧髍孮<xref:System.Diagnostics.Process.Id%2A>所有執行的應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-641">The following example demonstrates how to obtain the <xref:System.Diagnostics.Process.Id%2A> for all running instances of an application.</span></span> <span data-ttu-id="f1d7e-642">程式碼會建立 「 記事本 」 的新執行個體，會列出的 「 記事本 」 中的所有執行個體並可讓使用者輸入<xref:System.Diagnostics.Process.Id%2A>移除特定的執行個體的數目。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-642">The code creates a new instance of Notepad, lists all the instances of Notepad, and then allows the user to enter the <xref:System.Diagnostics.Process.Id%2A> number to remove a specific instance.</span></span>  
  
 [!code-csharp[System.Diagnostics.Process.Id#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Process.Id/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.Process.Id#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Process.Id/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-643">The process's <see cref="P:System.Diagnostics.Process.Id" /> property has not been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-643">The process's <see cref="P:System.Diagnostics.Process.Id" /> property has not been set.</span>
          </span>
          <span data-ttu-id="f1d7e-644">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-644">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-645">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-645">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-646">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-646">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-647">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-647">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Handle" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Kill">
      <MemberSignature Language="C#" Value="public void Kill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Kill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Kill" />
      <MemberSignature Language="VB.NET" Value="Public Sub Kill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Kill();" />
      <MemberSignature Language="F#" Value="member this.Kill : unit -&gt; unit" Usage="process.Kill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-648">Immediately stops the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-648">Immediately stops the associated process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-649"><xref:System.Diagnostics.Process.Kill%2A> 強制終止的處理序，而<xref:System.Diagnostics.Process.CloseMainWindow%2A>只要求終止。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-649"><xref:System.Diagnostics.Process.Kill%2A> forces a termination of the process, while <xref:System.Diagnostics.Process.CloseMainWindow%2A> only requests a termination.</span></span> <span data-ttu-id="f1d7e-650">當具有圖形化介面的程序執行時，其訊息迴圈就會處於等候狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-650">When a process with a graphical interface is executing, its message loop is in a wait state.</span></span> <span data-ttu-id="f1d7e-651">每次 Windows 訊息傳送至處理序的作業系統，則會執行訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-651">The message loop executes every time a Windows message is sent to the process by the operating system.</span></span> <span data-ttu-id="f1d7e-652">呼叫<xref:System.Diagnostics.Process.CloseMainWindow%2A>傳送要求以接近主視窗中，這在格式正確的應用程式中，關閉子視窗，並撤銷應用程式的所有執行訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-652">Calling <xref:System.Diagnostics.Process.CloseMainWindow%2A> sends a request to close to the main window, which, in a well-formed application, closes child windows and revokes all running message loops for the application.</span></span> <span data-ttu-id="f1d7e-653">結束藉由呼叫的程序要求<xref:System.Diagnostics.Process.CloseMainWindow%2A>不會強制應用程式結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-653">The request to exit the process by calling <xref:System.Diagnostics.Process.CloseMainWindow%2A> does not force the application to quit.</span></span> <span data-ttu-id="f1d7e-654">應用程式可以要求使用者確認之前結束，或者它可以拒絕結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-654">The application can ask for user verification before quitting, or it can refuse to quit.</span></span> <span data-ttu-id="f1d7e-655">若要強制應用程式結束，請使用<xref:System.Diagnostics.Process.Kill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-655">To force the application to quit, use the <xref:System.Diagnostics.Process.Kill%2A> method.</span></span> <span data-ttu-id="f1d7e-656">行為<xref:System.Diagnostics.Process.CloseMainWindow%2A>等同於關閉應用程式的主視窗中使用 [系統] 功能表的使用者。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-656">The behavior of <xref:System.Diagnostics.Process.CloseMainWindow%2A> is identical to that of a user closing an application's main window using the system menu.</span></span> <span data-ttu-id="f1d7e-657">因此，藉由關閉主視窗結束程序要求不會強制應用程式立即結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-657">Therefore, the request to exit the process by closing the main window does not force the application to quit immediately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-658"><xref:System.Diagnostics.Process.Kill%2A>方法以非同步方式執行。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-658">The <xref:System.Diagnostics.Process.Kill%2A> method executes asynchronously.</span></span> <span data-ttu-id="f1d7e-659">之後呼叫<xref:System.Diagnostics.Process.Kill%2A>方法中，呼叫<xref:System.Diagnostics.Process.WaitForExit%2A>方法來等候處理序結束，或者檢查<xref:System.Diagnostics.Process.HasExited%2A>屬性來判斷是否已經結束處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-659">After calling the <xref:System.Diagnostics.Process.Kill%2A> method, call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to wait for the process to exit, or check the <xref:System.Diagnostics.Process.HasExited%2A> property to determine if the process has exited.</span></span>  
  
 <span data-ttu-id="f1d7e-660">編輯程序的資料或資源配置給處理程序不會遺失您呼叫<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-660">Data edited by the process or resources allocated to the process can be lost if you call <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-661"><xref:System.Diagnostics.Process.Kill%2A> 會造成異常的處理序終止，而且應該在必要時才使用。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-661"><xref:System.Diagnostics.Process.Kill%2A> causes an abnormal process termination and should be used only when necessary.</span></span> <span data-ttu-id="f1d7e-662"><xref:System.Diagnostics.Process.CloseMainWindow%2A> 啟用程序有條理地終止，並關閉所有視窗，因此很適合使用介面的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-662"><xref:System.Diagnostics.Process.CloseMainWindow%2A> enables an orderly termination of the process and closes all windows, so it is preferable for applications with an interface.</span></span> <span data-ttu-id="f1d7e-663">如果<xref:System.Diagnostics.Process.CloseMainWindow%2A>失敗，您可以使用<xref:System.Diagnostics.Process.Kill%2A>結束這個處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-663">If <xref:System.Diagnostics.Process.CloseMainWindow%2A> fails, you can use <xref:System.Diagnostics.Process.Kill%2A> to terminate the process.</span></span> <span data-ttu-id="f1d7e-664"><xref:System.Diagnostics.Process.Kill%2A> 是終止處理序沒有圖形化介面的唯一方式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-664"><xref:System.Diagnostics.Process.Kill%2A> is the only way to terminate processes that do not have graphical interfaces.</span></span>  
  
 <span data-ttu-id="f1d7e-665">您可以呼叫<xref:System.Diagnostics.Process.Kill%2A>和<xref:System.Diagnostics.Process.CloseMainWindow%2A>只能供本機電腦執行的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-665">You can call <xref:System.Diagnostics.Process.Kill%2A> and <xref:System.Diagnostics.Process.CloseMainWindow%2A> only for processes that are running on the local computer.</span></span> <span data-ttu-id="f1d7e-666">您無法使處理序結束的遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-666">You cannot cause processes on remote computers to exit.</span></span> <span data-ttu-id="f1d7e-667">您只能檢視在遠端電腦上執行的程序資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-667">You can only view information for processes running on remote computers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-668">如果在呼叫<xref:System.Diagnostics.Process.Kill%2A>方法由目前正在終止此程序，而<xref:System.ComponentModel.Win32Exception>拒絕存取時擲回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-668">If the call to the <xref:System.Diagnostics.Process.Kill%2A> method is made while the process is currently terminating, a <xref:System.ComponentModel.Win32Exception> is thrown for Access Denied.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-669">The associated process could not be terminated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-669">The associated process could not be terminated.</span>
          </span>
          <span data-ttu-id="f1d7e-670">-or-  The process is terminating.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-670">-or-  The process is terminating.</span>
          </span>
          <span data-ttu-id="f1d7e-671">-or-  The associated process is a Win16 executable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-671">-or-  The associated process is a Win16 executable.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-672">You are attempting to call <see cref="M:System.Diagnostics.Process.Kill" /> for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-672">You are attempting to call <see cref="M:System.Diagnostics.Process.Kill" /> for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-673">The method is available only for processes running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-673">The method is available only for processes running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-674">The process has already exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-674">The process has already exited.</span>
          </span>
          <span data-ttu-id="f1d7e-675">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-675">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-676">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-676">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-677">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-677">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Environment.Exit(System.Int32)" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="LeaveDebugMode">
      <MemberSignature Language="C#" Value="public static void LeaveDebugMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LeaveDebugMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.LeaveDebugMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LeaveDebugMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LeaveDebugMode();" />
      <MemberSignature Language="F#" Value="static member LeaveDebugMode : unit -&gt; unit" Usage="System.Diagnostics.Process.LeaveDebugMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-678">Takes a <see cref="T:System.Diagnostics.Process" /> component out of the state that lets it interact with operating system processes that run in a special mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-678">Takes a <see cref="T:System.Diagnostics.Process" /> component out of the state that lets it interact with operating system processes that run in a special mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-679">某些作業系統處理程序以特殊模式執行。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-679">Some operating system processes run in a special mode.</span></span> <span data-ttu-id="f1d7e-680">嘗試讀取的屬性，或附加至這些處理序不能除非您呼叫<xref:System.Diagnostics.Process.EnterDebugMode%2A>元件上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-680">Attempting to read properties of or attach to these processes is not possible unless you have called <xref:System.Diagnostics.Process.EnterDebugMode%2A> on the component.</span></span> <span data-ttu-id="f1d7e-681">呼叫<xref:System.Diagnostics.Process.LeaveDebugMode%2A>當您不再需要存取權以特殊模式執行這些程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-681">Call <xref:System.Diagnostics.Process.LeaveDebugMode%2A> when you no longer need access to these processes that run in special mode.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-682">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-682">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-683">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-683">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.EnterDebugMode" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Diagnostics.Process.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the machine the running the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-684">Gets the name of the computer the associated process is running on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-684">Gets the name of the computer the associated process is running on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-685">相關處理序正在執行的所在電腦的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-685">The name of the computer that the associated process is running on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-686">您可以檢視統計資料和處理程序，但您的遠端電腦上執行的處理程序資訊無法呼叫<xref:System.Diagnostics.Process.Start%2A>， <xref:System.Diagnostics.Process.CloseMainWindow%2A>，或<xref:System.Diagnostics.Process.Kill%2A>在遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-686">You can view statistical data and process information for processes running on remote computers but you cannot call <xref:System.Diagnostics.Process.Start%2A>, <xref:System.Diagnostics.Process.CloseMainWindow%2A>, or <xref:System.Diagnostics.Process.Kill%2A> on remote computers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-687">當相關聯的處理序在本機電腦上執行時，這個屬性會傳回一個句點 ("。") 的機器名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-687">When the associated process is executing on the local machine, this property returns a period (".") for the machine name.</span></span> <span data-ttu-id="f1d7e-688">您應該使用<xref:System.Environment.MachineName%2A?displayProperty=nameWithType>屬性來取得正確的電腦名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-688">You should use the <xref:System.Environment.MachineName%2A?displayProperty=nameWithType> property to get the correct machine name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-689">若要使用下列的範例，您必須先執行會啟動 「 記事本 」 的至少一個執行個體，在遠端電腦上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-689">To use the following example you must first start at least one instance of Notepad on a remote computer.</span></span> <span data-ttu-id="f1d7e-690">範例會要求遠端電腦，[記事本] 正在執行，而且接著會顯示個別的名稱<xref:System.Diagnostics.Process.ProcessName%2A>， <xref:System.Diagnostics.Process.Id%2A>，和<xref:System.Diagnostics.Process.MachineName%2A>每個執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-690">The example requests the name of the remote computer on which Notepad is running, and then displays the respective <xref:System.Diagnostics.Process.ProcessName%2A>, <xref:System.Diagnostics.Process.Id%2A>, and <xref:System.Diagnostics.Process.MachineName%2A> properties for each instance.</span></span>  
  
 [!code-cpp[process_GetProcessesByName2_2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process_GetProcessesByName2_2/CPP/process_getprocessesbyname2_2.cpp#2)]
 [!code-csharp[process_GetProcessesByName2_2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process_GetProcessesByName2_2/CS/process_getprocessesbyname2_2.cs#2)]
 [!code-vb[process_GetProcessesByName2_2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_GetProcessesByName2_2/VB/process_getprocessesbyname2_2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-691">There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-691">There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-692">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-692">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-693">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-693">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.GetProcesses" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MainModule">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessModule MainModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.ProcessModule MainModule" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.MainModule" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MainModule As ProcessModule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessModule ^ MainModule { System::Diagnostics::ProcessModule ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MainModule : System.Diagnostics.ProcessModule" Usage="System.Diagnostics.Process.MainModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The main module of the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessModule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-694">Gets the main module for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-694">Gets the main module for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-695">
            <see cref="T:System.Diagnostics.ProcessModule" />，用來啟動處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-695">The <see cref="T:System.Diagnostics.ProcessModule" /> that was used to start the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-696">處理序模組表示會載入特定的處理序的.dll 或.exe 檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-696">A process module represents a.dll or .exe file that is loaded into a particular process.</span></span> <span data-ttu-id="f1d7e-697"><xref:System.Diagnostics.Process.MainModule%2A>屬性可讓您檢視用來啟動處理序，包括模組名稱、 檔案名稱和模組記憶體詳細資料的可執行檔的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-697">The <xref:System.Diagnostics.Process.MainModule%2A> property lets you view information about the executable used to start the process, including the module name, file name, and module memory details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-698">You are trying to access the <see cref="P:System.Diagnostics.Process.MainModule" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-698">You are trying to access the <see cref="P:System.Diagnostics.Process.MainModule" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-699">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-699">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-700">A 32-bit process is trying to access the modules of a 64-bit process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-700">A 32-bit process is trying to access the modules of a 64-bit process.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-701">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-701">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-702">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-702">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          </span>
          <span data-ttu-id="f1d7e-703">-or-  The process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-703">-or-  The process has exited.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-704">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-704">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-705">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-705">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.Modules" />
      </Docs>
    </Member>
    <Member MemberName="MainWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr MainWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int MainWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.MainWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MainWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr MainWindowHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.MainWindowHandle : nativeint" Usage="System.Diagnostics.Process.MainWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The handle of the main window of the process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-706">Gets the window handle of the main window of the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-706">Gets the window handle of the main window of the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-707">由系統產生之相關處理序主視窗的視窗控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-707">The system-generated window handle of the main window of the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-708">主視窗是目前具有焦點的程序所開啟的視窗 (<xref:System.Windows.Forms.Form.TopLevel%2A>表單)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-708">The main window is the window opened by the process that currently has the focus (the <xref:System.Windows.Forms.Form.TopLevel%2A> form).</span></span> <span data-ttu-id="f1d7e-709">您必須使用<xref:System.Diagnostics.Process.Refresh%2A>方法，以重新整理<xref:System.Diagnostics.Process>取得目前的主視窗控制代碼，如果它已變更的物件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-709">You must use the <xref:System.Diagnostics.Process.Refresh%2A> method to refresh the <xref:System.Diagnostics.Process> object to get the current main window handle if it has changed.</span></span> <span data-ttu-id="f1d7e-710">一般情況下，因為快取的視窗控制代碼，則使用<xref:System.Diagnostics.Process.Refresh%2A>事先保證，您會擷取目前的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-710">In general, because the window handle is cached, use <xref:System.Diagnostics.Process.Refresh%2A> beforehand to guarantee that you’ll retrieve the current handle.</span></span>  
  
 <span data-ttu-id="f1d7e-711">您可以取得<xref:System.Diagnostics.Process.MainWindowHandle%2A>只能供本機電腦執行的處理序的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-711">You can get the <xref:System.Diagnostics.Process.MainWindowHandle%2A> property only for processes that are running on the local computer.</span></span> <span data-ttu-id="f1d7e-712"><xref:System.Diagnostics.Process.MainWindowHandle%2A>屬性是可唯一識別與處理程序相關聯的視窗的值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-712">The <xref:System.Diagnostics.Process.MainWindowHandle%2A> property is a value that uniquely identifies the window that is associated with the process.</span></span>  
  
 <span data-ttu-id="f1d7e-713">在程序沒有主視窗程序具有圖形化介面時，才與它相關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-713">A process has a main window associated with it only if the process has a graphical interface.</span></span> <span data-ttu-id="f1d7e-714">如果相關聯的處理序沒有主視窗、<xref:System.Diagnostics.Process.MainWindowHandle%2A>值為零。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-714">If the associated process does not have a main window, the <xref:System.Diagnostics.Process.MainWindowHandle%2A> value is zero.</span></span> <span data-ttu-id="f1d7e-715">這個值也是零的處理序都已隱藏起來，也就是處理不會顯示在工作列中。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-715">The value is also zero for processes that have been hidden, that is, processes that are not visible in the taskbar.</span></span> <span data-ttu-id="f1d7e-716">這可以是顯示為圖示在工作列最右邊的 [通知] 區域中的程序的情況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-716">This can be the case for processes that appear as icons in the notification area, at the far right of the taskbar.</span></span>  
  
 <span data-ttu-id="f1d7e-717">如果您剛啟動處理程序，並想要使用其主視窗控制代碼，請考慮使用<xref:System.Diagnostics.Process.WaitForInputIdle%2A>方法，以允許程序完成從開始，確保已建立的主視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-717">If you have just started a process and want to use its main window handle, consider using the <xref:System.Diagnostics.Process.WaitForInputIdle%2A> method to allow the process to finish starting, ensuring that the main window handle has been created.</span></span> <span data-ttu-id="f1d7e-718">否則便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-718">Otherwise, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-719">The <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> is not defined because the process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-719">The <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> is not defined because the process has exited.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-720">You are trying to access the <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-720">You are trying to access the <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-721">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-721">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-722">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-722">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-723">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-723">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-724">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-724">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MainWindowTitle" />
        <altmember cref="P:System.Diagnostics.Process.MainModule" />
      </Docs>
    </Member>
    <Member MemberName="MainWindowTitle">
      <MemberSignature Language="C#" Value="public string MainWindowTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MainWindowTitle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.MainWindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MainWindowTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MainWindowTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MainWindowTitle : string" Usage="System.Diagnostics.Process.MainWindowTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The title of the main window of the process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-725">Gets the caption of the main window of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-725">Gets the caption of the main window of the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-726">處理序的主視窗標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-726">The main window title of the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-727">在程序沒有主視窗程序具有圖形化介面時，才與它相關聯。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-727">A process has a main window associated with it only if the process has a graphical interface.</span></span> <span data-ttu-id="f1d7e-728">如果相關聯的處理序沒有主視窗 (以便<xref:System.Diagnostics.Process.MainWindowHandle%2A>為零)，<xref:System.Diagnostics.Process.MainWindowTitle%2A>為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-728">If the associated process does not have a main window (so that <xref:System.Diagnostics.Process.MainWindowHandle%2A> is zero), <xref:System.Diagnostics.Process.MainWindowTitle%2A> is an empty string ("").</span></span> <span data-ttu-id="f1d7e-729">如果您剛啟動處理程序，並想要使用其主視窗標題，請考慮使用<xref:System.Diagnostics.Process.WaitForInputIdle%2A>方法，以允許程序完成從開始，確保已建立的主視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-729">If you have just started a process and want to use its main window title, consider using the <xref:System.Diagnostics.Process.WaitForInputIdle%2A> method to allow the process to finish starting, ensuring that the main window handle has been created.</span></span> <span data-ttu-id="f1d7e-730">否則，系統會擲回例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-730">Otherwise, the system throws an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-731">主視窗是視窗目前具有焦點;請注意，這可能不是程序的主視窗。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-731">The main window is the window that currently has the focus; note that this might not be the primary window for the process.</span></span> <span data-ttu-id="f1d7e-732">您必須使用<xref:System.Diagnostics.Process.Refresh%2A>方法，以重新整理<xref:System.Diagnostics.Process>取得目前的主視窗控制代碼，如果它已變更的物件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-732">You must use the <xref:System.Diagnostics.Process.Refresh%2A> method to refresh the <xref:System.Diagnostics.Process> object to get the current main window handle if it has changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-733">下列範例會啟動 「 記事本 」 的執行個體，並擷取程序的主視窗的標題。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-733">The following example starts an instance of Notepad and retrieves the caption of the main window of the process.</span></span>  
  
 [!code-cpp[process_MainWindowTitle#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_MainWindowTitle/CPP/process_mainwindowtitle.cpp#1)]
 [!code-csharp[process_MainWindowTitle#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_MainWindowTitle/CS/process_mainwindowtitle.cs#1)]
 [!code-vb[process_MainWindowTitle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_MainWindowTitle/VB/process_mainwindowtitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-734">The <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> property is not defined because the process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-734">The <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> property is not defined because the process has exited.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-735">You are trying to access the <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-735">You are trying to access the <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-736">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-736">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-737">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-737">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-738">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-738">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-739">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-739">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MaxWorkingSet">
      <MemberSignature Language="C#" Value="public IntPtr MaxWorkingSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int MaxWorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.MaxWorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWorkingSet As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr MaxWorkingSet { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWorkingSet : nativeint with get, set" Usage="System.Diagnostics.Process.MaxWorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of physical memory the process has required since it was started.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-740">Gets or sets the maximum allowable working set size, in bytes, for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-740">Gets or sets the maximum allowable working set size, in bytes, for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-741">處理序所需記憶體中工作集大小的最大值，以位元組 (Byte) 為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-741">The maximum working set size that is allowed in memory for the process, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-742">處理程序的工作集是實體 RAM 記憶體中的目前可見的程序的記憶體分頁集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-742">The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</span></span> <span data-ttu-id="f1d7e-743">這些頁面是常駐的而且可供使用，而不觸發分頁錯誤的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-743">These pages are resident and available for an application to use without triggering a page fault.</span></span>  
  
 <span data-ttu-id="f1d7e-744">工作集包括共用和私用的資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-744">The working set includes both shared and private data.</span></span> <span data-ttu-id="f1d7e-745">共用的資料包含頁面包含所有執行您的應用程式，包括頁面在您的.dll 檔案和 system.dll 檔案中的指示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-745">The shared data includes the pages that contain all the instructions that your application executes, including the pages in your .dll files and the system.dll files.</span></span> <span data-ttu-id="f1d7e-746">隨著工作集大小會增加，也會增加記憶體需求。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-746">As the working set size increases, memory demand increases.</span></span>  
  
 <span data-ttu-id="f1d7e-747">處理序有最小和最大工作集大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-747">A process has minimum and maximum working set sizes.</span></span> <span data-ttu-id="f1d7e-748">每次處理序資源建立時，系統會保留等於工作集大小的處理序的最小記憶體數量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-748">Each time a process resource is created, the system reserves an amount of memory equal to the minimum working set size for the process.</span></span> <span data-ttu-id="f1d7e-749">虛擬記憶體管理員會嘗試的 8kb 至少最小記憶體數量時的處理序正在使用，但永遠不會保留超過最大的大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-749">The virtual memory manager attempts to keep at least the minimum amount of memory resident when the process is active, but it never keeps more than the maximum size.</span></span>  
  
 <span data-ttu-id="f1d7e-750">系統會設定預設工作集大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-750">The system sets the default working set sizes.</span></span> <span data-ttu-id="f1d7e-751">您可以修改使用這些大小<xref:System.Diagnostics.Process.MaxWorkingSet%2A>和<xref:System.Diagnostics.Process.MinWorkingSet%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-751">You can modify these sizes using the <xref:System.Diagnostics.Process.MaxWorkingSet%2A> and <xref:System.Diagnostics.Process.MinWorkingSet%2A> members.</span></span> <span data-ttu-id="f1d7e-752">不過，設定這些值不保證記憶體會保留或駐留。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-752">However, setting these values does not guarantee that the memory will be reserved or resident.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-753">當您增加處理程序工作集大小時，您需要從系統的其餘部分的實體記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-753">When you increase the working set size of a process, you take physical memory away from the rest of the system.</span></span> <span data-ttu-id="f1d7e-754">請確定不會要求是太大，因為這樣做可能會降低系統效能的最小值或最大的工作集大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-754">Ensure that you do not request a minimum or maximum working set size that is too large, because doing so can degrade system performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f1d7e-755">The maximum working set size is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-755">The maximum working set size is invalid.</span>
          </span>
          <span data-ttu-id="f1d7e-756">It must be greater than or equal to the minimum working set size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-756">It must be greater than or equal to the minimum working set size.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-757">Working set information cannot be retrieved from the associated process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-757">Working set information cannot be retrieved from the associated process resource.</span>
          </span>
          <span data-ttu-id="f1d7e-758">-or-  The process identifier or process handle is zero because the process has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-758">-or-  The process identifier or process handle is zero because the process has not been started.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-759">You are trying to access the <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-759">You are trying to access the <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-760">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-760">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-761">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-761">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          </span>
          <span data-ttu-id="f1d7e-762">-or-  The process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-762">-or-  The process has exited.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-763">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-763">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-764">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-764">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-765">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-765">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MinWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.WorkingSet64" />
        <altmember cref="P:System.Diagnostics.Process.PeakWorkingSet64" />
      </Docs>
    </Member>
    <Member MemberName="MinWorkingSet">
      <MemberSignature Language="C#" Value="public IntPtr MinWorkingSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int MinWorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.MinWorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWorkingSet As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr MinWorkingSet { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.MinWorkingSet : nativeint with get, set" Usage="System.Diagnostics.Process.MinWorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The minimum amount of physical memory the process has required since it was started.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-766">Gets or sets the minimum allowable working set size, in bytes, for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-766">Gets or sets the minimum allowable working set size, in bytes, for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-767">處理序所需記憶體中工作集大小的最小值，以位元組 (Byte) 為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-767">The minimum working set size that is required in memory for the process, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-768">處理程序的工作集是實體 RAM 記憶體中的目前可見的程序的記憶體分頁集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-768">The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</span></span> <span data-ttu-id="f1d7e-769">這些頁面是常駐的而且可供使用，而不觸發分頁錯誤的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-769">These pages are resident and available for an application to use without triggering a page fault.</span></span>  
  
 <span data-ttu-id="f1d7e-770">工作集包括共用和私用的資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-770">The working set includes both shared and private data.</span></span> <span data-ttu-id="f1d7e-771">共用的資料包含頁面包含所有執行您的應用程式，包括頁面在您的.dll 檔案和 system.dll 檔案中的指示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-771">The shared data includes the pages that contain all the instructions that your application executes, including the pages in your .dll files and the system.dll files.</span></span> <span data-ttu-id="f1d7e-772">隨著工作集大小會增加，也會增加記憶體需求。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-772">As the working set size increases, memory demand increases.</span></span>  
  
 <span data-ttu-id="f1d7e-773">處理序有最小和最大工作集大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-773">A process has minimum and maximum working set sizes.</span></span> <span data-ttu-id="f1d7e-774">每次處理序資源建立時，系統會保留等於工作集大小的處理序的最小記憶體數量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-774">Each time a process resource is created, the system reserves an amount of memory equal to the minimum working set size for the process.</span></span> <span data-ttu-id="f1d7e-775">虛擬記憶體管理員會嘗試的 8kb 至少最小記憶體數量時的處理序正在使用，但永遠不會保留超過最大的大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-775">The virtual memory manager attempts to keep at least the minimum amount of memory resident when the process is active, but it never keeps more than the maximum size.</span></span>  
  
 <span data-ttu-id="f1d7e-776">系統會設定預設工作集大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-776">The system sets the default working set sizes.</span></span> <span data-ttu-id="f1d7e-777">您可以修改使用這些大小<xref:System.Diagnostics.Process.MaxWorkingSet%2A>和<xref:System.Diagnostics.Process.MinWorkingSet%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-777">You can modify these sizes using the <xref:System.Diagnostics.Process.MaxWorkingSet%2A> and <xref:System.Diagnostics.Process.MinWorkingSet%2A> members.</span></span> <span data-ttu-id="f1d7e-778">不過，設定這些值不保證記憶體會保留或駐留。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-778">However, setting these values does not guarantee that the memory will be reserved or resident.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-779">當您增加處理程序工作集大小時，您需要從系統的其餘部分的實體記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-779">When you increase the working set size of a process, you take physical memory away from the rest of the system.</span></span> <span data-ttu-id="f1d7e-780">請確定不會要求是太大，因為這樣做可能會降低系統效能的最小值或最大的工作集大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-780">Ensure that you do not request a minimum or maximum working set size that is too large, because doing so can degrade system performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f1d7e-781">The minimum working set size is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-781">The minimum working set size is invalid.</span>
          </span>
          <span data-ttu-id="f1d7e-782">It must be less than or equal to the maximum working set size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-782">It must be less than or equal to the maximum working set size.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-783">Working set information cannot be retrieved from the associated process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-783">Working set information cannot be retrieved from the associated process resource.</span>
          </span>
          <span data-ttu-id="f1d7e-784">-or-  The process identifier or process handle is zero because the process has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-784">-or-  The process identifier or process handle is zero because the process has not been started.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-785">You are trying to access the <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-785">You are trying to access the <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-786">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-786">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-787">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-787">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          </span>
          <span data-ttu-id="f1d7e-788">-or-  The process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-788">-or-  The process has exited.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-789">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-789">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-790">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-790">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-791">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-791">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MaxWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.WorkingSet64" />
        <altmember cref="P:System.Diagnostics.Process.PeakWorkingSet64" />
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessModuleCollection Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.ProcessModuleCollection Modules" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As ProcessModuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessModuleCollection ^ Modules { System::Diagnostics::ProcessModuleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : System.Diagnostics.ProcessModuleCollection" Usage="System.Diagnostics.Process.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The modules that are loaded as part of this process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessModuleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-792">Gets the modules that have been loaded by the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-792">Gets the modules that have been loaded by the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-793">
            <see cref="T:System.Diagnostics.ProcessModule" /> 類型的陣列，代表相關聯處理序所載入的模組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-793">An array of type <see cref="T:System.Diagnostics.ProcessModule" /> that represents the modules that have been loaded by the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-794">處理序模組表示會載入特定的處理序的.dll 或.exe 檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-794">A process module represents a.dll or .exe file that is loaded into a particular process.</span></span> <span data-ttu-id="f1d7e-795">A<xref:System.Diagnostics.ProcessModule>執行個體可讓您檢視模組，包括模組名稱、 檔案名稱和模組記憶體詳細資料的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-795">A <xref:System.Diagnostics.ProcessModule> instance lets you view information about a module, including the module name, file name, and module memory details.</span></span>  
  
 <span data-ttu-id="f1d7e-796">處理程序都可以將多個模組載入記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-796">A process can load multiple modules into memory.</span></span> <span data-ttu-id="f1d7e-797">比方說，載入其他的.dll 檔案的.exe 檔案有多個模組。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-797">For example,.exe files that load additional .dll files have multiple modules.</span></span>  
  
 <span data-ttu-id="f1d7e-798">啟動程序之後, 這個集合是空的直到系統有載入程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-798">After starting the process, this collection is empty until the system has loaded the process.</span></span> <span data-ttu-id="f1d7e-799">如果處理序具有主視窗，您可以呼叫<xref:System.Diagnostics.Process.WaitForInputIdle%2A>然後再擷取此屬性可確保集合的非空白時，您取得清單。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-799">If the process has a main window, you can call <xref:System.Diagnostics.Process.WaitForInputIdle%2A> before retrieving this property to ensure that the collection is nonempty when you get the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-800">You are attempting to access the <see cref="P:System.Diagnostics.Process.Modules" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-800">You are attempting to access the <see cref="P:System.Diagnostics.Process.Modules" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-801">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-801">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-802">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-802">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-803">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-803">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-804">You are attempting to access the <see cref="P:System.Diagnostics.Process.Modules" /> property for either the system process or the idle process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-804">You are attempting to access the <see cref="P:System.Diagnostics.Process.Modules" /> property for either the system process or the idle process.</span>
          </span>
          <span data-ttu-id="f1d7e-805">These processes do not have modules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-805">These processes do not have modules.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-806">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-806">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-807">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-807">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.ProcessModule" />
      </Docs>
    </Member>
    <Member MemberName="NonpagedSystemMemorySize">
      <MemberSignature Language="C#" Value="public int NonpagedSystemMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NonpagedSystemMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.NonpagedSystemMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NonpagedSystemMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NonpagedSystemMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NonpagedSystemMemorySize : int" Usage="System.Diagnostics.Process.NonpagedSystemMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The number of bytes that are not pageable.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use NonpagedSystemMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-808">Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-808">Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-809">記憶體量 (以位元組為單位)，指系統已配置給不能寫入虛擬記憶體分頁檔案之關聯處理序的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-809">The amount of memory, in bytes, the system has allocated for the associated process that cannot be written to the virtual memory paging file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-810">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-810">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-811">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-811">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-812">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-812">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.NonpagedSystemMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="NonpagedSystemMemorySize64">
      <MemberSignature Language="C#" Value="public long NonpagedSystemMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NonpagedSystemMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.NonpagedSystemMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NonpagedSystemMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NonpagedSystemMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.NonpagedSystemMemorySize64 : int64" Usage="System.Diagnostics.Process.NonpagedSystemMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The number of bytes that are not pageable.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-813">Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-813">Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-814">配置給關聯處理序的系統記憶體量 (以位元組為單位)，不能寫入虛擬記憶體分頁檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-814">The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-815">這個屬性所傳回的值表示目前程序，以位元組為單位使用的未分頁的系統記憶體的大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-815">The value returned by this property represents the current size of nonpaged system memory used by the process, in bytes.</span></span> <span data-ttu-id="f1d7e-816">系統記憶體是作業系統中，所使用的實體記憶體，而且分成分頁和非分頁集區。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-816">System memory is the physical memory used by the operating system, and is divided into paged and nonpaged pools.</span></span> <span data-ttu-id="f1d7e-817">非分頁的記憶體配置會保留在系統記憶體，而且未分頁移出至虛擬記憶體分頁檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-817">Nonpaged memory allocations remain in system memory and are not paged out to the virtual memory paging file.</span></span>  
  
 <span data-ttu-id="f1d7e-818">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-818">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-819">屬性值相當於**Pool Nonpaged Bytes**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-819">The property value is equivalent to the **Pool Nonpaged Bytes** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-820">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-820">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-821">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-821">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-822">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-822">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-823">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-823">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-824">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-824">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-825">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-825">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="OnExited">
      <MemberSignature Language="C#" Value="protected void OnExited ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnExited() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.OnExited" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnExited ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnExited();" />
      <MemberSignature Language="F#" Value="member this.OnExited : unit -&gt; unit" Usage="process.OnExited " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-826">Raises the <see cref="E:System.Diagnostics.Process.Exited" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-826">Raises the <see cref="E:System.Diagnostics.Process.Exited" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-827"><xref:System.Diagnostics.Process.OnExited%2A> 引發的 API 方法<xref:System.Diagnostics.Process.Exited>事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-827"><xref:System.Diagnostics.Process.OnExited%2A> is the API method that raises the <xref:System.Diagnostics.Process.Exited> event.</span></span> <span data-ttu-id="f1d7e-828">呼叫<xref:System.Diagnostics.Process.OnExited%2A>會導致<xref:System.Diagnostics.Process.Exited>事件發生來引發事件的使用是唯一的方式和<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-828">Calling <xref:System.Diagnostics.Process.OnExited%2A> causes the <xref:System.Diagnostics.Process.Exited> event to occur and is the only way to raise the event using the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="f1d7e-829"><xref:System.Diagnostics.Process.OnExited%2A> 主要使用衍生類別元件時。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-829"><xref:System.Diagnostics.Process.OnExited%2A> is primarily used when deriving classes from the component.</span></span>  
  
 <span data-ttu-id="f1d7e-830">做為替代<xref:System.Diagnostics.Process.OnExited%2A>，您可以撰寫您自己的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-830">As an alternative to <xref:System.Diagnostics.Process.OnExited%2A>, you can write your own event handler.</span></span> <span data-ttu-id="f1d7e-831">建立您自己的事件處理常式委派和事件處理方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-831">You create your own event handler delegate and your own event-handling method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-832">如果您使用 Visual Studio 環境時，事件處理常式委派 (AddOnExited) 和事件處理方法 (Process1_Exited) 會針對您拖曳時<xref:System.Diagnostics.Process>元件拖曳至表單，然後按兩下的圖示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-832">If you are using the Visual Studio environment, an event handler delegate (AddOnExited) and an event-handling method (Process1_Exited) are created for you when you drag a <xref:System.Diagnostics.Process> component onto a form and double-click the icon.</span></span> <span data-ttu-id="f1d7e-833">建立時要執行的程式碼<xref:System.Diagnostics.Process.Exited>Process1_Exited 程序輸入發生的事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-833">The code you create to run when the <xref:System.Diagnostics.Process.Exited> event occurs is entered into the Process1_Exited procedure.</span></span> <span data-ttu-id="f1d7e-834">您不需要建立<xref:System.Diagnostics.Process.OnExited%2A>成員，因為它會為您實作。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-834">You do not need to create the <xref:System.Diagnostics.Process.OnExited%2A> member, because it is implemented for you.</span></span>  
  
 <span data-ttu-id="f1d7e-835">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-835">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f1d7e-836">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-836">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-837">下列範例示範如何使用<xref:System.Diagnostics.Process.OnExited%2A>衍生類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-837">The following example shows how to use the <xref:System.Diagnostics.Process.OnExited%2A> method in a derived class.</span></span>  
  
 [!code-csharp[OnExitSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/onexitsample/cs/program.cs#1)]
 [!code-vb[OnExitSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/onexitsample/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-838">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-838">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-839">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-839">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="E:System.Diagnostics.Process.Exited" />
      </Docs>
    </Member>
    <Member MemberName="OutputDataReceived">
      <MemberSignature Language="C#" Value="public event System.Diagnostics.DataReceivedEventHandler OutputDataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Diagnostics.DataReceivedEventHandler OutputDataReceived" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Process.OutputDataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OutputDataReceived As DataReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Diagnostics::DataReceivedEventHandler ^ OutputDataReceived;" />
      <MemberSignature Language="F#" Value="member this.OutputDataReceived : System.Diagnostics.DataReceivedEventHandler " Usage="member this.OutputDataReceived : System.Diagnostics.DataReceivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Indicates if the process component is associated with a real process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-840">Occurs each time an application writes a line to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-840">Occurs each time an application writes a line to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-841"><xref:System.Diagnostics.Process.OutputDataReceived>事件指出相關聯<xref:System.Diagnostics.Process>已撰寫程式，以新行字元，其重新導向至終止<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-841">The <xref:System.Diagnostics.Process.OutputDataReceived> event indicates that the associated <xref:System.Diagnostics.Process> has written a line, terminating with a newline character, to its redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-842">事件上啟用非同步讀取作業期間<xref:System.Diagnostics.Process.StandardOutput%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-842">The event is enabled during asynchronous read operations on <xref:System.Diagnostics.Process.StandardOutput%2A>.</span></span> <span data-ttu-id="f1d7e-843">若要開始非同步讀取的作業，您必須重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>的資料流<xref:System.Diagnostics.Process>，新增您的事件處理常式，來<xref:System.Diagnostics.Process.OutputDataReceived>事件，並呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-843">To start asynchronous read operations, you must redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream of a <xref:System.Diagnostics.Process>, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> event, and call <xref:System.Diagnostics.Process.BeginOutputReadLine%2A>.</span></span> <span data-ttu-id="f1d7e-844">之後，<xref:System.Diagnostics.Process.OutputDataReceived>事件訊號處理程序會將某行寫入至重新導向每次<xref:System.Diagnostics.Process.StandardOutput%2A>串流處理，直到處理程序結束或呼叫<xref:System.Diagnostics.Process.CancelOutputRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-844">Thereafter, the <xref:System.Diagnostics.Process.OutputDataReceived> event signals each time the process writes a line to the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, until the process exits or calls <xref:System.Diagnostics.Process.CancelOutputRead%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-845">正在處理的非同步輸出的應用程式應該呼叫<xref:System.Diagnostics.Process.WaitForExit%2A>方法，以確保已排清輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-845">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-846">下列範例說明如何執行非同步讀取的作業的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>的資料流`ipconfig`命令。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-846">The following example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `ipconfig` command.</span></span>  
  
 <span data-ttu-id="f1d7e-847">此範例會建立事件的委派`OutputHandler`事件處理常式並將它與相關聯<xref:System.Diagnostics.Process.OutputDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-847">The example creates an event delegate for the `OutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="f1d7e-848">事件處理常式收到文字行的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，格式化文字，並將它儲存在稍後會在此範例的主控台視窗中顯示輸出字串。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-848">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and saves it in an output string that’s later shown in the example’s console window.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-849">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-849">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-850">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-850">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
        <altmember cref="M:System.Diagnostics.Process.BeginOutputReadLine" />
        <altmember cref="M:System.Diagnostics.Process.CancelOutputRead" />
        <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PagedMemorySize">
      <MemberSignature Language="C#" Value="public int PagedMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PagedMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PagedMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagedMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PagedMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PagedMemorySize : int" Usage="System.Diagnostics.Process.PagedMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The number of bytes that are paged.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use PagedMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-851">Gets the amount of paged memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-851">Gets the amount of paged memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-852">記憶體量 (以位元組為單位)，指由關聯的處理序所配置，且可以寫入虛擬記憶體分頁檔案的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-852">The amount of memory, in bytes, allocated by the associated process that can be written to the virtual memory paging file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-853">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-853">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-854">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-854">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-855">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-855">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PagedMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PagedMemorySize64">
      <MemberSignature Language="C#" Value="public long PagedMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PagedMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PagedMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagedMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PagedMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PagedMemorySize64 : int64" Usage="System.Diagnostics.Process.PagedMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The number of bytes that are paged.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-856">Gets the amount of paged memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-856">Gets the amount of paged memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-857">虛擬記憶體分頁檔案中，配置給關聯處理序的記憶體量 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-857">The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-858">這個屬性所傳回的值表示目前程序，以位元組為單位使用之虛擬記憶體分頁檔中的記憶體大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-858">The value returned by this property represents the current size of memory in the virtual memory paging file used by the process, in bytes.</span></span> <span data-ttu-id="f1d7e-859">作業系統會使用實體記憶體之虛擬記憶體分頁檔搭配使用，來管理每個處理序虛擬位址空間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-859">The operating system uses the virtual memory paging file in conjunction with physical memory to manage the virtual address space for each process.</span></span> <span data-ttu-id="f1d7e-860">當可分頁記憶體不在使用中時，它可以傳輸到磁碟上的虛擬記憶體分頁檔案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-860">When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</span></span> <span data-ttu-id="f1d7e-861">若要取得作業系統所使用的處理序記憶體的大小，請使用<xref:System.Diagnostics.Process.PagedSystemMemorySize64%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-861">To obtain the size of memory used by the operating system for the process, use the <xref:System.Diagnostics.Process.PagedSystemMemorySize64%2A> property.</span></span>  
  
 <span data-ttu-id="f1d7e-862">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-862">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-863">屬性值相當於**分頁檔位元組**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-863">The property value is equivalent to the **Page File Bytes** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-864">下列程式碼範例啟動 「 記事本 」 應用程式的執行個體，然後擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-864">The following code example starts an instance of the Notepad application, and then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-865">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-865">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-866">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-866">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-867">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-867">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-868">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-868">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PeakPagedMemorySize64" />
        <altmember cref="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PagedSystemMemorySize">
      <MemberSignature Language="C#" Value="public int PagedSystemMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PagedSystemMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PagedSystemMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagedSystemMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PagedSystemMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PagedSystemMemorySize : int" Usage="System.Diagnostics.Process.PagedSystemMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of paged system memory in bytes.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use PagedSystemMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-869">Gets the amount of pageable system memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-869">Gets the amount of pageable system memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-870">記憶體量 (以位元組為單位)，指系統已配置給可以寫入虛擬記憶體分頁檔案之關聯處理序的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-870">The amount of memory, in bytes, the system has allocated for the associated process that can be written to the virtual memory paging file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-871">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-871">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-872">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-872">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-873">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-873">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PagedSystemMemorySize64">
      <MemberSignature Language="C#" Value="public long PagedSystemMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PagedSystemMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagedSystemMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PagedSystemMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PagedSystemMemorySize64 : int64" Usage="System.Diagnostics.Process.PagedSystemMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of paged system memory in bytes.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-874">Gets the amount of pageable system memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-874">Gets the amount of pageable system memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-875">配置給關聯處理序的系統記憶體量 (以位元組為單位)，可以寫入虛擬記憶體分頁檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-875">The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-876">這個屬性值所傳回的值表示目前程序，以位元組為單位使用的可分頁系統記憶體的大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-876">The value returned by this property value represents the current size of pageable system memory used by the process, in bytes.</span></span> <span data-ttu-id="f1d7e-877">系統記憶體是作業系統中，所使用的實體記憶體，而且分成分頁和非分頁集區。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-877">System memory is the physical memory used by the operating system, and is divided into paged and nonpaged pools.</span></span> <span data-ttu-id="f1d7e-878">當可分頁記憶體不在使用中時，它可以傳輸到磁碟上的虛擬記憶體分頁檔案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-878">When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</span></span> <span data-ttu-id="f1d7e-879">若要取得處理序所使用的應用程式記憶體的大小，請使用<xref:System.Diagnostics.Process.PagedMemorySize64%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-879">To obtain the size of the application memory used by the process, use the <xref:System.Diagnostics.Process.PagedMemorySize64%2A> property.</span></span>  
  
 <span data-ttu-id="f1d7e-880">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-880">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-881">屬性值相當於**Pool Paged Bytes**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-881">The property value is equivalent to the **Pool Paged Bytes** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-882">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-882">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-883">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-883">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-884">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-884">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-885">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-885">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-886">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-886">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-887">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-887">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
        <altmember cref="P:System.Diagnostics.Process.NonpagedSystemMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PeakPagedMemorySize">
      <MemberSignature Language="C#" Value="public int PeakPagedMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PeakPagedMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PeakPagedMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakPagedMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PeakPagedMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakPagedMemorySize : int" Usage="System.Diagnostics.Process.PeakPagedMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of paged memory used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use PeakPagedMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-888">Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-888">Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-889">最大記憶體量 (以位元組為單位)，指由關聯的處理序配置給可以寫入虛擬記憶體分頁檔案的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-889">The maximum amount of memory, in bytes, allocated by the associated process that could be written to the virtual memory paging file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-890">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-890">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-891">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-891">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-892">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-892">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PeakPagedMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PeakPagedMemorySize64">
      <MemberSignature Language="C#" Value="public long PeakPagedMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PeakPagedMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PeakPagedMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakPagedMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PeakPagedMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakPagedMemorySize64 : int64" Usage="System.Diagnostics.Process.PeakPagedMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of paged memory used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-893">Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-893">Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-894">虛擬記憶體分頁檔案中，從啟動以來配置給關聯處理序的最大記憶體量 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-894">The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-895">這個屬性值所傳回的值代表自啟動，以位元組為單位的處理序使用之虛擬記憶體分頁檔中的記憶體大小上限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-895">The value returned by this property value represents the maximum size of memory in the virtual memory paging file used by the process since it started, in bytes.</span></span> <span data-ttu-id="f1d7e-896">作業系統會使用實體記憶體之虛擬記憶體分頁檔搭配使用，來管理每個處理序虛擬位址空間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-896">The operating system uses the virtual memory paging file in conjunction with physical memory to manage the virtual address space for each process.</span></span> <span data-ttu-id="f1d7e-897">當可分頁記憶體不在使用中時，它可以傳輸到磁碟上的虛擬記憶體分頁檔案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-897">When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</span></span>  
  
 <span data-ttu-id="f1d7e-898">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-898">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-899">屬性值相當於**分頁檔位元組尖峰**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-899">The property value is equivalent to the **Page File Bytes Peak** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-900">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-900">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-901">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-901">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-902">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-902">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-903">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-903">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-904">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-904">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-905">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-905">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PagedMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PeakVirtualMemorySize">
      <MemberSignature Language="C#" Value="public int PeakVirtualMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PeakVirtualMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PeakVirtualMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakVirtualMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PeakVirtualMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakVirtualMemorySize : int" Usage="System.Diagnostics.Process.PeakVirtualMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of virtual memory used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use PeakVirtualMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-906">Gets the maximum amount of virtual memory, in bytes, used by the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-906">Gets the maximum amount of virtual memory, in bytes, used by the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-907">最大虛擬記憶體量 (以位元組為單位)，指關聯的處理序所要求的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-907">The maximum amount of virtual memory, in bytes, that the associated process has requested.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-908">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-908">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-909">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-909">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-910">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-910">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PeakVirtualMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PeakVirtualMemorySize64">
      <MemberSignature Language="C#" Value="public long PeakVirtualMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PeakVirtualMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PeakVirtualMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakVirtualMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PeakVirtualMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakVirtualMemorySize64 : int64" Usage="System.Diagnostics.Process.PeakVirtualMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of virtual memory used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-911">Gets the maximum amount of virtual memory, in bytes, used by the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-911">Gets the maximum amount of virtual memory, in bytes, used by the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-912">從啟動以來配置給關聯處理序的最大虛擬記憶體量 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-912">The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-913">這個屬性所傳回的值代表自啟動，以位元組為單位的處理序使用的虛擬記憶體的大小上限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-913">The value returned by this property represents the maximum size of virtual memory used by the process since it started, in bytes.</span></span> <span data-ttu-id="f1d7e-914">作業系統會對應到頁面載入的實體記憶體，或儲存在磁碟上的虛擬記憶體分頁檔案中的頁面每個處理序虛擬位址空間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-914">The operating system maps the virtual address space for each process either to pages loaded in physical memory, or to pages stored in the virtual memory paging file on disk.</span></span>  
  
 <span data-ttu-id="f1d7e-915">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-915">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-916">屬性值相當於**虛擬位元組尖峰**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-916">The property value is equivalent to the **Virtual Bytes Peak** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-917">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-917">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-918">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-918">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-919">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-919">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-920">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-920">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-921">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-921">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-922">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-922">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.VirtualMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PeakWorkingSet">
      <MemberSignature Language="C#" Value="public int PeakWorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PeakWorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PeakWorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakWorkingSet As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PeakWorkingSet { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakWorkingSet : int" Usage="System.Diagnostics.Process.PeakWorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of system memory used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use PeakWorkingSet64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-923">Gets the peak working set size for the associated process, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-923">Gets the peak working set size for the associated process, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-924">最大實體記憶體數量，為相關的處理序一次所需的量 (位元組)，</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-924">The maximum amount of physical memory that the associated process has required all at once, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-925">處理程序的工作集是實體 RAM 記憶體中的目前可見的程序的記憶體分頁集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-925">The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</span></span> <span data-ttu-id="f1d7e-926">這些頁面是常駐的而且可供使用，而不觸發分頁錯誤的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-926">These pages are resident and available for an application to use without triggering a page fault.</span></span>  
  
 <span data-ttu-id="f1d7e-927">工作集包括共用和私用的資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-927">The working set includes both shared and private data.</span></span> <span data-ttu-id="f1d7e-928">共用的資料包含頁面包含所有處理序執行，包括處理序模組和系統程式庫的指示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-928">The shared data includes the pages that contain all the instructions that the process executes, including process modules and the system libraries.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-929">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-929">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-930">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-930">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-931">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-931">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.WorkingSet64" />
        <altmember cref="P:System.Diagnostics.Process.MinWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.MaxWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.PeakWorkingSet64" />
      </Docs>
    </Member>
    <Member MemberName="PeakWorkingSet64">
      <MemberSignature Language="C#" Value="public long PeakWorkingSet64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PeakWorkingSet64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PeakWorkingSet64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeakWorkingSet64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PeakWorkingSet64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PeakWorkingSet64 : int64" Usage="System.Diagnostics.Process.PeakWorkingSet64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The maximum amount of system memory used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-932">Gets the maximum amount of physical memory, in bytes, used by the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-932">Gets the maximum amount of physical memory, in bytes, used by the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-933">從啟動以來配置給關聯處理序的最大實體記憶體量 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-933">The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-934">這個屬性所傳回的值代表工作集由處理序，因為它啟動，以位元組為單位的記憶體的大小上限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-934">The value returned by this property represents the maximum size of working set memory used by the process since it started, in bytes.</span></span> <span data-ttu-id="f1d7e-935">處理程序的工作集是實體 RAM 記憶體中的目前可見的程序的記憶體分頁集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-935">The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</span></span> <span data-ttu-id="f1d7e-936">這些頁面是常駐的而且可供使用，而不觸發分頁錯誤的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-936">These pages are resident and available for an application to use without triggering a page fault.</span></span>  
  
 <span data-ttu-id="f1d7e-937">工作集包括共用和私用的資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-937">The working set includes both shared and private data.</span></span> <span data-ttu-id="f1d7e-938">共用的資料包含頁面包含所有處理序執行，包括指示，從處理序模組和系統程式庫的指示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-938">The shared data includes the pages that contain all the instructions that the process executes, including instructions from the process modules and the system libraries.</span></span>  
  
 <span data-ttu-id="f1d7e-939">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-939">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-940">屬性值相當於**工作集尖峰**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-940">The property value is equivalent to the **Working Set Peak** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-941">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-941">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-942">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-942">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-943">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-943">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-944">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-944">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-945">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-945">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-946">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-946">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.WorkingSet64" />
        <altmember cref="P:System.Diagnostics.Process.MinWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.MaxWorkingSet" />
      </Docs>
    </Member>
    <Member MemberName="PriorityBoostEnabled">
      <MemberSignature Language="C#" Value="public bool PriorityBoostEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PriorityBoostEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PriorityBoostEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PriorityBoostEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PriorityBoostEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PriorityBoostEnabled : bool with get, set" Usage="System.Diagnostics.Process.PriorityBoostEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Process will be of higher priority while it is actively used.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-947">Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-947">Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-948">當處理序離開等候狀態時，如果應動態提高處理序優先權，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-948">
              <see langword="true" /> if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-949">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-949">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-950">當執行緒的優先權類別具有動態優先順序列舉值的其中一個處理序中執行時 (<xref:System.Diagnostics.ProcessPriorityClass.Normal>， <xref:System.Diagnostics.ProcessPriorityClass.High>，或<xref:System.Diagnostics.ProcessPriorityClass.RealTime>)，系統暫時增加執行緒的優先順序，當它被帶離等候狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-950">When a thread runs in a process for which the priority class has one of the dynamic priority enumeration values (<xref:System.Diagnostics.ProcessPriorityClass.Normal>, <xref:System.Diagnostics.ProcessPriorityClass.High>, or <xref:System.Diagnostics.ProcessPriorityClass.RealTime>), the system temporarily boosts the thread's priority when it is taken out of a wait state.</span></span> <span data-ttu-id="f1d7e-951">這個動作可防止其他處理序中斷目前執行緒的處理。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-951">This action prevents other processes from interrupting the processing of the current thread.</span></span> <span data-ttu-id="f1d7e-952"><xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>設定會影響所有現有的執行緒和任何後續的程序所建立的執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-952">The <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> setting affects all the existing threads and any threads subsequently created by the process.</span></span> <span data-ttu-id="f1d7e-953">若要還原的正常行為，請設定<xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-953">To restore normal behavior, set the <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-954">提升提高優先權可能會耗盡必要作業系統和網路功能，導致問題的其他作業系統工作的資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-954">Boosting the priority too high can drain resources from essential operating system and network functions, causing problems with other operating system tasks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-955">Priority boost information could not be retrieved from the associated process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-955">Priority boost information could not be retrieved from the associated process resource.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-956">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-956">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
          <span data-ttu-id="f1d7e-957">-or-  The process identifier or process handle is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-957">-or-  The process identifier or process handle is zero.</span>
          </span>
          <span data-ttu-id="f1d7e-958">(The process has not been started.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-958">(The process has not been started.)</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-959">You are attempting to access the <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-959">You are attempting to access the <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-960">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-960">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-961">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-961">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-962">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-962">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-963">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-963">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PriorityClass" />
        <altmember cref="P:System.Diagnostics.Process.BasePriority" />
      </Docs>
    </Member>
    <Member MemberName="PriorityClass">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessPriorityClass PriorityClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessPriorityClass PriorityClass" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PriorityClass" />
      <MemberSignature Language="VB.NET" Value="Public Property PriorityClass As ProcessPriorityClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessPriorityClass PriorityClass { System::Diagnostics::ProcessPriorityClass get(); void set(System::Diagnostics::ProcessPriorityClass value); };" />
      <MemberSignature Language="F#" Value="member this.PriorityClass : System.Diagnostics.ProcessPriorityClass with get, set" Usage="System.Diagnostics.Process.PriorityClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The priority that the threads in the process run relative to.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessPriorityClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-964">Gets or sets the overall priority category for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-964">Gets or sets the overall priority category for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-965">相關聯處理序的優先權分類，處理序的 <see cref="P:System.Diagnostics.Process.BasePriority" /> 由此計算出來。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-965">The priority category for the associated process, from which the <see cref="P:System.Diagnostics.Process.BasePriority" /> of the process is calculated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-966">處理序優先權類別涵蓋了各種執行緒優先順序層級。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-966">A process priority class encompasses a range of thread priority levels.</span></span> <span data-ttu-id="f1d7e-967">具有不同的優先權，相對於處理程序的優先權等級執行之處理序中執行的執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-967">Threads with different priorities that are running in the process run relative to the priority class of the process.</span></span> <span data-ttu-id="f1d7e-968">Win32 與每個類別的七個基底的優先順序層級使用四個優先權類別。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-968">Win32 uses four priority classes with seven base priority levels per class.</span></span> <span data-ttu-id="f1d7e-969">這些程序的優先順序類別會擷取<xref:System.Diagnostics.ProcessPriorityClass>列舉型別，可讓您設定為處理序優先權<xref:System.Diagnostics.ProcessPriorityClass.Idle>， <xref:System.Diagnostics.ProcessPriorityClass.Normal>， <xref:System.Diagnostics.ProcessPriorityClass.High>， <xref:System.Diagnostics.ProcessPriorityClass.AboveNormal>， <xref:System.Diagnostics.ProcessPriorityClass.BelowNormal>，或<xref:System.Diagnostics.ProcessPriorityClass.RealTime>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-969">These process priority classes are captured in the <xref:System.Diagnostics.ProcessPriorityClass> enumeration, which lets you set the process priority to <xref:System.Diagnostics.ProcessPriorityClass.Idle>, <xref:System.Diagnostics.ProcessPriorityClass.Normal>, <xref:System.Diagnostics.ProcessPriorityClass.High>, <xref:System.Diagnostics.ProcessPriorityClass.AboveNormal>, <xref:System.Diagnostics.ProcessPriorityClass.BelowNormal>, or <xref:System.Diagnostics.ProcessPriorityClass.RealTime>.</span></span> <span data-ttu-id="f1d7e-970">根據 24 小時制或其他的增加，基底的優先權層級可以變更作業系統，當處理程序需要領先其他人存取放到處理器的時間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-970">Based on the time elapsed or other boosts, the base priority level can be changed by the operating system when a process needs to be put ahead of others for access to the processor.</span></span> <span data-ttu-id="f1d7e-971">此外，您可以設定<xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>暫時提高已脫離等候狀態的執行緒的優先權層級。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-971">In addition, you can set the <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> to temporarily boost the priority level of threads that have been taken out of the wait state.</span></span> <span data-ttu-id="f1d7e-972">處理程序會回到等候狀態時，會重設的優先順序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-972">The priority is reset when the process returns to the wait state.</span></span>  
  
 <span data-ttu-id="f1d7e-973"><xref:System.Diagnostics.Process.BasePriority%2A>屬性可讓您檢視開始指派給處理程序的優先順序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-973">The <xref:System.Diagnostics.Process.BasePriority%2A> property lets you view the starting priority that is assigned to a process.</span></span> <span data-ttu-id="f1d7e-974">不過，因為它是唯讀的您無法使用<xref:System.Diagnostics.Process.BasePriority%2A>屬性來設定處理序的優先順序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-974">However, because it is read-only, you cannot use the <xref:System.Diagnostics.Process.BasePriority%2A> property to set the priority of a process.</span></span> <span data-ttu-id="f1d7e-975">若要變更的優先順序，使用<xref:System.Diagnostics.Process.PriorityClass%2A>屬性，取得或設定處理程序的整體優先權分類。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-975">To change the priority, use the <xref:System.Diagnostics.Process.PriorityClass%2A> property, which gets or sets the overall priority category for the process.</span></span>  
  
 <span data-ttu-id="f1d7e-976">無法使用系統監視器來檢視的優先權等級。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-976">The priority class cannot be viewed using System Monitor.</span></span> <span data-ttu-id="f1d7e-977">下表顯示之間的關聯性<xref:System.Diagnostics.Process.BasePriority%2A>和<xref:System.Diagnostics.Process.PriorityClass%2A>值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-977">The following table shows the relationship between the <xref:System.Diagnostics.Process.BasePriority%2A> and <xref:System.Diagnostics.Process.PriorityClass%2A> values.</span></span>  
  
|<span data-ttu-id="f1d7e-978">BasePriority</span><span class="sxs-lookup"><span data-stu-id="f1d7e-978">BasePriority</span></span>|<span data-ttu-id="f1d7e-979">PriorityClass</span><span class="sxs-lookup"><span data-stu-id="f1d7e-979">PriorityClass</span></span>|  
|------------------|-------------------|  
|<span data-ttu-id="f1d7e-980">4</span><span class="sxs-lookup"><span data-stu-id="f1d7e-980">4</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.Idle>|  
|<span data-ttu-id="f1d7e-981">8</span><span class="sxs-lookup"><span data-stu-id="f1d7e-981">8</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.Normal>|  
|<span data-ttu-id="f1d7e-982">13</span><span class="sxs-lookup"><span data-stu-id="f1d7e-982">13</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.High>|  
|<span data-ttu-id="f1d7e-983">24</span><span class="sxs-lookup"><span data-stu-id="f1d7e-983">24</span></span>|<xref:System.Diagnostics.ProcessPriorityClass.RealTime>|  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-984">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-984">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-985">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-985">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-986">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-986">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-987">Process priority information could not be set or retrieved from the associated process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-987">Process priority information could not be set or retrieved from the associated process resource.</span>
          </span>
          <span data-ttu-id="f1d7e-988">-or-  The process identifier or process handle is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-988">-or-  The process identifier or process handle is zero.</span>
          </span>
          <span data-ttu-id="f1d7e-989">(The process has not been started.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-989">(The process has not been started.)</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-990">You are attempting to access the <see cref="P:System.Diagnostics.Process.PriorityClass" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-990">You are attempting to access the <see cref="P:System.Diagnostics.Process.PriorityClass" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-991">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-991">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-992">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-992">The process <see cref="P:System.Diagnostics.Process.Id" /> is not available.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-993">You have set the <see cref="P:System.Diagnostics.Process.PriorityClass" /> to <see langword="AboveNormal" /> or <see langword="BelowNormal" /> when using Windows 98 or Windows Millennium Edition (Windows Me).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-993">You have set the <see cref="P:System.Diagnostics.Process.PriorityClass" /> to <see langword="AboveNormal" /> or <see langword="BelowNormal" /> when using Windows 98 or Windows Millennium Edition (Windows Me).</span>
          </span>
          <span data-ttu-id="f1d7e-994">These platforms do not support those values for the priority class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-994">These platforms do not support those values for the priority class.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f1d7e-995">Priority class cannot be set because it does not use a valid value, as defined in the <see cref="T:System.Diagnostics.ProcessPriorityClass" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-995">Priority class cannot be set because it does not use a valid value, as defined in the <see cref="T:System.Diagnostics.ProcessPriorityClass" /> enumeration.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-996">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-996">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-997">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-997">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.BasePriority" />
        <altmember cref="P:System.Diagnostics.Process.PriorityBoostEnabled" />
      </Docs>
    </Member>
    <Member MemberName="PrivateMemorySize">
      <MemberSignature Language="C#" Value="public int PrivateMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrivateMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PrivateMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrivateMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateMemorySize : int" Usage="System.Diagnostics.Process.PrivateMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of memory exclusively used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrivateMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-998">Gets the amount of private memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-998">Gets the amount of private memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-999">相關的處理序配置的位元組數目，不能與其他處理序共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-999">The number of bytes allocated by the associated process that cannot be shared with other processes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1000">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1000">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1001">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1001">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1002">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1002">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PrivateMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="PrivateMemorySize64">
      <MemberSignature Language="C#" Value="public long PrivateMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PrivateMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PrivateMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PrivateMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateMemorySize64 : int64" Usage="System.Diagnostics.Process.PrivateMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of memory exclusively used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1003">Gets the amount of private memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1003">Gets the amount of private memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1004">配置給關聯處理序的記憶體量 (以位元組為單位)，不能與其他處理序共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1004">The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1005">這個屬性所傳回的值表示目前程序，以位元組為單位，不能與其他處理序共用所使用的記憶體大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1005">The value returned by this property represents the current size of memory used by the process, in bytes, that cannot be shared with other processes.</span></span>  
  
 <span data-ttu-id="f1d7e-1006">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1006">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-1007">屬性值相當於**私用位元組**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1007">The property value is equivalent to the **Private Bytes** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1008">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1008">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-1009">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1009">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1010">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1010">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1011">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1011">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1012">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1012">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1013">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1013">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PrivilegedProcessorTime">
      <MemberSignature Language="C#" Value="public TimeSpan PrivilegedProcessorTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PrivilegedProcessorTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.PrivilegedProcessorTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivilegedProcessorTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PrivilegedProcessorTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivilegedProcessorTime : TimeSpan" Usage="System.Diagnostics.Process.PrivilegedProcessorTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of CPU time the process spent inside the operating system core.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1014">Gets the privileged processor time for this process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1014">Gets the privileged processor time for this process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1015">
            <see cref="T:System.TimeSpan" />，表示處理序在作業系統核心內執行程式碼所花費的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1015">A <see cref="T:System.TimeSpan" /> that indicates the amount of time that the process has spent running code inside the operating system core.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1d7e-1016">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1016">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1017">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1017">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1018">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1018">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1019">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1019">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1020">You are attempting to access the <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1020">You are attempting to access the <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1021">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1021">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1022">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1022">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1023">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1023">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.UserProcessorTime" />
        <altmember cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />
      </Docs>
    </Member>
    <Member MemberName="ProcessName">
      <MemberSignature Language="C#" Value="public string ProcessName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProcessName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.ProcessName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProcessName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessName : string" Usage="System.Diagnostics.Process.ProcessName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of this process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1024">Gets the name of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1024">Gets the name of the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1025">名稱，系統用來向使用者識別處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1025">The name that the system uses to identify the process to the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1026"><xref:System.Diagnostics.Process.ProcessName%2A>屬性會保留的可執行檔名稱，例如 Outlook、 不包含副檔名為.exe 或路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1026">The <xref:System.Diagnostics.Process.ProcessName%2A> property holds an executable file name, such as Outlook, that does not include the .exe extension or the path.</span></span> <span data-ttu-id="f1d7e-1027">它可協助取得和管理相同的可執行檔相關聯的所有處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1027">It is helpful for getting and manipulating all the processes that are associated with the same executable file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1028">在 [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]作業系統，<xref:System.Diagnostics.Process.ProcessName%2A>屬性可能會被截斷為 15 個字元，如果無法取得處理序模組資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1028">On [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] operating systems, the <xref:System.Diagnostics.Process.ProcessName%2A> property may be truncated to 15 characters if the process module information cannot be obtained.</span></span>  
  
 <span data-ttu-id="f1d7e-1029">您可以呼叫<xref:System.Diagnostics.Process.GetProcessesByName%2A>，傳遞的可執行檔名稱，來擷取陣列，其中包含每個指定的電腦上執行的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1029">You can call <xref:System.Diagnostics.Process.GetProcessesByName%2A>, passing it an executable file name, to retrieve an array that contains every running instance on the specified computer.</span></span> <span data-ttu-id="f1d7e-1030">您可以使用這個陣列，例如，若要關閉的可執行檔的所有執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1030">You can use this array, for example, to shut down all the running instances of the executable file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1031">The process does not have an identifier, or no process is associated with the <see cref="T:System.Diagnostics.Process" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1031">The process does not have an identifier, or no process is associated with the <see cref="T:System.Diagnostics.Process" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1032">-or-  The associated process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1032">-or-  The associated process has exited.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1033">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1033">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1034">The process is not on this computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1034">The process is not on this computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1035">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1035">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1036">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1036">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorAffinity">
      <MemberSignature Language="C#" Value="public IntPtr ProcessorAffinity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ProcessorAffinity" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.ProcessorAffinity" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorAffinity As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ProcessorAffinity { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorAffinity : nativeint with get, set" Usage="System.Diagnostics.Process.ProcessorAffinity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Allowed processor that can be used by this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1037">Gets or sets the processors on which the threads in this process can be scheduled to run.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1037">Gets or sets the processors on which the threads in this process can be scheduled to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1038">位元遮罩，表示相關的處理序中的執行緒可以在其上執行的處理器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1038">A bitmask representing the processors that the threads in the associated process can run on.</span>
          </span>
          <span data-ttu-id="f1d7e-1039">預設值取決於電腦上的處理器數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1039">The default depends on the number of processors on the computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1040">預設值為 2 <sup>n</sup> -1，其中 n 是處理器數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1040">The default value is 2 <sup>n</sup> -1, where n is the number of processors.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1041">在 Windows 2000 和更新版本中，處理程序中的執行緒可以移轉處理器，以重新載入處理器快取每個移轉。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1041">In Windows 2000 and later, a thread in a process can migrate from processor to processor, with each migration reloading the processor cache.</span></span> <span data-ttu-id="f1d7e-1042">在繁重的系統負載下指定哪一個處理器應該執行特定的執行緒可以改善效能降低的次數會重新載入處理器快取。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1042">Under heavy system loads, specifying which processor should run a specific thread can improve performance by reducing the number of times the processor cache is reloaded.</span></span> <span data-ttu-id="f1d7e-1043">處理器和執行緒之間的關聯稱為處理器相似性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1043">The association between a processor and a thread is called the processor affinity.</span></span>  
  
 <span data-ttu-id="f1d7e-1044">位元表示每個處理器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1044">Each processor is represented as a bit.</span></span> <span data-ttu-id="f1d7e-1045">位元 0 是第一個處理器，位元 1 是第二個，處理器等等。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1045">Bit 0 is processor one, bit 1 is processor two, and so forth.</span></span> <span data-ttu-id="f1d7e-1046">如果您將設定位元為 1 的值，對應的處理器會選取進行執行緒指派。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1046">If you set a bit to the value 1, the corresponding processor is selected for thread assignment.</span></span> <span data-ttu-id="f1d7e-1047">當您將設定<xref:System.Diagnostics.Process.ProcessorAffinity%2A>值為零，作業系統的排程演算法設定執行緒的相似性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1047">When you set the <xref:System.Diagnostics.Process.ProcessorAffinity%2A> value to zero, the operating system's scheduling algorithms set the thread's affinity.</span></span> <span data-ttu-id="f1d7e-1048">當<xref:System.Diagnostics.Process.ProcessorAffinity%2A>值設定為任何非零值，值會解譯為指定適合選取之處理器的位元遮罩。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1048">When the <xref:System.Diagnostics.Process.ProcessorAffinity%2A> value is set to any nonzero value, the value is interpreted as a bitmask that specifies those processors eligible for selection.</span></span>  
  
 <span data-ttu-id="f1d7e-1049">下表顯示選取的<xref:System.Diagnostics.Process.ProcessorAffinity%2A>八個處理器的系統值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1049">The following table shows a selection of <xref:System.Diagnostics.Process.ProcessorAffinity%2A> values for an eight-processor system.</span></span>  
  
|<span data-ttu-id="f1d7e-1050">位元遮罩</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1050">Bitmask</span></span>|<span data-ttu-id="f1d7e-1051">二進位值</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1051">Binary value</span></span>|<span data-ttu-id="f1d7e-1052">符合資格的處理器</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1052">Eligible processors</span></span>|  
|-------------|------------------|-------------------------|  
|<span data-ttu-id="f1d7e-1053">0x0001</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1053">0x0001</span></span>|<span data-ttu-id="f1d7e-1054">00000000 00000001</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1054">00000000 00000001</span></span>|<span data-ttu-id="f1d7e-1055">1</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1055">1</span></span>|  
|<span data-ttu-id="f1d7e-1056">0x0003</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1056">0x0003</span></span>|<span data-ttu-id="f1d7e-1057">00000000 00000011</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1057">00000000 00000011</span></span>|<span data-ttu-id="f1d7e-1058">1 和 2</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1058">1 and 2</span></span>|  
|<span data-ttu-id="f1d7e-1059">0x0007</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1059">0x0007</span></span>|<span data-ttu-id="f1d7e-1060">00000000 00000111</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1060">00000000 00000111</span></span>|<span data-ttu-id="f1d7e-1061">1、 2 和 3</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1061">1, 2 and 3</span></span>|  
|<span data-ttu-id="f1d7e-1062">0x0009</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1062">0x0009</span></span>|<span data-ttu-id="f1d7e-1063">00000000 00001001</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1063">00000000 00001001</span></span>|<span data-ttu-id="f1d7e-1064">1 到 4</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1064">1 and 4</span></span>|  
|<span data-ttu-id="f1d7e-1065">0x007F</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1065">0x007F</span></span>|<span data-ttu-id="f1d7e-1066">00000000 01111111</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1066">00000000 01111111</span></span>|<span data-ttu-id="f1d7e-1067">1、 2、 3、 4、 5、 6 和 7</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1067">1, 2, 3, 4, 5, 6 and 7</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1068">
            <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> information could not be set or retrieved from the associated process resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1068">
              <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> information could not be set or retrieved from the associated process resource.</span>
          </span>
          <span data-ttu-id="f1d7e-1069">-or-  The process identifier or process handle is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1069">-or-  The process identifier or process handle is zero.</span>
          </span>
          <span data-ttu-id="f1d7e-1070">(The process has not been started.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1070">(The process has not been started.)</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1071">You are attempting to access the <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1071">You are attempting to access the <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1072">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1072">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1073">The process <see cref="P:System.Diagnostics.Process.Id" /> was not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1073">The process <see cref="P:System.Diagnostics.Process.Id" /> was not available.</span>
          </span>
          <span data-ttu-id="f1d7e-1074">-or-  The process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1074">-or-  The process has exited.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1075">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1075">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1076">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1076">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="process.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1077">Discards any information about the associated process that has been cached inside the process component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1077">Discards any information about the associated process that has been cached inside the process component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1078">之後<xref:System.Diagnostics.Process.Refresh%2A>呼叫時，第一個要求的每一個屬性的相關資訊會導致處理序元件，從相關聯的處理序中取得新的值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1078">After <xref:System.Diagnostics.Process.Refresh%2A> is called, the first request for information about each property causes the process component to obtain a new value from the associated process.</span></span>  
  
 <span data-ttu-id="f1d7e-1079">當<xref:System.Diagnostics.Process>元件是與處理序資源，屬性值相關聯<xref:System.Diagnostics.Process>立即填入根據相關聯的處理序的狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1079">When a <xref:System.Diagnostics.Process> component is associated with a process resource, the property values of the <xref:System.Diagnostics.Process> are immediately populated according to the status of the associated process.</span></span> <span data-ttu-id="f1d7e-1080">如果後續變更相關聯的處理序的相關資訊，這些變更不會反映在<xref:System.Diagnostics.Process>元件的快取的值。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1080">If the information about the associated process subsequently changes, those changes are not reflected in the <xref:System.Diagnostics.Process> component's cached values.</span></span> <span data-ttu-id="f1d7e-1081"><xref:System.Diagnostics.Process>元件會將快照集的處理序資源位於與其相關聯的時間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1081">The <xref:System.Diagnostics.Process> component is a snapshot of the process resource at the time they are associated.</span></span> <span data-ttu-id="f1d7e-1082">若要檢視相關聯的處理序的目前值，請呼叫<xref:System.Diagnostics.Process.Refresh%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1082">To view the current values for the associated process, call the <xref:System.Diagnostics.Process.Refresh%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1083">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1083">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1084">然後，它會擷取相關聯的處理序的實體記憶體使用量在 10 秒，最多達 2 秒的間隔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1084">It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</span></span> <span data-ttu-id="f1d7e-1085">此範例會偵測處理序結束之前經過 10 秒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1085">The example detects whether the process exits before 10 seconds have elapsed.</span></span> <span data-ttu-id="f1d7e-1086">如果它仍在執行 10 秒後，範例就會關閉程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1086">The example closes the process if it is still running after 10 seconds.</span></span>  
  
 [!code-cpp[process_refresh#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_refresh/CPP/process_refresh.cpp#1)]
 [!code-csharp[process_refresh#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_refresh/CS/process_refresh.cs#1)]
 [!code-vb[process_refresh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_refresh/VB/process_refresh.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1087">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1087">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1088">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1088">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Responding">
      <MemberSignature Language="C#" Value="public bool Responding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Responding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.Responding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Responding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Responding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Responding : bool" Usage="System.Diagnostics.Process.Responding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Is this process responsive.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1089">Gets a value indicating whether the user interface of the process is responding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1089">Gets a value indicating whether the user interface of the process is responding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1090">如果相關聯處理序的使用者介面正在回應系統，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1090">
              <see langword="true" /> if the user interface of the associated process is responding to the system; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1091">如果處理程序具有使用者介面，<xref:System.Diagnostics.Process.Responding%2A>屬性連絡使用者介面，以判斷處理序是否正在回應使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1091">If a process has a user interface, the <xref:System.Diagnostics.Process.Responding%2A> property contacts the user interface to determine whether the process is responding to user input.</span></span> <span data-ttu-id="f1d7e-1092">如果介面沒有回應，立即<xref:System.Diagnostics.Process.Responding%2A>屬性會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1092">If the interface does not respond immediately, the <xref:System.Diagnostics.Process.Responding%2A> property returns `false`.</span></span> <span data-ttu-id="f1d7e-1093">使用這個屬性來判斷相關聯的處理序的介面是否已停止回應。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1093">Use this property to determine whether the interface of the associated process has stopped responding.</span></span>  
  
 <span data-ttu-id="f1d7e-1094">如果處理程序並沒有<xref:System.Diagnostics.Process.MainWindowHandle%2A>，這個屬性會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1094">If the process does not have a <xref:System.Diagnostics.Process.MainWindowHandle%2A>, this property returns `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1095">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1095">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1096">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1096">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1097">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1097">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1098">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1098">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1099">There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1099">There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1100">You are attempting to access the <see cref="P:System.Diagnostics.Process.Responding" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1100">You are attempting to access the <see cref="P:System.Diagnostics.Process.Responding" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1101">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1101">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1102">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1102">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1103">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1103">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MainWindowHandle" />
      </Docs>
    </Member>
    <Member MemberName="SafeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeProcessHandle SafeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeProcessHandle SafeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.SafeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeHandle As SafeProcessHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeProcessHandle ^ SafeHandle { Microsoft::Win32::SafeHandles::SafeProcessHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeHandle : Microsoft.Win32.SafeHandles.SafeProcessHandle" Usage="System.Diagnostics.Process.SafeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeProcessHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1104">Gets the native handle to this process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1104">Gets the native handle to this process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1105">這個處理序的原生控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1105">The native handle to this process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1106">控制代碼才可使用呼叫元件已啟動的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1106">The handle is only available if the calling component started the process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public int SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SessionId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SessionId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : int" Usage="System.Diagnostics.Process.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The session ID for this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoNotSupported("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1107">Gets the Terminal Services session identifier for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1107">Gets the Terminal Services session identifier for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1108">相關處理序的終端機服務工作階段識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1108">The Terminal Services session identifier for the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1109"><xref:System.Diagnostics.Process.SessionId%2A>屬性識別目前執行中應用程式的工作階段。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1109">The <xref:System.Diagnostics.Process.SessionId%2A> property identifies the session in which the application is currently running.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="f1d7e-1110">There is no session associated with this process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1110">There is no session associated with this process.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1111">There is no process associated with this session identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1111">There is no process associated with this session identifier.</span>
          </span>
          <span data-ttu-id="f1d7e-1112">-or-  The associated process is not on this machine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1112">-or-  The associated process is not on this machine.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1113">The <see cref="P:System.Diagnostics.Process.SessionId" /> property is not supported on Windows 98.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1113">The <see cref="P:System.Diagnostics.Process.SessionId" /> property is not supported on Windows 98.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1114">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1114">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1115">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1115">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="StandardError">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader StandardError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.StreamReader StandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.StandardError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardError As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::StreamReader ^ StandardError { System::IO::StreamReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardError : System.IO.StreamReader" Usage="System.Diagnostics.Process.StandardError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Standard error stream of the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1116">Gets a stream used to read the error output of the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1116">Gets a stream used to read the error output of the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1117">
            <see cref="T:System.IO.StreamReader" />，可用來讀取應用程式的標準錯誤資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1117">A <see cref="T:System.IO.StreamReader" /> that can be used to read the standard error stream of the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1118">當<xref:System.Diagnostics.Process>將文字寫入至其標準錯誤資料流中，文字通常會顯示在主控台上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1118">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is normally displayed on the console.</span></span> <span data-ttu-id="f1d7e-1119">藉由重新導向<xref:System.Diagnostics.Process.StandardError%2A>資料流，您可以操作或隱藏的錯誤輸出的處理程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1119">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="f1d7e-1120">例如，您可以篩選文字、 格式，或將輸出寫入到主控台和指定的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1120">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1121">若要使用<xref:System.Diagnostics.Process.StandardError%2A>，您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType>要`false`，而且您必須將<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A?displayProperty=nameWithType>到`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1121">To use <xref:System.Diagnostics.Process.StandardError%2A>, you must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType> to `false`, and you must set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A?displayProperty=nameWithType> to `true`.</span></span> <span data-ttu-id="f1d7e-1122">否則，讀取<xref:System.Diagnostics.Process.StandardError%2A>資料流則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1122">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="f1d7e-1123">重新導向<xref:System.Diagnostics.Process.StandardError%2A>可以讀取資料流，同步或非同步。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1123">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="f1d7e-1124">這類方法<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，和<xref:System.IO.StreamReader.ReadToEnd%2A>執行程序的錯誤輸出資料流同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1124">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="f1d7e-1125">這些同步讀取作業未完成直到相關聯<xref:System.Diagnostics.Process>寫入其<xref:System.Diagnostics.Process.StandardError%2A>串流處理，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1125">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="f1d7e-1126">相反地，<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>開始非同步讀取作業上<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1126">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="f1d7e-1127">這個方法可讓資料流輸出指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出會導向至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1127">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
 <span data-ttu-id="f1d7e-1128">同步讀取作業採用之間讀取呼叫端相依性<xref:System.Diagnostics.Process.StandardError%2A>資料流和子處理該資料流寫入。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1128">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="f1d7e-1129">這些相依性可能會導致死結狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1129">These dependencies can result in deadlock conditions.</span></span> <span data-ttu-id="f1d7e-1130">呼叫端會從子處理序的重新導向資料流讀取，時，取決於子系。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1130">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="f1d7e-1131">呼叫者會等候讀取作業，直到寫入資料流中的子系，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1131">The caller waits on the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="f1d7e-1132">子處理序寫入資料不足，無法填滿其重新導向的資料流，時，相依於父代。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1132">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="f1d7e-1133">子處理序會等候下一個寫入作業，直到父從完整的資料流讀取，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1133">The child process waits on the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="f1d7e-1134">當呼叫端和子處理序等待彼此完成作業時，且無法繼續時，就會導致死結狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1134">The deadlock condition results when the caller and child process wait on each other to complete an operation, and neither can proceed.</span></span> <span data-ttu-id="f1d7e-1135">您可以評估子處理序與呼叫端之間的相依性，以避免死結。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1135">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="f1d7e-1136">例如，下列 C# 程式碼會示範如何讀取重新導向資料流，並等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1136">The following C# code, for example, shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
// Start the child process.  
 Process p = new Process();  
 // Redirect the error stream of the child process.  
 p.StartInfo.UseShellExecute = false;  
 p.StartInfo.RedirectStandardError = true;  
 p.StartInfo.FileName = "Write500Lines.exe";  
 p.Start();  
 // Do not wait for the child process to exit before  
 // reading to the end of its redirected error stream.  
 // p.WaitForExit();  
 // Read the error stream first and then wait.  
 string error = p.StandardError.ReadToEnd();  
 p.WaitForExit();  
```  
  
 <span data-ttu-id="f1d7e-1137">藉由呼叫程式碼範例可避免的鎖死的情況`p.StandardError.ReadToEnd`之前`p.WaitForExit`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1137">The code example avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="f1d7e-1138">如果父系處理程序的呼叫，死結狀況可能會造成`p.WaitForExit`之前`p.StandardError.ReadToEnd`和子處理序寫入足夠的文字，以填滿的重新導向的資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1138">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="f1d7e-1139">父處理序會無限期等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1139">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="f1d7e-1140">子處理序會無限期地等候從完整讀取的父代<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1140">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-1141">當您從標準輸出和標準錯誤資料流讀取所有文字時，沒有類似的問題。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1141">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="f1d7e-1142">下列 C# 程式碼，例如，會執行兩個資料流上的讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1142">The following C# code, for example, performs a read operation on both streams.</span></span>  
  
```csharp  
// Do not perform a synchronous read to the end of both   
// redirected streams.  
// string output = p.StandardOutput.ReadToEnd();  
// string error = p.StandardError.ReadToEnd();  
// p.WaitForExit();  
// Use asynchronous read operations on at least one of the streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="f1d7e-1143">在程式碼範例執行非同步讀取作業，在避免發生死結狀況<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1143">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-1144">如果父系處理程序的呼叫會產生鎖死的情況`p.StandardOutput.ReadToEnd`後面接著`p.StandardError.ReadToEnd`和子處理序寫入足夠的文字，以填滿其錯誤資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1144">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="f1d7e-1145">父處理序會無限期地等候子處理序關閉其<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1145">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-1146">子處理序會無限期地等候從完整讀取的父代<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1146">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-1147">您可以使用非同步讀取的作業，以避免這些相依性，以及其潛在的死結。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1147">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="f1d7e-1148">或者，您可以藉由建立兩個執行緒，並讀取每個個別的執行緒上的資料流的輸出，避免發生死結狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1148">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1149">您不能混用重新導向的資料流的非同步和同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1149">You cannot mix asynchronous and synchronous read operations on a redirected stream.</span></span> <span data-ttu-id="f1d7e-1150">一次重新導向資料流的<xref:System.Diagnostics.Process>開啟在非同步或同步模式中，所有進一步的讀取該資料流的作業必須是相同的模式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1150">Once the redirected stream of a <xref:System.Diagnostics.Process> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</span></span> <span data-ttu-id="f1d7e-1151">例如，請勿遵循<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>藉由呼叫<xref:System.IO.StreamReader.ReadLine%2A>上<xref:System.Diagnostics.Process.StandardError%2A>資料流，或反之亦然。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1151">For example, do not follow <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> with a call to <xref:System.IO.StreamReader.ReadLine%2A> on the <xref:System.Diagnostics.Process.StandardError%2A> stream, or vice versa.</span></span> <span data-ttu-id="f1d7e-1152">不過，您可以讀取在不同模式中的兩個不同資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1152">However, you can read two different streams in different modes.</span></span> <span data-ttu-id="f1d7e-1153">例如，您可以呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>，然後呼叫<xref:System.IO.StreamReader.ReadLine%2A>如<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1153">For example, you can call <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> and then call <xref:System.IO.StreamReader.ReadLine%2A> for the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1154">下列範例會使用`net use`命令搭配使用者提供的引數，以對應的網路資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1154">The following example uses the `net use` command together with a user supplied argument to map a network resource.</span></span> <span data-ttu-id="f1d7e-1155">然後讀取，net 命令標準錯誤資料流，並寫入至主控台。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1155">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1156">The <see cref="P:System.Diagnostics.Process.StandardError" /> stream has not been defined for redirection; ensure <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> is set to <see langword="true" /> and <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1156">The <see cref="P:System.Diagnostics.Process.StandardError" /> stream has not been defined for redirection; ensure <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> is set to <see langword="true" /> and <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is set to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1157">\- or -  The <see cref="P:System.Diagnostics.Process.StandardError" /> stream has been opened for asynchronous read operations with <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1157">\- or -  The <see cref="P:System.Diagnostics.Process.StandardError" /> stream has been opened for asynchronous read operations with <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1158">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1158">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1159">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1159">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="StandardInput">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter StandardInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.StreamWriter StandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.StandardInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardInput As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::StreamWriter ^ StandardInput { System::IO::StreamWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardInput : System.IO.StreamWriter" Usage="System.Diagnostics.Process.StandardInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Standard input stream of the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1160">Gets a stream used to write the input of the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1160">Gets a stream used to write the input of the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1161">
            <see cref="T:System.IO.StreamWriter" />，可用來寫入應用程式的標準輸入資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1161">A <see cref="T:System.IO.StreamWriter" /> that can be used to write the standard input stream of the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1162">A<xref:System.Diagnostics.Process>可以讀取其標準輸入資料流，一般是鍵盤輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1162">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="f1d7e-1163">藉由重新導向<xref:System.Diagnostics.Process.StandardInput%2A>資料流，您可以透過程式設計方式指定輸入。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1163">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input.</span></span> <span data-ttu-id="f1d7e-1164">比方說，而不是使用鍵盤輸入，您可以提供從指定的檔案內容的文字或另一個應用程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1164">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1165">若要使用<xref:System.Diagnostics.Process.StandardInput%2A>，您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType>要`false`，而且您必須將<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A?displayProperty=nameWithType>到`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1165">To use <xref:System.Diagnostics.Process.StandardInput%2A>, you must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType> to `false`, and you must set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A?displayProperty=nameWithType> to `true`.</span></span> <span data-ttu-id="f1d7e-1166">否則，寫入<xref:System.Diagnostics.Process.StandardInput%2A>資料流則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1166">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1167">下列範例說明如何將重新導向<xref:System.Diagnostics.Process.StandardInput%2A>程序的資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1167">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="f1d7e-1168">此範例會啟動`sort`命令搭配重新導向的輸入。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1168">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="f1d7e-1169">接著會提示使用者輸入文字，並將其傳遞至`sort`處理序，透過重新導向<xref:System.Diagnostics.Process.StandardInput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1169">It then prompts the user for text, and passes that to the `sort` process by means of the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="f1d7e-1170">`sort`結果會顯示在主控台上的使用者。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1170">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1171">The <see cref="P:System.Diagnostics.Process.StandardInput" /> stream has not been defined because <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1171">The <see cref="P:System.Diagnostics.Process.StandardInput" /> stream has not been defined because <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> is set to <see langword="false" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1172">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1172">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1173">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1173">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="StandardOutput">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader StandardOutput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.StreamReader StandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.StandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardOutput As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::StreamReader ^ StandardOutput { System::IO::StreamReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutput : System.IO.StreamReader" Usage="System.Diagnostics.Process.StandardOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Standard output stream of the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1174">Gets a stream used to read the textual output of the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1174">Gets a stream used to read the textual output of the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1175">
            <see cref="T:System.IO.StreamReader" />，可用來讀取應用程式的標準輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1175">A <see cref="T:System.IO.StreamReader" /> that can be used to read the standard output stream of the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1176">當<xref:System.Diagnostics.Process>將文字寫入至其標準的資料流，文字通常會顯示在主控台上。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1176">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is normally displayed on the console.</span></span> <span data-ttu-id="f1d7e-1177">藉由重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，您可以操作或隱藏程序的輸出。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1177">By redirecting the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="f1d7e-1178">例如，您可以篩選文字、 格式，或將輸出寫入到主控台和指定的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1178">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1179">若要使用<xref:System.Diagnostics.Process.StandardOutput%2A>，您必須設定<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType>要`false`，而且您必須將<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A?displayProperty=nameWithType>到`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1179">To use <xref:System.Diagnostics.Process.StandardOutput%2A>, you must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType> to `false`, and you must set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A?displayProperty=nameWithType> to `true`.</span></span> <span data-ttu-id="f1d7e-1180">否則，讀取<xref:System.Diagnostics.Process.StandardOutput%2A>資料流則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1180">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="f1d7e-1181">重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>可以讀取資料流，同步或非同步。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1181">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="f1d7e-1182">這類方法<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，和<xref:System.IO.StreamReader.ReadToEnd%2A>執行程序的輸出資料流同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1182">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="f1d7e-1183">這些同步讀取作業未完成直到相關聯<xref:System.Diagnostics.Process>寫入其<xref:System.Diagnostics.Process.StandardOutput%2A>串流處理，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1183">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="f1d7e-1184">相反地，<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>開始非同步讀取作業上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1184">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-1185">這個方法可讓資料流輸出指定的事件處理常式，並立即傳回給呼叫者，可以執行其他工作，而資料流輸出會導向至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1185">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
 <span data-ttu-id="f1d7e-1186">同步讀取作業採用之間讀取呼叫端相依性<xref:System.Diagnostics.Process.StandardOutput%2A>資料流和子處理該資料流寫入。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1186">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="f1d7e-1187">這些相依性可能會導致死結狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1187">These dependencies can result in deadlock conditions.</span></span> <span data-ttu-id="f1d7e-1188">呼叫端會從子處理序的重新導向資料流讀取，時，取決於子系。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1188">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="f1d7e-1189">呼叫者會等候讀取作業，直到寫入資料流中的子系，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1189">The caller waits on the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="f1d7e-1190">子處理序寫入資料不足，無法填滿其重新導向的資料流，時，相依於父代。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1190">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="f1d7e-1191">子處理序會等候下一個寫入作業，直到父從完整的資料流讀取，或關閉資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1191">The child process waits on the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="f1d7e-1192">當呼叫端和子處理序等待彼此完成作業時，且無法繼續時，就會導致死結狀態。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1192">The deadlock condition results when the caller and child process wait on each other to complete an operation, and neither can proceed.</span></span> <span data-ttu-id="f1d7e-1193">您可以評估子處理序與呼叫端之間的相依性，以避免死結。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1193">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="f1d7e-1194">例如，下列 C# 程式碼會示範如何讀取重新導向資料流，並等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1194">The following C# code, for example, shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
Process p = new Process();  
p.StartInfo.UseShellExecute = false;  
p.StartInfo.RedirectStandardOutput = true;  
p.StartInfo.FileName = "Write500Lines.exe";  
p.Start();  
  
// To avoid deadlocks, always read the output stream first and then wait.  
string output = p.StandardOutput.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="f1d7e-1195">藉由呼叫程式碼範例可避免的鎖死的情況`p.StandardOutput.ReadToEnd`之前`p.WaitForExit`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1195">The code example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="f1d7e-1196">如果父系處理程序的呼叫，死結狀況可能會造成`p.WaitForExit`之前`p.StandardOutput.ReadToEnd`和子處理序寫入足夠的文字，以填滿的重新導向的資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1196">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="f1d7e-1197">父處理序會無限期等候子處理序結束。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1197">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="f1d7e-1198">子處理序會無限期地等候從完整讀取的父代<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1198">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-1199">當您從標準輸出和標準錯誤資料流讀取所有文字時，沒有類似的問題。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1199">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="f1d7e-1200">下列 C# 程式碼，例如，會執行兩個資料流上的讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1200">The following C# code, for example, performs a read operation on both streams.</span></span>  
  
```csharp  
// To avoid deadlocks, use asynchronous read operations on at least one of the streams.  
// Do not perform a synchronous read to the end of both redirected streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="f1d7e-1201">在程式碼範例執行非同步讀取作業，在避免發生死結狀況<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1201">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-1202">如果父系處理程序的呼叫會產生鎖死的情況`p.StandardOutput.ReadToEnd`後面接著`p.StandardError.ReadToEnd`和子處理序寫入足夠的文字，以填滿其錯誤資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1202">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="f1d7e-1203">父處理序會無限期地等候子處理序關閉其<xref:System.Diagnostics.Process.StandardOutput%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1203">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f1d7e-1204">子處理序會無限期地等候從完整讀取的父代<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1204">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f1d7e-1205">您可以使用非同步讀取的作業，以避免這些相依性，以及其潛在的死結。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1205">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="f1d7e-1206">或者，您可以藉由建立兩個執行緒，並讀取每個個別的執行緒上的資料流的輸出，避免發生死結狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1206">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1207">您不能混用重新導向的資料流的非同步和同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1207">You cannot mix asynchronous and synchronous read operations on a redirected stream.</span></span> <span data-ttu-id="f1d7e-1208">一次重新導向資料流的<xref:System.Diagnostics.Process>開啟在非同步或同步模式中，所有進一步的讀取該資料流的作業必須是相同的模式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1208">Once the redirected stream of a <xref:System.Diagnostics.Process> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</span></span> <span data-ttu-id="f1d7e-1209">例如，請勿遵循<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>藉由呼叫<xref:System.IO.StreamReader.ReadLine%2A>上<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，或反之亦然。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1209">For example, do not follow <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> with a call to <xref:System.IO.StreamReader.ReadLine%2A> on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or vice versa.</span></span> <span data-ttu-id="f1d7e-1210">不過，您可以讀取在不同模式中的兩個不同資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1210">However, you can read two different streams in different modes.</span></span> <span data-ttu-id="f1d7e-1211">例如，您可以呼叫<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>，然後呼叫<xref:System.IO.StreamReader.ReadLine%2A>如<xref:System.Diagnostics.Process.StandardError%2A>資料流。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1211">For example, you can call <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> and then call <xref:System.IO.StreamReader.ReadLine%2A> for the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1212">下列範例執行 ipconfig.exe 命令，並將其標準輸出重新導向至範例的 [主控台] 視窗。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1212">The following example runs the ipconfig.exe command and redirects its standard output to the example’s console window.</span></span>  
  
 [!code-cpp[Process_StandardOutput#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardOutput/CPP/process_standardoutput.cpp#2)]
 [!code-csharp[Process_StandardOutput#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardOutput/CS/process_standardoutput.cs#2)]
 [!code-vb[Process_StandardOutput#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardOutput/VB/process_standardoutput.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1213">The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream has not been defined for redirection; ensure <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> is set to <see langword="true" /> and <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1213">The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream has not been defined for redirection; ensure <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> is set to <see langword="true" /> and <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is set to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1214">\- or -  The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream has been opened for asynchronous read operations with <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1214">\- or -  The <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream has been opened for asynchronous read operations with <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1215">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1215">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1216">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1216">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1217">Starts a process resource and associates it with a <see cref="T:System.Diagnostics.Process" /> component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1217">Starts a process resource and associates it with a <see cref="T:System.Diagnostics.Process" /> component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public bool Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Start" />
      <MemberSignature Language="VB.NET" Value="Public Function Start () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; bool" Usage="process.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1218">Starts (or reuses) the process resource that is specified by the <see cref="P:System.Diagnostics.Process.StartInfo" /> property of this <see cref="T:System.Diagnostics.Process" /> component and associates it with the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1218">Starts (or reuses) the process resource that is specified by the <see cref="P:System.Diagnostics.Process.StartInfo" /> property of this <see cref="T:System.Diagnostics.Process" /> component and associates it with the component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1219">
            <see langword="true" /> if a process resource is started; <see langword="false" /> if no new process resource is started (for example, if an existing process is reused).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1219">
              <see langword="true" /> if a process resource is started; <see langword="false" /> if no new process resource is started (for example, if an existing process is reused).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1220">使用此多載來啟動處理序資源，並將它與目前的關聯<xref:System.Diagnostics.Process>元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1220">Use this overload to start a process resource and associate it with the current <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="f1d7e-1221">傳回值`true`指出已啟動新的處理序資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1221">The return value `true` indicates that a new process resource was started.</span></span> <span data-ttu-id="f1d7e-1222">如果所指定的處理序資源<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>隸屬<xref:System.Diagnostics.Process.StartInfo%2A>屬性已在電腦上執行，沒有啟動任何額外的處理序資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1222">If the process resource specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> member of the <xref:System.Diagnostics.Process.StartInfo%2A> property is already running on the computer, no additional process resource is started.</span></span> <span data-ttu-id="f1d7e-1223">相反地，執行處理序資源會重複使用和`false`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1223">Instead, the running process resource is reused and `false` is returned.</span></span>  
  
 <span data-ttu-id="f1d7e-1224">您可以藉由指定從中您原先安裝應用程式的位置 （例如，Web 位址） 來啟動 ClickOnce 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1224">You can start a ClickOnce application by specifying the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="f1d7e-1225">藉由指定已安裝硬碟機上，不要啟動 ClickOnce 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1225">Do not start a ClickOnce application by specifying its installed location on your hard drive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1226">如果您使用 Visual Studio 中的這個多載<xref:System.Diagnostics.Process.Start%2A>方法就是拖曳後，您將您的程式碼插入<xref:System.Diagnostics.Process>元件拖曳至設計工具。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1226">If you are using Visual Studio, this overload of the <xref:System.Diagnostics.Process.Start%2A> method is the one that you insert into your code after you drag a <xref:System.Diagnostics.Process> component onto the designer.</span></span> <span data-ttu-id="f1d7e-1227">使用`Properties`視窗中，展開`StartInfo`類別目錄和寫入至適當的值`FileName`屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1227">Use the `Properties` window to expand the `StartInfo` category and write the appropriate value into the `FileName` property.</span></span> <span data-ttu-id="f1d7e-1228">您的變更會出現在表單的`InitializeComponent`程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1228">Your changes will appear in the form's `InitializeComponent` procedure.</span></span>  
  
 <span data-ttu-id="f1d7e-1229">這個多載<xref:System.Diagnostics.Process.Start%2A>不是`static`方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1229">This overload of <xref:System.Diagnostics.Process.Start%2A> is not a `static` method.</span></span> <span data-ttu-id="f1d7e-1230">您必須呼叫它的執行個體從<xref:System.Diagnostics.Process>類別。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1230">You must call it from an instance of the <xref:System.Diagnostics.Process> class.</span></span> <span data-ttu-id="f1d7e-1231">然後再呼叫<xref:System.Diagnostics.Process.Start%2A>，您必須先指定<xref:System.Diagnostics.Process.StartInfo%2A>屬性資訊<xref:System.Diagnostics.Process>執行個體，因為該資訊來判斷啟動的處理序資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1231">Before calling <xref:System.Diagnostics.Process.Start%2A>, you must first specify <xref:System.Diagnostics.Process.StartInfo%2A> property information for this <xref:System.Diagnostics.Process> instance, because that information is used to determine the process resource to start.</span></span>  
  
 <span data-ttu-id="f1d7e-1232">其他多載<xref:System.Diagnostics.Process.Start%2A>方法會`static`成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1232">The other overloads of the <xref:System.Diagnostics.Process.Start%2A> method are `static` members.</span></span> <span data-ttu-id="f1d7e-1233">您不需要建立的執行個體<xref:System.Diagnostics.Process>元件才能呼叫方法的多載。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1233">You do not need to create an instance of the <xref:System.Diagnostics.Process> component before you call those overloads of the method.</span></span> <span data-ttu-id="f1d7e-1234">相反地，您可以呼叫<xref:System.Diagnostics.Process.Start%2A>for<xref:System.Diagnostics.Process>類別本身，以及新<xref:System.Diagnostics.Process>如果處理序已啟動，則會建立元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1234">Instead, you can call <xref:System.Diagnostics.Process.Start%2A> for the <xref:System.Diagnostics.Process> class itself, and a new <xref:System.Diagnostics.Process> component is created if the process was started.</span></span> <span data-ttu-id="f1d7e-1235">或者，`null`會傳回處理程序已重複使用。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1235">Or, `null` is returned if a process was reused.</span></span> <span data-ttu-id="f1d7e-1236">處理序資源會自動與新的關聯<xref:System.Diagnostics.Process>所傳回的元件<xref:System.Diagnostics.Process.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1236">The process resource is automatically associated with the new <xref:System.Diagnostics.Process> component that is returned by the <xref:System.Diagnostics.Process.Start%2A> method.</span></span>  
  
 <span data-ttu-id="f1d7e-1237"><xref:System.Diagnostics.Process.StartInfo%2A>成員可以用來複製的功能`Run`對話方塊中的 Windows`Start`功能表。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1237">The <xref:System.Diagnostics.Process.StartInfo%2A> members can be used to duplicate the functionality of the `Run` dialog box of the Windows `Start` menu.</span></span> <span data-ttu-id="f1d7e-1238">任何可以輸入命令列的項目可以啟動程式中設定適當的值<xref:System.Diagnostics.Process.StartInfo%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1238">Anything that can be typed into a command line can be started by setting the appropriate values in the <xref:System.Diagnostics.Process.StartInfo%2A> property.</span></span> <span data-ttu-id="f1d7e-1239">唯一<xref:System.Diagnostics.Process.StartInfo%2A>必須設定的屬性是<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1239">The only <xref:System.Diagnostics.Process.StartInfo%2A> property that must be set is the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f1d7e-1240"><xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性沒有可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1240">The <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property does not have to be an executable file.</span></span> <span data-ttu-id="f1d7e-1241">它可以是任何的延伸模組已安裝在系統的應用程式相關聯的檔案類型。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1241">It can be of any file type for which the extension has been associated with an application that is installed on the system.</span></span> <span data-ttu-id="f1d7e-1242">比方說，<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性可以有副檔名為.txt，如果您的文字檔案關聯的編輯器，例如 [記事本]，或如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案，它可以有副檔名為.doc。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1242">For example, the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc extension if you have associated.doc files with a word processing tool, such as Microsoft Word.</span></span>  
  
 <span data-ttu-id="f1d7e-1243">在命令列中，您可以指定要用於特定類型的檔案所採取的動作。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1243">In the command line, you can specify actions to take for certain types of files.</span></span> <span data-ttu-id="f1d7e-1244">例如，您可以列印文件，或編輯文字檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1244">For example, you can print documents or edit text files.</span></span> <span data-ttu-id="f1d7e-1245">指定使用這些動作<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>隸屬<xref:System.Diagnostics.Process.StartInfo%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1245">Specify these actions using the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> member of the <xref:System.Diagnostics.Process.StartInfo%2A> property.</span></span> <span data-ttu-id="f1d7e-1246">對於其他類型的檔案中，您可以指定命令列引數時開始從檔案`Run` 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1246">For other types of files, you can specify command-line arguments when you start the file from the `Run` dialog box.</span></span> <span data-ttu-id="f1d7e-1247">比方說，您可以傳遞 URL 作為引數如果您指定做為您的瀏覽器<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1247">For example, you can pass a URL as an argument if you specify your browser as the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="f1d7e-1248">中可以指定這些引數<xref:System.Diagnostics.Process.StartInfo%2A>屬性的<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1248">These arguments can be specified in the <xref:System.Diagnostics.Process.StartInfo%2A> property's <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> member.</span></span>  
  
 <span data-ttu-id="f1d7e-1249">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到任何處理序時完整限定該路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1249">If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</span></span> <span data-ttu-id="f1d7e-1250">否則，系統將無法找到路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1250">Otherwise, the system will not find the path.</span></span> <span data-ttu-id="f1d7e-1251">例如，如果`c:\mypath`不在您的路徑，而且您新增使用引號： `path = %path%;"c:\mypath"`，您必須完整限定在任何處理序`c:\mypath`時啟動它。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1251">For example, if `c:\mypath` is not in your path, and you add it using quotation marks: `path = %path%;"c:\mypath"`, you must fully qualify any process in `c:\mypath` when starting it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1252">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行 ASP.NET Web 網頁和伺服器控制項的程式碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1252">ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</span></span>  <span data-ttu-id="f1d7e-1253">如果您使用<xref:System.Diagnostics.Process.Start%2A>ASP.NET 網頁或伺服器控制項中的方法，新的處理序 Web 伺服器上執行具有限制權限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1253">If you use the <xref:System.Diagnostics.Process.Start%2A> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</span></span> <span data-ttu-id="f1d7e-1254">處理程序不會啟動與用戶端瀏覽器中，相同的內容中，而且沒有存取權的使用者桌面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1254">The process does not start in the same context as the client browser, and does not have access to the user desktop.</span></span>  
  
 <span data-ttu-id="f1d7e-1255">每當您使用<xref:System.Diagnostics.Process.Start%2A>啟動處理序，您可能需要將它關閉，或可能會遺失的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1255">Whenever you use <xref:System.Diagnostics.Process.Start%2A> to start a process, you might need to close it or you risk losing system resources.</span></span> <span data-ttu-id="f1d7e-1256">關閉使用的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1256">Close processes using <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-1257">您可以檢查處理程序是否已經使用關閉其<xref:System.Diagnostics.Process.HasExited%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1257">You can check whether a process has already been closed by using its <xref:System.Diagnostics.Process.HasExited%2A> property.</span></span>  
  
 <span data-ttu-id="f1d7e-1258">這裡的附註中的 managed 執行緒的 apartment 狀態是必要的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1258">A note about apartment states in managed threads is necessary here.</span></span> <span data-ttu-id="f1d7e-1259">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`處理序元件<xref:System.Diagnostics.Process.StartInfo%2A>屬性，請確定您已在您的應用程式上設定執行緒模型，藉由將屬性`[STAThread]`上`main()`方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1259">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` on the process component's <xref:System.Diagnostics.Process.StartInfo%2A> property, make sure you have set a threading model on your application by setting the attribute `[STAThread]` on the `main()` method.</span></span> <span data-ttu-id="f1d7e-1260">Managed 的執行緒在可以的否則為`unknown`狀態，或放入`MTA`狀態，後者的 je v konfliktu<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>正在`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1260">Otherwise, a managed thread can be in an `unknown` state or put in the `MTA` state, the latter of which conflicts with <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> being `true`.</span></span> <span data-ttu-id="f1d7e-1261">某些方法需要的 apartment 狀態不是`unknown`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1261">Some methods require that the apartment state not be `unknown`.</span></span> <span data-ttu-id="f1d7e-1262">如果狀態未明確設定，當應用程式遇到這種方法，則預設為`MTA`，而且設定之後，apartment 狀態無法變更。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1262">If the state is not explicitly set, when the application encounters such a method, it defaults to `MTA`, and once set, the apartment state cannot be changed.</span></span> <span data-ttu-id="f1d7e-1263">不過，`MTA`造成作業系統殼層來管理執行緒時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1263">However, `MTA` causes an exception to be thrown when the operating system shell is managing the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1264">下列範例使用的執行個體<xref:System.Diagnostics.Process>類別來啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1264">The following example uses an instance of the <xref:System.Diagnostics.Process> class to start a process.</span></span>  
  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1265">No file name was specified in the <see cref="T:System.Diagnostics.Process" /> component's <see cref="P:System.Diagnostics.Process.StartInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1265">No file name was specified in the <see cref="T:System.Diagnostics.Process" /> component's <see cref="P:System.Diagnostics.Process.StartInfo" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1266">-or- The <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> member of the <see cref="P:System.Diagnostics.Process.StartInfo" /> property is <see langword="true" /> while <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />, or <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1266">-or- The <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> member of the <see cref="P:System.Diagnostics.Process.StartInfo" /> property is <see langword="true" /> while <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />, or <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1267">There was an error in opening the associated file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1267">There was an error in opening the associated file.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f1d7e-1268">The process object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1268">The process object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1269">Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1269">Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1270">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1270">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1271">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1271">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.StartInfo" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.FileName" />
        <altmember cref="T:System.Diagnostics.ProcessStartInfo" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process Start (System.Diagnostics.ProcessStartInfo startInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process Start(class System.Diagnostics.ProcessStartInfo startInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (startInfo As ProcessStartInfo) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ Start(System::Diagnostics::ProcessStartInfo ^ startInfo);" />
      <MemberSignature Language="F#" Value="static member Start : System.Diagnostics.ProcessStartInfo -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.Start startInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startInfo" Type="System.Diagnostics.ProcessStartInfo" />
      </Parameters>
      <Docs>
        <param name="startInfo">
          <span data-ttu-id="f1d7e-1272">The <see cref="T:System.Diagnostics.ProcessStartInfo" /> that contains the information that is used to start the process, including the file name and any command-line arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1272">The <see cref="T:System.Diagnostics.ProcessStartInfo" /> that contains the information that is used to start the process, including the file name and any command-line arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1273">Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1273">Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1274">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1274">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          </span>
          <span data-ttu-id="f1d7e-1275">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1275">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          </span>
          <span data-ttu-id="f1d7e-1276">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1276">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1277">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1277">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1278">使用此多載來啟動處理序資源，藉由指定<xref:System.Diagnostics.ProcessStartInfo>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1278">Use this overload to start a process resource by specifying a <xref:System.Diagnostics.ProcessStartInfo> instance.</span></span> <span data-ttu-id="f1d7e-1279">多載會將資源與新<xref:System.Diagnostics.Process>物件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1279">The overload associates the resource with a new <xref:System.Diagnostics.Process> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1280">如果要啟動可執行檔的位址 URL，此程序未啟動和`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1280">If the address of the executable file to start is a URL, the process is not started and `null` is returned.</span></span>  
  
 <span data-ttu-id="f1d7e-1281">這個多載可讓您不需要先建立一個新啟動的處理序<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1281">This overload lets you start a process without first creating a new <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1282">使用這個多載<xref:System.Diagnostics.ProcessStartInfo>參數是明確的步驟，建立新的替代<xref:System.Diagnostics.Process>執行個體，設定其<xref:System.Diagnostics.Process.StartInfo%2A>內容，然後呼叫<xref:System.Diagnostics.Process.Start%2A>如<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1282">Using this overload with a <xref:System.Diagnostics.ProcessStartInfo> parameter is an alternative to the explicit steps of creating a new <xref:System.Diagnostics.Process> instance, setting its <xref:System.Diagnostics.Process.StartInfo%2A> properties, and calling <xref:System.Diagnostics.Process.Start%2A> for the <xref:System.Diagnostics.Process> instance.</span></span>  
  
 <span data-ttu-id="f1d7e-1283">使用<xref:System.Diagnostics.ProcessStartInfo>執行個體如下參數可讓您呼叫<xref:System.Diagnostics.Process.Start%2A>控制最傳入啟動程序呼叫。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1283">Using a <xref:System.Diagnostics.ProcessStartInfo> instance as the parameter lets you call <xref:System.Diagnostics.Process.Start%2A> with the most control over what is passed into the call to start the process.</span></span> <span data-ttu-id="f1d7e-1284">如果您需要將只能在檔案名稱或檔案名稱和引數傳遞，不需要建立新<xref:System.Diagnostics.ProcessStartInfo>執行個體，雖然這是一個選項。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1284">If you need to pass only a file name or a file name and arguments, it is not necessary to create a new <xref:System.Diagnostics.ProcessStartInfo> instance, although that is an option.</span></span> <span data-ttu-id="f1d7e-1285">唯一<xref:System.Diagnostics.Process.StartInfo%2A?displayProperty=nameWithType>必須設定的屬性是<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1285">The only <xref:System.Diagnostics.Process.StartInfo%2A?displayProperty=nameWithType> property that must be set is the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f1d7e-1286"><xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性不需要代表可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1286">The <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property does not need to represent an executable file.</span></span> <span data-ttu-id="f1d7e-1287">它可以是任何的延伸模組已安裝在系統的應用程式相關聯的檔案類型。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1287">It can be of any file type for which the extension has been associated with an application that is installed on the system.</span></span> <span data-ttu-id="f1d7e-1288">比方說，<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性可以有副檔名為.txt，如果您的文字檔案關聯的編輯器，例如 [記事本]，或如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案，它可以有副檔名為.doc。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1288">For example, the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc extension if you have associated.doc files with a word processing tool, such as Microsoft Word.</span></span>  
  
 <span data-ttu-id="f1d7e-1289">您可以藉由指定從中您原先安裝應用程式的位置 （例如，Web 位址） 來啟動 ClickOnce 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1289">You can start a ClickOnce application by specifying the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="f1d7e-1290">藉由指定已安裝硬碟機上，不要啟動 ClickOnce 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1290">Do not start a ClickOnce application by specifying its installed location on your hard drive.</span></span>  
  
 <span data-ttu-id="f1d7e-1291">如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType>並<xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType>的屬性<xref:System.Diagnostics.Process.StartInfo%2A>執行個體設定，未受管理`CreateProcessWithLogonW`呼叫函式，這會啟動程序在新視窗即使<xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A?displayProperty=nameWithType>屬性值是`true`或<xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A?displayProperty=nameWithType>屬性值是<xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1291">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType> properties of the <xref:System.Diagnostics.Process.StartInfo%2A> instance are set, the unmanaged `CreateProcessWithLogonW` function is called, which starts the process in a new window even if the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A?displayProperty=nameWithType> property value is `true` or the <xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A?displayProperty=nameWithType> property value is <xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f1d7e-1292">如果<xref:System.Diagnostics.ProcessStartInfo.Domain%2A?displayProperty=nameWithType>屬性是`null`，則<xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType>屬性必須以 UPN 格式*使用者*@*DNS_domain_name*。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1292">If the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A?displayProperty=nameWithType> property is `null`, the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType> property must be in UPN format, *user*@*DNS_domain_name*.</span></span>   
  
 <span data-ttu-id="f1d7e-1293">不同於其他多載的多載<xref:System.Diagnostics.Process.Start%2A>不具有任何參數不是`static`成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1293">Unlike the other overloads, the overload of <xref:System.Diagnostics.Process.Start%2A> that has no parameters is not a `static` member.</span></span> <span data-ttu-id="f1d7e-1294">使用當您已建立多載<xref:System.Diagnostics.Process>執行個體，指定的開始資訊 （包括檔案名稱），而且想要啟動處理序資源，並將它與現有關聯<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1294">Use that overload when you have already created a <xref:System.Diagnostics.Process> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1295">使用其中一種`static`當您想要建立新的多載<xref:System.Diagnostics.Process>元件，而不是啟動現有元件的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1295">Use one of the `static` overloads when you want to create a new <xref:System.Diagnostics.Process> component rather than start a process for an existing component.</span></span> <span data-ttu-id="f1d7e-1296">這個多載並沒有參數的多載可讓您藉由使用指定的處理序資源的啟動資訊<xref:System.Diagnostics.ProcessStartInfo>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1296">Both this overload and the overload that has no parameters allow you to specify the start information for the process resource by using a <xref:System.Diagnostics.ProcessStartInfo> instance.</span></span>  
  
 <span data-ttu-id="f1d7e-1297">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到任何處理序時完整限定該路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1297">If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</span></span> <span data-ttu-id="f1d7e-1298">否則，系統將無法找到路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1298">Otherwise, the system will not find the path.</span></span> <span data-ttu-id="f1d7e-1299">例如，如果`c:\mypath`不在您的路徑，而且您新增使用引號： `path = %path%;"c:\mypath"`，您必須完整限定在任何處理序`c:\mypath`時啟動它。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1299">For example, if `c:\mypath` is not in your path, and you add it using quotation marks: `path = %path%;"c:\mypath"`, you must fully qualify any process in `c:\mypath` when starting it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1300">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行 ASP.NET Web 網頁和伺服器控制項的程式碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1300">ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</span></span>  <span data-ttu-id="f1d7e-1301">如果您使用<xref:System.Diagnostics.Process.Start%2A>ASP.NET 網頁或伺服器控制項中的方法，新的處理序 Web 伺服器上執行具有限制權限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1301">If you use the <xref:System.Diagnostics.Process.Start%2A> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</span></span> <span data-ttu-id="f1d7e-1302">處理程序不會啟動與用戶端瀏覽器中，相同的內容中，而且沒有存取權的使用者桌面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1302">The process does not start in the same context as the client browser, and does not have access to the user desktop.</span></span>  
  
 <span data-ttu-id="f1d7e-1303">每當您使用<xref:System.Diagnostics.Process.Start%2A>啟動處理序，您可能需要將它關閉，或可能會遺失的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1303">Whenever you use <xref:System.Diagnostics.Process.Start%2A> to start a process, you might need to close it or you risk losing system resources.</span></span> <span data-ttu-id="f1d7e-1304">關閉使用的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1304">Close processes using <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-1305">您可以檢查處理程序是否已經使用關閉其<xref:System.Diagnostics.Process.HasExited%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1305">You can check whether a process has already been closed by using its <xref:System.Diagnostics.Process.HasExited%2A> property.</span></span>  
  
 <span data-ttu-id="f1d7e-1306">這裡的附註中的 managed 執行緒的 apartment 狀態是必要的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1306">A note about apartment states in managed threads is necessary here.</span></span> <span data-ttu-id="f1d7e-1307">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>已`true`上`startInfo`參數，請確定您已在您的應用程式上設定執行緒模型，藉由將屬性`[STAThread]`上`main()`方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1307">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` on the `startInfo` parameter, make sure you have set a threading model on your application by setting the attribute `[STAThread]` on the `main()` method.</span></span> <span data-ttu-id="f1d7e-1308">Managed 的執行緒在可以的否則為`unknown`狀態，或放入`MTA`狀態，後者的 je v konfliktu<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>正在`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1308">Otherwise, a managed thread can be in an `unknown` state or put in the `MTA` state, the latter of which conflicts with <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> being `true`.</span></span> <span data-ttu-id="f1d7e-1309">某些方法需要的 apartment 狀態不是`unknown`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1309">Some methods require that the apartment state not be `unknown`.</span></span> <span data-ttu-id="f1d7e-1310">如果狀態未明確設定，當應用程式遇到這種方法，則預設為`MTA`，而且設定之後，apartment 狀態無法變更。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1310">If the state is not explicitly set, when the application encounters such a method, it defaults to `MTA`, and once set, the apartment state cannot be changed.</span></span> <span data-ttu-id="f1d7e-1311">不過，`MTA`造成作業系統殼層來管理執行緒時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1311">However, `MTA` causes an exception to be thrown when the operating system shell is managing the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1312">下列範例首先會繁衍的 Internet Explorer 執行個體，並會顯示在瀏覽器中的 [我的最愛] 資料夾的內容。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1312">The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</span></span> <span data-ttu-id="f1d7e-1313">然後會啟動 Internet Explorer 的某些其他執行個體，並會顯示一些特定的網頁或網站。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1313">It then starts some other instances of Internet Explorer and displays some specific pages or sites.</span></span> <span data-ttu-id="f1d7e-1314">最後它會啟動 Internet Explorer 與正在同時瀏覽至特定站台的最小化視窗。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1314">Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</span></span>  
  
 <span data-ttu-id="f1d7e-1315">這個方法的其他用途的其他範例，請參閱個別屬性的<xref:System.Diagnostics.ProcessStartInfo>類別。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1315">For additional examples of other uses of this method, refer to the individual properties of the <xref:System.Diagnostics.ProcessStartInfo> class.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1316">No file name was specified in the <paramref name="startInfo" /> parameter's <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1316">No file name was specified in the <paramref name="startInfo" /> parameter's <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
          <span data-ttu-id="f1d7e-1317">-or-  The <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property of the <paramref name="startInfo" /> parameter is <see langword="true" /> and the <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />, or <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> property is also <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1317">-or-  The <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property of the <paramref name="startInfo" /> parameter is <see langword="true" /> and the <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />, or <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> property is also <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1318">-or-  The <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property of the <paramref name="startInfo" /> parameter is <see langword="true" /> and the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property is not <see langword="null" /> or empty or the <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> property is not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1318">-or-  The <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property of the <paramref name="startInfo" /> parameter is <see langword="true" /> and the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property is not <see langword="null" /> or empty or the <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> property is not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1d7e-1319">The <paramref name="startInfo" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1319">The <paramref name="startInfo" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f1d7e-1320">The process object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1320">The process object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f1d7e-1321">The file specified in the <paramref name="startInfo" /> parameter's <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1321">The file specified in the <paramref name="startInfo" /> parameter's <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1322">An error occurred when opening the associated file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1322">An error occurred when opening the associated file.</span>
          </span>
          <span data-ttu-id="f1d7e-1323">-or-  The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1323">-or-  The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</span>
          </span>
          <span data-ttu-id="f1d7e-1324">The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1324">The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</span>
          </span>
          <span data-ttu-id="f1d7e-1325">or "Access is denied."</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1325">or "Access is denied."</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1326">Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1326">Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1327">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1327">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1328">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1328">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.StartInfo" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.FileName" />
        <altmember cref="T:System.Diagnostics.ProcessStartInfo" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process Start (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process Start(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (fileName As String) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ Start(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.Start fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f1d7e-1329">The name of a document or application file to run in the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1329">The name of a document or application file to run in the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1330">Starts a process resource by specifying the name of a document or application file and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1330">Starts a process resource by specifying the name of a document or application file and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1331">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1331">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          </span>
          <span data-ttu-id="f1d7e-1332">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1332">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          </span>
          <span data-ttu-id="f1d7e-1333">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1333">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1334">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1334">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1335">使用這個多載來啟動處理序資源指定檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1335">Use this overload to start a process resource by specifying its file name.</span></span> <span data-ttu-id="f1d7e-1336">多載會將資源與新<xref:System.Diagnostics.Process>物件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1336">The overload associates the resource with a new <xref:System.Diagnostics.Process> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1337">如果要啟動可執行檔的位址 URL，此程序未啟動和`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1337">If the address of the executable file to start is a URL, the process is not started and `null` is returned.</span></span>  
  
 <span data-ttu-id="f1d7e-1338">這個多載可讓您不需要先建立一個新啟動的處理序<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1338">This overload lets you start a process without first creating a new <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1339">多載是明確的步驟，建立新的替代<xref:System.Diagnostics.Process>執行個體，設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>隸屬<xref:System.Diagnostics.Process.StartInfo%2A>屬性，然後呼叫<xref:System.Diagnostics.Process.Start%2A>如<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1339">The overload is an alternative to the explicit steps of creating a new <xref:System.Diagnostics.Process> instance, setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> member of the <xref:System.Diagnostics.Process.StartInfo%2A> property, and calling <xref:System.Diagnostics.Process.Start%2A> for the <xref:System.Diagnostics.Process> instance.</span></span>  
  
 <span data-ttu-id="f1d7e-1340">您可以啟動 ClickOnce 應用程式設定`fileName`參數，以在原本安裝的應用程式的位置 （例如，Web 位址）。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1340">You can start a ClickOnce application by setting the `fileName` parameter to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="f1d7e-1341">藉由指定已安裝硬碟機上，不要啟動 ClickOnce 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1341">Do not start a ClickOnce application by specifying its installed location on your hard drive.</span></span>  
  
 <span data-ttu-id="f1d7e-1342">藉由指定其檔案名稱啟動處理序是類似於輸入中的資訊`Run`對話方塊中的 Windows`Start`功能表。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1342">Starting a process by specifying its file name is similar to typing the information in the `Run` dialog box of the Windows `Start` menu.</span></span> <span data-ttu-id="f1d7e-1343">因此，檔案名稱不需要代表可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1343">Therefore, the file name does not need to represent an executable file.</span></span> <span data-ttu-id="f1d7e-1344">它可以是任何的副檔名已經相關聯的系統上安裝的應用程式的檔案類型。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1344">It can be of any file type for which the extension has been associated with an application installed on the system.</span></span> <span data-ttu-id="f1d7e-1345">比方說如果文字檔聯編輯器，例如 [記事本]，或如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案，它可以有.doc 的檔案名稱可以有副檔名為.txt。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1345">For example the file name can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</span></span> <span data-ttu-id="f1d7e-1346">同樣地，在相同方式來`Run` 對話方塊中可接受包含或不含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的`fileName`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1346">Similarly, in the same way that the `Run` dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the `fileName` parameter.</span></span> <span data-ttu-id="f1d7e-1347">例如，您可以設定`fileName`"Notepad.exe"或"Notepad"的參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1347">For example, you can set the `fileName` parameter to either "Notepad.exe" or "Notepad".</span></span>  
  
 <span data-ttu-id="f1d7e-1348">這個多載不允許處理序的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1348">This overload does not allow command-line arguments for the process.</span></span> <span data-ttu-id="f1d7e-1349">如果您需要指定處理序的一或多個命令列引數，使用<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>或<xref:System.Diagnostics.Process.Start%28System.String%2CSystem.String%29?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1349">If you need to specify one or more command-line arguments for the process, use the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> or <xref:System.Diagnostics.Process.Start%28System.String%2CSystem.String%29?displayProperty=nameWithType> overloads.</span></span>  
  
 <span data-ttu-id="f1d7e-1350">不同於其他多載的多載<xref:System.Diagnostics.Process.Start%2A>不具有任何參數不是`static`成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1350">Unlike the other overloads, the overload of <xref:System.Diagnostics.Process.Start%2A> that has no parameters is not a `static` member.</span></span> <span data-ttu-id="f1d7e-1351">使用當您已建立多載<xref:System.Diagnostics.Process>執行個體，指定的開始資訊 （包括檔案名稱），而且想要啟動處理序資源，並將它與現有關聯<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1351">Use that overload when you have already created a <xref:System.Diagnostics.Process> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1352">使用其中一種`static`當您想要建立新的多載<xref:System.Diagnostics.Process>元件，而不是啟動現有元件的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1352">Use one of the `static` overloads when you want to create a new <xref:System.Diagnostics.Process> component rather than start a process for an existing component.</span></span> <span data-ttu-id="f1d7e-1353">這個多載並沒有參數的多載可讓您指定要啟動的處理序資源的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1353">Both this overload and the overload that has no parameters allow you to specify the file name of the process resource to start.</span></span>  
  
 <span data-ttu-id="f1d7e-1354">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到任何處理序時完整限定該路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1354">If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</span></span> <span data-ttu-id="f1d7e-1355">否則，系統將無法找到路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1355">Otherwise, the system will not find the path.</span></span> <span data-ttu-id="f1d7e-1356">例如，如果`c:\mypath`不在您的路徑，而且您新增使用引號： `path = %path%;"c:\mypath"`，您必須完整限定在任何處理序`c:\mypath`時啟動它。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1356">For example, if `c:\mypath` is not in your path, and you add it using quotation marks: `path = %path%;"c:\mypath"`, you must fully qualify any process in `c:\mypath` when starting it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1357">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行 ASP.NET Web 網頁和伺服器控制項的程式碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1357">ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</span></span>  <span data-ttu-id="f1d7e-1358">如果您使用<xref:System.Diagnostics.Process.Start%2A>ASP.NET 網頁或伺服器控制項中的方法，新的處理序 Web 伺服器上執行具有限制權限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1358">If you use the <xref:System.Diagnostics.Process.Start%2A> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</span></span> <span data-ttu-id="f1d7e-1359">處理程序不會啟動與用戶端瀏覽器中，相同的內容中，而且沒有存取權的使用者桌面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1359">The process does not start in the same context as the client browser, and does not have access to the user desktop.</span></span>  
  
 <span data-ttu-id="f1d7e-1360">每當您使用<xref:System.Diagnostics.Process.Start%2A>啟動處理序，您可能需要將它關閉，或可能會遺失的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1360">Whenever you use <xref:System.Diagnostics.Process.Start%2A> to start a process, you might need to close it or you risk losing system resources.</span></span> <span data-ttu-id="f1d7e-1361">關閉使用的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1361">Close processes using <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-1362">您可以檢查處理程序是否已經使用關閉其<xref:System.Diagnostics.Process.HasExited%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1362">You can check whether a process has already been closed by using its <xref:System.Diagnostics.Process.HasExited%2A> property.</span></span>  
  
 <span data-ttu-id="f1d7e-1363">這裡的附註中的 managed 執行緒的 apartment 狀態是必要的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1363">A note about apartment states in managed threads is necessary here.</span></span> <span data-ttu-id="f1d7e-1364">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`處理序元件<xref:System.Diagnostics.Process.StartInfo%2A>屬性，請確定您已在您的應用程式上設定執行緒模型，藉由將屬性`[STAThread]`上`main()`方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1364">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` on the process component's <xref:System.Diagnostics.Process.StartInfo%2A> property, make sure you have set a threading model on your application by setting the attribute `[STAThread]` on the `main()` method.</span></span> <span data-ttu-id="f1d7e-1365">Managed 的執行緒在可以的否則為`unknown`狀態，或放入`MTA`狀態，後者的 je v konfliktu<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>正在`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1365">Otherwise, a managed thread can be in an `unknown` state or put in the `MTA` state, the latter of which conflicts with <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> being `true`.</span></span> <span data-ttu-id="f1d7e-1366">某些方法需要的 apartment 狀態不是`unknown`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1366">Some methods require that the apartment state not be `unknown`.</span></span> <span data-ttu-id="f1d7e-1367">如果狀態未明確設定，當應用程式遇到這種方法，則預設為`MTA`，而且設定之後，apartment 狀態無法變更。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1367">If the state is not explicitly set, when the application encounters such a method, it defaults to `MTA`, and once set, the apartment state cannot be changed.</span></span> <span data-ttu-id="f1d7e-1368">不過，`MTA`造成作業系統殼層來管理執行緒時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1368">However, `MTA` causes an exception to be thrown when the operating system shell is managing the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1369">下列範例首先會繁衍的 Internet Explorer 執行個體，並會顯示在瀏覽器中的 [我的最愛] 資料夾的內容。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1369">The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</span></span> <span data-ttu-id="f1d7e-1370">然後會啟動 Internet Explorer 的某些其他執行個體，並會顯示一些特定的網頁或網站。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1370">It then starts some other instances of Internet Explorer and displays some specific pages or sites.</span></span> <span data-ttu-id="f1d7e-1371">最後它會啟動 Internet Explorer 與正在同時瀏覽至特定站台的最小化視窗。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1371">Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1372">An error occurred when opening the associated file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1372">An error occurred when opening the associated file.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f1d7e-1373">The process object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1373">The process object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f1d7e-1374">The PATH environment variable has a string containing quotes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1374">The PATH environment variable has a string containing quotes.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1375">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1375">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1376">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1376">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.FileName" />
        <altmember cref="P:System.Diagnostics.Process.StartInfo" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process Start (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process Start(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (fileName As String, arguments As String) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ Start(System::String ^ fileName, System::String ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.Start (fileName, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f1d7e-1377">The name of an application file to run in the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1377">The name of an application file to run in the process.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="f1d7e-1378">Command-line arguments to pass when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1378">Command-line arguments to pass when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1379">Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1379">Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1380">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1380">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          </span>
          <span data-ttu-id="f1d7e-1381">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1381">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          </span>
          <span data-ttu-id="f1d7e-1382">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1382">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1383">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1383">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1384">若要啟動處理序資源，藉由指定其檔案名稱和命令列引數中使用此多載。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1384">Use this overload to start a process resource by specifying its file name and command-line arguments.</span></span> <span data-ttu-id="f1d7e-1385">多載會將資源與新<xref:System.Diagnostics.Process>物件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1385">The overload associates the resource with a new <xref:System.Diagnostics.Process> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1386">如果要啟動可執行檔的位址 URL，此程序未啟動和`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1386">If the address of the executable file to start is a URL, the process is not started and `null` is returned.</span></span>  
  
 <span data-ttu-id="f1d7e-1387">這個多載可讓您不需要先建立一個新啟動的處理序<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1387">This overload lets you start a process without first creating a new <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1388">多載是明確的步驟，建立新的替代<xref:System.Diagnostics.Process>執行個體，設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>並<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>的成員<xref:System.Diagnostics.Process.StartInfo%2A>屬性，以及呼叫<xref:System.Diagnostics.Process.Start%2A>的<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1388">The overload is an alternative to the explicit steps of creating a new <xref:System.Diagnostics.Process> instance, setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> members of the <xref:System.Diagnostics.Process.StartInfo%2A> property, and calling <xref:System.Diagnostics.Process.Start%2A> for the <xref:System.Diagnostics.Process> instance.</span></span>  
  
 <span data-ttu-id="f1d7e-1389">藉由指定其檔案名稱和引數啟動程序是類似於輸入的檔案名稱和中的命令列引數`Run`對話方塊中的 Windows`Start`功能表。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1389">Starting a process by specifying its file name and arguments is similar to typing the file name and command-line arguments in the `Run` dialog box of the Windows `Start` menu.</span></span> <span data-ttu-id="f1d7e-1390">因此，檔案名稱不需要代表可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1390">Therefore, the file name does not need to represent an executable file.</span></span> <span data-ttu-id="f1d7e-1391">它可以是任何的副檔名已經相關聯的系統上安裝的應用程式的檔案類型。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1391">It can be of any file type for which the extension has been associated with an application installed on the system.</span></span> <span data-ttu-id="f1d7e-1392">比方說如果文字檔聯編輯器，例如 [記事本]，或如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案，它可以有.doc 的檔案名稱可以有副檔名為.txt。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1392">For example the file name can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</span></span> <span data-ttu-id="f1d7e-1393">同樣地，在相同方式來`Run` 對話方塊中可接受包含或不含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的`fileName`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1393">Similarly, in the same way that the `Run` dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the `fileName` parameter.</span></span> <span data-ttu-id="f1d7e-1394">例如，您可以設定`fileName`"Notepad.exe"或"Notepad"的參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1394">For example, you can set the `fileName` parameter to either "Notepad.exe" or "Notepad".</span></span> <span data-ttu-id="f1d7e-1395">如果`fileName`參數表示可執行檔`arguments`參數可能代表採取動作，例如文字檔案中的檔案`Notepad.exe myfile.txt`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1395">If the `fileName` parameter represents an executable file, the `arguments` parameter might represent a file to act upon, such as the text file in `Notepad.exe myfile.txt`.</span></span> <span data-ttu-id="f1d7e-1396">如果`fileName`參數代表命令 (.cmd) 檔`arguments`參數必須包含 「`/c`「 或 」`/k`"引數來指定是否在命令視窗結束或完成後仍會保持。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1396">If the `fileName` parameter represents a command (.cmd) file, the `arguments` parameter must include either a "`/c`" or "`/k`" argument to specify whether the command window exits or remains after completion.</span></span>  
  
 <span data-ttu-id="f1d7e-1397">不同於其他多載的多載<xref:System.Diagnostics.Process.Start%2A>不具有任何參數不是`static`成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1397">Unlike the other overloads, the overload of <xref:System.Diagnostics.Process.Start%2A> that has no parameters is not a `static` member.</span></span> <span data-ttu-id="f1d7e-1398">使用當您已建立多載<xref:System.Diagnostics.Process>執行個體，指定的開始資訊 （包括檔案名稱），而且想要啟動處理序資源，並將它與現有關聯<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1398">Use that overload when you have already created a <xref:System.Diagnostics.Process> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1399">使用其中一種`static`當您想要建立新的多載<xref:System.Diagnostics.Process>元件，而不是啟動現有元件的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1399">Use one of the `static` overloads when you want to create a new <xref:System.Diagnostics.Process> component rather than start a process for an existing component.</span></span> <span data-ttu-id="f1d7e-1400">這個多載並沒有參數的多載可讓您指定要傳遞的命令列引數與啟動的處理序資源的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1400">Both this overload and the overload that has no parameters allow you to specify the file name of the process resource to start and command-line arguments to pass.</span></span>  
  
 <span data-ttu-id="f1d7e-1401">如果您有宣告在系統中使用引號括住路徑變數，您必須在啟動該位置中找到任何處理序時完整限定該路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1401">If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</span></span> <span data-ttu-id="f1d7e-1402">否則，系統將無法找到路徑。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1402">Otherwise, the system will not find the path.</span></span> <span data-ttu-id="f1d7e-1403">例如，如果`c:\mypath`不在您的路徑，而且您新增使用引號： `path = %path%;"c:\mypath"`，您必須完整限定在任何處理序`c:\mypath`時啟動它。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1403">For example, if `c:\mypath` is not in your path, and you add it using quotation marks: `path = %path%;"c:\mypath"`, you must fully qualify any process in `c:\mypath` when starting it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1404">ASP.NET 工作者處理序，在 Web 伺服器上的內容中執行 ASP.NET Web 網頁和伺服器控制項的程式碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1404">ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</span></span>  <span data-ttu-id="f1d7e-1405">如果您使用<xref:System.Diagnostics.Process.Start%2A>ASP.NET 網頁或伺服器控制項中的方法，新的處理序 Web 伺服器上執行具有限制權限。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1405">If you use the <xref:System.Diagnostics.Process.Start%2A> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</span></span> <span data-ttu-id="f1d7e-1406">處理程序不會啟動與用戶端瀏覽器中，相同的內容中，而且沒有存取權的使用者桌面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1406">The process does not start in the same context as the client browser, and does not have access to the user desktop.</span></span>  
  
 <span data-ttu-id="f1d7e-1407">每當您使用<xref:System.Diagnostics.Process.Start%2A>啟動處理序，您可能需要將它關閉，或可能會遺失的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1407">Whenever you use <xref:System.Diagnostics.Process.Start%2A> to start a process, you might need to close it or you risk losing system resources.</span></span> <span data-ttu-id="f1d7e-1408">關閉使用的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1408">Close processes using <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-1409">您可以檢查處理程序是否已經使用關閉其<xref:System.Diagnostics.Process.HasExited%2A>屬性...</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1409">You can check whether a process has already been closed by using its <xref:System.Diagnostics.Process.HasExited%2A> property..</span></span>  
  
 <span data-ttu-id="f1d7e-1410">這裡的附註中的 managed 執行緒的 apartment 狀態是必要的。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1410">A note about apartment states in managed threads is necessary here.</span></span> <span data-ttu-id="f1d7e-1411">當<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`處理序元件<xref:System.Diagnostics.Process.StartInfo%2A>屬性，請確定您已在您的應用程式上設定執行緒模型，藉由將屬性`[STAThread]`上`main()`方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1411">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` on the process component's <xref:System.Diagnostics.Process.StartInfo%2A> property, make sure you have set a threading model on your application by setting the attribute `[STAThread]` on the `main()` method.</span></span> <span data-ttu-id="f1d7e-1412">Managed 的執行緒在可以的否則為`unknown`狀態，或放入`MTA`狀態，後者的 je v konfliktu<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>正在`true`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1412">Otherwise, a managed thread can be in an `unknown` state or put in the `MTA` state, the latter of which conflicts with <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> being `true`.</span></span> <span data-ttu-id="f1d7e-1413">某些方法需要的 apartment 狀態不是`unknown`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1413">Some methods require that the apartment state not be `unknown`.</span></span> <span data-ttu-id="f1d7e-1414">如果狀態未明確設定，當應用程式遇到這種方法，則預設為`MTA`，而且設定之後，apartment 狀態無法變更。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1414">If the state is not explicitly set, when the application encounters such a method, it defaults to `MTA`, and once set, the apartment state cannot be changed.</span></span> <span data-ttu-id="f1d7e-1415">不過，`MTA`造成作業系統殼層來管理執行緒時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1415">However, `MTA` causes an exception to be thrown when the operating system shell is managing the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1416">下列範例首先會繁衍的 Internet Explorer 執行個體，並會顯示在瀏覽器中的 [我的最愛] 資料夾的內容。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1416">The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</span></span> <span data-ttu-id="f1d7e-1417">然後會啟動 Internet Explorer 的某些其他執行個體，並會顯示一些特定的網頁或網站。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1417">It then starts some other instances of Internet Explorer and displays some specific pages or sites.</span></span> <span data-ttu-id="f1d7e-1418">最後它會啟動 Internet Explorer 與正在同時瀏覽至特定站台的最小化視窗。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1418">Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1419">The <paramref name="fileName" /> or <paramref name="arguments" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1419">The <paramref name="fileName" /> or <paramref name="arguments" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1420">An error occurred when opening the associated file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1420">An error occurred when opening the associated file.</span>
          </span>
          <span data-ttu-id="f1d7e-1421">-or-  The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1421">-or-  The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</span>
          </span>
          <span data-ttu-id="f1d7e-1422">The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1422">The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</span>
          </span>
          <span data-ttu-id="f1d7e-1423">or "Access is denied."</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1423">or "Access is denied."</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f1d7e-1424">The process object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1424">The process object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="f1d7e-1425">The PATH environment variable has a string containing quotes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1425">The PATH environment variable has a string containing quotes.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1426">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1426">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1427">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1427">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.FileName" />
        <altmember cref="P:System.Diagnostics.Process.StartInfo" />
        <altmember cref="T:System.Diagnostics.ProcessStartInfo" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process Start (string fileName, string userName, System.Security.SecureString password, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process Start(string fileName, string userName, class System.Security.SecureString password, string domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (fileName As String, userName As String, password As SecureString, domain As String) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ Start(System::String ^ fileName, System::String ^ userName, System::Security::SecureString ^ password, System::String ^ domain);" />
      <MemberSignature Language="F#" Value="static member Start : string * string * System.Security.SecureString * string -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.Start (fileName, userName, password, domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f1d7e-1428">The name of an application file to run in the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1428">The name of an application file to run in the process.</span>
          </span>
        </param>
        <param name="userName">
          <span data-ttu-id="f1d7e-1429">The user name to use when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1429">The user name to use when starting the process.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="f1d7e-1430">A <see cref="T:System.Security.SecureString" /> that contains the password to use when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1430">A <see cref="T:System.Security.SecureString" /> that contains the password to use when starting the process.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="f1d7e-1431">The domain to use when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1431">The domain to use when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1432">Starts a process resource by specifying the name of an application, a user name, a password, and a domain and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1432">Starts a process resource by specifying the name of an application, a user name, a password, and a domain and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1433">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1433">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          </span>
          <span data-ttu-id="f1d7e-1434">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1434">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          </span>
          <span data-ttu-id="f1d7e-1435">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1435">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1436">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1436">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1437">您可以使用此多載，藉由指定其檔案名稱、 使用者名稱、 密碼和網域中建立新的處理序和其主要的執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1437">Use this overload to create a new process and its primary thread by specifying its file name, user name, password, and domain.</span></span> <span data-ttu-id="f1d7e-1438">新的處理序再執行指定的可執行檔中指定的認證 （使用者、 網域及密碼） 的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1438">The new process then runs the specified executable file in the security context of the specified credentials (user, domain, and password).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1439">當可執行檔位於遠端的磁碟機中時，您必須使用統一資源識別元 (URI) 未連結的磁碟機代號來識別網路共用。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1439">When the executable file is located on a remote drive, you must identify the network share by using a uniform resource identifier (URI), not a linked drive letter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1440">如果要啟動可執行檔的位址 URL，此程序未啟動和`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1440">If the address of the executable file to start is a URL, the process is not started and `null` is returned.</span></span>  
  
 <span data-ttu-id="f1d7e-1441">這個多載可讓您不需要先建立一個新啟動的處理序<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1441">This overload lets you start a process without first creating a new <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1442">多載是明確的步驟，建立新的替代<xref:System.Diagnostics.Process>執行個體，設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>， <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>， <xref:System.Diagnostics.ProcessStartInfo.Password%2A>，並<xref:System.Diagnostics.ProcessStartInfo.Domain%2A>屬性<xref:System.Diagnostics.Process.StartInfo%2A>屬性，並呼叫<xref:System.Diagnostics.Process.Start%2A>的<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1442">The overload is an alternative to the explicit steps of creating a new <xref:System.Diagnostics.Process> instance, setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, <xref:System.Diagnostics.ProcessStartInfo.Password%2A>, and <xref:System.Diagnostics.ProcessStartInfo.Domain%2A> properties of the <xref:System.Diagnostics.Process.StartInfo%2A> property, and calling <xref:System.Diagnostics.Process.Start%2A> for the <xref:System.Diagnostics.Process> instance.</span></span>  
  
 <span data-ttu-id="f1d7e-1443">同樣地，在相同方式來**執行** 對話方塊中可接受包含或不含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的`fileName`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1443">Similarly, in the same way that the **Run** dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the `fileName` parameter.</span></span> <span data-ttu-id="f1d7e-1444">例如，您可以設定`fileName`"Notepad.exe"或"Notepad"的參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1444">For example, you can set the `fileName` parameter to either "Notepad.exe" or "Notepad".</span></span> <span data-ttu-id="f1d7e-1445">如果`fileName`參數表示可執行檔`arguments`參數可能代表採取動作，例如文字檔案中的檔案`Notepad.exe myfile.txt`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1445">If the `fileName` parameter represents an executable file, the `arguments` parameter might represent a file to act upon, such as the text file in `Notepad.exe myfile.txt`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1446">檔案名稱必須代表的可執行檔<xref:System.Diagnostics.Process.Start%2A>的多載`userName`， `password`，和`domain`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1446">The file name must represent an executable file in the <xref:System.Diagnostics.Process.Start%2A> overloads that have `userName`, `password`, and `domain` parameters.</span></span>  
  
 <span data-ttu-id="f1d7e-1447">每當您使用<xref:System.Diagnostics.Process.Start%2A>啟動處理序，您可能需要將它關閉，或可能會遺失的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1447">Whenever you use <xref:System.Diagnostics.Process.Start%2A> to start a process, you might need to close it or you risk losing system resources.</span></span> <span data-ttu-id="f1d7e-1448">關閉使用的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1448">Close processes using <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-1449">您可以檢查處理程序是否已經使用關閉其<xref:System.Diagnostics.Process.HasExited%2A>屬性...</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1449">You can check whether a process has already been closed by using its <xref:System.Diagnostics.Process.HasExited%2A> property..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1450">下列程式碼範例將示範如何使用此多載，來啟動可執行檔，並也會示範擲回<xref:System.ComponentModel.Win32Exception>時嘗試啟動不可執行的檔案相關聯的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1450">The following code example shows the use of this overload to start an executable file and also demonstrates the throwing of a <xref:System.ComponentModel.Win32Exception> when an attempt is made to start an application associated with a nonexecutable file.</span></span>  
  
 [!code-csharp[System.Diagnostics.Process.Start#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Process.Start/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.Process.Start#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Process.Start/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1451">No file name was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1451">No file name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1452">There was an error in opening the associated file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1452">There was an error in opening the associated file.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f1d7e-1453">The process object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1453">The process object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1454">Method not supported on Linux or macOS (.NET Core only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1454">Method not supported on Linux or macOS (.NET Core only).</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1455">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1455">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1456">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1456">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Process Start (string fileName, string arguments, string userName, System.Security.SecureString password, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Process Start(string fileName, string arguments, string userName, class System.Security.SecureString password, string domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (fileName As String, arguments As String, userName As String, password As SecureString, domain As String) As Process" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Process ^ Start(System::String ^ fileName, System::String ^ arguments, System::String ^ userName, System::Security::SecureString ^ password, System::String ^ domain);" />
      <MemberSignature Language="F#" Value="static member Start : string * string * string * System.Security.SecureString * string -&gt; System.Diagnostics.Process" Usage="System.Diagnostics.Process.Start (fileName, arguments, userName, password, domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Process</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f1d7e-1457">The name of an application file to run in the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1457">The name of an application file to run in the process.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="f1d7e-1458">Command-line arguments to pass when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1458">Command-line arguments to pass when starting the process.</span>
          </span>
        </param>
        <param name="userName">
          <span data-ttu-id="f1d7e-1459">The user name to use when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1459">The user name to use when starting the process.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="f1d7e-1460">A <see cref="T:System.Security.SecureString" /> that contains the password to use when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1460">A <see cref="T:System.Security.SecureString" /> that contains the password to use when starting the process.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="f1d7e-1461">The domain to use when starting the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1461">The domain to use when starting the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1462">Starts a process resource by specifying the name of an application, a set of command-line arguments, a user name, a password, and a domain and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1462">Starts a process resource by specifying the name of an application, a set of command-line arguments, a user name, a password, and a domain and associates the resource with a new <see cref="T:System.Diagnostics.Process" /> component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1463">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1463">A new <see cref="T:System.Diagnostics.Process" /> that is associated with the process resource, or <see langword="null" /> if no process resource is started.</span>
          </span>
          <span data-ttu-id="f1d7e-1464">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1464">Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</span>
          </span>
          <span data-ttu-id="f1d7e-1465">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1465">In addition, Start may return a non-null Process with its <see cref="P:System.Diagnostics.Process.HasExited" /> property already set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f1d7e-1466">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1466">In this case, the started process may have activated an existing instance of itself and then exited.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1467">您可以使用此多載，藉由指定其檔案名稱、 命令列引數、 使用者名稱、 密碼和網域中建立新的處理序和其主要的執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1467">Use this overload to create a new process and its primary thread by specifying its file name, command-line arguments, user name, password, and domain.</span></span> <span data-ttu-id="f1d7e-1468">新的處理序再執行指定的可執行檔中指定的認證 （使用者、 網域及密碼） 的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1468">The new process then runs the specified executable file in the security context of the specified credentials (user, domain, and password).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1469">當可執行檔位於遠端的磁碟機中時，您必須使用統一資源識別元 (URI) 未連結的磁碟機代號來識別網路共用。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1469">When the executable file is located on a remote drive, you must identify the network share by using a uniform resource identifier (URI), not a linked drive letter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1470">如果要啟動可執行檔的位址 URL，此程序未啟動和`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1470">If the address of the executable file to start is a URL, the process is not started and `null` is returned.</span></span>  
  
 <span data-ttu-id="f1d7e-1471">這個多載可讓您不需要先建立一個新啟動的處理序<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1471">This overload lets you start a process without first creating a new <xref:System.Diagnostics.Process> instance.</span></span> <span data-ttu-id="f1d7e-1472">多載是明確的步驟，建立新的替代<xref:System.Diagnostics.Process>執行個體，設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>， <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>， <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>， <xref:System.Diagnostics.ProcessStartInfo.Password%2A>，和<xref:System.Diagnostics.ProcessStartInfo.Domain%2A>屬性<xref:System.Diagnostics.Process.StartInfo%2A>屬性，然後呼叫<xref:System.Diagnostics.Process.Start%2A>針對<xref:System.Diagnostics.Process>執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1472">The overload is an alternative to the explicit steps of creating a new <xref:System.Diagnostics.Process> instance, setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>, <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, <xref:System.Diagnostics.ProcessStartInfo.Password%2A>, and <xref:System.Diagnostics.ProcessStartInfo.Domain%2A> properties of the <xref:System.Diagnostics.Process.StartInfo%2A> property, and calling <xref:System.Diagnostics.Process.Start%2A> for the <xref:System.Diagnostics.Process> instance.</span></span>  
  
 <span data-ttu-id="f1d7e-1473">同樣地，在相同方式來**執行** 對話方塊中可接受包含或不含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性的`fileName`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1473">Similarly, in the same way that the **Run** dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the `fileName` parameter.</span></span> <span data-ttu-id="f1d7e-1474">例如，您可以設定`fileName`"Notepad.exe"或"Notepad"的參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1474">For example, you can set the `fileName` parameter to either "Notepad.exe" or "Notepad".</span></span> <span data-ttu-id="f1d7e-1475">如果`fileName`參數表示可執行檔`arguments`參數可能代表採取動作，例如文字檔案中的檔案`Notepad.exe myfile.txt`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1475">If the `fileName` parameter represents an executable file, the `arguments` parameter might represent a file to act upon, such as the text file in `Notepad.exe myfile.txt`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1476">檔案名稱必須代表的可執行檔<xref:System.Diagnostics.Process.Start%2A>的多載`userName`， `password`，和`domain`參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1476">The file name must represent an executable file in the <xref:System.Diagnostics.Process.Start%2A> overloads that have `userName`, `password`, and `domain` parameters.</span></span>  
  
 <span data-ttu-id="f1d7e-1477">每當您使用<xref:System.Diagnostics.Process.Start%2A>啟動處理序，您可能需要將它關閉，或可能會遺失的系統資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1477">Whenever you use <xref:System.Diagnostics.Process.Start%2A> to start a process, you might need to close it or you risk losing system resources.</span></span> <span data-ttu-id="f1d7e-1478">關閉使用的處理程序<xref:System.Diagnostics.Process.CloseMainWindow%2A>或<xref:System.Diagnostics.Process.Kill%2A>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1478">Close processes using <xref:System.Diagnostics.Process.CloseMainWindow%2A> or <xref:System.Diagnostics.Process.Kill%2A>.</span></span> <span data-ttu-id="f1d7e-1479">您可以檢查處理程序是否已經使用關閉其<xref:System.Diagnostics.Process.HasExited%2A>屬性...</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1479">You can check whether a process has already been closed by using its <xref:System.Diagnostics.Process.HasExited%2A> property..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1480">No file name was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1480">No file name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1481">An error occurred when opening the associated file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1481">An error occurred when opening the associated file.</span>
          </span>
          <span data-ttu-id="f1d7e-1482">-or-  The sum of the length of the arguments and the length of the full path to the associated file exceeds 2080.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1482">-or-  The sum of the length of the arguments and the length of the full path to the associated file exceeds 2080.</span>
          </span>
          <span data-ttu-id="f1d7e-1483">The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1483">The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</span>
          </span>
          <span data-ttu-id="f1d7e-1484">or "Access is denied."</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1484">or "Access is denied."</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f1d7e-1485">The process object has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1485">The process object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1486">Method not supported on Linux or macOS (.NET Core only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1486">Method not supported on Linux or macOS (.NET Core only).</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1487">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1487">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1488">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1488">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="StartInfo">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessStartInfo StartInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.ProcessStartInfo StartInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.StartInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property StartInfo As ProcessStartInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessStartInfo ^ StartInfo { System::Diagnostics::ProcessStartInfo ^ get(); void set(System::Diagnostics::ProcessStartInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartInfo : System.Diagnostics.ProcessStartInfo with get, set" Usage="System.Diagnostics.Process.StartInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Specifies information used to start a process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1489">Gets or sets the properties to pass to the <see cref="M:System.Diagnostics.Process.Start" /> method of the <see cref="T:System.Diagnostics.Process" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1489">Gets or sets the properties to pass to the <see cref="M:System.Diagnostics.Process.Start" /> method of the <see cref="T:System.Diagnostics.Process" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1490">
            <see cref="T:System.Diagnostics.ProcessStartInfo" />，代表用來啟動處理序的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1490">The <see cref="T:System.Diagnostics.ProcessStartInfo" /> that represents the data with which to start the process.</span>
          </span>
          <span data-ttu-id="f1d7e-1491">這些引數包括用來啟動處理序的可執行檔或文件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1491">These arguments include the name of the executable file or document used to start the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1492"><xref:System.Diagnostics.Process.StartInfo%2A> 表示要用來啟動處理程序的參數組。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1492"><xref:System.Diagnostics.Process.StartInfo%2A> represents the set of parameters to use to start a process.</span></span> <span data-ttu-id="f1d7e-1493">當<xref:System.Diagnostics.Process.Start%2A>呼叫時，<xref:System.Diagnostics.Process.StartInfo%2A>用來指定要啟動處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1493">When <xref:System.Diagnostics.Process.Start%2A> is called, the <xref:System.Diagnostics.Process.StartInfo%2A> is used to specify the process to start.</span></span> <span data-ttu-id="f1d7e-1494">只有必要的時候<xref:System.Diagnostics.Process.StartInfo%2A>若要設定的成員是<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1494">The only necessary <xref:System.Diagnostics.Process.StartInfo%2A> member to set is the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f1d7e-1495">藉由指定啟動處理序<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性是類似於輸入中的資訊**執行**Windows 對話方塊**啟動**功能表。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1495">Starting a process by specifying the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property is similar to typing the information in the **Run** dialog box of the Windows **Start** menu.</span></span> <span data-ttu-id="f1d7e-1496">因此，<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性不需要代表可執行檔。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1496">Therefore, the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property does not need to represent an executable file.</span></span> <span data-ttu-id="f1d7e-1497">它可以是任何的副檔名已經相關聯的系統上安裝的應用程式的檔案類型。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1497">It can be of any file type for which the extension has been associated with an application installed on the system.</span></span> <span data-ttu-id="f1d7e-1498">例如<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>可以有副檔名為.txt，如果您文字的檔案關聯的編輯器，例如 [記事本]，或如果您有使用文字處理工具，例如 Microsoft Word associated.doc 檔案，它可以有.doc。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1498">For example the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</span></span> <span data-ttu-id="f1d7e-1499">同樣地，在相同方式來**執行** 對話方塊中可接受包含或不含副檔名為.exe 的可執行檔名稱，副檔名為.exe 是選擇性在<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1499">Similarly, in the same way that the **Run** dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> member.</span></span> <span data-ttu-id="f1d7e-1500">例如，您可以設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>"Notepad.exe"或"Notepad"的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1500">For example, you can set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to either "Notepad.exe" or "Notepad".</span></span>  
  
 <span data-ttu-id="f1d7e-1501">您可以啟動 ClickOnce 應用程式設定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>在原本安裝的應用程式的位置 （例如，Web 位址） 的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1501">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="f1d7e-1502">藉由指定已安裝硬碟機上，不要啟動 ClickOnce 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1502">Do not start a ClickOnce application by specifying its installed location on your hard drive.</span></span>  
  
 <span data-ttu-id="f1d7e-1503">如果檔案名稱包含非執行檔的檔案，例如.doc 檔案，您可以包含指定要對檔案執行的動作動詞命令。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1503">If the file name involves a nonexecutable file, such as a .doc file, you can include a verb specifying what action to take on the file.</span></span> <span data-ttu-id="f1d7e-1504">例如，您可以設定<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>"Print"，結尾為.doc 副檔名的檔案。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1504">For example, you could set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> to "Print" for a file ending in the .doc extension.</span></span> <span data-ttu-id="f1d7e-1505">在指定的檔名<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>屬性不需要有副檔名，如果您手動輸入的值<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1505">The file name specified in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="f1d7e-1506">不過，如果您使用<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>屬性來判斷何種動詞可供使用，您必須包含副檔名。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1506">However, if you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property to determine what verbs are available, you must include the extension.</span></span>  
  
 <span data-ttu-id="f1d7e-1507">您可以變更中指定的參數<xref:System.Diagnostics.Process.StartInfo%2A>屬性，讓您呼叫為止<xref:System.Diagnostics.Process.Start%2A>程序的方法。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1507">You can change the parameters specified in the <xref:System.Diagnostics.Process.StartInfo%2A> property up to the time that you call the <xref:System.Diagnostics.Process.Start%2A> method on the process.</span></span> <span data-ttu-id="f1d7e-1508">啟動程序之後，變更<xref:System.Diagnostics.Process.StartInfo%2A>值不會影響或重新啟動相關的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1508">After you start the process, changing the <xref:System.Diagnostics.Process.StartInfo%2A> values does not affect or restart the associated process.</span></span> <span data-ttu-id="f1d7e-1509">如果您呼叫<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29>方法<xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType>並<xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType>屬性集，如果未受管理`CreateProcessWithLogonW`呼叫函式，這會啟動程序在新視窗即使<xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A>屬性值是`true`或<xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A>屬性值是<xref:System.Diagnostics.ProcessWindowStyle.Hidden>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1509">If you call the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29> method with the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType> properties set, the unmanaged `CreateProcessWithLogonW` function is called, which starts the process in a new window even if the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is `true` or the <xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A> property value is <xref:System.Diagnostics.ProcessWindowStyle.Hidden>.</span></span>  
  
 <span data-ttu-id="f1d7e-1510">如果您未使用<xref:System.Diagnostics.Process.Start%2A>方法來啟動處理程序，<xref:System.Diagnostics.Process.StartInfo%2A>屬性不會反映使用啟動程序的參數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1510">If you did not use the <xref:System.Diagnostics.Process.Start%2A> method to start a process, the <xref:System.Diagnostics.Process.StartInfo%2A> property does not reflect the parameters used to start the process.</span></span> <span data-ttu-id="f1d7e-1511">例如，如果您使用<xref:System.Diagnostics.Process.GetProcesses%2A>以取得陣列的電腦上，執行的處理序<xref:System.Diagnostics.Process.StartInfo%2A>每個屬性<xref:System.Diagnostics.Process>不包含原始的檔案名稱或用來啟動處理程序的引數。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1511">For example, if you use <xref:System.Diagnostics.Process.GetProcesses%2A> to get an array of processes running on the computer, the <xref:System.Diagnostics.Process.StartInfo%2A> property of each <xref:System.Diagnostics.Process> does not contain the original file name or arguments used to start the process.</span></span>  
  
 <span data-ttu-id="f1d7e-1512">檔案名稱啟動處理程序時，會填入 （唯讀） 檔案<xref:System.Diagnostics.Process.MainModule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1512">When the process is started, the file name is the file that populates the (read-only) <xref:System.Diagnostics.Process.MainModule%2A> property.</span></span> <span data-ttu-id="f1d7e-1513">如果您想要擷取可執行檔所關聯的處理序啟動程序之後，請使用<xref:System.Diagnostics.Process.MainModule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1513">If you want to retrieve the executable file that is associated with the process after the process has started, use the <xref:System.Diagnostics.Process.MainModule%2A> property.</span></span> <span data-ttu-id="f1d7e-1514">如果您想要設定的可執行檔<xref:System.Diagnostics.Process>執行個體的相關聯的處理序尚未啟動，請使用<xref:System.Diagnostics.Process.StartInfo%2A>屬性的<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1514">If you want to set the executable file of a <xref:System.Diagnostics.Process> instance for which an associated process has not been started, use the <xref:System.Diagnostics.Process.StartInfo%2A> property's <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> member.</span></span> <span data-ttu-id="f1d7e-1515">因為成員<xref:System.Diagnostics.Process.StartInfo%2A>屬性會傳遞至引數<xref:System.Diagnostics.Process.Start%2A>方法的程序中，然後再變更<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>不會重設屬性相關聯的處理序啟動之後<xref:System.Diagnostics.Process.MainModule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1515">Because the members of the <xref:System.Diagnostics.Process.StartInfo%2A> property are arguments that are passed to the <xref:System.Diagnostics.Process.Start%2A> method of a process, changing the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after the associated process has started will not reset the <xref:System.Diagnostics.Process.MainModule%2A> property.</span></span> <span data-ttu-id="f1d7e-1516">這些屬性是只能用來初始化相關聯的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1516">These properties are used only to initialize the associated process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1517">下列範例會填入<xref:System.Diagnostics.Process.StartInfo%2A>與要執行的檔案，它執行動作，以及是否應該顯示使用者介面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1517">The following example populates a <xref:System.Diagnostics.Process.StartInfo%2A> with the file to execute, the action performed on it and whether it should displays a user interface.</span></span> <span data-ttu-id="f1d7e-1518">如需其他範例，請參閱參考頁面屬性的<xref:System.Diagnostics.ProcessStartInfo>類別。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1518">For additional examples, refer to the reference pages for properties of the <xref:System.Diagnostics.ProcessStartInfo> class.</span></span>  
  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1d7e-1519">The value that specifies the <see cref="P:System.Diagnostics.Process.StartInfo" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1519">The value that specifies the <see cref="P:System.Diagnostics.Process.StartInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1520">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1520">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1521">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1521">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.Start" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.FileName" />
      </Docs>
    </Member>
    <Member MemberName="StartTime">
      <MemberSignature Language="C#" Value="public DateTime StartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime StartTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.StartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime StartTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.StartTime : DateTime" Usage="System.Diagnostics.Process.StartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The time at which the process was started.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1522">Gets the time that the associated process was started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1522">Gets the time that the associated process was started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1523">物件，指出處理序何時啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1523">An object  that indicates when the process started.</span>
          </span>
          <span data-ttu-id="f1d7e-1524">如果處理序並未執行，則會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1524">An exception is thrown if the process is not running.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1525">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1525">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1526">You are attempting to access the <see cref="P:System.Diagnostics.Process.StartTime" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1526">You are attempting to access the <see cref="P:System.Diagnostics.Process.StartTime" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1527">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1527">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1528">The process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1528">The process has exited.</span>
          </span>
          <span data-ttu-id="f1d7e-1529">-or-  The process has not been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1529">-or-  The process has not been started.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1530">An error occurred in the call to the Windows function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1530">An error occurred in the call to the Windows function.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1531">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1531">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1532">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1532">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Diagnostics.Process.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The object used to marshal the event handler calls issued as a result of a Process exit.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1533">Gets or sets the object used to marshal the event handler calls that are issued as a result of a process exit event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1533">Gets or sets the object used to marshal the event handler calls that are issued as a result of a process exit event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1534">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，用以封送處理因處理序上的 <see cref="E:System.Diagnostics.Process.Exited" /> 事件而發出的事件處理常式呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1534">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> used to marshal event handler calls that are issued as a result of an <see cref="E:System.Diagnostics.Process.Exited" /> event on the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1535">當<xref:System.Diagnostics.EventLog.SynchronizingObject%2A>已`null`，處理方法<xref:System.Diagnostics.Process.Exited>系統執行緒集區的執行緒上呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1535">When <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is `null`, methods that handle the <xref:System.Diagnostics.Process.Exited> event are called on a thread from the system thread pool.</span></span> <span data-ttu-id="f1d7e-1536">如需有關系統執行緒集區的詳細資訊，請參閱<xref:System.Threading.ThreadPool>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1536">For more information about system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="f1d7e-1537">當<xref:System.Diagnostics.Process.Exited>事件由 visual 的 Windows Form 元件，例如<xref:System.Windows.Forms.Button>，透過系統執行緒集區中存取元件可能無法運作，或可能會導致例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1537">When the <xref:System.Diagnostics.Process.Exited> event is handled by a visual Windows Forms component, such as a <xref:System.Windows.Forms.Button>, accessing the component through the system thread pool might not work, or might result in an exception.</span></span> <span data-ttu-id="f1d7e-1538">藉由設定避免這<xref:System.Diagnostics.Process.SynchronizingObject%2A>至 Windows Form 元件，因而導致處理方法<xref:System.Diagnostics.Process.Exited>元件建立所在的相同執行緒上呼叫的事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1538">Avoid this by setting <xref:System.Diagnostics.Process.SynchronizingObject%2A> to a Windows Forms component, which causes the methods handling the <xref:System.Diagnostics.Process.Exited> event to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="f1d7e-1539">如果<xref:System.Diagnostics.Process>使用於內部[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]在 Windows Form 設計工具中，<xref:System.Diagnostics.Process.SynchronizingObject%2A>會自動設為包含的控制項<xref:System.Diagnostics.Process>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1539">If the <xref:System.Diagnostics.Process> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.Diagnostics.Process.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Diagnostics.Process>.</span></span> <span data-ttu-id="f1d7e-1540">比方說，如果您放置<xref:System.Diagnostics.Process>設計工具上`Form1`(繼承自<xref:System.Windows.Forms.Form>)<xref:System.Diagnostics.Process.SynchronizingObject%2A>屬性<xref:System.Diagnostics.Process>設定為執行個體`Form1`:</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1540">For example, if you place a <xref:System.Diagnostics.Process> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.Diagnostics.Process.SynchronizingObject%2A> property of <xref:System.Diagnostics.Process> is set to the instance of `Form1`:</span></span>  
  
 [!code-cpp[Process_SynchronizingObject#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process_SynchronizingObject/CPP/remarks.cpp#2)]
 [!code-csharp[Process_SynchronizingObject#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process_SynchronizingObject/CS/remarks.cs#2)]
 [!code-vb[Process_SynchronizingObject#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_SynchronizingObject/VB/remarks.vb#2)]  
  
 <span data-ttu-id="f1d7e-1541">一般而言，這個屬性設定時元件會放置在控制項或表單中，因為這些元件會繫結至特定執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1541">Typically, this property is set when the component is placed inside a control or form, because those components are bound to a specific thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process_SynchronizingObject#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_SynchronizingObject/CPP/process_synchronizingobject.cpp#1)]
 [!code-csharp[Process_SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_SynchronizingObject/CS/process_synchronizingobject.cs#1)]
 [!code-vb[Process_SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_SynchronizingObject/VB/process_synchronizingobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1542">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1542">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1543">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1543">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="Threads">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessThreadCollection Threads { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.ProcessThreadCollection Threads" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.Threads" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Threads As ProcessThreadCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessThreadCollection ^ Threads { System::Diagnostics::ProcessThreadCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Threads : System.Diagnostics.ProcessThreadCollection" Usage="System.Diagnostics.Process.Threads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The number of threads of this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessThreadCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1544">Gets the set of threads that are running in the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1544">Gets the set of threads that are running in the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1545">
            <see cref="T:System.Diagnostics.ProcessThread" /> 類型的陣列，代表目前正在相關聯處理序中執行的作業系統執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1545">An array of type <see cref="T:System.Diagnostics.ProcessThread" /> representing the operating system threads currently running in the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1546">執行緒處理序中執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1546">A thread executes code in a process.</span></span> <span data-ttu-id="f1d7e-1547">每個處理序會啟動具有單一執行緒，其主要執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1547">Each process is started with a single thread, its primary thread.</span></span> <span data-ttu-id="f1d7e-1548">任何執行緒可以建立額外的執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1548">Any thread can create additional threads.</span></span> <span data-ttu-id="f1d7e-1549">在處理序中的執行緒共用處理序位址空間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1549">Threads within a process share the address space of the process.</span></span>  
  
 <span data-ttu-id="f1d7e-1550">使用<xref:System.Diagnostics.ProcessThread>，取得目前的處理序相關聯的所有執行緒。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1550">Use <xref:System.Diagnostics.ProcessThread> to get all the threads associated with the current process.</span></span> <span data-ttu-id="f1d7e-1551">主要執行緒不一定是在陣列中的索引為零。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1551">The primary thread is not necessarily at index zero in the array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="f1d7e-1552">The process does not have an <see cref="P:System.Diagnostics.Process.Id" />, or no process is associated with the <see cref="T:System.Diagnostics.Process" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1552">The process does not have an <see cref="P:System.Diagnostics.Process.Id" />, or no process is associated with the <see cref="T:System.Diagnostics.Process" /> instance.</span>
          </span>
          <span data-ttu-id="f1d7e-1553">-or-  The associated process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1553">-or-  The associated process has exited.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1554">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1554">The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> to <see langword="false" /> to access this property on Windows 98 and Windows Me.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1555">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1555">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1556">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1556">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.ProcessThread" />
        <altmember cref="P:System.Diagnostics.Process.BasePriority" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="process.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1557">Formats the process's name as a string, combined with the parent component type, if applicable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1557">Formats the process's name as a string, combined with the parent component type, if applicable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1558">The <see cref="P:System.Diagnostics.Process.ProcessName" />, combined with the base component's <see cref="M:System.Object.ToString" /> return value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1558">The <see cref="P:System.Diagnostics.Process.ProcessName" />, combined with the base component's <see cref="M:System.Object.ToString" /> return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1d7e-1559">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1559">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1560">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1560">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1561">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1561">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1562">
            <see cref="M:System.Diagnostics.Process.ToString" /> is not supported on Windows 98.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1562">
              <see cref="M:System.Diagnostics.Process.ToString" /> is not supported on Windows 98.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1563">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1563">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1564">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1564">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TotalProcessorTime">
      <MemberSignature Language="C#" Value="public TimeSpan TotalProcessorTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TotalProcessorTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.TotalProcessorTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalProcessorTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TotalProcessorTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalProcessorTime : TimeSpan" Usage="System.Diagnostics.Process.TotalProcessorTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of CPU time the process has used.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1565">Gets the total processor time for this process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1565">Gets the total processor time for this process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1566">
            <see cref="T:System.TimeSpan" />，表示相關聯處理序花在使用 CPU 的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1566">A <see cref="T:System.TimeSpan" /> that indicates the amount of time that the associated process has spent utilizing the CPU.</span>
          </span>
          <span data-ttu-id="f1d7e-1567">這個值是 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 和 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 的總和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1567">This value is the sum of the <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> and the <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1d7e-1568">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1568">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1569">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1569">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1570">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1570">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1571">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1571">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1572">You are attempting to access the <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1572">You are attempting to access the <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1573">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1573">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1574">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1574">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1575">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1575">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.UserProcessorTime" />
        <altmember cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />
      </Docs>
    </Member>
    <Member MemberName="UserProcessorTime">
      <MemberSignature Language="C#" Value="public TimeSpan UserProcessorTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan UserProcessorTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.UserProcessorTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserProcessorTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan UserProcessorTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.UserProcessorTime : TimeSpan" Usage="System.Diagnostics.Process.UserProcessorTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of CPU time the process spent outside the operating system core.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1576">Gets the user processor time for this process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1576">Gets the user processor time for this process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1577">
            <see cref="T:System.TimeSpan" />，表示相關聯處理序花在處理序的應用程式部分內 (而不是在作業系統核心內) 執行程式碼的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1577">A <see cref="T:System.TimeSpan" /> that indicates the amount of time that the associated process has spent running code inside the application portion of the process (not inside the operating system core).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1d7e-1578">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1578">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1579">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1579">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1580">在處理序結束時，此範例會偵測並顯示處理程序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1580">The example detects when the process exits, and displays the process's exit code.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1581">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1581">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f1d7e-1582">You are attempting to access the <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> property for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1582">You are attempting to access the <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> property for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1583">This property is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1583">This property is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1584">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1584">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1585">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1585">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.UserProcessorTime" />
        <altmember cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMemorySize">
      <MemberSignature Language="C#" Value="public int VirtualMemorySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualMemorySize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.VirtualMemorySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualMemorySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualMemorySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMemorySize : int" Usage="System.Diagnostics.Process.VirtualMemorySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of virtual memory currently used for this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use VirtualMemorySize64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1586">Gets the size of the process's virtual memory, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1586">Gets the size of the process's virtual memory, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1587">虛擬記憶體量 (以位元組為單位)，指關聯的處理序所要求的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1587">The amount of virtual memory, in bytes, that the associated process has requested.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1588">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1588">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1589">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1589">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1590">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1590">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.VirtualMemorySize64" />
        <altmember cref="P:System.Diagnostics.Process.PeakVirtualMemorySize64" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMemorySize64">
      <MemberSignature Language="C#" Value="public long VirtualMemorySize64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 VirtualMemorySize64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.VirtualMemorySize64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualMemorySize64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long VirtualMemorySize64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMemorySize64 : int64" Usage="System.Diagnostics.Process.VirtualMemorySize64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of virtual memory currently used for this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1591">Gets the amount of the virtual memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1591">Gets the amount of the virtual memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1592">配置給關聯處理序的虛擬記憶體量，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1592">The amount of virtual memory, in bytes, allocated for the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1593">這個屬性所傳回的值表示目前程序，以位元組為單位使用的虛擬記憶體的大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1593">The value returned by this property represents the current size of virtual memory used by the process, in bytes.</span></span> <span data-ttu-id="f1d7e-1594">作業系統會對應到頁面載入的實體記憶體，或儲存在磁碟上的虛擬記憶體分頁檔案中的頁面每個處理序虛擬位址空間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1594">The operating system maps the virtual address space for each process either to pages loaded in physical memory, or to pages stored in the virtual memory paging file on disk.</span></span>  
  
 <span data-ttu-id="f1d7e-1595">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1595">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-1596">屬性值相當於**Virtual Bytes**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1596">The property value is equivalent to the **Virtual Bytes** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1597">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1597">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-1598">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1598">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1599">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1599">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1600">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1600">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1601">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1601">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1602">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1602">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.PeakVirtualMemorySize64" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForExit">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1603">Sets the period of time to wait for the associated process to exit, and blocks the current thread of execution until the time has elapsed or the process has exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1603">Sets the period of time to wait for the associated process to exit, and blocks the current thread of execution until the time has elapsed or the process has exited.</span>
          </span>
          <span data-ttu-id="f1d7e-1604">To avoid blocking the current thread, use the <see cref="E:System.Diagnostics.Process.Exited" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1604">To avoid blocking the current thread, use the <see cref="E:System.Diagnostics.Process.Exited" /> event.</span>
          </span>
          <span data-ttu-id="f1d7e-1605">For code examples, see the <see cref="P:System.Diagnostics.Process.StandardError" /> and the <see cref="P:System.Diagnostics.Process.ExitCode" /> property reference pages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1605">For code examples, see the <see cref="P:System.Diagnostics.Process.StandardError" /> and the <see cref="P:System.Diagnostics.Process.ExitCode" /> property reference pages.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForExit">
      <MemberSignature Language="C#" Value="public void WaitForExit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForExit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.WaitForExit" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForExit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForExit();" />
      <MemberSignature Language="F#" Value="member this.WaitForExit : unit -&gt; unit" Usage="process.WaitForExit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1606">Instructs the <see cref="T:System.Diagnostics.Process" /> component to wait indefinitely for the associated process to exit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1606">Instructs the <see cref="T:System.Diagnostics.Process" /> component to wait indefinitely for the associated process to exit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1607"><xref:System.Diagnostics.Process.WaitForExit> 可讓目前的執行緒等候相關聯的處理序終止為止。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1607"><xref:System.Diagnostics.Process.WaitForExit> makes the current thread wait until the associated process terminates.</span></span>  <span data-ttu-id="f1d7e-1608">所有其他方法會呼叫程序之後，應該要進行呼叫。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1608">It should be called after all other methods are called on the process.</span></span> <span data-ttu-id="f1d7e-1609">為避免封鎖目前的執行緒，請使用 <xref:System.Diagnostics.Process.Exited> 事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1609">To avoid blocking the current thread, use the <xref:System.Diagnostics.Process.Exited> event.</span></span>  
  
 <span data-ttu-id="f1d7e-1610">這個方法會指示<xref:System.Diagnostics.Process>元件等候無限量的時間到結束的處理程序和事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1610">This method instructs the <xref:System.Diagnostics.Process> component to wait an infinite amount of time for the process and event handlers to exit.</span></span> <span data-ttu-id="f1d7e-1611">這會造成停止回應的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1611">This can cause an application to stop responding.</span></span> <span data-ttu-id="f1d7e-1612">例如，如果您呼叫<xref:System.Diagnostics.Process.CloseMainWindow%2A>具有使用者介面程序中，要求作業系統終止相關聯的處理序可能不會處理如果處理程序撰寫永遠不會輸入其訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1612">For example, if you call <xref:System.Diagnostics.Process.CloseMainWindow%2A> for a process that has a user interface, the request to the operating system to terminate the associated process might not be handled if the process is written to never enter its message loop.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1613">中[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和更早的版本<xref:System.Diagnostics.Process.WaitForExit>多載等候<xref:System.Int32.MaxValue>毫秒 （大約 24 天），不無限期。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1613">In the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions, the <xref:System.Diagnostics.Process.WaitForExit> overload waited for <xref:System.Int32.MaxValue> milliseconds (approximately 24 days), not indefinitely.</span></span> <span data-ttu-id="f1d7e-1614">此外，舊版未等待事件處理常式，如果結束完整<xref:System.Int32.MaxValue>已到達時間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1614">Also, previous versions did not wait for the event handlers to exit if the full <xref:System.Int32.MaxValue> time was reached.</span></span>  
  
 <span data-ttu-id="f1d7e-1615">這個多載可確保，所有處理都完成之後，包括重新導向標準輸出的非同步事件的處理。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1615">This overload ensures that all processing has been completed, including the handling of asynchronous events for redirected standard output.</span></span> <span data-ttu-id="f1d7e-1616">您應該使用這個多載之後呼叫<xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29>多載時非同步事件處理常式已重新導向標準輸出。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1616">You should use this overload after a call to the <xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29> overload when standard output has been redirected to asynchronous event handlers.</span></span>  
  
 <span data-ttu-id="f1d7e-1617">時相關聯的處理序結束時 （也就是它遭到關閉作業系統正常或不正常終止） 時，系統會儲存程序的系統管理資訊，並傳回給已呼叫元件<xref:System.Diagnostics.Process.WaitForExit>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1617">When an associated process exits (that is, when it is shut down by the operation system through a normal or abnormal termination), the system stores administrative information about the process and returns to the component that had called <xref:System.Diagnostics.Process.WaitForExit>.</span></span> <span data-ttu-id="f1d7e-1618"><xref:System.Diagnostics.Process>元件可以存取的資訊，包括<xref:System.Diagnostics.Process.ExitTime%2A>，使用<xref:System.Diagnostics.Process.Handle%2A>結束程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1618">The <xref:System.Diagnostics.Process> component can then access the information, which includes the <xref:System.Diagnostics.Process.ExitTime%2A>, by using the <xref:System.Diagnostics.Process.Handle%2A> to the exited process.</span></span>  
  
 <span data-ttu-id="f1d7e-1619">因為相關聯的處理序已結束，<xref:System.Diagnostics.Process.Handle%2A>元件的屬性不會再指向現有的處理序資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1619">Because the associated process has exited, the <xref:System.Diagnostics.Process.Handle%2A> property of the component no longer points to an existing process resource.</span></span> <span data-ttu-id="f1d7e-1620">相反地，控制代碼可用來存取的處理序資源相關的作業系統的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1620">Instead, the handle can be used only to access the operating system's information about the process resource.</span></span> <span data-ttu-id="f1d7e-1621">系統所知的控點來結束處理程序尚未發行所<xref:System.Diagnostics.Process>元件，因此它會保留<xref:System.Diagnostics.Process.ExitTime%2A>並<xref:System.Diagnostics.Process.Handle%2A>資訊中記憶體中，直到<xref:System.Diagnostics.Process>元件特別釋出資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1621">The system is aware of handles to exited processes that have not been released by <xref:System.Diagnostics.Process> components, so it keeps the <xref:System.Diagnostics.Process.ExitTime%2A> and <xref:System.Diagnostics.Process.Handle%2A> information in memory until the <xref:System.Diagnostics.Process> component specifically frees the resources.</span></span> <span data-ttu-id="f1d7e-1622">基於這個理由，每當您呼叫<xref:System.Diagnostics.Process.Start%2A>for<xref:System.Diagnostics.Process>執行個體，呼叫<xref:System.Diagnostics.Process.Close%2A>當相關聯的處理序終止為止，您不再需要任何系統管理相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1622">For this reason, any time you call <xref:System.Diagnostics.Process.Start%2A> for a <xref:System.Diagnostics.Process> instance, call <xref:System.Diagnostics.Process.Close%2A> when the associated process has terminated and you no longer need any administrative information about it.</span></span> <span data-ttu-id="f1d7e-1623"><xref:System.Diagnostics.Process.Close%2A> 釋放配置給結束的處理序的記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1623"><xref:System.Diagnostics.Process.Close%2A> frees the memory allocated to the exited process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1624">請參閱 < 備註 > 一節的<xref:System.Diagnostics.Process.StandardError%2A>屬性參考頁面。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1624">See the Remarks section of the <xref:System.Diagnostics.Process.StandardError%2A> property reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1625">The wait setting could not be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1625">The wait setting could not be accessed.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="f1d7e-1626">No process <see cref="P:System.Diagnostics.Process.Id" /> has been set, and a <see cref="P:System.Diagnostics.Process.Handle" /> from which the <see cref="P:System.Diagnostics.Process.Id" /> property can be determined does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1626">No process <see cref="P:System.Diagnostics.Process.Id" /> has been set, and a <see cref="P:System.Diagnostics.Process.Handle" /> from which the <see cref="P:System.Diagnostics.Process.Id" /> property can be determined does not exist.</span>
          </span>
          <span data-ttu-id="f1d7e-1627">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1627">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
          <span data-ttu-id="f1d7e-1628">-or-  You are attempting to call <see cref="M:System.Diagnostics.Process.WaitForExit" /> for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1628">-or-  You are attempting to call <see cref="M:System.Diagnostics.Process.WaitForExit" /> for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1629">This method is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1629">This method is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1630">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1630">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1631">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1631">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
        <altmember cref="P:System.Diagnostics.Process.Handle" />
        <altmember cref="P:System.Diagnostics.Process.ExitTime" />
        <altmember cref="P:System.Diagnostics.Process.EnableRaisingEvents" />
        <altmember cref="P:System.Diagnostics.Process.HasExited" />
        <altmember cref="E:System.Diagnostics.Process.Exited" />
      </Docs>
    </Member>
    <Member MemberName="WaitForExit">
      <MemberSignature Language="C#" Value="public bool WaitForExit (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WaitForExit(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForExit (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForExit(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.WaitForExit : int -&gt; bool" Usage="process.WaitForExit milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">
          <span data-ttu-id="f1d7e-1632">The amount of time, in milliseconds, to wait for the associated process to exit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1632">The amount of time, in milliseconds, to wait for the associated process to exit.</span>
          </span>
          <span data-ttu-id="f1d7e-1633">The maximum is the largest possible value of a 32-bit integer, which represents infinity to the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1633">The maximum is the largest possible value of a 32-bit integer, which represents infinity to the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1634">Instructs the <see cref="T:System.Diagnostics.Process" /> component to wait the specified number of milliseconds for the associated process to exit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1634">Instructs the <see cref="T:System.Diagnostics.Process" /> component to wait the specified number of milliseconds for the associated process to exit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1635">
            <see langword="true" /> if the associated process has exited; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1635">
              <see langword="true" /> if the associated process has exited; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1636"><xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29> 可讓目前的執行緒等候相關聯的處理序終止為止。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1636"><xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29> makes the current thread wait until the associated process terminates.</span></span> <span data-ttu-id="f1d7e-1637">所有其他方法會呼叫程序之後，應該要進行呼叫。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1637">It should be called after all other methods are called on the process.</span></span> <span data-ttu-id="f1d7e-1638">為避免封鎖目前的執行緒，請使用 <xref:System.Diagnostics.Process.Exited> 事件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1638">To avoid blocking the current thread, use the <xref:System.Diagnostics.Process.Exited> event.</span></span>  
  
 <span data-ttu-id="f1d7e-1639">這個方法會指示<xref:System.Diagnostics.Process>元件等候一段有限的處理序結束的時間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1639">This method instructs the <xref:System.Diagnostics.Process> component to wait a finite amount of time for the process to exit.</span></span> <span data-ttu-id="f1d7e-1640">如果相關聯的處理序未結束的間隔結束時終止要求遭到拒絕，因為`false`會傳回到呼叫的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1640">If the associated process does not exit by the end of the interval because the request to terminate is denied, `false` is returned to the calling procedure.</span></span> <span data-ttu-id="f1d7e-1641">您可以指定<xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>for `milliseconds`，並<xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29?displayProperty=nameWithType>行為與相同<xref:System.Diagnostics.Process.WaitForExit>多載。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1641">You can specify <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for `milliseconds`, and <xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29?displayProperty=nameWithType> will behave the same as the <xref:System.Diagnostics.Process.WaitForExit> overload.</span></span> <span data-ttu-id="f1d7e-1642">如果您將 0 （零） 傳遞給方法，它會傳回`true`只有當 proces byl již ukončen; 否則會立即傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1642">If you pass 0 (zero) to the method, it returns `true` only if the process has already exited; otherwise, it immediately returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1d7e-1643">在[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]和更早版本，如果`milliseconds`為-1，<xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29>多載等候<xref:System.Int32.MaxValue>毫秒 （大約 24 天），不無限期。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1643">In the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions, if `milliseconds` was -1, the <xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29> overload waited for <xref:System.Int32.MaxValue> milliseconds (approximately 24 days), not indefinitely.</span></span>  
  
 <span data-ttu-id="f1d7e-1644">當非同步事件處理常式已重新導向標準輸出時，它有可能，輸出處理尚未完成此方法傳回時。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1644">When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when this method returns.</span></span> <span data-ttu-id="f1d7e-1645">若要確保非同步事件處理已完成，請呼叫<xref:System.Diagnostics.Process.WaitForExit>多載會採用任何參數，在收到之後`true`從這個多載。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1645">To ensure that asynchronous event handling has been completed, call the <xref:System.Diagnostics.Process.WaitForExit> overload that takes no parameter after receiving a `true` from this overload.</span></span> <span data-ttu-id="f1d7e-1646">為協助確保<xref:System.Diagnostics.Process.Exited>Windows Forms 應用程式中正確地處理事件，請將<xref:System.Diagnostics.Process.SynchronizingObject%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1646">To help ensure that the <xref:System.Diagnostics.Process.Exited> event is handled correctly in Windows Forms applications, set the <xref:System.Diagnostics.Process.SynchronizingObject%2A> property.</span></span>  
  
 <span data-ttu-id="f1d7e-1647">相關聯的處理序結束時 （關閉作業系統正常或不正常終止），系統會儲存程序的系統管理資訊，並傳回給已呼叫元件<xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1647">When an associated process exits (is shut down by the operating system through a normal or abnormal termination), the system stores administrative information about the process and returns to the component that had called <xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29>.</span></span> <span data-ttu-id="f1d7e-1648"><xref:System.Diagnostics.Process>元件可以存取的資訊，包括<xref:System.Diagnostics.Process.ExitTime%2A>，使用<xref:System.Diagnostics.Process.Handle%2A>結束程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1648">The <xref:System.Diagnostics.Process> component can then access the information, which includes the <xref:System.Diagnostics.Process.ExitTime%2A>, by using the <xref:System.Diagnostics.Process.Handle%2A> to the exited process.</span></span>  
  
 <span data-ttu-id="f1d7e-1649">因為相關聯的處理序已結束，<xref:System.Diagnostics.Process.Handle%2A>元件的屬性不會再指向現有的處理序資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1649">Because the associated process has exited, the <xref:System.Diagnostics.Process.Handle%2A> property of the component no longer points to an existing process resource.</span></span> <span data-ttu-id="f1d7e-1650">相反地，控制代碼可用來存取的處理序資源相關的作業系統的資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1650">Instead, the handle can be used only to access the operating system's information about the process resource.</span></span> <span data-ttu-id="f1d7e-1651">系統所知的控點來結束處理程序尚未發行所<xref:System.Diagnostics.Process>元件，因此它會保留<xref:System.Diagnostics.Process.ExitTime%2A>並<xref:System.Diagnostics.Process.Handle%2A>資訊中記憶體中，直到<xref:System.Diagnostics.Process>元件特別釋出資源。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1651">The system is aware of handles to exited processes that have not been released by <xref:System.Diagnostics.Process> components, so it keeps the <xref:System.Diagnostics.Process.ExitTime%2A> and <xref:System.Diagnostics.Process.Handle%2A> information in memory until the <xref:System.Diagnostics.Process> component specifically frees the resources.</span></span> <span data-ttu-id="f1d7e-1652">基於這個理由，每當您呼叫<xref:System.Diagnostics.Process.Start%2A>for<xref:System.Diagnostics.Process>執行個體，呼叫<xref:System.Diagnostics.Process.Close%2A>當相關聯的處理序終止為止，您不再需要任何系統管理相關資訊。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1652">For this reason, any time you call <xref:System.Diagnostics.Process.Start%2A> for a <xref:System.Diagnostics.Process> instance, call <xref:System.Diagnostics.Process.Close%2A> when the associated process has terminated and you no longer need any administrative information about it.</span></span> <span data-ttu-id="f1d7e-1653"><xref:System.Diagnostics.Process.Close%2A> 釋放配置給結束的處理序的記憶體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1653"><xref:System.Diagnostics.Process.Close%2A> frees the memory allocated to the exited process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1654">程式碼範例，請參閱<xref:System.Diagnostics.Process.ExitCode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1654">See the code example for the <xref:System.Diagnostics.Process.ExitCode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f1d7e-1655">The wait setting could not be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1655">The wait setting could not be accessed.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="f1d7e-1656">No process <see cref="P:System.Diagnostics.Process.Id" /> has been set, and a <see cref="P:System.Diagnostics.Process.Handle" /> from which the <see cref="P:System.Diagnostics.Process.Id" /> property can be determined does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1656">No process <see cref="P:System.Diagnostics.Process.Id" /> has been set, and a <see cref="P:System.Diagnostics.Process.Handle" /> from which the <see cref="P:System.Diagnostics.Process.Id" /> property can be determined does not exist.</span>
          </span>
          <span data-ttu-id="f1d7e-1657">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1657">-or-  There is no process associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
          <span data-ttu-id="f1d7e-1658">-or-  You are attempting to call <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> for a process that is running on a remote computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1658">-or-  You are attempting to call <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> for a process that is running on a remote computer.</span>
          </span>
          <span data-ttu-id="f1d7e-1659">This method is available only for processes that are running on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1659">This method is available only for processes that are running on the local computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f1d7e-1660">
            <paramref name="milliseconds" /> is a negative number other than -1, which represents an infinite time-out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1660">
              <paramref name="milliseconds" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1661">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1661">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1662">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1662">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
        <altmember cref="M:System.Diagnostics.Process.Kill" />
        <altmember cref="P:System.Diagnostics.Process.Handle" />
        <altmember cref="P:System.Diagnostics.Process.ExitTime" />
        <altmember cref="P:System.Diagnostics.Process.EnableRaisingEvents" />
        <altmember cref="P:System.Diagnostics.Process.HasExited" />
        <altmember cref="E:System.Diagnostics.Process.Exited" />
        <altmember cref="P:System.Diagnostics.Process.SynchronizingObject" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForInputIdle">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1663">Causes the <see cref="T:System.Diagnostics.Process" /> component to wait for the associated process to enter an idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1663">Causes the <see cref="T:System.Diagnostics.Process" /> component to wait for the associated process to enter an idle state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WaitForInputIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.WaitForInputIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle();" />
      <MemberSignature Language="F#" Value="member this.WaitForInputIdle : unit -&gt; bool" Usage="process.WaitForInputIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1664">Causes the <see cref="T:System.Diagnostics.Process" /> component to wait indefinitely for the associated process to enter an idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1664">Causes the <see cref="T:System.Diagnostics.Process" /> component to wait indefinitely for the associated process to enter an idle state.</span>
          </span>
          <span data-ttu-id="f1d7e-1665">This overload applies only to processes with a user interface and, therefore, a message loop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1665">This overload applies only to processes with a user interface and, therefore, a message loop.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1666">
            <see langword="true" /> if the associated process has reached an idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1666">
              <see langword="true" /> if the associated process has reached an idle state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1667">使用<xref:System.Diagnostics.Process.WaitForInputIdle>強制您的應用程式等候，直到訊息迴圈已閒置狀態恢復處理。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1667">Use <xref:System.Diagnostics.Process.WaitForInputIdle> to force the processing of your application to wait until the message loop has returned to the idle state.</span></span> <span data-ttu-id="f1d7e-1668">當具有使用者介面的程序正在執行時，其訊息迴圈會執行每次 Windows 訊息傳送至處理序的作業系統。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1668">When a process with a user interface is executing, its message loop executes every time a Windows message is sent to the process by the operating system.</span></span> <span data-ttu-id="f1d7e-1669">此程序則會傳回至訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1669">The process then returns to the message loop.</span></span> <span data-ttu-id="f1d7e-1670">處理程序即處於閒置狀態，當它正在等候訊息迴圈內的訊息。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1670">A process is said to be in an idle state when it is waiting for messages inside of a message loop.</span></span> <span data-ttu-id="f1d7e-1671">此狀態時很有用，例如，您的應用程式必須等候完成建立其主視窗，才能在應用程式傳送與該視窗啟動的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1671">This state is useful, for example, when your application needs to wait for a starting process to finish creating its main window before the application communicates with that window.</span></span>  
  
 <span data-ttu-id="f1d7e-1672">如果沒有訊息迴圈，處理程序。<xref:System.Diagnostics.Process.WaitForInputIdle>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1672">If a process does not have a message loop, <xref:System.Diagnostics.Process.WaitForInputIdle> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f1d7e-1673"><xref:System.Diagnostics.Process.WaitForInputIdle>多載會指示<xref:System.Diagnostics.Process>無限期地等待處理序變成閒置訊息迴圈中的元件。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1673">The <xref:System.Diagnostics.Process.WaitForInputIdle> overload instructs the <xref:System.Diagnostics.Process> component to wait indefinitely for the process to become idle in the message loop.</span></span> <span data-ttu-id="f1d7e-1674">此指令，可能會造成停止回應的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1674">This instruction can cause an application to stop responding.</span></span> <span data-ttu-id="f1d7e-1675">例如，如果處理程序撰寫為永遠其訊息迴圈立即結束，如程式碼片段所示`while(true)`。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1675">For example, if the process is written to always exit its message loop immediately, as in the code fragment `while(true)`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1676">The process does not have a graphical interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1676">The process does not have a graphical interface.</span>
          </span>
          <span data-ttu-id="f1d7e-1677">-or-  An unknown error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1677">-or-  An unknown error occurred.</span>
          </span>
          <span data-ttu-id="f1d7e-1678">The process failed to enter an idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1678">The process failed to enter an idle state.</span>
          </span>
          <span data-ttu-id="f1d7e-1679">-or-  The process has already exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1679">-or-  The process has already exited.</span>
          </span>
          <span data-ttu-id="f1d7e-1680">-or-  No process is associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1680">-or-  No process is associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1681">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1681">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1682">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1682">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.Start" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.WaitForInputIdle : int -&gt; bool" Usage="process.WaitForInputIdle milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">
          <span data-ttu-id="f1d7e-1683">A value of 1 to <see cref="F:System.Int32.MaxValue" /> that specifies the amount of time, in milliseconds, to wait for the associated process to become idle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1683">A value of 1 to <see cref="F:System.Int32.MaxValue" /> that specifies the amount of time, in milliseconds, to wait for the associated process to become idle.</span>
          </span>
          <span data-ttu-id="f1d7e-1684">A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1684">A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1d7e-1685">Causes the <see cref="T:System.Diagnostics.Process" /> component to wait the specified number of milliseconds for the associated process to enter an idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1685">Causes the <see cref="T:System.Diagnostics.Process" /> component to wait the specified number of milliseconds for the associated process to enter an idle state.</span>
          </span>
          <span data-ttu-id="f1d7e-1686">This overload applies only to processes with a user interface and, therefore, a message loop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1686">This overload applies only to processes with a user interface and, therefore, a message loop.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1d7e-1687">
            <see langword="true" /> if the associated process has reached an idle state; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1687">
              <see langword="true" /> if the associated process has reached an idle state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1688">使用<xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29>強制您的應用程式等候，直到訊息迴圈已閒置狀態恢復處理。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1688">Use <xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29> to force the processing of your application to wait until the message loop has returned to the idle state.</span></span> <span data-ttu-id="f1d7e-1689">當具有使用者介面的程序正在執行時，其訊息迴圈會執行每次 Windows 訊息傳送至處理序的作業系統。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1689">When a process with a user interface is executing, its message loop executes every time a Windows message is sent to the process by the operating system.</span></span> <span data-ttu-id="f1d7e-1690">此程序則會傳回至訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1690">The process then returns to the message loop.</span></span> <span data-ttu-id="f1d7e-1691">處理程序即處於閒置狀態，當它正在等候訊息迴圈內的訊息。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1691">A process is said to be in an idle state when it is waiting for messages inside of a message loop.</span></span> <span data-ttu-id="f1d7e-1692">此狀態時很有用，例如，您的應用程式必須等候完成建立其主視窗，才能在應用程式傳送與該視窗啟動的處理序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1692">This state is useful, for example, when your application needs to wait for a starting process to finish creating its main window before the application communicates with that window.</span></span>  
  
 <span data-ttu-id="f1d7e-1693">如果沒有訊息迴圈，處理程序。<xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1693">If a process does not have a message loop, <xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f1d7e-1694"><xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29>多載會指示<xref:System.Diagnostics.Process>元件等候一段有限的處理序變成閒置訊息迴圈中的時間。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1694">The <xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29> overload instructs the <xref:System.Diagnostics.Process> component to wait a finite amount of time for the process to become idle in the message loop.</span></span> <span data-ttu-id="f1d7e-1695">相關聯的處理序已不變成閒置狀態時的時間間隔結束迴圈仍在處理訊息，因為`false`會傳回到呼叫的程序。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1695">If the associated process has not become idle by the end of the interval because the loop is still processing messages, `false` is returned to the calling procedure.</span></span>  
  
 <span data-ttu-id="f1d7e-1696">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1696">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f1d7e-1697">The process does not have a graphical interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1697">The process does not have a graphical interface.</span>
          </span>
          <span data-ttu-id="f1d7e-1698">-or-  An unknown error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1698">-or-  An unknown error occurred.</span>
          </span>
          <span data-ttu-id="f1d7e-1699">The process failed to enter an idle state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1699">The process failed to enter an idle state.</span>
          </span>
          <span data-ttu-id="f1d7e-1700">-or-  The process has already exited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1700">-or-  The process has already exited.</span>
          </span>
          <span data-ttu-id="f1d7e-1701">-or-  No process is associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1701">-or-  No process is associated with this <see cref="T:System.Diagnostics.Process" /> object.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1702">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1702">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1703">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1703">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Diagnostics.Process.Start" />
        <altmember cref="M:System.Diagnostics.Process.CloseMainWindow" />
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public int WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WorkingSet { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int" Usage="System.Diagnostics.Process.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of physical memory currently used for this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use WorkingSet64")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1704">Gets the associated process's physical memory usage, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1704">Gets the associated process's physical memory usage, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1705">相關的處理序正在使用的實體記憶體的總量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1705">The total amount of physical memory the associated process is using, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1706">這個屬性所傳回的值表示目前的工作集由處理序，以位元組為單位的記憶體大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1706">The value returned by this property represents the current size of working set memory used by the process, in bytes.</span></span> <span data-ttu-id="f1d7e-1707">處理程序的工作集是實體 RAM 記憶體中的目前可見的程序的記憶體分頁集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1707">The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</span></span> <span data-ttu-id="f1d7e-1708">這些頁面是常駐的而且可供使用，而不觸發分頁錯誤的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1708">These pages are resident and available for an application to use without triggering a page fault.</span></span>  
  
 <span data-ttu-id="f1d7e-1709">工作集包括共用和私用的資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1709">The working set includes both shared and private data.</span></span> <span data-ttu-id="f1d7e-1710">共用的資料包含頁面包含所有處理序執行，包括處理序模組和系統程式庫的指示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1710">The shared data includes the pages that contain all the instructions that the process executes, including the process modules and the system libraries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1711">下列範例會啟動 「 記事本 」 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1711">The following example starts an instance of Notepad.</span></span> <span data-ttu-id="f1d7e-1712">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1712">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1713">在處理序結束時，此範例會偵測並顯示該處理序的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1713">The example detects when the process exits, and displays the process' exit code.</span></span>  
  
 [!code-cpp[process_sample#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_sample/CPP/process_sample.cpp#1)]
 [!code-csharp[process_sample#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_sample/CS/process_sample.cs#1)]
 [!code-vb[process_sample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_sample/VB/process_sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1714">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1714">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1715">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1715">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1716">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1716">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MinWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.MaxWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.PeakWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.PeakWorkingSet64" />
        <altmember cref="P:System.Diagnostics.Process.WorkingSet64" />
      </Docs>
    </Member>
    <Member MemberName="WorkingSet64">
      <MemberSignature Language="C#" Value="public long WorkingSet64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet64" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Process.WorkingSet64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet64 : int64" Usage="System.Diagnostics.Process.WorkingSet64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The amount of physical memory currently used for this process.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1d7e-1717">Gets the amount of physical memory, in bytes, allocated for the associated process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1717">Gets the amount of physical memory, in bytes, allocated for the associated process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1d7e-1718">配置給關聯處理序的實體記憶體量，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1718">The amount of physical memory, in bytes, allocated for the associated process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1d7e-1719">這個屬性所傳回的值表示目前的工作集由處理序，以位元組為單位的記憶體大小。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1719">The value returned by this property represents the current size of working set memory used by the process, in bytes.</span></span> <span data-ttu-id="f1d7e-1720">處理程序的工作集是實體 RAM 記憶體中的目前可見的程序的記憶體分頁集。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1720">The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</span></span> <span data-ttu-id="f1d7e-1721">這些頁面是常駐的而且可供使用，而不觸發分頁錯誤的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1721">These pages are resident and available for an application to use without triggering a page fault.</span></span>  
  
 <span data-ttu-id="f1d7e-1722">工作集包括共用和私用的資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1722">The working set includes both shared and private data.</span></span> <span data-ttu-id="f1d7e-1723">共用的資料包含頁面包含所有處理序執行，包括指示處理序模組和系統程式庫中的指示。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1723">The shared data includes the pages that contain all the instructions that the process executes, including instructions in the process modules and the system libraries.</span></span>  
  
 <span data-ttu-id="f1d7e-1724">這個屬性可用來監視處理器 32 位元或 64 位元處理器的電腦上的記憶體使用量。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1724">This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</span></span> <span data-ttu-id="f1d7e-1725">屬性值相當於**工作組**處理程序的效能計數器。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1725">The property value is equivalent to the **Working Set** performance counter for the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1d7e-1726">下列程式碼範例會啟動 「 記事本 」 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1726">The following code example starts an instance of the Notepad application.</span></span> <span data-ttu-id="f1d7e-1727">此範例會擷取並顯示相關聯的處理序的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1727">The example then retrieves and displays various properties of the associated process.</span></span> <span data-ttu-id="f1d7e-1728">在處理序結束時，此範例會偵測並顯示其結束程式碼和尖峰記憶體統計資料。</span><span class="sxs-lookup"><span data-stu-id="f1d7e-1728">The example detects when the process exits, and displays its exit code and peak memory statistics.</span></span>  
  
 [!code-cpp[Diag_Process_MemoryProperties64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CPP/source.cpp#1)]
 [!code-csharp[Diag_Process_MemoryProperties64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diag_Process_MemoryProperties64/CS/source.cs#1)]
 [!code-vb[Diag_Process_MemoryProperties64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diag_Process_MemoryProperties64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1d7e-1729">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1729">The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f1d7e-1730">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1730">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f1d7e-1731">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1d7e-1731">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.Process.MinWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.MaxWorkingSet" />
        <altmember cref="P:System.Diagnostics.Process.PeakWorkingSet64" />
      </Docs>
    </Member>
  </Members>
</Type>