<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StackFrame.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5714fbf44d620dc5e0fada1990d848be249a7fe7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">714fbf44d620dc5e0fada1990d848be249a7fe7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackFrame">
          <source>Provides information about a <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph>, which represents a function call on the call stack for the current thread.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 的相關資訊，代表目前執行緒的呼叫堆疊上的函式呼叫。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> is created and pushed on the call stack for every function call made during the execution of a thread.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>建立後，每個執行緒的執行期間所做的函式呼叫的呼叫堆疊上推入。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The stack frame always includes <ph id="ph1">&lt;xref:System.Reflection.MethodBase&gt;</ph> information, and optionally includes file name, line number, and column number information.</source>
          <target state="translated">堆疊框架一定會包含<ph id="ph1">&lt;xref:System.Reflection.MethodBase&gt;</ph>的詳細資訊，並選擇性地包含檔案名稱、 行號和資料行號資訊。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> information will be most informative with Debug build configurations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 就會使用偵錯組建組態的資訊最多資訊。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
          <target state="translated">根據預設，偵錯組建中包含偵錯符號，但不需要發行組建。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> objects.</source>
          <target state="translated">偵錯符號包含大部分的檔案、 方法名稱、 行號和資料行資訊用來建構<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class to provide the stack frame information for a stack trace.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別，以提供堆疊追蹤的堆疊框架資訊。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The following example demonstrates the use of  the members of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">下列範例示範如何使用之成員的<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>for the ability of inheritors to access unmanaged code.</source>
          <target state="translated">用於存取 unmanaged 程式碼繼承者的能力。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">這個類別無法被繼承，部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackFrame">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number of the stack frame; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取堆疊框架的檔名、行號和欄號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class, optionally capturing source information.</source>
          <target state="translated">選擇性地擷取來源資訊，以初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Boolean%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">要略過的堆疊上的框架數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that corresponds to a frame above the current stack frame.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體，而該類別對應於目前堆疊框架上方的框架。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">要略過的堆疊上的框架數。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number of the stack frame; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要擷取堆疊框架的檔名、行號和欄號，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that corresponds to a frame above the current stack frame, optionally capturing source information.</source>
          <target state="translated">選擇性地擷取來源資訊，以初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體，而該類別對應於目前堆疊框架上方的框架。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%2CSystem.Boolean%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>The file name.</source>
          <target state="translated">檔案名稱。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>The line number in the specified file.</source>
          <target state="translated">指定檔案中的行號。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that contains only the given file name and line number.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體，而該類別只包含指定的檔名和行號。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">當您不想使用偵錯工具的線條對應邏輯時，請使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The file name.</source>
          <target state="translated">檔案名稱。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The line number in the specified file.</source>
          <target state="translated">指定檔案中的行號。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The column number in the specified file.</source>
          <target state="translated">指定檔案中的欄位數目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that contains only the given file name, line number, and column number.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 類別的新執行個體，而該類別只包含指定的檔名、行號和欄號。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">當您不想使用偵錯工具的線條對應邏輯時，請使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%2A&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>Gets the column number in the file that contains the code that is executing.</source>
          <target state="translated">取得檔案中的欄位數目，含有正在執行的程式碼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">這項資訊通常擷取自可執行檔的偵錯符號。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>The file column number, or 0 (zero) if the file column number cannot be determined.</source>
          <target state="translated">檔案欄號，如果無法確定檔案欄號則為 0 (零)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileColumnNumber%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileColumnNumber%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>Gets the line number in the file that contains the code that is executing.</source>
          <target state="translated">取得檔案中的行號，含有正在執行的程式碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">這項資訊通常擷取自可執行檔的偵錯符號。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>The file line number, or 0 (zero) if the file line number cannot be determined.</source>
          <target state="translated">檔案行號，如果無法確定檔案行號則為 0 (零)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileLineNumber%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileLineNumber%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>Gets the file name that contains the code that is executing.</source>
          <target state="translated">取得檔案名稱，含有正在執行的程式碼。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">這項資訊通常擷取自可執行檔的偵錯符號。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>The file name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the file name cannot be determined.</source>
          <target state="translated">檔名，如果無法確定檔名則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileName%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileName%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>for access to the path information.</source>
          <target state="translated">用於存取路徑資訊。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>Associated enumeration:  <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別：  <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing.</source>
          <target state="translated">為正在執行的方法取得從 Microsoft intermediate language (MSIL) 程式碼起始的位移。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code.</source>
          <target state="translated">這項位移可能是大約值，這是根據 Just-In-Time (JIT) 編譯器是否產生偵錯程式碼而定。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>The generation of this debugging information is controlled by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> 控制產生這個偵錯資訊。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>The offset from the start of the MSIL code for the method that is executing.</source>
          <target state="translated">從 MSIL 程式碼起始的位移，用於正在執行的方法。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetILOffset%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetILOffset%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>Gets the method in which the frame is executing.</source>
          <target state="translated">取得框架正在執行的所在方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>The method in which the frame is executing.</source>
          <target state="translated">框架正在執行的所在方法。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>The method that is currently executing may be inherited from a base class, although it is called in a derived class.</source>
          <target state="translated">目前執行的方法可以繼承自基底類別，雖然它在衍生類別中呼叫。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Reflection.MethodBase&gt;</ph> object that is returned by <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> identifies the base class, not the derived class.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Reflection.MethodBase&gt;</ph>所傳回的物件<ph id="ph3">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph>識別的基底類別，而不是衍生的類別。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed.</source>
          <target state="translated">為正在執行的方法取得從原生 (Native) Just-In-Time (JIT) 編譯程式碼起始的位移。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>The generation of this debugging information is controlled by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> class.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> 類別控制產生這個偵錯資訊。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>The offset from the start of the JIT-compiled code for the method that is being executed.</source>
          <target state="translated">從 JIT 編譯程式碼起始的位移，用於正在執行的方法。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetNativeOffset%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetNativeOffset%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
          <source>Defines the value that is returned from the <ph id="ph1">&lt;see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Diagnostics.StackFrame.GetILOffset" /&gt;</ph> method when the native or Microsoft intermediate language (MSIL) offset is unknown.</source>
          <target state="translated">當原生的 (Native) 或 Microsoft Intermediate Language (MSIL) 的位移不明時，定義傳回自 <ph id="ph1">&lt;see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.Diagnostics.StackFrame.GetILOffset" /&gt;</ph> 方法的值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
          <source>This field is constant.</source>
          <target state="translated">這個欄位是常數。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
          <source>The value of this constant is -1.</source>
          <target state="translated">這個常數的值為-1。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>Builds a readable representation of the stack trace.</source>
          <target state="translated">建立堆疊追蹤的可讀取表示。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>A readable representation of the stack trace.</source>
          <target state="translated">堆疊追蹤的可讀取表示。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.ToString%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.ToString%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>for access to the path information.</source>
          <target state="translated">用於存取路徑資訊。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>