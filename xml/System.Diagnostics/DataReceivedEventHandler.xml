<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9aec193d2b0b192d148a96593d5203aef2cf07f3" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37664378" /></Metadata><TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataReceivedEventHandler = delegate of obj * DataReceivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="e4b6e-101">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="e4b6e-102"><see cref="T:System.Diagnostics.DataReceivedEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="e4b6e-103">表示將處理 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 的 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件或 <see cref="T:System.Diagnostics.Process" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4b6e-104">建立 <xref:System.Diagnostics.DataReceivedEventHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="e4b6e-105">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="e4b6e-106">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="e4b6e-107">如需有關事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e4b6e-108">若要以非同步方式收集的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>或是<xref:System.Diagnostics.Process.StandardError%2A>資料流輸出的處理程序，新增您的事件處理常式，來<xref:System.Diagnostics.Process.OutputDataReceived>或<xref:System.Diagnostics.Process.ErrorDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="e4b6e-109">每次處理程序會寫入對應的重新導向資料流中的一條線時，會引發這些事件。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="e4b6e-110">重新導向資料流關閉時，null 的列會傳送至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="e4b6e-111">確保您的事件處理常式檢查此條件存取之前<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="e4b6e-112">例如，您可以使用`static`方法<xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType>驗證<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>在事件處理常式中的屬性。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4b6e-113">下列程式碼範例說明如何執行非同步的讀取的作業上的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>的資料流**排序**命令。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="e4b6e-114">**排序**命令是主控台應用程式讀取及排序文字輸入。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="e4b6e-115">此範例會建立<xref:System.Diagnostics.DataReceivedEventHandler>委派`SortOutputHandler`事件處理常式，並產生關聯的委派<xref:System.Diagnostics.Process.OutputDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="e4b6e-116">事件處理常式收到文字行的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，格式化文字，並將文字寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="e4b6e-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>