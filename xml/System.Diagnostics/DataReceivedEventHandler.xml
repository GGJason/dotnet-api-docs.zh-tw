<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataReceivedEventHandler.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b72e96be77b3f18942ac9258ea5a047960ff7583.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b72e96be77b3f18942ac9258ea5a047960ff7583</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The source of the event.</source>
          <target state="translated">事件的來源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.DataReceivedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.DataReceivedEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.OutputDataReceived" /&gt;</ph> event or <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.ErrorDataReceived" /&gt;</ph> event of a <ph id="ph3">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>.</source>
          <target state="translated">表示將處理 <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.OutputDataReceived" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.ErrorDataReceived" /&gt;</ph> 事件或 <ph id="ph3">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 事件的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>When you create a <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
          <target state="translated">建立 <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph> 委派時，必須識別處理事件的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需事件處理常式委派的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>To asynchronously collect the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream output of a process, add your event handler to the <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event.</source>
          <target state="translated">若要以非同步方式收集的重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>程序的輸出資料流中，加入事件處理常式<ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>或<ph id="ph4">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>These events are raised each time the process writes a line to the corresponding redirected stream.</source>
          <target state="translated">每次處理程序將某行寫入至對應的重新導向資料流時，會引發這些事件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>When the redirected stream is closed, a null line is sent to the event handler.</source>
          <target state="translated">重新導向資料流關閉時，null 的列會傳送至事件處理常式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>Ensure that your event handler checks for this condition before accessing the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property.</source>
          <target state="translated">確保您的事件處理常式檢查此條件存取之前<ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>For example, you can use the <ph id="ph1">`static`</ph> method <ph id="ph2">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType&gt;</ph> to validate the <ph id="ph3">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property in your event handler.</source>
          <target state="translated">例如，您可以使用<ph id="ph1">`static`</ph>方法<ph id="ph2">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType&gt;</ph>驗證<ph id="ph3">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph>事件處理常式中的屬性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The following code example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <bpt id="p1">**</bpt>sort<ept id="p1">**</ept> command.</source>
          <target state="translated">下列程式碼範例說明如何執行非同步的讀取的作業上的重新導向<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流<bpt id="p1">**</bpt>排序<ept id="p1">**</ept>命令。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The <bpt id="p1">**</bpt>sort<ept id="p1">**</ept> command is a console application that reads and sorts text input.</source>
          <target state="translated"><bpt id="p1">**</bpt>排序<ept id="p1">**</ept>命令是主控台應用程式讀取及排序文字輸入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph> delegate for the <ph id="ph2">`SortOutputHandler`</ph> event handler and associates the delegate with the <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">此範例會建立<ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler&gt;</ph>委派<ph id="ph2">`SortOutputHandler`</ph>事件處理常式，並產生關聯的委派<ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventHandler">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and writes the text to the screen.</source>
          <target state="translated">此事件處理常式收到來自的重新導向的文字行<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>資料流，格式化文字，並將文字寫入至螢幕。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>