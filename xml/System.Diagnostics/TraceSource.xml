<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f28ef5eca9523cc53cab30cd635198ecf4754d4" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58706432" /></Metadata><TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一組方法和屬性，可以讓應用程式追蹤程式碼的執行情形，並讓追蹤訊息與其來源產生關聯。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式會使用 <xref:System.Diagnostics.TraceSource> 類別產生能夠與應用程式相關聯的追蹤。 <xref:System.Diagnostics.TraceSource> 提供了追蹤方法，能讓您輕鬆地追蹤事件、追蹤資料和問題資訊追蹤。 追蹤輸出<xref:System.Diagnostics.TraceSource>可以由組態檔設定控制。 組態檔位於與應用程式可執行檔的資料夾，並具有副檔名.config 檔案新增的應用程式的名稱。 比方說，TraceSourceSample.exe 的組態檔的名稱是 TraceSourceSample.exe.config。組態檔可用來判斷要傳送的追蹤資訊的所在，以及層級的活動所要追蹤。 下列範例顯示範例應用程式組態檔的內容。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <xref:System.Diagnostics.TraceSource>類別由來源的名稱，通常就是應用程式的名稱。  來自特定元件的追蹤訊息可以由啟動特定的追蹤來源，讓使用者輕易識別所有訊息來自該元件。  
  
 <xref:System.Diagnostics.TraceSource> 定義追蹤方法，但不會實際提供任何特定機制來產生和儲存追蹤資料。 追蹤接聽項，也就是可由追蹤來源載入的外掛程式所產生的追蹤資料。  
  
> [!NOTE]
>  您不應該呼叫追蹤方法，在最終處理期間。 如此一來可能會導致<xref:System.ObjectDisposedException>所擲回。  
  
 您可以藉由新增或移除自訂追蹤輸出的目標<xref:System.Diagnostics.TraceListener>執行個體或從儲存在集合<xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType>屬性。 根據預設，追蹤輸出會使用所產生的執行個體<xref:System.Diagnostics.DefaultTraceListener>類別。 上述的組態檔範例示範如何移除<xref:System.Diagnostics.DefaultTraceListener>並新增<xref:System.Diagnostics.ConsoleTraceListener>以產生追蹤來源的追蹤輸出。 如需詳細資訊，請參閱 < [&lt;接聽程式&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md)並[ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md)。  
  
> [!NOTE]
>  加入追蹤接聽程式，<xref:System.Diagnostics.TraceSource.Listeners%2A>集合可能會導致在追蹤時擲回例外狀況，如果追蹤接聽程式所使用的資源無法使用。 條件並擲回的例外狀況取決於追蹤接聽程式，並無法在本主題中列舉。 它可能會很有用的呼叫置於<xref:System.Diagnostics.TraceSource>中的方法`try` / `catch`來偵測並處理從追蹤接聽項的任何例外狀況區塊。  
  
 <xref:System.Diagnostics.SourceSwitch>類別提供方法，以動態方式控制追蹤輸出。 上述的組態檔範例示範您可以關閉追蹤來源和控制項的層級追蹤，就會發生的追蹤。  您可以修改來源參數的值，不需要重新編譯您的應用程式。 如需使用組態檔來設定參數資訊，請參閱<xref:System.Diagnostics.Switch>和[How to:建立、 初始化和設定追蹤參數](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)。  
  
> [!NOTE]
>  如果應用程式執行時，您可以修改組態檔，必須停止並重新啟動應用程式或<xref:System.Diagnostics.Trace.Refresh%2A>必須呼叫方法，新的設定才會生效。  
  
 <xref:System.Diagnostics.TraceEventType>列舉型別用來定義事件類型的追蹤訊息。 追蹤篩選使用<xref:System.Diagnostics.TraceEventType>來判斷是否追蹤接聽程式應該產生追蹤訊息。  
  
 追蹤接聽程式 （選擇性） 可以有一層額外的篩選追蹤篩選器。  如果追蹤接聽程式具有相關聯的篩選，接聽程式會呼叫<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>上該篩選條件來判斷是否要產生的追蹤資訊的方法。  
  
 追蹤接聽程式使用的值<xref:System.Diagnostics.Trace>類別內容<xref:System.Diagnostics.Trace.Indent%2A>， <xref:System.Diagnostics.Trace.IndentSize%2A>，和<xref:System.Diagnostics.Trace.AutoFlush%2A>來設定追蹤輸出的格式。 您可以使用設定檔案屬性，來設定<xref:System.Diagnostics.Trace.Indent%2A>， <xref:System.Diagnostics.Trace.IndentSize%2A>，和<xref:System.Diagnostics.Trace.AutoFlush%2A>屬性。 下列範例會設定<xref:System.Diagnostics.Trace.AutoFlush%2A>屬性，以`false`而<xref:System.Diagnostics.Trace.IndentSize%2A>屬性設定為 3。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Diagnostics.TraceSource>類別，以將追蹤轉寄到接聽程式。  此範例也示範參數和篩選器的使用方式。  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>此型別具備執行緒安全。</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">追蹤和偵錯設定結構描述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.TraceSource" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">來源的名稱 (通常是應用程式的名稱)。</param>
        <summary>使用指定的來源名稱，初始化 <see cref="T:System.Diagnostics.TraceSource" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 來源名稱用來識別追蹤。 它正由<xref:System.Diagnostics.SourceFilter>來判斷追蹤接聽程式是否應該產生追蹤。 建議的作法是使用做為來源名稱的應用程式的名稱。  
  
> [!NOTE]
>  您不需要建立新<xref:System.Diagnostics.TraceSource>針對每個追蹤要求的執行個體。 建立一個<xref:System.Diagnostics.TraceSource>執行個體，並將它用於所有追蹤要求的應用程式。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Diagnostics.TraceSource.%23ctor%2A>建構函式來建立新的<xref:System.Diagnostics.TraceSource>物件。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 為空字串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">來源的名稱，一般來說是應用程式的名稱。</param>
        <param name="defaultLevel">列舉值的位元組合，會指定要進行追蹤的預設來源層級。</param>
        <summary>使用指定的來源名稱，以及要開始進行追蹤的層級，初始化 <see cref="T:System.Diagnostics.TraceSource" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 來源名稱用來識別追蹤。 它可供<xref:System.Diagnostics.SourceSwitch>來判斷是否進行追蹤及<xref:System.Diagnostics.SourceFilter>來判斷是否要產生追蹤。 預設來源層級由<xref:System.Diagnostics.EventTypeFilter>來判斷追蹤是否發生根據要追蹤之訊息的來源層級。  
  
> [!NOTE]
>  您不需要建立新<xref:System.Diagnostics.TraceSource>針對每個追蹤要求的執行個體。 建立一個<xref:System.Diagnostics.TraceSource>執行個體，並將它用於所有追蹤要求的應用程式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 為空字串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得在應用程式組態檔中定義的自訂參數屬性。</summary>
        <value><see cref="T:System.Collections.Specialized.StringDictionary" />，其中包含追蹤參數的自訂屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Attributes%2A>屬性會識別應用程式的組態檔參考的自訂屬性。 不會列舉未參考的自訂屬性。 繼承自類別<xref:System.Diagnostics.TraceSource>類別可以加入自訂屬性，藉由覆寫<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType>方法，並傳回自訂屬性名稱的字串陣列。  
  
 以下是範例的追蹤來源的項目，指定自訂屬性`SecondTraceSourceAttribute`:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示的自訂屬性<xref:System.Diagnostics.TraceSource>。  此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉追蹤接聽程式集合中的所有追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Close%2A>方法呼叫<xref:System.Diagnostics.TraceListener.Close%2A>方法中的每個追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Diagnostics.TraceSource.Close%2A>方法來關閉在集合中的所有接聽程式。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">操作與 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除追蹤接聽程式集合中的所有追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Flush%2A>方法呼叫<xref:System.Diagnostics.TraceListener.Flush%2A>方法中的每個追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Diagnostics.TraceSource.Flush%2A>排清在集合中的所有接聽程式的方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得由追蹤來源所支援的自訂屬性。</summary>
        <returns>字串陣列，由追蹤來源支援的自訂屬性。如果沒有自訂屬性，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作<xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例示範的覆寫<xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>方法來識別的自訂屬性`MyTraceSource`類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當繼承自<see cref="T:System.Diagnostics.TraceSource" />類別或衍生的類別中，您可以覆寫<see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />方法，以提供自訂屬性，為您的類別。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得追蹤來源的追蹤接聽程式集合。</summary>
        <value><see cref="T:System.Diagnostics.TraceListenerCollection" />，包含與來源相關聯之現用中的追蹤接聽程式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來存取，以及執行作業的追蹤接聽項。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">操作與 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得追蹤來源的名稱。</summary>
        <value>追蹤來源的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名稱由設定`name`參數傳遞至建構函式。 您可以使用參考追蹤來源`name`組態檔中的屬性。  
  
 下列的 XML 項目會顯示參考的組態檔中的追蹤來源。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 下列程式碼範例示範如何建構函式呼叫中的追蹤來源名稱。  此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定來源參數值。</summary>
        <value><see cref="T:System.Diagnostics.SourceSwitch" /> 物件，表示來源參數值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A>屬性可讓追蹤來源會呼叫接聽程式之前的訊息篩選。  
  
 參數用來檢查是否應該產生或忽略追蹤呼叫。 每一種追蹤方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法的<xref:System.Diagnostics.SourceSwitch>來判斷是否要繼續進行追蹤。 如果在呼叫傳回`true`，稱為 「 接聽程式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.TraceSource.Switch" /> 設定為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">操作與 unmanaged 程式碼。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將追蹤資料寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">其中一個列舉值，可指定追蹤資料的事件型別。</param>
        <param name="id">事件的數值識別項。</param>
        <param name="data">追蹤資料。</param>
        <summary>使用指定的事件型別、事件識別項和追蹤資料，將追蹤資料寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>方法，例如<xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法，適用於自動化工具，但它也允許附加偵錯的其他物件，例如例外狀況執行個體，來追蹤。  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType>方法<xref:System.Diagnostics.SourceSwitch>所傳回的物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>會傳回`true`，<xref:System.Diagnostics.TraceSource.TraceData%2A>呼叫對應<xref:System.Diagnostics.TraceListener.TraceData%2A>所有接聽程式上的方法。 否則，<xref:System.Diagnostics.TraceSource.TraceData%2A>傳回，而不呼叫接聽程式的方法。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>物件是限制最多為`id`65,535 的值。 如果`id`指定的值是否大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29>方法來篩選，並將追蹤訊息轉送到接聽程式。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">其中一個列舉值，可指定追蹤資料的事件型別。</param>
        <param name="id">事件的數值識別項。</param>
        <param name="data">包含追蹤資料的物件陣列。</param>
        <summary>使用指定的事件型別、事件識別項和追蹤資料陣列，將追蹤資料寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>方法，例如<xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法，適用於自動化工具，但它也允許附加偵錯的其他物件，例如例外狀況執行個體和堆疊追蹤，追蹤。  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回的物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>會傳回`true`，<xref:System.Diagnostics.TraceSource.TraceData%2A>呼叫對應<xref:System.Diagnostics.TraceListener.TraceData%2A>所有接聽程式上的方法。 否則，<xref:System.Diagnostics.TraceSource.TraceData%2A>傳回，而不呼叫接聽程式的方法。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>物件是限制最多為`id`65,535 的值。 如果`id`指定的值是否大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將追蹤事件訊息寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">其中一個列舉值，可指定追蹤資料的事件型別。</param>
        <param name="id">事件的數值識別項。</param>
        <summary>使用指定的事件型別和事件識別項，將追蹤事件訊息寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法要處理的工具會自動追蹤事件。 比方說，如果特定事件由特定來源追蹤監視工具可以通知系統管理員。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回的物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>會傳回`true`，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>呼叫對應<xref:System.Diagnostics.TraceListener.TraceEvent%2A>的每個接聽程式的方法。 否則，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>傳回，而不呼叫接聽程式的方法。  
  
 追蹤內容是特定的接聽程式。 如果接聽程式實作不會覆寫此方法，預設輸出會是追蹤來源，其數值的身分識別，以及事件類型名稱。  其他的追蹤內容會相依於接聽程式的<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性值。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>物件是限制最多為`id`65,535 的值。 如果`id`指定的值是否大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>使用 65,535。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>將追蹤事件的接聽項的方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">其中一個列舉值，可指定追蹤資料的事件型別。</param>
        <param name="id">事件的數值識別項。</param>
        <param name="message">要寫入的追蹤訊息。</param>
        <summary>使用指定的事件型別、事件識別項和訊息，將追蹤事件訊息寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法要處理的工具會自動追蹤事件。 比方說，如果特定事件由特定來源追蹤監視工具可以通知系統管理員。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回的物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>會傳回`true`，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>呼叫對應<xref:System.Diagnostics.TraceListener.TraceEvent%2A>的每個接聽程式的方法。 否則，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>傳回，而不呼叫接聽程式的方法。  
  
 追蹤內容是特定的接聽程式。 如果接聽程式實作不會覆寫此方法，預設輸出會是追蹤來源，其數值的身分識別、 事件類型，與訊息的名稱。  其他的追蹤內容會相依於接聽程式的<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性值。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>物件是限制最多為`id`65,535 的值。 如果`id`指定的值是否大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>將追蹤事件的接聽項的方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">其中一個列舉值，可指定追蹤資料的事件型別。</param>
        <param name="id">事件的數值識別項。</param>
        <param name="format">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <paramref name="args" /> 陣列中的物件相對應。</param>
        <param name="args"><see langword="object" /> 陣列，含有零或多個要格式化的物件。</param>
        <summary>使用指定的事件型別、事件識別項和引數陣列與格式，將追蹤事件寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊`format`參數，請參閱 <<c2> [ 複合格式化](~/docs/standard/base-types/composite-formatting.md)。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法要處理的工具會自動追蹤事件。 比方說，如果特定事件由特定來源追蹤監視工具可以通知系統管理員。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法呼叫<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>所傳回的物件<xref:System.Diagnostics.TraceSource.Switch%2A>屬性。 如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>會傳回`true`，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>呼叫對應<xref:System.Diagnostics.TraceListener.TraceEvent%2A>的每個接聽程式的方法。 否則，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>傳回，而不呼叫接聽程式的方法。  
  
 追蹤內容是特定的接聽程式。 預設值<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法會將寫入的來源名稱、 事件類型和追蹤標頭中的數字識別然後呼叫<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法，傳遞`format`字串並`args`陣列並使用<xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>格式化屬性字串，做為訊息輸出。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>物件是限制最多為`id`65,535 的值。 如果`id`指定的值是否大於 65,535，<xref:System.Diagnostics.EventLogTraceListener>物件會使用 65,535。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>將追蹤事件的接聽項的方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Diagnostics.TraceSource>類別。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> 無效。  
  
-或- 
用來指示要格式化的引數的數目小於零，或者大於或等於要格式化的指定物件數目。</exception>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">複合格式</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">標準數值格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">自訂數值格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">標準 DateTime 格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">自訂 DateTime 格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">列舉格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">在 .NET 中將類型格式化</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將告知性訊息寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">要寫入的資訊訊息。</param>
        <summary>使用指定的訊息，將告知性訊息寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A>方法提供的使用者，而不是由工具讀取參考用訊息。  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> 呼叫<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法的方法，將`eventType`到<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>和訊息字串形式傳遞的資訊訊息。 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法會呼叫<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>的每個追蹤接聽程式的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">複合格式字串，其中包含混合零或多個格式項目的文字，並與 <paramref name="args" /> 陣列中的物件相對應。</param>
        <param name="args">陣列，含有零或多個要格式化的物件。</param>
        <summary>使用指定的物件陣列和格式化資訊，將告知性訊息寫入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊`format`參數，請參閱 <<c2> [ 複合格式化](~/docs/standard/base-types/composite-formatting.md)。  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A>方法提供的使用者，而不是由工具讀取參考用訊息。  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> 呼叫<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法的方法，將`eventType`到<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>並傳遞為物件陣列與格式設定資訊的訊息內容。 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法會呼叫<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>的每個追蹤接聽程式的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> 無效。  
  
-或- 
用來指示要格式化的引數的數目小於零，或者大於或等於要格式化的指定物件數目。</exception>
        <exception cref="T:System.ObjectDisposedException">嘗試在最終處理期間追蹤事件。</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">複合格式</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">標準數值格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">自訂數值格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">標準 DateTime 格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">自訂 DateTime 格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">列舉格式字串</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">在 .NET 中將類型格式化</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="id">事件的數值識別項。</param>
        <param name="message">要寫入的追蹤訊息。</param>
        <param name="relatedActivityId">辨識相關活動的結構。</param>
        <summary>使用指定的數值識別項、訊息和相關的活動識別項，將追蹤傳輸訊息寫入至 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的追蹤接聽程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法呼叫<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>方法中的每個追蹤接聽項<xref:System.Diagnostics.TraceSource.Listeners%2A>寫入追蹤資訊的屬性。 預設值<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>方法在基底<xref:System.Diagnostics.TraceListener>類別會呼叫<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType>方法來處理的呼叫中，設定`eventType`來<xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType>並附加的字串表示`relatedActivityId`GUID `message`。  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 要搭配邏輯的營運<xref:System.Diagnostics.CorrelationManager>。 `relatedActivityId`參數與相關<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>屬性<xref:System.Diagnostics.CorrelationManager>物件。 如果邏輯作業一開始會處於一個活動，並傳輸至另一個，第二個活動會藉由呼叫記錄傳輸<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法。 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>呼叫會將新的活動身分識別與之前的身分識別。 這項功能的最可能的取用者會追蹤檢視器，它會報告跨越多個活動的邏輯作業。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>