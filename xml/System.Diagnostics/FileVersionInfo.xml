<Type Name="FileVersionInfo" FullName="System.Diagnostics.FileVersionInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2cceafa4855eaf41b8c1eed2efb238a4ca83b1f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30400162" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileVersionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileVersionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.FileVersionInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileVersionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileVersionInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供磁碟上實體檔案的版本資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字保存檔案的版本號碼，如下所示：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數目。  
  
 使用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>方法來取得這個類別的<xref:System.Diagnostics.FileVersionInfo>包含資訊的檔案，然後查看檔案的相關資訊的屬性。 <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>屬性提供檔案的版本資訊。 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>，和<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>屬性會提供指定的檔案所屬產品的版本資訊。 呼叫<xref:System.Diagnostics.FileVersionInfo.ToString%2A>取得這個檔案的屬性和其值的部分清單。  
  
 <xref:System.Diagnostics.FileVersionInfo>屬性根據內建檔案版本資源資訊。 版本資源通常會建置到二進位檔案，例如.exe 或.dll 檔案;文字檔案並沒有版本資源資訊。  
  
 在 Win32 資源檔，或組件屬性通常指定版本資源。 例如<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>屬性會反映`VS_FF_DEBUG`檔案中的值加上旗標`VS_FIXEDFILEINFO`區塊，也就從建置`VERSIONINFO`Win32 資源檔中的資源。  如需 Win32 資源檔中指定版本資源的詳細資訊，請參閱 「 關於資源檔 」 和 Platform SDK 中的 「 VERSIONINFO 資源 」。 如需.NET 模組中指定版本資源的詳細資訊，請參閱[設定組件屬性](~/docs/framework/app-domains/set-assembly-attributes.md)主題。  
  
> [!NOTE]
>  此類別可讓類別層級套用至所有成員的連結要求。 A<xref:System.Security.SecurityException>立即呼叫端沒有完全信任權限時，會擲回。 如需連結要求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印在文字方塊中的檔案描述和版本號碼。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫者。 這個類別無法供部分信任程式碼。</permission>
    <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
    <altmember cref="T:System.Version" />
  </Docs>
  <Members>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與檔案關聯的註解。</summary>
        <value>與檔案關聯的註解，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性包含可以用於診斷目的顯示的其他資訊。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會顯示在文字方塊中的註解。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得產生檔案的公司名稱。</summary>
        <value>產生檔案的公司名稱，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.CompanyName%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBuildPart">
      <MemberSignature Language="C#" Value="public int FileBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileBuildPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案的組建編號。</summary>
        <value>代表檔案組建編號的值，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字保存檔案的版本號碼，如下所示：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數目。  
  
 這個屬性會取得第三個 16 位元的集合。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="FileDescription">
      <MemberSignature Language="C#" Value="public string FileDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileDescription" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案的描述。</summary>
        <value>檔案的描述，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.FileDescription%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileMajorPart">
      <MemberSignature Language="C#" Value="public int FileMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMajorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得版本號碼的主要部分。</summary>
        <value>代表版本號碼主要部分的值，如果檔案未包含版本資訊，則為 0 (零)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字保存檔案的版本號碼，如下所示：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數目。  
  
 這個屬性會取得第一個集合的 16 位元。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileMinorPart">
      <MemberSignature Language="C#" Value="public int FileMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMinorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案版本號碼的次要部分。</summary>
        <value>代表檔案版本號碼次要部分的值，如果檔案未包含版本資訊，則為 0 (零)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字保存檔案的版本號碼，如下所示：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數目。  
  
 這個屬性會取得第二組的 16 位元。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Diagnostics.FileVersionInfo" /> 的執行個體所描述的檔案名稱。</summary>
        <value>這個 <see cref="T:System.Diagnostics.FileVersionInfo" /> 的執行個體所描述的檔案名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.FileName%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">若要取得的檔案名稱。 相關聯的列舉型別： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FilePrivatePart">
      <MemberSignature Language="C#" Value="public int FilePrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilePrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilePrivatePart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案私用部分號碼。</summary>
        <value>代表檔案私用部分號碼的值，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字保存檔案的版本號碼，如下所示：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數目。  
  
 這個屬性會取得最後一個 16 位元的集合。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      </Docs>
    </Member>
    <Member MemberName="FileVersion">
      <MemberSignature Language="C#" Value="public string FileVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案版本號碼。</summary>
        <value>檔案的版本號碼，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 檔案版本號碼是 64 位元數字保存檔案的版本號碼，如下所示：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>數目。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印在文字方塊中的檔案描述和版本號碼。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionInfo">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.FileVersionInfo GetVersionInfo(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionInfo (fileName As String) As FileVersionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::FileVersionInfo ^ GetVersionInfo(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.FileVersionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">檔案的完整路徑和名稱，用以擷取其版本資訊。</param>
        <summary>傳回 <see cref="T:System.Diagnostics.FileVersionInfo" />，代表版本資訊與指定的檔案相關。</summary>
        <returns>含有檔案相關資訊的 <see cref="T:System.Diagnostics.FileVersionInfo" />。 如果檔案內不含任何版本資訊，則 <see cref="T:System.Diagnostics.FileVersionInfo" /> 就只含有所要求檔案的名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]，並顯示檔案的描述和版本號碼在主控台視窗中。  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">找不到指定的檔案。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">若要取得版本資訊。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫者。 這個類別無法供部分信任程式碼。</permission>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Comments" />
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案的內部名稱 (如果存在的話)。</summary>
        <value>檔案的內部名稱。 如果沒有，則這個屬性會包含檔案的原始名稱，而不帶副檔名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.InternalName%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebug">
      <MemberSignature Language="C#" Value="public bool IsDebug { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebug" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebug { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得數值，指定檔案是否包含偵錯資訊，或以啟用偵錯功能的方式編譯。</summary>
        <value>
          如果檔案包含偵錯資訊或以偵錯功能的方式編譯，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.FileVersionInfo>屬性根據內建檔案版本資源資訊。 版本資源通常會建置到二進位檔案，例如.exe 或.dll 檔案;文字檔案並沒有版本資源資訊。  
  
 在 Win32 資源檔，或組件屬性通常指定版本資源。 <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>屬性會反映`VS_FF_DEBUG`檔案中的值加上旗標`VS_FIXEDFILEINFO`區塊，也就從建置`VERSIONINFO`Win32 資源檔中的資源。 如需 Win32 資源檔中指定版本資源的詳細資訊，請參閱 Platform SDK`About Resource Files`主題和`VERSIONINFO Resource`主題的主題。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會顯示狀態的布林值<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPatched">
      <MemberSignature Language="C#" Value="public bool IsPatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPatched" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPatched { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得數值，指定檔案是否已經被修改，並且與相同版本號碼的原始轉送檔不相同。</summary>
        <value>
          如果檔案已修補則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會顯示狀態的布林值<xref:System.Diagnostics.FileVersionInfo.IsPatched%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreRelease">
      <MemberSignature Language="C#" Value="public bool IsPreRelease { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreRelease" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreRelease As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPreRelease { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得數值，指定檔案是否為開發版本，而不是商業發行的產品。</summary>
        <value>
          如果檔案是發行前的版本則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會顯示這個版本是否在文字方塊中的發行前版本。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivateBuild">
      <MemberSignature Language="C#" Value="public bool IsPrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivateBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivateBuild { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得數值，指定是否使用標準發行程序建置檔案。</summary>
        <value>
          如果檔案是私用組建，則為 <see langword="true" />；如果檔案是使用標準發行程序所建置，或是檔案未包含版本資訊，則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此值為`true`，<xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>將說明此版本的檔案方式不同於標準的版本。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後在文字方塊中顯示的私用組建資訊。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialBuild">
      <MemberSignature Language="C#" Value="public bool IsSpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialBuild { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得數值，指定檔案是否為特殊的組建。</summary>
        <value>
          如果檔案是特殊的組建則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用標準發行程序建置是特殊的組建檔案，但不同於相同的版本號碼的標準檔案的檔案。 如果此值為`true`、<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>屬性必須指定這個檔案方式不同於標準的版本。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會顯示這個版本是否為特殊組建版本在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得版本資訊區塊的預設語言字串。</summary>
        <value>版本資源中 Microsoft 語言識別項的描述字串，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalCopyright">
      <MemberSignature Language="C#" Value="public string LegalCopyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalCopyright" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalCopyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalCopyright { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得所有套用至指定檔案的著作權注意事項。</summary>
        <value>套用至指定檔案的著作權注意事項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這應該包含全文檢索的所有通知、 法律符號、 版權日期等或`null`如果檔案未包含版本資訊。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.LegalCopyright%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalTrademarks">
      <MemberSignature Language="C#" Value="public string LegalTrademarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalTrademarks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalTrademarks As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalTrademarks { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得商標與套用至檔案的註冊商標。</summary>
        <value>檔案所適用的商標和註冊商標，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 商標包括所有注意事項、 法律符號和商標登錄編號的完整文字。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.LegalTrademarks%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFilename">
      <MemberSignature Language="C#" Value="public string OriginalFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFilename" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFilename { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建立檔案所使用的名稱。</summary>
        <value>建立檔案所使用的名稱，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性可讓應用程式判斷，是否已重新命名檔案。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.OriginalFilename%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBuild">
      <MemberSignature Language="C#" Value="public string PrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBuild { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案私用版本的資訊。</summary>
        <value>檔案私用版本的資訊，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此資訊也會顯示當<xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>是`true`。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印在文字方塊中的私用組建資訊。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="ProductBuildPart">
      <MemberSignature Language="C#" Value="public int ProductBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductBuildPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個檔案關聯的產品組建編號。</summary>
        <value>代表與這個檔案關聯之產品組建編號的值，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是保存的版本號碼，如下所示的 64 位元數字：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數目。  
  
 這個屬性會取得第三個 16 位元的集合。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="ProductMajorPart">
      <MemberSignature Language="C#" Value="public int ProductMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMajorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個檔案關聯的產品版本號碼的主要部分。</summary>
        <value>代表產品版本號碼主要部分的值，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是保存的版本號碼，如下所示的 64 位元數字：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數目。  
  
 這個屬性會取得第一個集合的 16 位元。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductMinorPart">
      <MemberSignature Language="C#" Value="public int ProductMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMinorPart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個檔案關聯的產品版本號碼的次要部分。</summary>
        <value>代表產品版本號碼次要部分的值，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是保存的版本號碼，如下所示的 64 位元數字：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數目。  
  
 這個屬性會取得第二組的 16 位元。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個檔案所散發的產品名稱。</summary>
        <value>連同這個檔案一起散發的產品名稱，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.ProductName%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductPrivatePart">
      <MemberSignature Language="C#" Value="public int ProductPrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductPrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductPrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductPrivatePart { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個檔案關聯的產品私用部分號碼。</summary>
        <value>代表與這個檔案關聯之產品專屬組件編號的值，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是保存的版本號碼，如下所示的 64 位元數字：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數目。  
  
 這個屬性會取得最後一個 16 位元的集合。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個檔案所散發的產品版本。</summary>
        <value>連同這個檔案一起散發的產品版本，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，版本號碼會顯示為 「 主要版本號碼次要部分的數目 」。 產品版本號碼是保存的版本號碼，如下所示的 64 位元數字：  
  
-   前 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>數目。  
  
-   下一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>數目。  
  
-   16 位元的第三組是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>數目。  
  
-   最後一個 16 位元<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>數目。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>在文字方塊中。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="SpecialBuild">
      <MemberSignature Language="C#" Value="public string SpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecialBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SpecialBuild { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得檔案的特殊組建資訊。</summary>
        <value>檔案的特殊組建資訊，如果檔案未包含版本資訊，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>是`true`，<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>必須指定這個檔案與檔案的標準版本不同的方式。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會列印在文字方塊中的特殊組建資訊。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Diagnostics.FileVersionInfo" /> 中部分的屬性清單及其值。</summary>
        <returns>這個類別的下列屬性清單及其值：  
  
 <see cref="P:System.Diagnostics.FileVersionInfo.FileName" />, <see cref="P:System.Diagnostics.FileVersionInfo.InternalName" />, <see cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductName" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />,  
  
 <see cref="P:System.Diagnostics.FileVersionInfo.Language" />。  
  
 如果檔案內不含任何版本資訊，這份清單就只含有所要求檔案的名稱。 布林值將會是 <see langword="false" />，且其他項目將會是 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>取得<xref:System.Diagnostics.FileVersionInfo>如 [記事本]。 然後它會呼叫<xref:System.Diagnostics.FileVersionInfo.ToString%2A>列印一份在文字方塊中的檔案版本資訊。 此程式碼假設`textBox1`具現化。  
  
 [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Language" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
  </Members>
</Type>