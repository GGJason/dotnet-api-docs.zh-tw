<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="512efbab93320933478311ee04c44018863b11df" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39982409" /></Metadata><TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="88a80-101">提供 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 和 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件的資料。</span><span class="sxs-lookup"><span data-stu-id="88a80-101">Provides data for the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> and <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a80-102">若要以非同步方式收集的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>或<xref:System.Diagnostics.Process.StandardError%2A>資料流輸出的處理程序，您必須建立處理重新導向資料流輸出事件的方法。</span><span class="sxs-lookup"><span data-stu-id="88a80-102">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events.</span></span> <span data-ttu-id="88a80-103">寫入重新導向資料流中的程序時，會呼叫事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="88a80-103">The event-handler method is called when the process writes to the redirected stream.</span></span> <span data-ttu-id="88a80-104">事件委派呼叫事件處理常式的執行個體<xref:System.Diagnostics.DataReceivedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="88a80-104">The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>.</span></span> <span data-ttu-id="88a80-105"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>屬性包含在一行寫入重新導向資料流的處理程序的文字。</span><span class="sxs-lookup"><span data-stu-id="88a80-105">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88a80-106">下列程式碼範例說明如何執行非同步的讀取的作業上的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>的資料流`sort`命令。</span><span class="sxs-lookup"><span data-stu-id="88a80-106">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="88a80-107">`sort`命令是主控台應用程式讀取及排序文字輸入。</span><span class="sxs-lookup"><span data-stu-id="88a80-107">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="88a80-108">此範例會建立事件的委派`SortOutputHandler`事件處理常式並將它與相關聯<xref:System.Diagnostics.Process.OutputDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="88a80-108">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="88a80-109">事件處理常式收到文字行的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，格式化文字，並將文字寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="88a80-109">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88a80-110">取得已寫入至重新導向 <see cref="T:System.Diagnostics.Process" /> 輸出資料流的字元行。</span><span class="sxs-lookup"><span data-stu-id="88a80-110">Gets the line of characters that was written to a redirected <see cref="T:System.Diagnostics.Process" /> output stream.</span></span></summary>
        <value><span data-ttu-id="88a80-111">由關聯的 <see cref="T:System.Diagnostics.Process" /> 寫入至其重新導向的 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 或 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流的字行。</span><span class="sxs-lookup"><span data-stu-id="88a80-111">The line that was written by an associated <see cref="T:System.Diagnostics.Process" /> to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> or <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a80-112">當您重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>或是<xref:System.Diagnostics.Process.StandardError%2A>的資料流<xref:System.Diagnostics.Process>對事件處理常式中，是每次引發事件的處理程序會寫入重新導向的資料流中的一條線。</span><span class="sxs-lookup"><span data-stu-id="88a80-112">When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream.</span></span> <span data-ttu-id="88a80-113"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>屬性是一行，<xref:System.Diagnostics.Process>寫入重新導向的輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="88a80-113">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream.</span></span> <span data-ttu-id="88a80-114">可以使用您的事件處理常式<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>屬性來篩選程序輸出，或將輸出寫入到替代位置。</span><span class="sxs-lookup"><span data-stu-id="88a80-114">Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location.</span></span> <span data-ttu-id="88a80-115">例如，您可以建立將所有的錯誤輸出行儲存到指定的錯誤記錄檔的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="88a80-115">For example, you might create an event handler that stores all error output lines into a designated error log file.</span></span>  
  
 <span data-ttu-id="88a80-116">在行的定義是一串字元後面接著換行字元 ("\n") 或歸位字元後面緊跟著一條線摘要 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="88a80-116">A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="88a80-117">使用預設的系統 ANSI 字碼頁編碼行字元。</span><span class="sxs-lookup"><span data-stu-id="88a80-117">The line characters are encoded using the default system ANSI code page.</span></span> <span data-ttu-id="88a80-118"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>屬性不會包含傳回的終止歸位字元或換行字元。</span><span class="sxs-lookup"><span data-stu-id="88a80-118">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.</span></span>  
  
 <span data-ttu-id="88a80-119">重新導向資料流關閉時，null 的列會傳送至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="88a80-119">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="88a80-120">請確定您的事件處理常式會檢查<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>適當才能存取它的屬性。</span><span class="sxs-lookup"><span data-stu-id="88a80-120">Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it.</span></span> <span data-ttu-id="88a80-121">例如，您可以使用靜態方法<xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType>驗證<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>在事件處理常式中的屬性。</span><span class="sxs-lookup"><span data-stu-id="88a80-121">For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88a80-122">下列程式碼範例說明簡單的事件處理常式相關聯<xref:System.Diagnostics.Process.OutputDataReceived>事件。</span><span class="sxs-lookup"><span data-stu-id="88a80-122">The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="88a80-123">事件處理常式收到文字行的重新導向<xref:System.Diagnostics.Process.StandardOutput%2A>資料流，格式化文字，並將文字寫入至螢幕。</span><span class="sxs-lookup"><span data-stu-id="88a80-123">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>