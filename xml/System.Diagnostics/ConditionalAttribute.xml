<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1708efbbf6fe70c1d7231d19e9800ca74430c17" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52244651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="877c5-101">表示編譯器應該忽略方法呼叫或屬性，除非已定義指定的條件式編譯符號。</span>
      <span class="sxs-lookup">
        <span data-stu-id="877c5-101">Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="877c5-102">您可以套用<xref:System.Diagnostics.ConditionalAttribute>方法和類別屬性。</span><span class="sxs-lookup"><span data-stu-id="877c5-102">You can apply the <xref:System.Diagnostics.ConditionalAttribute> attribute to methods and classes.</span></span> <span data-ttu-id="877c5-103">不過，在類別上的使用是只適用於類型衍生自<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="877c5-103">However, its use on classes is valid only for types that are derived from <xref:System.Attribute>.</span></span> <span data-ttu-id="877c5-104"><xref:System.Diagnostics.ConditionalAttribute> 請將會被忽略，或將會產生編譯器警告或錯誤訊息如果您將它套用至任何其他型別。</span><span class="sxs-lookup"><span data-stu-id="877c5-104"><xref:System.Diagnostics.ConditionalAttribute> either will be ignored or will produce a compiler warning or error message if you apply it to any other type.</span></span>  
  
 <span data-ttu-id="877c5-105">套用<xref:System.Diagnostics.ConditionalAttribute>方法表示編譯器呼叫的方法不應該編譯成 Microsoft intermediate language (MSIL) 條件式編譯符號，除非聯<xref:System.Diagnostics.ConditionalAttribute>定義。</span><span class="sxs-lookup"><span data-stu-id="877c5-105">Applying <xref:System.Diagnostics.ConditionalAttribute> to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with <xref:System.Diagnostics.ConditionalAttribute> is defined.</span></span> <span data-ttu-id="877c5-106">如果您將此屬性套用至不會傳回 void 的方法，您會收到 Visual Studio 中的編譯錯誤。</span><span class="sxs-lookup"><span data-stu-id="877c5-106">You will get a compilation error in Visual Studio if you apply this attribute to a method that does not return void.</span></span> <span data-ttu-id="877c5-107">套用<xref:System.Diagnostics.ConditionalAttribute>屬性表示的屬性應該不會發出至中繼資料除非已定義條件式編譯符號。</span><span class="sxs-lookup"><span data-stu-id="877c5-107">Applying <xref:System.Diagnostics.ConditionalAttribute> to an attribute indicates that the attribute should not be emitted to metadata unless the conditional compilation symbol is defined.</span></span> <span data-ttu-id="877c5-108">任何引數傳遞給方法或屬性仍然類型-checked 編譯器。</span><span class="sxs-lookup"><span data-stu-id="877c5-108">Any arguments passed to the method or attribute are still type-checked by the compiler.</span></span>  
  
 <span data-ttu-id="877c5-109">您可以使用下列技巧來定義條件式編譯符號：</span><span class="sxs-lookup"><span data-stu-id="877c5-109">You can use the following techniques to define conditional compilation symbols:</span></span>  
  
-   <span data-ttu-id="877c5-110">使用編譯器命令列選項;例如， **/define： 偵錯**。</span><span class="sxs-lookup"><span data-stu-id="877c5-110">Use compiler command-line options; for example, **/define:DEBUG**.</span></span>  
  
-   <span data-ttu-id="877c5-111">在作業系統 shell 中，使用環境變數例如，**設定偵錯 = 1**。</span><span class="sxs-lookup"><span data-stu-id="877c5-111">Use environment variables in the operating system shell; for example, **set DEBUG=1**.</span></span>  
  
-   <span data-ttu-id="877c5-112">使用 pragma 在原始程式碼中;例如，定義編譯變數，如下所示：</span><span class="sxs-lookup"><span data-stu-id="877c5-112">Use pragmas in the source code; for example, define the compilation variable as follows:</span></span>  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     <span data-ttu-id="877c5-113">若要取消定義的變數，使用下列方法：</span><span class="sxs-lookup"><span data-stu-id="877c5-113">To undefine the variable, use the following:</span></span>  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 <span data-ttu-id="877c5-114">符合與 Common Language Specification (CLS) 中的編譯器允許忽略<xref:System.Diagnostics.ConditionalAttribute>。</span><span class="sxs-lookup"><span data-stu-id="877c5-114">Compilers that comply with the Common Language Specification (CLS) are permitted to ignore <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="877c5-115">C#、 Visual Basic 和 c + + 編譯器支援<xref:System.Diagnostics.ConditionalAttribute>; JScript 編譯器不支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="877c5-115">The C#, Visual Basic, and C++ compilers support <xref:System.Diagnostics.ConditionalAttribute>; the JScript compiler does not support the attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="877c5-116">在 Visual Basic 中`AddressOf`運算子不會影響這個屬性。</span><span class="sxs-lookup"><span data-stu-id="877c5-116">In Visual Basic, the `AddressOf` operator is not affected by this attribute.</span></span> <span data-ttu-id="877c5-117">例如，`Call CType(AddressOf delegate, Action)`永遠會叫用`delegate`，雖然`Call delegate()`不可能。</span><span class="sxs-lookup"><span data-stu-id="877c5-117">For example, `Call CType(AddressOf delegate, Action)` always invokes `delegate`, although `Call delegate()` might not.</span></span>  
  
 <span data-ttu-id="877c5-118"><xref:System.Diagnostics.ConditionalAttribute> 套用至方法中定義<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>類別。</span><span class="sxs-lookup"><span data-stu-id="877c5-118"><xref:System.Diagnostics.ConditionalAttribute> is applied to the methods that are defined in the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes.</span></span>  
  
 <span data-ttu-id="877c5-119">如需如何使用屬性的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="877c5-119">For more information about how to use attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="877c5-120">下列範例示範 <xref:System.Diagnostics.ConditionalAttribute> 的用法。</span><span class="sxs-lookup"><span data-stu-id="877c5-120">The following example demonstrates the use of <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="877c5-121">此範例假設的條件會定義具有 **/define**編譯器選項。</span><span class="sxs-lookup"><span data-stu-id="877c5-121">The example assumes that the condition is defined with the **/define** compiler option.</span></span> <span data-ttu-id="877c5-122">您可以變更編譯器選項，以取得不同的結果。</span><span class="sxs-lookup"><span data-stu-id="877c5-122">You can obtain different results by changing the compiler option.</span></span> <span data-ttu-id="877c5-123">您可以使用 pragma 在範例程式碼，而不是其識別為編譯器選項，選擇性地定義條件。</span><span class="sxs-lookup"><span data-stu-id="877c5-123">You can optionally define the conditions by using pragmas in the sample code instead of identifying them as compiler options.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">
          <span data-ttu-id="877c5-124">字串，指定與此屬性相關聯之區分大小寫的條件式編譯符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="877c5-124">A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="877c5-125">初始化 <see cref="T:System.Diagnostics.ConditionalAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="877c5-125">Initializes a new instance of the <see cref="T:System.Diagnostics.ConditionalAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="877c5-126">下列範例示範如何使用<xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="877c5-126">The following example demonstrates how to use the <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="877c5-127">這個範例是針對提供之較大範例的一部分<xref:System.Diagnostics.ConditionalAttribute>類別。</span><span class="sxs-lookup"><span data-stu-id="877c5-127">This example is part of a larger example provided for the <xref:System.Diagnostics.ConditionalAttribute> class.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="877c5-128">取得與 <see cref="T:System.Diagnostics.ConditionalAttribute" /> 屬性相關聯的條件式編譯符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="877c5-128">Gets the conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="877c5-129">字串，指定與 <see cref="T:System.Diagnostics.ConditionalAttribute" /> 屬性相關聯之區分大小寫的條件式編譯符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="877c5-129">A string that specifies the case-sensitive conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="877c5-130">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="877c5-130">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>