<Type Name="Stack&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.Stack&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95cd3d530498d17a0f187a070de5e0a6f58d9228" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52353878" /></Metadata><TypeSignature Language="C#" Value="public struct Stack&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit Stack`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Stack(Of T).Enumerator&#xA;Implements IEnumerator(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: value class Stack&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt;.Enumerator = struct&#xA;    interface IEnumerator&lt;'T&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9d4a-101">列舉 <see cref="T:System.Collections.Generic.Stack`1" /> 的項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d4a-102">`foreach` C# 語言的陳述式 (`for each` c + + `For Each` Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c9d4a-103">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c9d4a-104">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c9d4a-105">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c9d4a-106">在這個位置上，<xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-106">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c9d4a-107">因此，在讀取 <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-107">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c9d4a-108"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-108"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="c9d4a-109"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-109"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c9d4a-110">如果<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-110">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c9d4a-111">列舉值位於此位置，後續呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c9d4a-112">如果上次呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-112">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c9d4a-113">您不能再次將 <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-113">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="c9d4a-114">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c9d4a-115">如果變更集合，例如加入、 修改或刪除元素，列舉值會將永久失效，而且下次呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>或是<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c9d4a-116">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c9d4a-117">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-117">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c9d4a-118">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-118">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c9d4a-119">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-119">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9d4a-120">取得位於目前列舉值位置的項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-120">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="c9d4a-121"><see cref="T:System.Collections.Generic.Stack`1" /> 中位於目前列舉值位置的項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-121">The element in the <see cref="T:System.Collections.Generic.Stack`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d4a-122"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 未定義任何下列的情況下：</span><span class="sxs-lookup"><span data-stu-id="c9d4a-122"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
- <span data-ttu-id="c9d4a-123">列舉值位於集合中的第一個元素之前。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-123">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="c9d4a-124">建立列舉值之後，或之後發生此情形<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-124">That happens after an enumerator is created or after the <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="c9d4a-125"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>列舉值前進到第一個元素的集合，再讀取的值，就必須呼叫方法<xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-125">The <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> property.</span></span>  
  
- <span data-ttu-id="c9d4a-126">在上次呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾，列舉值位於集合中的最後一個元素之後。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-126">The last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

- <span data-ttu-id="c9d4a-127">因為在集合中，例如加入、 修改或刪除的項目所做的變更而無效列舉值。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-127">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>

 <span data-ttu-id="c9d4a-128"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> 不會移動的列舉值，以及連續呼叫位置<xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>傳回相同的物件，直到<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-128"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> return the same object until either <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
    
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9d4a-129">釋放 <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-129">Releases all resources used by the <see cref="T:System.Collections.Generic.Stack`1.Enumerator" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9d4a-130">將列舉值前移至 <see cref="T:System.Collections.Generic.Stack`1" /> 的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-130">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="c9d4a-131">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-131"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d4a-132">建立列舉值之後，要將列舉值位於集合中和第一次呼叫中的第一個項目之前<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>將列舉值前移至集合的第一個元素。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-132">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="c9d4a-133">如果<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-133">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c9d4a-134">列舉值位於此位置，後續呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-134">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="c9d4a-135">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-135">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c9d4a-136">如果變更集合，例如加入、 修改或刪除元素，列舉值會將永久失效，而且下次呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>或是<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-136">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9d4a-137">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-137">The collection was modified after the enumerator was created.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.Stack`1.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9d4a-138">取得位於目前列舉值位置的項目。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-138">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="c9d4a-139">位於列舉值中目前位置的集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-139">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <span data-ttu-id="c9d4a-140"><xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 未定義任何下列的情況下：</span><span class="sxs-lookup"><span data-stu-id="c9d4a-140"><xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> is undefined under any of the following conditions:</span></span>  
  
- <span data-ttu-id="c9d4a-141">列舉值位於集合中的第一個元素之前。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-141">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="c9d4a-142">建立列舉值之後，或之後發生此情形<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-142">That happens after an enumerator is created or after the <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="c9d4a-143"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>列舉值前進到第一個元素的集合，再讀取的值，就必須呼叫方法<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-143">The <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property.</span></span>  
  
- <span data-ttu-id="c9d4a-144">在上次呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾，列舉值位於集合中的最後一個元素之後。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-144">The last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

- <span data-ttu-id="c9d4a-145">因為在集合中，例如加入、 修改或刪除的項目所做的變更而無效列舉值。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-145">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>

 <span data-ttu-id="c9d4a-146"><xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 不會移動的列舉值，以及連續呼叫位置<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>傳回相同的物件，直到<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-146"><xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> return the same object until either <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
    
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9d4a-147">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-147">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span> <span data-ttu-id="c9d4a-148">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-148">This class cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d4a-149">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-149">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c9d4a-150">如果變更集合，例如加入、 修改或刪除元素，列舉值會將永久失效，而且下次呼叫<xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>或是<xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-150">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9d4a-151">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="c9d4a-151">The collection was modified after the enumerator was created.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Enumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>