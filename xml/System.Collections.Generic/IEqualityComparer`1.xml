<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ccf4c0884f408f2ac2e64fc0709d9106416eee8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">要比較之物件的類型。</typeparam>
    <summary>定義支援物件之相等比較的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個介面允許實作自訂的相等比較的集合。 也就是說，您可以在其中建立您自己定義的型別是否相等`T`，並指定可接受的集合類型會使用此定義<xref:System.Collections.Generic.IEqualityComparer%601>泛型介面。 在.NET Framework 中，建構函式的<xref:System.Collections.Generic.Dictionary%602>接受此介面的泛型集合型別。  
  
 此介面的預設實作由<xref:System.Collections.Generic.EqualityComparer%601.Default%2A>屬性<xref:System.Collections.Generic.EqualityComparer%601>泛型類別。 <xref:System.StringComparer>類別會實作<xref:System.Collections.Generic.IEqualityComparer%601>型別的<xref:System.String>。  
  
 此介面支援只有相等比較。 所提供的排序及順序比較自訂<xref:System.Collections.Generic.IComparer%601>泛型介面。  
  
 我們建議您衍生自<xref:System.Collections.Generic.EqualityComparer%601>類別而不是實作<xref:System.Collections.Generic.IEqualityComparer%601>介面，因為<xref:System.Collections.Generic.EqualityComparer%601>類別使用等號比較測試<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>方法，而非<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。 這是與一致`Contains`， `IndexOf`， `LastIndexOf`，以及`Remove`方法<xref:System.Collections.Generic.Dictionary%602>類別和其他泛型集合。  
  
   
  
## Examples  
 下列範例會將自訂`Box`字典集合的物件。 `Box`物件是否視為相等，如果是相同的維度。  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">要比較之類型 <c>T</c> 的第一個物件。</param>
        <param name="y">要比較之類型 <c>T</c> 的第二個物件。</param>
        <summary>判斷指定的物件是否相等。</summary>
        <returns>當指定的物件相等時為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作這個方法，以提供自訂的相等比較的型別`T`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>實作所需，確保當<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />方法會傳回<see langword="true" />兩個物件<c>x</c>並<c>y</c>，然後將所傳回的值<see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />方法<c>x</c>必須等於傳回的值<c>y</c>。<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />方法是自反、 對稱的且可轉移。也就是說，它會傳回<see langword="true" />如果用來比較物件與本身;<see langword="true" />兩個物件<c>x</c>並<c>y</c>才<see langword="true" />如<c>y</c>和<c>x</c>; 和<see langword="true" />兩個物件<c>x</c>並<c>z</c>才<see langword="true" />如<c>x</c>和<c>y</c>以及<see langword="true" />的<c>y</c>並<c>z</c>。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">要傳回雜湊碼的 <see cref="T:System.Object" />。</param>
        <summary>傳回指定物件的雜湊碼。</summary>
        <returns>指定物件的雜湊碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作這個方法，以提供自訂的雜湊程式碼類型`T`對應至所提供的自訂的相等比較<xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 的型別是參考型別，而 <paramref name="obj" /> 為 <see langword="null" />。</exception>
        <block subset="none" type="overrides">
          <para>實作所需，確保當<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />方法會傳回<see langword="true" />兩個物件<c>x</c>並<c>y</c>，然後將所傳回的值<see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />方法<c>x</c>必須等於傳回的值<c>y</c>。</para>
        </block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>