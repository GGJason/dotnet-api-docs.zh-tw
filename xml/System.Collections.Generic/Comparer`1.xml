<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3605f22f18741f9d594c6aa830f85604d9b8bf52" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701649" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="413c4-101">要比較之物件的型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="413c4-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="413c4-102">提供基底類別 (Base Class) 用於 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型介面的實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="413c4-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413c4-103">衍生自這個類別提供的自訂實作<xref:System.Collections.Generic.IComparer%601>介面的集合類別搭配使用這類<xref:System.Collections.Generic.SortedList%602>和<xref:System.Collections.Generic.SortedDictionary%602>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="413c4-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="413c4-104">衍生自之間的差異<xref:System.Collections.Generic.Comparer%601>類別，並實作<xref:System.IComparable?displayProperty=nameWithType>介面如下所示：</span><span class="sxs-lookup"><span data-stu-id="413c4-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="413c4-105">若要指定如何根據預設，應該要比較兩個物件，實作<xref:System.IComparable?displayProperty=nameWithType>類別中的介面。</span><span class="sxs-lookup"><span data-stu-id="413c4-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="413c4-106">這可確保排序作業會使用您所提供的預設比較程式碼。</span><span class="sxs-lookup"><span data-stu-id="413c4-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="413c4-107">若要定義使用而不是預設的比較子的比較子，衍生自<xref:System.Collections.Generic.Comparer%601>類別。</span><span class="sxs-lookup"><span data-stu-id="413c4-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="413c4-108">您接著可以使用這個比較子中需要做為參數的比較子的排序作業。</span><span class="sxs-lookup"><span data-stu-id="413c4-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="413c4-109">所傳回的物件<xref:System.Collections.Generic.Comparer%601.Default%2A>屬性使用<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面 (`IComparable<T>`在 C# 中， `IComparable(Of T)` Visual Basic 中) 來比較兩個物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="413c4-110">如果型別`T`不會實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，<xref:System.Collections.Generic.Comparer%601.Default%2A>屬性會傳回<xref:System.Collections.Generic.Comparer%601>使用<xref:System.IComparable?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="413c4-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413c4-111">下列範例衍生類別中， `BoxLengthFirst`，從<xref:System.Collections.Generic.Comparer%601>類別。</span><span class="sxs-lookup"><span data-stu-id="413c4-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="413c4-112">這個比較子來比較兩個物件的型別`Box`。</span><span class="sxs-lookup"><span data-stu-id="413c4-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="413c4-113">它首先會排序它們的長度，則依高度，再依寬度。</span><span class="sxs-lookup"><span data-stu-id="413c4-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="413c4-114">`Box`類別會實作<xref:System.IComparable%601>介面，以控制預設的比較兩個`Box`物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="413c4-115">這個預設實作會先排序的高度，則依長度，再依寬度。</span><span class="sxs-lookup"><span data-stu-id="413c4-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="413c4-116">此範例示範的兩個比對排序的清單之間的差異`Box`物件第一次使用`BoxLengthFirst`比較子，然後藉由使用預設比較子。</span><span class="sxs-lookup"><span data-stu-id="413c4-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="413c4-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> 和<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />的行為可能會區分文化特性和區分大小寫。字串比較<see cref="T:System.StringComparer" />建議類別<c>比較子&lt;字串&gt;</c>。屬性的<see cref="T:System.StringComparer" />類別傳回預先定義的執行個體執行的不同組合的區分文化特性和區分大小寫的字串比較。區分大小寫和區分文化特性都是一致的相同成員之間<see cref="T:System.StringComparer" />執行個體。如需有關特定文化特性比較的詳細資訊，請參閱<see cref="N:System.Globalization" />命名空間和 [全球化和 Localization](~/docs/standard/globalization-localization/index.md)。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="413c4-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="413c4-118">初始化 <see cref="T:System.Collections.Generic.Comparer`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="413c4-119">要比較的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="413c4-120">要比較的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="413c4-121">在衍生類別中覆寫時，比較型別相同的兩個物件並傳回值，指出一個物件是小於、等於還是大於另一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="413c4-122">帶正負號的整數，表示 <paramref name="x" /> 和 <paramref name="y" /> 的相對值，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="413c4-123">
            <list type="table">
              <listheader>
                <term> 值  </term>
                <description> 意義  </description>
              </listheader>
              <item>
                <term> 小於零  </term>
                <description>
                  <paramref name="x" /> 小於 <paramref name="y" />。</description>
              </item>
              <item>
                <term> 零  </term>
                <description>
                  <paramref name="x" /> 等於 <paramref name="y" />。</description>
              </item>
              <item>
                <term> 大於零  </term>
                <description>
                  <paramref name="x" /> 大於 <paramref name="y" />。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413c4-124">實作這個方法，以提供自訂排序次序比較型別`T`。</span><span class="sxs-lookup"><span data-stu-id="413c4-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413c4-125">下列範例會定義的比較子`Box`可用來代替預設比較子的物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="413c4-126">這個範例是針對提供之較大範例的一部分<xref:System.Collections.Generic.Comparer%601>類別。</span><span class="sxs-lookup"><span data-stu-id="413c4-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="413c4-127">型別 <paramref name="T" /> 不實作 <see cref="T:System.IComparable`1" /> 泛型介面或 <see cref="T:System.IComparable" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="413c4-128">
            <para>比較<see langword="null" />具有任何參考型別允許和不會產生例外狀況。Null 參考，會被視為小於任何不是 null 的參考。如需特定文化特性的比較資訊，請參閱<see cref="N:System.Globalization" />命名空間和 [全球化和 Localization](~/docs/standard/globalization-localization/index.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="413c4-129">要使用的比較。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="413c4-130">使用指定的比較建立比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="413c4-131">新的比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="413c4-132">傳回泛型引數指定之型別的預設排序次序比較子 (Comparer)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="413c4-133">物件，繼承 <see cref="T:System.Collections.Generic.Comparer`1" />，並用做型別 <paramref name="T" /> 的排序次序比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413c4-134"><xref:System.Collections.Generic.Comparer%601>傳回此屬性會使用<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面 (`IComparable<T>`在 C# 中， `IComparable(Of T)` Visual Basic 中) 來比較兩個物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="413c4-135">如果型別`T`不會實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，這個屬性會傳回<xref:System.Collections.Generic.Comparer%601>使用<xref:System.IComparable?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="413c4-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413c4-136">下列範例示範如何使用<xref:System.Collections.Generic.Comparer%601.Default%2A>屬性來取得執行預設的比較的物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="413c4-137">這個範例是針對提供之較大範例的一部分<xref:System.Collections.Generic.Comparer%601>類別。</span><span class="sxs-lookup"><span data-stu-id="413c4-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="413c4-138">
            <para>字串比較<see cref="T:System.StringComparer" />建議類別<c>比較子&lt;字串&gt;</c> (<c>比較子 (Of String)</c> Visual Basic 中)。屬性的<see cref="T:System.StringComparer" />類別傳回預先定義的執行個體執行的不同組合的區分文化特性和區分大小寫的字串比較。區分大小寫和區分文化特性都是一致的相同成員之間<see cref="T:System.StringComparer" />執行個體。如需有關特定文化特性比較的詳細資訊，請參閱<see cref="N:System.Globalization" />命名空間和 [全球化和 Localization](~/docs/standard/globalization-localization/index.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="413c4-139">要比較的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="413c4-140">要比較的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="413c4-141">比較兩個物件並傳回值，指出其中一個物件為小於、等於或大於另一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="413c4-142">帶正負號的整數，表示 <paramref name="x" /> 和 <paramref name="y" /> 的相對值，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="413c4-143">
            <list type="table">
              <listheader>
                <term> 值  </term>
                <description> 意義  </description>
              </listheader>
              <item>
                <term> 小於零  </term>
                <description>
                  <paramref name="x" /> 小於 <paramref name="y" />。</description>
              </item>
              <item>
                <term> 零  </term>
                <description>
                  <paramref name="x" /> 等於 <paramref name="y" />。</description>
              </item>
              <item>
                <term> 大於零  </term>
                <description>
                  <paramref name="x" /> 大於 <paramref name="y" />。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="413c4-144">這個方法是包裝函式<xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29>方法，因此`obj`必須轉換成泛型引數所指定的型別`T`目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="413c4-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="413c4-145">如果無法轉換成`T`、<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="413c4-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="413c4-146">比較`null`具有任何參考型別允許和不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="413c4-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="413c4-147">排序時，`null`會被視為小於任何其他物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="413c4-148">下列範例示範如何使用<xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A>方法來比較兩個物件。</span><span class="sxs-lookup"><span data-stu-id="413c4-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="413c4-149">這個範例是針對提供之較大範例的一部分<xref:System.Collections.Generic.Comparer%601>類別。</span><span class="sxs-lookup"><span data-stu-id="413c4-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="413c4-150">
            <paramref name="x" /> 或 <paramref name="y" /> 的型別無法轉型為型別 <paramref name="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="413c4-151">-或-  <paramref name="x" /> 和 <paramref name="y" /> 不實作 <see cref="T:System.IComparable`1" /> 泛型介面或 <see cref="T:System.IComparable" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="413c4-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> 和<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />區分文化特性和區分大小寫方面有不同的行為。字串比較<see cref="T:System.StringComparer" />建議類別<c>比較子&lt;字串&gt;</c>。屬性的<see cref="T:System.StringComparer" />類別傳回預先定義的執行個體執行的不同組合的區分文化特性和區分大小寫的字串比較。區分大小寫和區分文化特性都是一致的相同成員之間<see cref="T:System.StringComparer" />執行個體。如需有關特定文化特性比較的詳細資訊，請參閱<see cref="N:System.Globalization" />命名空間和 [全球化和 Localization](~/docs/standard/globalization-localization/index.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="413c4-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>