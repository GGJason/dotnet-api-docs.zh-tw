<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EqualityComparer`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53bcd4473b2ae36291a78d662cee189af19da6dc8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bcd4473b2ae36291a78d662cee189af19da6dc8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>The type of objects to compare.</source>
          <target state="translated">要比較之物件的類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>Provides a base class for implementations of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface.</source>
          <target state="translated">提供基底類別 (Base Class) 用於 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> 泛型介面的實作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>Derive from this class to provide a custom implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface for use with collection classes such as the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class, or with methods such as <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">衍生自這個類別提供的自訂實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph>集合搭配使用的泛型介面之類的類別<ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>泛型類別，或使用這類方法<ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface and, if so, returns an <ph id="ph4">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that invokes the implementation of the <ph id="ph5">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph>屬性檢查是否輸入<ph id="ph2">`T`</ph>實作<ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph>泛型介面，如果是的話，會傳回<ph id="ph4">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>會叫用的實作<ph id="ph5">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>Otherwise, it returns an <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>, as provided by <ph id="ph2">`T`</ph>.</source>
          <target state="translated">否則，它會傳回<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>，由提供如<ph id="ph2">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>We recommend that you derive from the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class instead of implementing the <ph id="ph2">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface, because the <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class tests for equality using the <ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph5">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">我們建議您從衍生<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>類別而不是實作<ph id="ph2">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph>介面，因為<ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>類別使用等號比較測試<ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph>方法，而非<ph id="ph5">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>This is consistent with the <ph id="ph1">`Contains`</ph>, <ph id="ph2">`IndexOf`</ph>, <ph id="ph3">`LastIndexOf`</ph>, and <ph id="ph4">`Remove`</ph> methods of the <ph id="ph5">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class and other generic collections.</source>
          <target state="translated">這是與一致<ph id="ph1">`Contains`</ph>， <ph id="ph2">`IndexOf`</ph>， <ph id="ph3">`LastIndexOf`</ph>，和<ph id="ph4">`Remove`</ph>方法<ph id="ph5">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>類別和其他泛型集合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>The following example creates a dictionary collection of objects of type <ph id="ph1">`Box`</ph> with an equality comparer.</source>
          <target state="translated">下列範例會建立字典集合類型的物件<ph id="ph1">`Box`</ph>使用相等比較子。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>Two boxes are considered equal if their dimensions are the same.</source>
          <target state="translated">兩個方塊會被視為相等，如果是相同的維度。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>It then adds the boxes to the collection.</source>
          <target state="translated">然後將方塊加入至集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.EqualityComparer`1">
          <source>The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</source>
          <target state="translated">字典會重新建立與不同的方式定義等號比較相等比較子： 兩個方塊會被視為相等，如果其磁碟區相同。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>Returns a default equality comparer for the type specified by the generic argument.</source>
          <target state="translated">傳回泛型引數指定之類型的預設相等比較子 (Comparer)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>The default instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> class for type <ph id="ph2">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">型別 <ph id="ph2">&lt;typeparamref name="T" /&gt;</ph> 之 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> 類別的預設執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface and, if so, returns an <ph id="ph4">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that uses that implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph>屬性檢查是否輸入<ph id="ph2">`T`</ph>實作<ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph>介面，並傳回若是如此，<ph id="ph4">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>使用該實作。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>Otherwise, it returns an <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that uses the overrides of <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> provided by <ph id="ph4">`T`</ph>.</source>
          <target state="translated">否則，它會傳回<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>使用覆寫的<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>提供<ph id="ph4">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>The following example creates two dictionary collections of type <ph id="ph1">`Box`</ph>.</source>
          <target state="translated">下列範例會建立兩個字典集合型別的<ph id="ph1">`Box`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>Both dictionaries are created with the constructor that takes an <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> as a parameter.</source>
          <target state="translated">使用的建構函式建立這兩個字典<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>做為參數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>To determine the equality of dictionary keys, the <ph id="ph1">`boxesByDim`</ph> dictionary uses an equality comparer (<ph id="ph2">`BoxEqDimensions`</ph>) that uses the implementation of the <ph id="ph3">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph> method in the <ph id="ph4">`Box`</ph> class.</source>
          <target state="translated">若要判斷是否相等的字典索引鍵，<ph id="ph1">`boxesByDim`</ph>字典會使用相等比較子 (<ph id="ph2">`BoxEqDimensions`</ph>) 使用的實作<ph id="ph3">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType&gt;</ph>方法中的<ph id="ph4">`Box`</ph>類別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>Two boxes are considered equal if their dimensions are the same.</source>
          <target state="translated">兩個方塊會被視為相等，如果是相同的維度。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>The <ph id="ph1">`boxesByVol`</ph> dictionary uses an equality comparer (<ph id="ph2">`BoxEqVolume`</ph>) that defines equality by volume.</source>
          <target state="translated"><ph id="ph1">`boxesByVol`</ph>字典會使用相等比較子 (<ph id="ph2">`BoxEqVolume`</ph>)，定義等號比較依磁碟區。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.EqualityComparer`1.Default">
          <source>Two boxes are considered equal if their volumes are the same.</source>
          <target state="translated">兩個方塊都視為相等，如果其磁碟區相同的。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source>The first object to compare.</source>
          <target state="translated">要比較的第一個物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source>The second object to compare.</source>
          <target state="translated">要比較的第二個物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source>When overridden in a derived class, determines whether two objects of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> are equal.</source>
          <target state="translated">在衍生類別中覆寫時，判斷型別為 <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> 的兩個物件是否相等。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">當指定的物件相等時為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%2A&gt;</ph> method is reflexive, symmetric, and transitive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%2A&gt;</ph>方法已自反、 對稱的且可轉移。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source>That is, it returns <ph id="ph1">`true`</ph> if used to compare an object with itself; <ph id="ph2">`true`</ph> for two objects <ph id="ph3">`x`</ph> and <ph id="ph4">`y`</ph> if it is <ph id="ph5">`true`</ph> for <ph id="ph6">`y`</ph> and <ph id="ph7">`x`</ph>; and <ph id="ph8">`true`</ph> for two objects <ph id="ph9">`x`</ph> and <ph id="ph10">`z`</ph> if it is <ph id="ph11">`true`</ph> for <ph id="ph12">`x`</ph> and <ph id="ph13">`y`</ph> and also <ph id="ph14">`true`</ph> for <ph id="ph15">`y`</ph> and <ph id="ph16">`z`</ph>.</source>
          <target state="translated">也就是說，它會傳回<ph id="ph1">`true`</ph>如果用來比較的物件與其本身;<ph id="ph2">`true`</ph>兩個物件<ph id="ph3">`x`</ph>和<ph id="ph4">`y`</ph>便<ph id="ph5">`true`</ph>如<ph id="ph6">`y`</ph>和<ph id="ph7">`x`</ph>; 和<ph id="ph8">`true`</ph>兩個物件<ph id="ph9">`x`</ph>和<ph id="ph10">`z`</ph>便<ph id="ph11">`true`</ph>的<ph id="ph12">`x`</ph>和<ph id="ph13">`y`</ph>以及<ph id="ph14">`true`</ph>如<ph id="ph15">`y`</ph>和<ph id="ph16">`z`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
          <source>Implementations are required to ensure that if the <ph id="ph1">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for two objects <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>y<ept id="p2">&lt;/c&gt;</ept>, then the value returned by the <ph id="ph3">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /&gt;</ph> method for <bpt id="p3">&lt;c&gt;</bpt>x<ept id="p3">&lt;/c&gt;</ept> must equal the value returned for <bpt id="p4">&lt;c&gt;</bpt>y<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">實作所需，確保當<ph id="ph1">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph>方法會傳回<ph id="ph2">&lt;see langword="true" /&gt;</ph>兩個物件<bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept>和<bpt id="p2">&lt;c&gt;</bpt>y<ept id="p2">&lt;/c&gt;</ept>，然後將所傳回的值<ph id="ph3">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /&gt;</ph>方法<bpt id="p3">&lt;c&gt;</bpt>x<ept id="p3">&lt;/c&gt;</ept>必須等於的傳回值<bpt id="p4">&lt;c&gt;</bpt>y<ept id="p4">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
          <source>The object for which to get a hash code.</source>
          <target state="translated">要取得其雜湊碼的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
          <source>When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</source>
          <target state="translated">在衍生類別中覆寫時，做為雜湊演算法和資料結構之指定物件的雜湊函式，例如雜湊表。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
          <source>A hash code for the specified object.</source>
          <target state="translated">指定物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
          <source>The type of <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is a reference type and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 的型別是參考型別，而 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
          <source>Implementations are required to ensure that if the <ph id="ph1">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for two objects <bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>y<ept id="p2">&lt;/c&gt;</ept>, then the value returned by the <ph id="ph3">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /&gt;</ph> method for <bpt id="p3">&lt;c&gt;</bpt>x<ept id="p3">&lt;/c&gt;</ept> must equal the value returned for <bpt id="p4">&lt;c&gt;</bpt>y<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">實作所需，確保當<ph id="ph1">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph>方法會傳回<ph id="ph2">&lt;see langword="true" /&gt;</ph>兩個物件<bpt id="p1">&lt;c&gt;</bpt>x<ept id="p1">&lt;/c&gt;</ept>和<bpt id="p2">&lt;c&gt;</bpt>y<ept id="p2">&lt;/c&gt;</ept>，然後將所傳回的值<ph id="ph3">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /&gt;</ph>方法<bpt id="p3">&lt;c&gt;</bpt>x<ept id="p3">&lt;/c&gt;</ept>必須等於的傳回值<bpt id="p4">&lt;c&gt;</bpt>y<ept id="p4">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source>The first object to compare.</source>
          <target state="translated">要比較的第一個物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source>The second object to compare.</source>
          <target state="translated">要比較的第二個物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source>Determines whether the specified objects are equal.</source>
          <target state="translated">判斷指定的物件是否相等。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">當指定的物件相等時為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be cast to the type specified by the generic argument <ph id="ph3">`T`</ph> of the current instance.</source>
          <target state="translated">這個方法是包裝函式<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29&gt;</ph>方法，因此<ph id="ph2">`obj`</ph>必須轉換成泛型引數所指定的型別<ph id="ph3">`T`</ph>目前執行個體。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source>If it cannot be cast to <ph id="ph1">`T`</ph>, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">如果無法將它轉換成<ph id="ph1">`T`</ph>、<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source>Comparing <ph id="ph1">`null`</ph> is allowed and does not generate an exception.</source>
          <target state="translated">比較<ph id="ph1">`null`</ph>允許，且不會產生例外狀況。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> or <ph id="ph2">&lt;paramref name="y" /&gt;</ph> is of a type that cannot be cast to type <ph id="ph3">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="y" /&gt;</ph> 的型別無法轉型為型別 <ph id="ph3">&lt;typeparamref name="T" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which a hash code is to be returned.</source>
          <target state="translated">要傳回雜湊碼的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source>Returns a hash code for the specified object.</source>
          <target state="translated">傳回指定物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source>A hash code for the specified object.</source>
          <target state="translated">指定物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be a type that can be cast to the type specified by the generic type argument <ph id="ph3">`T`</ph> of the current instance.</source>
          <target state="translated">這個方法是包裝函式<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29&gt;</ph>方法，因此<ph id="ph2">`obj`</ph>必須可以轉換成泛型類型引數所指定之類型的型別<ph id="ph3">`T`</ph>目前執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source>The type of <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is a reference type and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 的型別是參考型別，而 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is of a type that cannot be cast to type <ph id="ph2">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 的型別無法轉型為型別 <ph id="ph2">&lt;typeparamref name="T" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>