<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17703224a84001f4716533d5053120a003dcd5ac" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34238692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="8d5fe-101">要比較之物件的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d5fe-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="8d5fe-102">提供基底類別 (Base Class) 用於 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面的實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d5fe-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d5fe-103">衍生自這個類別提供的自訂實作<xref:System.Collections.Generic.IEqualityComparer%601>集合搭配使用的泛型介面之類的類別<xref:System.Collections.Generic.Dictionary%602>泛型類別，或使用這類方法<xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8d5fe-104"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A>屬性檢查是否輸入`T`實作<xref:System.IEquatable%601?displayProperty=nameWithType>泛型介面，如果是的話，會傳回<xref:System.Collections.Generic.EqualityComparer%601>會叫用的實作<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8d5fe-105">否則，它會傳回<xref:System.Collections.Generic.EqualityComparer%601>，由提供如`T`。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="8d5fe-106">我們建議您從衍生<xref:System.Collections.Generic.EqualityComparer%601>類別而不是實作<xref:System.Collections.Generic.IEqualityComparer%601>介面，因為<xref:System.Collections.Generic.EqualityComparer%601>類別使用等號比較測試<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>方法，而非<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8d5fe-107">這是與一致`Contains`， `IndexOf`， `LastIndexOf`，和`Remove`方法<xref:System.Collections.Generic.Dictionary%602>類別和其他泛型集合。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d5fe-108">下列範例會建立字典集合類型的物件`Box`使用相等比較子。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="8d5fe-109">兩個方塊會被視為相等，如果是相同的維度。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="8d5fe-110">然後將方塊加入至集合。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="8d5fe-111">字典會重新建立與不同的方式定義等號比較相等比較子： 兩個方塊會被視為相等，如果其磁碟區相同。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d5fe-112">初始化 <see cref="T:System.Collections.Generic.EqualityComparer`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d5fe-113">傳回泛型引數指定之類型的預設相等比較子 (Comparer)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-113">Returns a default equality comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d5fe-114">型別 <typeparamref name="T" /> 之 <see cref="T:System.Collections.Generic.EqualityComparer`1" /> 類別的預設執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d5fe-115"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A>屬性檢查是否輸入`T`實作<xref:System.IEquatable%601?displayProperty=nameWithType>介面，並傳回若是如此，<xref:System.Collections.Generic.EqualityComparer%601>使用該實作。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="8d5fe-116">否則，它會傳回<xref:System.Collections.Generic.EqualityComparer%601>使用覆寫的<xref:System.Object.Equals%2A?displayProperty=nameWithType>和<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>提供`T`。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d5fe-117">下列範例會建立集合，其中包含的項目`Box`輸入，然後搜尋方塊，藉由呼叫符合另一個方塊`FindFirst`方法兩次。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-117">The following example creates a collection that contains elements of the `Box` type and then searches it for a box matching another box by calling the `FindFirst` method, twice.</span></span>
  
 <span data-ttu-id="8d5fe-118">第一次搜尋未指定任何的相等比較子，這表示`FindFirst`使用<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>來判斷是否相等的方塊。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-118">The first search does not specify any equality comparer, which means `FindFirst` uses <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> to determine equality of boxes.</span></span> <span data-ttu-id="8d5fe-119">依序使用的實作<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>方法中的`Box`類別。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-119">That in turn uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="8d5fe-120">兩個方塊會被視為相等，如果是相同的維度。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-120">Two boxes are considered equal if their dimensions are the same.</span></span>
  
 <span data-ttu-id="8d5fe-121">第二個搜尋指定的相等比較子 (`BoxEqVolume`)，定義等號比較依磁碟區。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-121">The second search specifies an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="8d5fe-122">兩個方塊都視為相等，如果其磁碟區相同的。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-122">Two boxes are considered equal if their volumes are the same.</span></span>
  
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d5fe-123">要比較的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-123">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d5fe-124">要比較的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-124">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d5fe-125">在衍生類別中覆寫時，判斷型別為 <typeparamref name="T" /> 的兩個物件是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d5fe-126">當指定的物件相等時為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-126">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d5fe-127"><xref:System.Collections.Generic.EqualityComparer%601.Equals%2A>方法已自反、 對稱的且可轉移。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="8d5fe-128">也就是說，它會傳回`true`如果用來比較的物件與其本身;`true`兩個物件`x`和`y`便`true`如`y`和`x`; 和`true`兩個物件`x`和`z`便`true`的`x`和`y`以及`true`如`y`和`z`。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8d5fe-129">
            <para>實作所需，確保當<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />方法會傳回<see langword="true" />兩個物件<c>x</c>和<c>y</c>，然後將所傳回的值<see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />方法<c>x</c>必須等於的傳回值<c>y</c>。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-129">
              <para>Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8d5fe-130">要取得其雜湊碼的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-130">The object for which to get a hash code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d5fe-131">在衍生類別中覆寫時，做為雜湊演算法和資料結構之指定物件的雜湊函式，例如雜湊表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d5fe-132">指定物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-132">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d5fe-133">
            <paramref name="obj" /> 的型別是參考型別，而 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8d5fe-134">
            <para>實作所需，確保當<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />方法會傳回<see langword="true" />兩個物件<c>x</c>和<c>y</c>，然後將所傳回的值<see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />方法<c>x</c>必須等於的傳回值<c>y</c>。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-134">
              <para>Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="8d5fe-135">要比較的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-135">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="8d5fe-136">要比較的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-136">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d5fe-137">判斷指定的物件是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-137">Determines whether the specified objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d5fe-138">當指定的物件相等時為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-138">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d5fe-139">這個方法是包裝函式<xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29>方法，因此`obj`必須轉換成泛型引數所指定的型別`T`目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="8d5fe-140">如果無法將它轉換成`T`、<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="8d5fe-141">比較`null`允許，且不會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8d5fe-142">
            <paramref name="x" /> 或 <paramref name="y" /> 的型別無法轉型為型別 <typeparamref name="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-142">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8d5fe-143">要傳回雜湊碼的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d5fe-144">傳回指定物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-144">Returns a hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d5fe-145">指定物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-145">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d5fe-146">這個方法是包裝函式<xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29>方法，因此`obj`必須可以轉換成泛型類型引數所指定之類型的型別`T`目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="8d5fe-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d5fe-147">
            <paramref name="obj" /> 的型別是參考型別，而 <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8d5fe-148">-或-  <paramref name="obj" /> 的型別無法轉型為型別 <typeparamref name="T" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d5fe-148">-or-  <paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>