<Type Name="IEnumerator&lt;T&gt;" FullName="System.Collections.Generic.IEnumerator&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c01a2b4bfa9de11a71f8a595354f73626ce7353" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerator&lt;out T&gt; : IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator`1&lt;+ T&gt; implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator(Of Out T)&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerator : IDisposable, System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="5c6d3-101">要列舉之物件的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c6d3-101">The type of objects to enumerate.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="5c6d3-102">支援泛型集合上的簡單反覆運算。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c6d3-102">Supports a simple iteration over a generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c6d3-103"><xref:System.Collections.Generic.IEnumerator%601> 是所有的泛型列舉值的基底介面。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-103"><xref:System.Collections.Generic.IEnumerator%601> is the base interface for all generic enumerators.</span></span>  
  
 <span data-ttu-id="5c6d3-104">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-104">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="5c6d3-105">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-105">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5c6d3-106">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5c6d3-107">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-107">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5c6d3-108">在這個位置上，<xref:System.Collections.Generic.IEnumerator%601.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-108">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="5c6d3-109">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-109">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="5c6d3-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5c6d3-111"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5c6d3-112">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5c6d3-113">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5c6d3-114">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="5c6d3-115">您不能再次將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-115">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="5c6d3-116"><xref:System.Collections.IEnumerator.Reset%2A>方法會提供給 COM 互通性。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-116">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="5c6d3-117">它不一定需要實作。相反地，實作者可以只擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-117">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="5c6d3-118">不過，如果您選擇這樣做，您應該確定沒有呼叫者依賴在<xref:System.Collections.IEnumerator.Reset%2A>功能。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-118">However, if you choose to do this, you should make sure no callers are relying on the <xref:System.Collections.IEnumerator.Reset%2A> functionality.</span></span>  
  
 <span data-ttu-id="5c6d3-119">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-119">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5c6d3-120">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-120">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="5c6d3-121">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-121">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="5c6d3-122">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-122">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="5c6d3-123">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-123">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5c6d3-124"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-124">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c6d3-125">下列範例示範實作<xref:System.Collections.Generic.IEnumerator%601>的自訂物件的集合類別的介面。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-125">The following example shows an implementation of the <xref:System.Collections.Generic.IEnumerator%601> interface for a collection class of custom objects.</span></span> <span data-ttu-id="5c6d3-126">自訂物件是類型的執行個體`Box`，和集合類別是`BoxCollection`。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-126">The custom object is an instance of the type `Box`, and the collection class is `BoxCollection`.</span></span> <span data-ttu-id="5c6d3-127">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.ICollection%601>介面。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-127">This code example is part of a larger example provided for the <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxexamples/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxexamples/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="5c6d3-128">實作這個介面要求實作非泛型<see cref="T:System.Collections.IEnumerator" />介面。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-128">Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface.</span>
        </span>
        <span data-ttu-id="5c6d3-129">
          <see cref="M:System.Collections.IEnumerator.MoveNext" />和<see cref="M:System.Collections.IEnumerator.Reset" />方法不會依賴<typeparamref name="T" />，並只出現在泛型介面。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-129">The <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="M:System.Collections.IEnumerator.Reset" /> methods do not depend on <typeparamref name="T" />, and appear only on the nongeneric interface.</span>
        </span>
        <span data-ttu-id="5c6d3-130">
          <see cref="P:System.Collections.Generic.IEnumerator`1.Current" />屬性會出現在這兩個介面，且具有不同的傳回型別。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-130">The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types.</span>
        </span>
        <span data-ttu-id="5c6d3-131">實作非泛型<see cref="P:System.Collections.IEnumerator.Current" />做為明確介面實作的屬性。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-131">Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation.</span>
        </span>
        <span data-ttu-id="5c6d3-132">這可讓非泛型介面的任何取用者使用泛型介面。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-132">This allows any consumer of the nongeneric interface to consume the generic interface.</span>
        </span>
        <span data-ttu-id="5c6d3-133">此外，<see cref="T:System.Collections.Generic.IEnumerator`1" />實作<see cref="T:System.IDisposable" />，這需要您實作<see cref="M:System.IDisposable.Dispose" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-133">In addition, <see cref="T:System.Collections.Generic.IEnumerator`1" /> implements <see cref="T:System.IDisposable" />, which requires you to implement the <see cref="M:System.IDisposable.Dispose" /> method.</span>
        </span>
        <span data-ttu-id="5c6d3-134">這可讓您關閉資料庫連接或使用其他資源時，釋放檔案控制代碼或類似的作業。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-134">This enables you to close database connections or release file handles or similar operations when using other resources.</span>
        </span>
        <span data-ttu-id="5c6d3-135">如果沒有其他要處置的資源，提供空白<see cref="M:System.IDisposable.Dispose" />實作。</span>
        <span class="sxs-lookup">
          <span data-stu-id="5c6d3-135">If there are no additional resources to dispose of, provide an empty <see cref="M:System.IDisposable.Dispose" /> implementation.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c6d3-136">取得集合中位於列舉值目前位置的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c6d3-136">Gets the element in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c6d3-137">位於列舉值中目前位置的集合中的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c6d3-137">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c6d3-138"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> 未定義任何下列情況：</span><span class="sxs-lookup"><span data-stu-id="5c6d3-138"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="5c6d3-139">列舉值位於集合中的第一個項目之前，在建立列舉值之後。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-139">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="5c6d3-140"><xref:System.Collections.IEnumerator.MoveNext%2A> 將列舉值前進至再讀取的值集合的第一個項目必須先呼叫<xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-140"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
-   <span data-ttu-id="5c6d3-141">在上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-141">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="5c6d3-142">列舉值會因為在集合中，例如加入、 修改或刪除的項目所做的變更而失效。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-142">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="5c6d3-143"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-143"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5c6d3-144"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="5c6d3-144"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5c6d3-145">實作這個介面要求實作非泛型<see cref="T:System.Collections.IEnumerator" />介面。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5c6d3-145">Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface.</span>
            </span>
            <span data-ttu-id="5c6d3-146">
              <see cref="P:System.Collections.Generic.IEnumerator`1.Current" />屬性會出現在這兩個介面，且具有不同的傳回型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5c6d3-146">The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types.</span>
            </span>
            <span data-ttu-id="5c6d3-147">實作非泛型<see cref="P:System.Collections.IEnumerator.Current" />做為明確介面實作的屬性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5c6d3-147">Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation.</span>
            </span>
            <span data-ttu-id="5c6d3-148">這可讓非泛型介面的任何取用者使用泛型介面。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5c6d3-148">This allows any consumer of the nongeneric interface to consume the generic interface.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
  </Members>
</Type>