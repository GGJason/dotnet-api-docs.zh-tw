<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinkedList`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f4f915bbf25b5784d684d30fa9b51ea4c57557ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4f915bbf25b5784d684d30fa9b51ea4c57557ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Specifies the element type of the linked list.</source>
          <target state="translated">指定連結清單的項目類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Represents a doubly linked list.</source>
          <target state="translated">代表雙向連結串列。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is a general-purpose linked list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 是一般用途連結的清單。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>It supports enumerators and implements the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> interface, consistent with other collection classes in the .NET Framework.</source>
          <target state="translated">它支援列舉值，以及實作<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>介面與其他.NET Framework 中的集合類別一致。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> provides separate nodes of type <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>, so insertion and removal are O(1) operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 提供類型的不同節點<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>，所以插入和移除作業為 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>You can remove nodes and reinsert them, either in the same list or in another list, which results in no additional objects allocated on the heap.</source>
          <target state="translated">您可以移除節點，並重新插入，相同的清單中，或在另一個清單中，會導致在堆積上配置的任何其他物件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Because the list also maintains an internal count, getting the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> property is an O(1) operation.</source>
          <target state="translated">清單也會維護內部的計數，因為取得<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>屬性是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Each node in a <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> object is of the type <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>.</source>
          <target state="translated">在每個節點<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>物件屬於類型<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is doubly linked, each node points forward to the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601.Next%2A&gt;</ph> node and backward to the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Previous%2A&gt;</ph> node.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>雙向連結時，每個節點指向向前<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601.Next%2A&gt;</ph>節點並回溯至<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Previous%2A&gt;</ph>節點。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Lists that contain reference types perform better when a node and its value are created at the same time.</source>
          <target state="translated">包含參考類型的清單執行更好的節點和它的值一次建立時。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> property for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>參考的屬性類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>屬性包含<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class does not support chaining, splitting, cycles, or other features that can leave the list in an inconsistent state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別不支援鏈結、 分割、 循環或其他功能，可以將清單保留在不一致的狀態。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The list remains consistent on a single thread.</source>
          <target state="translated">清單會保持在單一執行緒上一致的。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The only multithreaded scenario supported by <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is multithreaded read operations.</source>
          <target state="translated">支援的唯一多執行緒的案例<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是多執行緒的讀取的作業。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The following code example demonstrates many features of the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範的許多功能<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>This type is not thread safe.</source>
          <target state="translated">此類型不是安全執行緒。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> needs to be accessed by multiple threads, you will need to implement their own synchronization mechanism.</source>
          <target state="translated">如果<ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>需要存取由多個執行緒，您必須實作自己的同步處理機制。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>可以支援多個讀取器同時，只要未修改集合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">即便如此，列舉集合在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</source>
          <target state="translated">在極少數的案例，其中列舉競用權限寫入，必須在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class that is empty.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 類別的新執行個體，這個執行個體是空白的。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>屬性包含<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>The following code example creates and initializes a <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, adds several nodes, and then displays its contents.</source>
          <target state="translated">下列程式碼範例會建立並初始化<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>型別的<ph id="ph2">&lt;xref:System.String&gt;</ph>、 加入數個節點，並接著會顯示其內容。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要將其項目複製到新 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 類別的新執行個體，這個執行個體包含從指定之 <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 複製的項目，且具有足以容納複製之項目的容量。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>If <ph id="ph1">`collection`</ph> has no elements then the new <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph5">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`collection`</ph>有任何項目，則新<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的而<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>屬性包含<ph id="ph5">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(n) operation, where <ph id="ph1">`n`</ph> is the number of elements in <ph id="ph2">`collection`</ph>.</source>
          <target state="translated">這個建構函式是 o （n） 運算，其中<ph id="ph1">`n`</ph>是中的項目數<ph id="ph2">`collection`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>For an example that includes this constructor, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個建構函式，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件，包含序列化 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 所需的資訊。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 物件，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 所關聯之序列化資料流的來源及目的地。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class that is serializable with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，初始化 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 類別之可序列化的新執行個體。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>屬性包含<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is an O(n) operation.</source>
          <target state="translated">這個建構函式是 o （n） 作業。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value after an existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中的現有節點後加入新節點或值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> after which to insert <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的後面要插入 <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的新 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node after the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中指定的現有節點後加入指定的新節點。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 不在目前的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> 屬於另一個 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> after which to insert a new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的後面要插入新的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>，包含「值」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The value to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>Adds a new node containing the specified value after the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中指定的現有節點後加入包含指定值的新節點。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的新 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 不在目前的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value before an existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中的現有節點前加入新節點或值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> before which to insert <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的前面要插入 <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的新 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node before the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中指定的現有節點前加入指定的新節點。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 不在目前的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> 屬於另一個 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> before which to insert a new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的前面要插入新的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>，包含「值」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The value to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>Adds a new node containing the specified value before the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中指定的現有節點前加入包含指定值的新節點。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的新 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 不在目前的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的開頭加入新節點或值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add at the start of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 開頭加入的新 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的開頭加入指定的新節點。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的新的節點就會成為<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 屬於另一個 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>The value to add at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 開頭加入的值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>Adds a new node containing the specified value at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的開頭加入包含指定值的新節點。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的新 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的新的節點就會成為<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的結尾加入新節點或值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add at the end of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 結尾加入的新 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的結尾加入指定的新節點。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的新的節點就會成為<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 屬於另一個 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>The value to add at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 結尾加入的值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>Adds a new node containing the specified value at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的結尾加入包含指定值的新節點。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的新 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的新的節點就會成為<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source>Removes all nodes from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 移除所有節點。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> 已設為零，並從項目集合的其他物件的參考也會釋放。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> are set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>設為<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中尋找的值。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">參考類型的值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>Determines whether a value is in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">判斷值是否在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 中找到 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>，則為 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 複製過來之項目的目的端。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">從目標陣列的指定索引開始，將整個 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 複製到相容的一維 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>.</source>
          <target state="translated">將元素複製到<ph id="ph1">&lt;xref:System.Array&gt;</ph>以相同的順序，以列舉值逐一<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中的項目數目，大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>Gets the number of nodes actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">取得在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中實際包含的節點數。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>The number of nodes actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中實際包含的節點數。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>For an example that includes this property, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個屬性，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中尋找的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>Finds the first node that contains the specified value.</source>
          <target state="translated">尋找包含指定值的第一個節點。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> that contains the specified value, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，則為包含指定值的第一個 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is searched forward starting at <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and ending at <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>開始向前搜尋<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>結束為<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中尋找的值。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>Finds the last node that contains the specified value.</source>
          <target state="translated">尋找包含指定值的最後一個節點。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>The last <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> that contains the specified value, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，則為包含指定值的最後一個 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is searched backward starting at <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> and ending at <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是搜尋回溯開始<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>結束為<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>Gets the first node of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的第一個節點。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的第一個 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>屬性包含<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>For an example that includes this property, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個屬性，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中逐一查看的列舉值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">您不能再次將 <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件，包含序列化 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 執行個體所需的資訊。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 物件，包含與 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 執行個體相關聯之已序列資料流的來源和目的地。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> 介面，並傳回序列化 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 執行個體所需的資料。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">提供序列化服務。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>安全性動作： <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>Gets the last node of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的最後一個節點。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>The last <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 的最後一個 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>屬性包含<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>For an example that includes this property, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個屬性，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">還原序列化之事件的來源。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> 介面，並於還原序列化完成時引發還原序列化事件。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance is invalid.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 執行個體關聯的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 物件是無效的。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Removes the first occurrence of a node or value from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中移除第一次出現的節點或值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> 移除的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>Removes the specified node from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 移除指定的節點。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> 不在目前的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>The value to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">要從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 移除的值。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>Removes the first occurrence of the specified value from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 中移除第一次出現的指定值。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果包含 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的元素已成功移除則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">如果在原始的 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 中找不到 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>，則這個方法也會傳回 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>Removes the node at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 開頭的節點。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 是空的。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>Removes the node at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 結尾的節點。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 是空的。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The value to add at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 結尾加入的值。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">將項目加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 的結尾。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> 接受<ph id="ph2">`null`</ph>成為有效<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph>的參考類型，並允許重複的值。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>是空的新的節點就會成為<ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">如需範例，其中包含這個方法，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 是否唯讀。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是唯讀，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">唯讀的集合不允許在集合建立後增加、移除或修改項目。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>，可用於逐一查看集合。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">您不能再次將 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 複製過來之項目的目的端。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">從特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引開始，將 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的項目複製至 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果來源類型<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>無法自動轉換成目的地類型<ph id="ph2">`array`</ph>，非泛型實作<ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph>擲回<ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>，而泛型實作擲回<ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 沒有以零起始的索引。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的項目數目，大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取是否同步 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的存取為同步 (安全執行緒)，則為 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 傳回的物件，可用來同步處理存取具備<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">同步處理的所有執行緒存取集合之前都鎖定這個物件時才有效。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> 的預設實作中，這個屬性一律會傳回目前的執行個體。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 傳回的物件，可用來同步處理存取具備<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">同步處理的所有執行緒存取集合之前都鎖定這個物件時才有效。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>C#、 c + + 和 Visual Basic 的屬性。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the linked list as a collection.</source>
          <target state="translated">傳回做為集合逐一查看連結串列的列舉值。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the linked list as a collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>，可用來做為集合逐一查看連結串列。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>