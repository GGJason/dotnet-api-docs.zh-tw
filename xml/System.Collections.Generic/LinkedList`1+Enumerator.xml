<Type Name="LinkedList&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.LinkedList&lt;T&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2370e407abcf6337ec3d40547459ea36652fc98" />
    <Meta Name="ms.sourcegitcommit" Value="9f18ecaf63382fa565dfaeb7274bc1a9e81c35e9" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/19/2018" />
    <Meta Name="ms.locfileid" Value="36208753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LinkedList&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit LinkedList`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.LinkedList`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure LinkedList(Of T).Enumerator&#xA;Implements IDeserializationCallback, IEnumerator(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class LinkedList&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>列舉 <see cref="T:System.Collections.Generic.LinkedList`1" /> 的項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。 因此，建議您使用 `foreach`，而不要直接使用列舉值。  
  
 列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。  
  
 一開始，列舉程式位在集合中的第一個項目之前。 在這個位置上，<xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 並未定義。 因此，在讀取 <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 以將列舉值前移至集合的第一個項目。  
  
 <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>。 <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 設定為下一個項目。  
  
 如果<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>傳回`false`。 列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>也會傳回`false`。 如果最後一個呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>是未定義。 您不能再次將 <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。  
  
 只要集合維持不變，列舉程式就持續有效。 如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>會擲回<xref:System.InvalidOperationException>。  
  
 列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。 若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。  若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。  
  
 集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得位於目前列舉值位置的項目。</summary>
        <value>
          <see cref="T:System.Collections.Generic.LinkedList`1" /> 中位於目前列舉值位置的項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 未定義任何下列情況：  
  
- 列舉程式位在集合中第一個項目之前。 發生這種情況建立列舉值之後或在之後<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>方法呼叫。 <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>屬性。  
  
- 在上次呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾，列舉程式位在集合中的最後一個元素之後。

- 列舉值會因為在集合中，例如加入、 修改或刪除的項目所做的變更而失效。

 <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>傳回相同的物件直到<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放 <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> 所使用的所有資源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將列舉值前移至 <see cref="T:System.Collections.Generic.LinkedList`1" /> 的下一個項目。</summary>
        <returns>如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立列舉值之後，列舉程式位於集合中，第一個呼叫中的第一個項目之前<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>將列舉值前移至集合的第一個項目。  
  
 如果<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>傳回`false`。 列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>也會傳回`false`。  
  
 只要集合維持不變，列舉程式就持續有效。 如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>會擲回<xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">建立列舉值之後，集合已修改。</exception>
        <altmember cref="P:System.Collections.Generic.LinkedList`1.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得位於目前列舉值位置的項目。</summary>
        <value>位於列舉值中目前位置的集合中的元素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 未定義任何下列情況：  
  
- 列舉程式位在集合中第一個項目之前。 發生這種情況建立列舉值之後或在之後<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>方法呼叫。 <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>屬性。  
  
- 在上次呼叫<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾，列舉程式位在集合中的最後一個元素之後。

- 列舉值會因為在集合中，例如加入、 修改或刪除的項目所做的變更而失效。

 <xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>傳回相同的物件直到<xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.LinkedList%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>設定列舉值至它的初始位置，這是在集合中第一個項目之前。 這個類別無法被繼承。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只要集合維持不變，列舉程式就持續有效。 如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">建立列舉值之後，集合已修改。</exception>
        <altmember cref="P:System.Collections.Generic.LinkedList`1.Enumerator.Current" />
        <altmember cref="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">還原序列化之事件的來源。</param>
        <summary>實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並於還原序列化完成時引發還原序列化事件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">與目前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 執行個體關聯的 <see cref="T:System.Collections.Generic.LinkedList`1" /> 物件是無效的。</exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含序列化 <see cref="T:System.Collections.Generic.LinkedList`1" /> 執行個體所需的資訊。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，包含與 <see cref="T:System.Collections.Generic.LinkedList`1" /> 執行個體相關聯之已序列資料流的來源和目的地。</param>
        <summary>實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並傳回序列化 <see cref="T:System.Collections.Generic.LinkedList`1" /> 執行個體所需的資料。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>