<Type Name="SortedDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b2f6397ce900f2206d4662434095c0ac6625416" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="d76b8-101">字典中的索引鍵類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-101">The type of the keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="d76b8-102">字典中的值類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-102">The type of the values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d76b8-103">代表根據索引鍵，所排序的索引鍵/值組集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-103">Represents a collection of key/value pairs that are sorted on the key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-104"><xref:System.Collections.Generic.SortedDictionary%602>泛型類別是與 O 二進位搜尋樹狀目錄 (記錄`n`) 擷取其中`n`是字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="d76b8-104">The <xref:System.Collections.Generic.SortedDictionary%602> generic class is a binary search tree with O(log `n`) retrieval, where `n` is the number of elements in the dictionary.</span></span> <span data-ttu-id="d76b8-105">在這一方面，它是類似於<xref:System.Collections.Generic.SortedList%602>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-105">In this respect, it is similar to the <xref:System.Collections.Generic.SortedList%602> generic class.</span></span> <span data-ttu-id="d76b8-106">兩個類別都具有類似的物件模型，且兩者都有 O (記錄`n`) 擷取。</span><span class="sxs-lookup"><span data-stu-id="d76b8-106">The two classes have similar object models, and both have O(log `n`) retrieval.</span></span> <span data-ttu-id="d76b8-107">兩個類別的不同之處是記憶體使用量和速度的插入和移除：</span><span class="sxs-lookup"><span data-stu-id="d76b8-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="d76b8-108"><xref:System.Collections.Generic.SortedList%602> 使用較少的記憶體比<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="d76b8-109"><xref:System.Collections.Generic.SortedDictionary%602> 具有未排序的資料的快速插入和移除作業： O (記錄`n`) 而不是 O (`n`) 的<xref:System.Collections.Generic.SortedList%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data: O(log `n`) as opposed to O(`n`) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="d76b8-110">如果從已排序的資料，會同時填入此清單<xref:System.Collections.Generic.SortedList%602>的速度比<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="d76b8-111">每個索引鍵/值組可以擷取為<xref:System.Collections.Generic.KeyValuePair%602>結構，或為<xref:System.Collections.DictionaryEntry>透過非泛型<xref:System.Collections.IDictionary>介面。</span><span class="sxs-lookup"><span data-stu-id="d76b8-111">Each key/value pair can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> structure, or as a <xref:System.Collections.DictionaryEntry> through the nongeneric <xref:System.Collections.IDictionary> interface.</span></span>  
  
 <span data-ttu-id="d76b8-112">只要使用中索引鍵，索引鍵必須是不可變<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-112">Keys must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="d76b8-113">在每個索引鍵<xref:System.Collections.Generic.SortedDictionary%602>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="d76b8-113">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique.</span></span> <span data-ttu-id="d76b8-114">金鑰不能`null`，但是值可以是，如果型別值`TValue`是參考型別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-114">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="d76b8-115"><xref:System.Collections.Generic.SortedDictionary%602> 需要執行比較索引鍵比較子實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-115"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="d76b8-116">您可以指定的實作<xref:System.Collections.Generic.IComparer%601>使用建構函式可接受泛型介面`comparer`參數; 如果您未指定，預設 genericcomparer 實作<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>用。</span><span class="sxs-lookup"><span data-stu-id="d76b8-116">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter; if you do not specify an implementation, the default genericcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> is used.</span></span> <span data-ttu-id="d76b8-117">如果型別`TKey`實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，則預設比較子會使用該實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-117">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="d76b8-118">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 傳回集合中的項目類型的物件。</span><span class="sxs-lookup"><span data-stu-id="d76b8-118">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="d76b8-119">因為每個項目<xref:System.Collections.Generic.SortedDictionary%602>是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</span><span class="sxs-lookup"><span data-stu-id="d76b8-119">Since each element of the <xref:System.Collections.Generic.SortedDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="d76b8-120">相反地，項目型別是<xref:System.Collections.Generic.KeyValuePair%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-120">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="d76b8-121">下列程式碼會示範 C#、 c + + 和 Visual Basic 語法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-121">The following code shows C#, C++, and Visual Basic syntax.</span></span>  
  
 [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]
 [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="d76b8-122">`foreach`陳述式是列舉值，以允許讀取集合，不寫入包裝函式。</span><span class="sxs-lookup"><span data-stu-id="d76b8-122">The `foreach` statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-123">下列程式碼範例會建立空<xref:System.Collections.Generic.SortedDictionary%602>的 string 索引鍵，並使用具有字串<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法，將某些項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-123">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="d76b8-124">此範例示範<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法會擲回<xref:System.ArgumentException>時嘗試加入重複的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-124">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="d76b8-125">此範例會使用<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性 （C# 中為索引子） 來擷取值，擊發<xref:System.Collections.Generic.KeyNotFoundException>要求的索引鍵不存在，而且可以取代顯示索引鍵關聯的值時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="d76b8-125">The example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="d76b8-126">該示例顯示如何使用<xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A>方法作為更有效的方式來檢索值，如果程序通常必須嘗試不在字典中的鍵值，並且它顯示如何使用<xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A>方法來測試在調用<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-126">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="d76b8-127">此範例示範如何列舉的索引鍵和值的字典中，以及如何列舉索引鍵和值單獨使用<xref:System.Collections.Generic.SortedDictionary%602.Keys%2A>屬性和<xref:System.Collections.Generic.SortedDictionary%602.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-127">The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="d76b8-128">最後，此範例示範<xref:System.Collections.Generic.SortedDictionary%602.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-128">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d76b8-129">公用靜態 (<see langword="Shared" />在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="d76b8-130">不保證任何執行個體成員是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-130">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="d76b8-131">A<see cref="T:System.Collections.Generic.SortedDictionary`2" />可以支援多個讀取器同時，只要未修改集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-131">A <see cref="T:System.Collections.Generic.SortedDictionary`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="d76b8-132">即便如此，列舉集合在本質上並非安全執行緒程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-132">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="d76b8-133">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-133">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="d76b8-134">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d76b8-134">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.SortedList" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-135">初始化 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-135">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-136">初始化 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 類別的新執行個體，這個執行個體是空的，並且對這個索引鍵類型使用預設 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-137">在每個索引鍵<xref:System.Collections.Generic.SortedDictionary%602>必須是唯一，根據預設比較子。</span><span class="sxs-lookup"><span data-stu-id="d76b8-137">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="d76b8-138"><xref:System.Collections.Generic.SortedDictionary%602> 需要執行比較索引鍵比較子實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-138"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="d76b8-139">這個建構函式會使用預設的泛型等號比較子<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-139">This constructor uses the default generic equality comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d76b8-140">如果型別`TKey`實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，則預設比較子會使用該實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-140">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="d76b8-141">或者，您可以指定的實作<xref:System.Collections.Generic.IComparer%601>使用建構函式可接受泛型介面`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="d76b8-141">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="d76b8-142">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-143">下列程式碼範例會建立空<xref:System.Collections.Generic.SortedDictionary%602>的 string 索引鍵，並使用具有字串<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法，將某些項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-143">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="d76b8-144">此範例示範<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法會擲回<xref:System.ArgumentException>時嘗試加入重複的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-144">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="d76b8-145">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-145">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="d76b8-146">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作，或是 <see langword="null" />，表示要為索引鍵的類型使用預設 <see cref="T:System.Collections.Generic.Comparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-146">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-147">初始化 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 類別的新執行個體，這個執行個體是空的，並且使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作來比較索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-147">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-148">在每個索引鍵<xref:System.Collections.Generic.SortedDictionary%602>必須是唯一根據指定的比較子。</span><span class="sxs-lookup"><span data-stu-id="d76b8-148">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="d76b8-149"><xref:System.Collections.Generic.SortedDictionary%602> 需要執行比較索引鍵比較子實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-149"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="d76b8-150">如果`comparer`是`null`，這個建構函式會使用預設的泛型等號比較子， <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-150">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d76b8-151">如果型別`TKey`實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，則預設比較子會使用該實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-151">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="d76b8-152">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-153">下列程式碼範例會建立<xref:System.Collections.Generic.SortedDictionary%602>與目前的文化特性的不區分大小寫的比較子。</span><span class="sxs-lookup"><span data-stu-id="d76b8-153">The following code example creates a <xref:System.Collections.Generic.SortedDictionary%602> with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="d76b8-154">此範例加入四個項目，一些小寫的索引鍵，一些具有英文大小寫的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-154">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="d76b8-155">然後此範例會嘗試新增的情況下，只有不同於現有的索引鍵的索引鍵的項目攔截產生的例外狀況，並顯示錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="d76b8-155">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="d76b8-156">最後，這個範例會顯示項目不區分大小寫的排序次序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-156">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="d76b8-157">要將其項目複製到新 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-157">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-158">初始化 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 類別的新執行個體，其中包含從指定的 <see cref="T:System.Collections.Generic.IDictionary`2" /> 複製的項目，並且對這個索引鍵類型使用預設 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-159">在每個索引鍵<xref:System.Collections.Generic.SortedDictionary%602>必須是唯一，根據預設值的比較子，因此，在來源中的每個索引鍵`dictionary`也必須是唯一，根據預設比較子。</span><span class="sxs-lookup"><span data-stu-id="d76b8-159">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer; therefore, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="d76b8-160"><xref:System.Collections.Generic.SortedDictionary%602> 需要執行比較索引鍵比較子實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-160"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="d76b8-161">這個建構函式會使用預設的泛型等號比較子， <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-161">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d76b8-162">如果型別`TKey`實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，則預設比較子會使用該實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-162">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="d76b8-163">或者，您可以指定的實作<xref:System.Collections.Generic.IComparer%601>使用建構函式可接受泛型介面`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="d76b8-163">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="d76b8-164">這個建構函式為 O (`n`記錄`n`) 作業，其中`n`是中的項目數`dictionary`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-164">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-165">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602>建立已排序資料的複本中的資訊<xref:System.Collections.Generic.Dictionary%602>，藉由傳遞<xref:System.Collections.Generic.Dictionary%602>至<xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="d76b8-165">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-166">
            <paramref name="dictionary" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-166">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-167">
            <paramref name="dictionary" /> 包含一或多個重複的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-167">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="d76b8-168">要將其項目複製到新 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-168">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="d76b8-169">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作，或是 <see langword="null" />，表示要為索引鍵的類型使用預設 <see cref="T:System.Collections.Generic.Comparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-169">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-170">初始化 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 類別的新執行個體，其中包含從指定的 <see cref="T:System.Collections.Generic.IDictionary`2" /> 複製的項目，並且使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 實作來比較索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-171">在每個索引鍵<xref:System.Collections.Generic.SortedDictionary%602>必須是唯一根據指定的比較子，因此，在來源中的每個索引鍵`dictionary`也必須是唯一根據指定的比較子。</span><span class="sxs-lookup"><span data-stu-id="d76b8-171">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer; therefore, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="d76b8-172"><xref:System.Collections.Generic.SortedDictionary%602> 需要執行比較索引鍵比較子實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-172"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="d76b8-173">如果`comparer`是`null`，這個建構函式會使用預設的泛型等號比較子， <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-173">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d76b8-174">如果型別`TKey`實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，則預設比較子會使用該實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-174">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="d76b8-175">這個建構函式為 O (`n`記錄`n`) 作業，其中`n`是中的項目數`dictionary`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-175">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-176">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602>若要建立不區分大小寫排序 在不區分大小寫之資訊的複本<xref:System.Collections.Generic.Dictionary%602>，藉由傳遞<xref:System.Collections.Generic.Dictionary%602>至<xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="d76b8-176">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="d76b8-177">在此範例中，不區分大小寫的比較子會是目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-177">In this example, the case-insensitive comparers are for the current culture.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-178">
            <paramref name="dictionary" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-178">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-179">
            <paramref name="dictionary" /> 包含一或多個重複的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-179">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-180">要加入的項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-180">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d76b8-181">要加入的項目的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-181">The value of the element to add.</span>
          </span>
          <span data-ttu-id="d76b8-182">參考類型的值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-182">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-183">將有指定索引鍵和數值的項目加入 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-183">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-184">您也可以使用<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>加入新項目，藉由設定機碼值的屬性不存在於<xref:System.Collections.Generic.SortedDictionary%602>; 例如， `myCollection["myNonexistentKey"] = myValue` (在 Visual Basic 中`myCollection("myNonexistantKey") = myValue`)。</span><span class="sxs-lookup"><span data-stu-id="d76b8-184">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue` (in Visual Basic, `myCollection("myNonexistantKey") = myValue`).</span></span> <span data-ttu-id="d76b8-185">不過，如果指定的索引鍵已存在於<xref:System.Collections.Generic.SortedDictionary%602>，設定<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-185">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="d76b8-186">相反地，<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法擲回例外狀況，如果已經存在具有指定之索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-186">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an exception if an element with the specified key already exists.</span></span>  
  
 <span data-ttu-id="d76b8-187">金鑰不能`null`，但是值可以是，如果型別值`TValue`是參考型別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-187">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="d76b8-188">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-188">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-189">下列程式碼範例會建立空<xref:System.Collections.Generic.SortedDictionary%602>的 string 索引鍵，並使用具有字串<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法，將某些項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-189">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="d76b8-190">此範例示範<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法會擲回<xref:System.ArgumentException>時嘗試加入重複的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-190">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="d76b8-191">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-191">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-192">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-192">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-193">
            <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中已存在具有相同索引鍵的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-193">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-194">移除 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中的所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-194">Removes all elements from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-195"><xref:System.Collections.Generic.SortedDictionary%602.Count%2A>屬性設定為 0，並從項目集合的其他物件的參考也會釋放。</span><span class="sxs-lookup"><span data-stu-id="d76b8-195">The <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="d76b8-196">這個方法是 o （1） 運算，因為內部資料結構的根目錄只會釋放記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="d76b8-196">This method is an O(1) operation, since the root of the internal data structures is simply released for garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-197">取得用來排序 <see cref="T:System.Collections.Generic.IComparer`1" /> 之項目的 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-197">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-198">用來排序 <see cref="T:System.Collections.Generic.IComparer`1" /> 之項目的 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-198">The <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-199"><xref:System.Collections.Generic.SortedDictionary%602> 需要執行比較索引鍵比較子實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-199"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="d76b8-200">您可以指定的實作<xref:System.Collections.Generic.IComparer%601>使用建構函式可接受泛型介面`comparer`參數。</span><span class="sxs-lookup"><span data-stu-id="d76b8-200">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span> <span data-ttu-id="d76b8-201">如果不這麼做，預設的泛型等號比較子， <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>，會使用。</span><span class="sxs-lookup"><span data-stu-id="d76b8-201">If you do not, the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, is used.</span></span> <span data-ttu-id="d76b8-202">如果型別`TKey`實作<xref:System.IComparable%601?displayProperty=nameWithType>泛型介面，則預設比較子會使用該實作。</span><span class="sxs-lookup"><span data-stu-id="d76b8-202">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="d76b8-203">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-203">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.SortedDictionary`2.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-204">要在 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-204">The key to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-205">判斷 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 是否包含具有指定之索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-205">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-206">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.Generic.SortedDictionary`2" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-206">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-207">這個方法是 O (記錄`n`) 作業。</span><span class="sxs-lookup"><span data-stu-id="d76b8-207">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-208">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A>方法來測試機碼是否存在然後才呼叫<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-208">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span> <span data-ttu-id="d76b8-209">它也示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A>方法來擷取值，也就是有效的方式來擷取值，當程式經常會嘗試不在字典中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-209">It also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="d76b8-210">最後，它會顯示最有效的方式來測試是否機碼存在，使用<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性 （C# 中為索引子）。</span><span class="sxs-lookup"><span data-stu-id="d76b8-210">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="d76b8-211">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-211">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#6)]
 [!code-vb[Generic.SortedDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-212">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-212">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d76b8-213">要在 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中尋找的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-213">The value to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
          <span data-ttu-id="d76b8-214">參考類型的值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-214">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-215">判斷 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 是否包含具有指定值的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-215">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-216">如果 <see langword="true" /> 包含具有指定值的項目，則為 <see cref="T:System.Collections.Generic.SortedDictionary`2" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-216">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-217">這個方法會決定使用的預設相等比較子的等號比較<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>實值型別`TValue`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-217">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  
  
 <span data-ttu-id="d76b8-218">這個方法會執行線性搜尋;因此，平均執行時間是成比例<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-218">This method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property.</span></span> <span data-ttu-id="d76b8-219">也就是說，這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-219">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d76b8-220">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 結構的一維陣列，這是從目前 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 複製之項目的目的地。陣列必須有以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-220">The one-dimensional array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures that is the destination of the elements copied from the current <see cref="T:System.Collections.Generic.SortedDictionary`2" /> The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d76b8-221">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-221">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-222">從指定索引處開始，將 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 的項目複製到 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 結構的指定陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-222">Copies the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> to the specified array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures, starting at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d76b8-223">如果來源類型<xref:System.Collections.Generic.SortedDictionary%602>無法自動轉換成目的地類型`array`，非泛型實作<xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType>擲回<xref:System.InvalidCastException>，而泛型實作擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-223">If the type of the source <xref:System.Collections.Generic.SortedDictionary%602> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="d76b8-224">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-225">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-225">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d76b8-226">
            <paramref name="index" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-226">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-227">來源 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中的項目數目，大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-227">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-228">取得 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中所包含的索引鍵/值組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-228">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-229">
            <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中所包含的索引鍵/值組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-229">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-230">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-230">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedDictionary`2/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedDictionary(Of TKey, TValue).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-231">傳回在 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中逐一查看的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-231">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-232">
            <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> 的 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-232">A <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> for the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-233">列舉的目的而言，每個項目是<xref:System.Collections.Generic.KeyValuePair%602>結構，表示值和其索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-233">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="d76b8-234">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="d76b8-234">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="d76b8-235">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-235">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d76b8-236">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-236">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d76b8-237">使用內部的樹狀結構以排序順序維護的字典。</span><span class="sxs-lookup"><span data-stu-id="d76b8-237">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="d76b8-238">每個新的項目位於正確的排序位置與維護的排序次序，每當移除項目會調整樹狀目錄。</span><span class="sxs-lookup"><span data-stu-id="d76b8-238">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="d76b8-239">列舉，會維護排序順序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-239">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="d76b8-240">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="d76b8-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d76b8-241">此位置<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-241">At this position, the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="d76b8-242">因此，您必須呼叫<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-242">Therefore, you must call the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="d76b8-243"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>屬性會傳回相同的項目，直到<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="d76b8-243">The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property returns the same element until the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="d76b8-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d76b8-245">如果<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-245">If <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d76b8-246">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-246">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d76b8-247">如果最後一個呼叫<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="d76b8-247">If the last call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="d76b8-248">您不能再次將 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="d76b8-248">You cannot set <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="d76b8-249">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="d76b8-249">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d76b8-250">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="d76b8-250">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d76b8-251">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-251">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d76b8-252">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-252">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d76b8-253">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-253">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d76b8-254"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-254">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="d76b8-255">這個方法是 O (記錄 n) 運算，其中 n 是計數。</span><span class="sxs-lookup"><span data-stu-id="d76b8-255">This method is an O(log n) operation, where n is count.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-256">要取得或設定之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-256">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-257">取得或設定與指定之索引鍵相關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-257">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-258">與指定之索引鍵關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-258">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="d76b8-259">如果找不到指定的索引鍵，則取得作業會擲回 <see cref="T:System.Collections.Generic.KeyNotFoundException" />，且設定作業會使用指定的索引鍵建立新項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-259">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-260">這個屬性會提供可以使用下列 C# 語法存取集合中的特定元素的能力： `myCollection[key]` (`myCollection(key)`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="d76b8-260">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="d76b8-261">您也可以使用<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>加入新項目，藉由設定機碼值的屬性不存在於<xref:System.Collections.Generic.SortedDictionary%602>; 例如， `myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-261">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="d76b8-262">不過，如果指定的索引鍵已存在於<xref:System.Collections.Generic.SortedDictionary%602>，設定<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-262">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="d76b8-263">相反地，<xref:System.Collections.Generic.SortedDictionary%602.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-263">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="d76b8-264">金鑰不能`null`，但是值可以是，如果型別值`TValue`是參考型別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-264">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="d76b8-265">C# 語言使用關鍵字來定義索引，而不必實作<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-265">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span> <span data-ttu-id="d76b8-266">Visual Basic 會將 <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="d76b8-266">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="d76b8-267">取得這個屬性的值為 O (記錄`n`) 作業; 設定該屬性也是 O (記錄`n`) 作業。</span><span class="sxs-lookup"><span data-stu-id="d76b8-267">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-268">下列程式碼範例使用<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性 （C# 中為索引子） 來擷取值，擊發<xref:System.Collections.Generic.KeyNotFoundException>要求的索引鍵不存在，而且可以取代顯示索引鍵關聯的值時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="d76b8-268">The following code example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="d76b8-269">此範例也示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A>方法更有效率的方式來擷取值，如果程式通常必須嘗試不在字典中的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-269">The example also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="d76b8-270">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-270">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#3)]
 [!code-vb[Generic.SortedDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-271">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-271">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="d76b8-272">會擷取屬性，且 <paramref name="key" /> 不存在於集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-272">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.KeyCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/KeyCollection&lt;!TKey, !TValue&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As SortedDictionary(Of TKey, TValue).KeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ Keys { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-273">取得集合，包含 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-273">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-274">
            <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />，包含 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-274">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-275">中的索引鍵<xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>會根據排序<xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A>屬性中，而相關聯的值中的順序相同<xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>傳回<xref:System.Collections.Generic.SortedDictionary%602.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-275">The keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are in the same order as the associated values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="d76b8-276">傳回<xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>不是靜態的複本; 相反地，<xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>中原始的索引鍵是指回<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-276">The returned <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="d76b8-277">因此，變更為<xref:System.Collections.Generic.SortedDictionary%602>才會反映在繼續<xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-277">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="d76b8-278">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-278">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-279">下列程式碼範例示範如何列舉在字典中使用金鑰<xref:System.Collections.Generic.SortedDictionary%602.Keys%2A>屬性，以及如何列舉的索引鍵和值的字典中。</span><span class="sxs-lookup"><span data-stu-id="d76b8-279">The following code example shows how to enumerate the keys in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="d76b8-280">此程式碼是可編譯及執行之較大範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="d76b8-280">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="d76b8-281">請參閱 <xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-281">See <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#9)]
 [!code-vb[Generic.SortedDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-282">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-282">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-283">將有指定索引鍵的項目從 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-283">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-284">如果成功移除項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-284">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d76b8-285">如果在 <see langword="false" /> 中找不到 <paramref name="key" />，則這個方法也會傳回 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-285">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-286">如果<xref:System.Collections.Generic.SortedDictionary%602>不包含具有指定之索引鍵項目<xref:System.Collections.Generic.SortedDictionary%602>維持不變。</span><span class="sxs-lookup"><span data-stu-id="d76b8-286">If the <xref:System.Collections.Generic.SortedDictionary%602> does not contain an element with the specified key, the <xref:System.Collections.Generic.SortedDictionary%602> remains unchanged.</span></span> <span data-ttu-id="d76b8-287">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="d76b8-287">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d76b8-288">這個方法是 O (記錄`n`) 作業。</span><span class="sxs-lookup"><span data-stu-id="d76b8-288">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-289">下列程式碼範例示範如何從使用字典移除索引鍵/值組<xref:System.Collections.Generic.SortedDictionary%602.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-289">The following code example shows how to remove a key/value pair from the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="d76b8-290">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-290">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#10)]
 [!code-vb[Generic.SortedDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-291">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-291">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d76b8-292">一維陣列，表示從這個 <see cref="T:System.Collections.Generic.ICollection`1" /> 複製過來之項目的目的地。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-292">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
          <span data-ttu-id="d76b8-293">陣列必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-293">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d76b8-294">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-294">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-295">從指定的陣列索引處開始，將 <see cref="T:System.Collections.Generic.ICollection`1" /> 的項目複製到陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-295">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d76b8-296">如果來源類型<xref:System.Collections.ICollection>無法自動轉換成目的地類型`array`，非泛型實作<xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType>擲回<xref:System.InvalidCastException>，而泛型實作擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-296">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="d76b8-297">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-297">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-298">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-298">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d76b8-299">
            <paramref name="index" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-299">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-300">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-300">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="d76b8-301">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-301">-or-</span>
          </span>
          <span data-ttu-id="d76b8-302">
            <paramref name="array" /> 沒有以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-302">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="d76b8-303">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-303">-or-</span>
          </span>
          <span data-ttu-id="d76b8-304">來源 <see cref="T:System.Collections.Generic.ICollection`1" /> 中的項目數目，大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-304">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="d76b8-305">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-305">-or-</span>
          </span>
          <span data-ttu-id="d76b8-306">來源 <see cref="T:System.Collections.Generic.ICollection`1" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-306">The type of the source <see cref="T:System.Collections.Generic.ICollection`1" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-307">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (安全執行緒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-307">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-308">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-308">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d76b8-309">在 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 的預設實作中，這個屬性一律會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-309">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-310"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-310">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="d76b8-311">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-311">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d76b8-312">即使集合經過同步化，其他的執行緒仍可修改該集合，可能會造成列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d76b8-312">Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</span></span> <span data-ttu-id="d76b8-313">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d76b8-313">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="d76b8-314"><xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A>屬性傳回的物件，可用來同步處理存取具備<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-314">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="d76b8-315">同步處理的所有執行緒存取集合之前都鎖定的物件時才有效。</span><span class="sxs-lookup"><span data-stu-id="d76b8-315">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="d76b8-316">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-316">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-317">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-317">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-318">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-318">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-319"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-319">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="d76b8-320">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-320">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="d76b8-321">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-321">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d76b8-322">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-322">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d76b8-323"><xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A>屬性傳回的物件，可用來同步處理存取具備<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-323">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="d76b8-324">同步處理的所有執行緒存取集合之前都鎖定的物件時才有效。</span><span class="sxs-lookup"><span data-stu-id="d76b8-324">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="d76b8-325">下列程式碼將示範如何使用<xref:System.Collections.ICollection.SyncRoot%2A>C#、 c + + 和 Visual Basic 的屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-325">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="d76b8-326">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-326">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-327">做為要加入項目之索引鍵的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-327">The object to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d76b8-328">做為要加入項目之值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-328">The object to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-329">將具有提供之索引鍵和值的項目加入 <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-329">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-330">您也可以使用<xref:System.Collections.IDictionary.Item%2A>屬性所設定的值不存在的索引鍵的字典; 中加入新項目，例如`myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-330">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="d76b8-331">不過，如果指定的索引鍵已經存在字典中，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-331">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="d76b8-332">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-332">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="d76b8-333">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-333">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-334">下列程式碼範例示範如何存取<xref:System.Collections.Generic.SortedDictionary%602>類別透過<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="d76b8-334">The following code example shows how to access the <xref:System.Collections.Generic.SortedDictionary%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="d76b8-335">程式碼範例會建立空<xref:System.Collections.Generic.SortedDictionary%602>的 string 索引鍵，並使用具有字串<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法，將某些項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-335">The code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="d76b8-336">此範例示範<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法會擲回<xref:System.ArgumentException>當嘗試加入重複的索引鍵或索引鍵或錯誤的資料類型的值提供。</span><span class="sxs-lookup"><span data-stu-id="d76b8-336">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="d76b8-337">程式碼範例示範如何使用的數個其他成員<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面。</span><span class="sxs-lookup"><span data-stu-id="d76b8-337">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-338">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-338">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-339">
            <paramref name="key" /> 屬於無法指派給 <see cref="T:System.Collections.IDictionary" /> 的 <paramref name="TKey" /> 索引鍵類型的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-339">
              <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="d76b8-340">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-340">-or-</span>
          </span>
          <span data-ttu-id="d76b8-341">
            <paramref name="value" /> 屬於無法指派給 <see cref="T:System.Collections.IDictionary" /> 的 <paramref name="TValue" /> 實值型別的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-341">
              <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="d76b8-342">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-342">-or-</span>
          </span>
          <span data-ttu-id="d76b8-343">
            <see cref="T:System.Collections.IDictionary" /> 中已存在具有相同索引鍵的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-343">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-344">要在 <see cref="T:System.Collections.IDictionary" /> 中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-344">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-345">判斷 <see cref="T:System.Collections.IDictionary" /> 是否包含具有指定之索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-345">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-346">如果 <see langword="true" /> 包含具有該索引鍵的項目，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-346">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-347">這個方法會傳回`false`如果`key`是無法指派給金鑰類型的類型`TKey`的<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-347">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="d76b8-348">這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.Generic.SortedDictionary%602.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-348">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-349">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A>方法<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-349">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="d76b8-350">此範例示範，方法會傳回`false`如果提供錯誤的資料類型的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-350">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="d76b8-351">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-351">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-352">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-352">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-353">傳回 <see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-353">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-354">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-354">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-355">列舉的目的而言，每個項目是<xref:System.Collections.Generic.KeyValuePair%602>結構，表示值和其索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-355">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="d76b8-356">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="d76b8-356">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="d76b8-357">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-357">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d76b8-358">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-358">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d76b8-359">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="d76b8-359">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d76b8-360"><xref:System.Collections.IEnumerator.Reset%2A>方法也會列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="d76b8-360">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="d76b8-361">此位置<xref:System.Collections.IDictionaryEnumerator.Entry%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-361">At this position, the <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property is undefined.</span></span> <span data-ttu-id="d76b8-362">因此，您必須呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IDictionaryEnumerator.Entry%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-362">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="d76b8-363"><xref:System.Collections.IDictionaryEnumerator.Entry%2A>屬性會傳回相同的物件直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="d76b8-363">The <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d76b8-364"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-364"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d76b8-365">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-365">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d76b8-366">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-366">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d76b8-367">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IDictionaryEnumerator.Entry%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="d76b8-367">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="d76b8-368">若要再次將 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-368">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d76b8-369">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="d76b8-369">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d76b8-370">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="d76b8-370">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d76b8-371">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-371">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="d76b8-372">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-372">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d76b8-373">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-373">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d76b8-374"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-374">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="d76b8-375">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-375">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-376">下列程式碼範例示範如何使用列舉字典中的索引鍵/值組`foreach`陳述式 (`For Each`在 Visual Basic 中`for each`c + + 中)，這會隱藏列舉值使用。</span><span class="sxs-lookup"><span data-stu-id="d76b8-376">The following code example shows how to enumerate the key/value pairs in the dictionary by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="d76b8-377">特別是，請注意，列舉程式<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面傳回<xref:System.Collections.DictionaryEntry>物件而非<xref:System.Collections.Generic.KeyValuePair%602>物件。</span><span class="sxs-lookup"><span data-stu-id="d76b8-377">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="d76b8-378">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-378">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-379">取得值，指出 <see cref="T:System.Collections.IDictionary" /> 是否有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-379">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-380">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-380">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d76b8-381">在 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 的預設實作中，這個屬性一律會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-381">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-382">具有固定大小的集合不允許在集合建立後新增或移除項目，但允許對現有項目進行修改。</span><span class="sxs-lookup"><span data-stu-id="d76b8-382">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="d76b8-383">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="d76b8-383">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d76b8-384">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-384">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-385">取得值，指出 <see cref="T:System.Collections.IDictionary" /> 是否唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-385">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-386">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-386">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d76b8-387">在 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 的預設實作中，這個屬性一律會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-387">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-388">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-388">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="d76b8-389">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="d76b8-389">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d76b8-390">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-390">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-391">要取得的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-391">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-392">取得或設定具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-392">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-393">具有指定索引鍵的項目，如果 <see langword="null" /> 不在字典中，或 <paramref name="key" /> 的類型無法指派給 <paramref name="key" /> 的 <paramref name="TKey" /> 索引鍵類型，則為 <see cref="T:System.Collections.Generic.SortedDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-393">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-394">這個屬性會提供可以使用下列 C# 語法存取集合中的特定元素的能力： `myCollection[key]` (`myCollection(key)`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="d76b8-394">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="d76b8-395">您也可以使用<xref:System.Collections.IDictionary.Item%2A>屬性所設定的值不存在的索引鍵的字典; 中加入新項目，例如`myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-395">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="d76b8-396">不過，如果指定的索引鍵已經存在字典中，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-396">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="d76b8-397">相反地，<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-397">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="d76b8-398">C# 語言使用[這](~/docs/csharp/language-reference/keywords/this.md)關鍵字定義索引，而不必實作<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-398">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="d76b8-399">Visual Basic 會將 <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="d76b8-399">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="d76b8-400">取得這個屬性的值為 O (記錄`n`) 作業; 設定該屬性也是 O (記錄`n`) 作業。</span><span class="sxs-lookup"><span data-stu-id="d76b8-400">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-401">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A>屬性 （C# 中為索引子）<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面<xref:System.Collections.Generic.SortedDictionary%602>，以及方法的屬性與不同<xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-401">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="d76b8-402">此範例示範，例如<xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType>屬性，<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType>屬性可以變更現有的索引鍵相關聯的值，而且可用來加入新的索引鍵/值組，如果指定的索引鍵不在字典中。</span><span class="sxs-lookup"><span data-stu-id="d76b8-402">The example shows that, like the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</span></span> <span data-ttu-id="d76b8-403">此範例也示範，不同於<xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType>屬性，<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType>屬性不會擲回例外狀況如果`key`未在字典中，傳回 null 參考改為。</span><span class="sxs-lookup"><span data-stu-id="d76b8-403">The example also shows that unlike the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the dictionary, returning a null reference instead.</span></span> <span data-ttu-id="d76b8-404">最後，此範例會示範該取得<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType>屬性會傳回 null 參考，如果`key`不是正確的資料型別，並設定屬性擲回例外狀況，如果`key`不是正確的資料類型。</span><span class="sxs-lookup"><span data-stu-id="d76b8-404">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="d76b8-405">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-405">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-406">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-406">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d76b8-407">正在指定值，而且 <paramref name="key" /> 是無法指派給 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 的 <paramref name="TKey" /> 索引鍵型別的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-407">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
          <span data-ttu-id="d76b8-408">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-408">-or-</span>
          </span>
          <span data-ttu-id="d76b8-409">正在指定值，而且 <paramref name="value" /> 是無法指派給 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 的 <paramref name="TValue" /> 實值型別的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-409">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-410">取得 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Collections.IDictionary" /> 的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-410">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-411">
            <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Collections.IDictionary" /> 的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-411">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-412">在傳回的索引鍵<xref:System.Collections.ICollection>會根據排序<xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A>屬性並保證在順序中的對應值與相同<xref:System.Collections.ICollection>傳回<xref:System.Collections.IDictionary.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-412">The keys in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are guaranteed to be in the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="d76b8-413">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-413">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-414">下列程式碼範例示範如何使用<xref:System.Collections.IDictionary.Keys%2A>屬性<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面<xref:System.Collections.Generic.SortedDictionary%602>，若要列出的字典中索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-414">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="d76b8-415">此範例也示範如何列舉的字典; 中的索引鍵/值組請注意，列舉程式<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面傳回<xref:System.Collections.DictionaryEntry>物件而非<xref:System.Collections.Generic.KeyValuePair%602>物件。</span><span class="sxs-lookup"><span data-stu-id="d76b8-415">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="d76b8-416">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-416">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-417">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-417">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-418">將有指定索引鍵的項目從 <see cref="T:System.Collections.IDictionary" /> 移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-418">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-419">這個方法是 O (記錄`n`) 作業。</span><span class="sxs-lookup"><span data-stu-id="d76b8-419">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-420">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A>的<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-420">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="d76b8-421">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-421">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-422">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-422">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-423">取得 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Collections.IDictionary" /> 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-423">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-424">
            <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Collections.IDictionary" /> 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-424">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-425">在傳回值<xref:System.Collections.ICollection>會根據排序<xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A>屬性，並保證在對應中索引鍵的順序相同<xref:System.Collections.ICollection>傳回<xref:System.Collections.IDictionary.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-425">The values in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are guaranteed to be in the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="d76b8-426">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-426">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-427">下列程式碼範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A>屬性<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面<xref:System.Collections.Generic.SortedDictionary%602>、 列出字典中的值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-427">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the values in the dictionary.</span></span> <span data-ttu-id="d76b8-428">此範例也示範如何列舉的字典; 中的索引鍵/值組請注意，列舉程式<xref:System.Collections.IDictionary?displayProperty=nameWithType>介面傳回<xref:System.Collections.DictionaryEntry>物件而非<xref:System.Collections.Generic.KeyValuePair%602>物件。</span><span class="sxs-lookup"><span data-stu-id="d76b8-428">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="d76b8-429">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d76b8-429">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-430">傳回逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-430">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-431">
            <see cref="T:System.Collections.Generic.IEnumerator`1" />，可用於逐一查看集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-431">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-432">列舉的目的而言，每個項目是<xref:System.Collections.Generic.KeyValuePair%602>結構，表示值和其索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d76b8-432">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="d76b8-433">`foreach` C# 語言的陳述式 (`for each` c + + `For Each` Visual Basic) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="d76b8-433">The `foreach` statement of the C# language (`for each` in C++, `For Each` Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="d76b8-434">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-434">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d76b8-435">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-435">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d76b8-436">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="d76b8-436">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d76b8-437">此位置<xref:System.Collections.Generic.IEnumerator%601.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-437">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="d76b8-438">因此，您必須呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-438">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="d76b8-439"><xref:System.Collections.Generic.IEnumerator%601.Current%2A>屬性會傳回相同的項目，直到<xref:System.Collections.IEnumerator.MoveNext%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="d76b8-439">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same element until the <xref:System.Collections.IEnumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="d76b8-440"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="d76b8-440"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d76b8-441">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-441">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d76b8-442">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="d76b8-442">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d76b8-443">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="d76b8-443">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="d76b8-444">您不能再次將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="d76b8-444">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="d76b8-445">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="d76b8-445">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d76b8-446">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="d76b8-446">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d76b8-447">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="d76b8-447">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d76b8-448">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="d76b8-448">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d76b8-449">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-449">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d76b8-450"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="d76b8-450">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="d76b8-451">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-451">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d76b8-452">要取得之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-452">The key of the value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d76b8-453">當這個方法傳回時，如果找到索引鍵，則為與指定索引鍵建立關聯的值；否則為「值」<c></c>參數的類型預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-453">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d76b8-454">取得指定索引鍵相關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-454">Gets the value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d76b8-455">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.Generic.SortedDictionary`2" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-455">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-456">這個方法會結合的功能<xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A>方法和<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-456">This method combines the functionality of the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="d76b8-457">如果找不到索引鍵，然後在`value`參數可取得適當的預設值為實值型別`TValue`; 0 （零） 的整數類型，例如`false`針對布林類型，和`null`參考類型。</span><span class="sxs-lookup"><span data-stu-id="d76b8-457">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="d76b8-458">這個方法是 O (記錄`n`) 作業。</span><span class="sxs-lookup"><span data-stu-id="d76b8-458">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-459">此範例示範如何使用<xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A>方法更有效率的方式來擷取在程式中，經常會嘗試不在字典中的索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="d76b8-459">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="d76b8-460">相較之下，為此範例也示範如何<xref:System.Collections.Generic.SortedDictionary%602.Item%2A>屬性 （C# 中為索引子） 在嘗試擷取不存在的索引鍵時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d76b8-460">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="d76b8-461">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-461">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
 [!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d76b8-462">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-462">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.ValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/ValueCollection&lt;!TKey, !TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As SortedDictionary(Of TKey, TValue).ValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ Values { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+ValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d76b8-463">取得集合，包含 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-463">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d76b8-464">
            <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />，包含 <see cref="T:System.Collections.Generic.SortedDictionary`2" /> 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d76b8-464">A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d76b8-465">中的值<xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>會根據排序<xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A>屬性，而且正在使用中關聯索引鍵的順序相同<xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>傳回<xref:System.Collections.Generic.SortedDictionary%602.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d76b8-465">The values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are in the same order as the associated keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="d76b8-466">傳回<xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>不是靜態的複本; 相反地，<xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>中原始的值是指回<xref:System.Collections.Generic.SortedDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-466">The returned <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> refers back to the values in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="d76b8-467">因此，變更為<xref:System.Collections.Generic.SortedDictionary%602>才會反映在繼續<xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>。</span><span class="sxs-lookup"><span data-stu-id="d76b8-467">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>.</span></span>  
  
 <span data-ttu-id="d76b8-468">取得這個屬性的值是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="d76b8-468">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d76b8-469">這個程式碼範例示範如何列舉的值在字典中使用<xref:System.Collections.Generic.SortedDictionary%602.Values%2A>屬性，以及如何列舉的索引鍵和值的字典中。</span><span class="sxs-lookup"><span data-stu-id="d76b8-469">This code example shows how to enumerate the values in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="d76b8-470">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.Generic.SortedDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="d76b8-470">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#8)]
 [!code-vb[Generic.SortedDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>